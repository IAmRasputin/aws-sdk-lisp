;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/sso-admin/api
  (:use)
  (:nicknames #:aws/sso-admin)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/json-request)
  (:import-from #:aws-sdk/rest-json-request)
  (:import-from #:aws-sdk/rest-xml-request)
  (:import-from #:aws-sdk/query-request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/sso-admin/api)
(common-lisp:progn
 (common-lisp:define-condition sso-admin-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'sso-admin-error))
(common-lisp:progn
 (common-lisp:defclass sso-admin-request (aws-sdk/json-request:json-request)
                       common-lisp:nil
                       (:default-initargs :service "sso-admin" :api-version
                        "2020-07-20" :host-prefix "sso" :signing-name "sso"
                        :global-host common-lisp:nil :target-prefix
                        "SWBExternalService" :json-version "1.1"))
 (common-lisp:export 'sso-admin-request))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("ConflictException" . conflict-exception)
    ("InternalServerException" . internal-server-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceQuotaExceededException" . service-quota-exceeded-exception)
    ("ThrottlingException" . throttling-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:progn
 (common-lisp:defstruct
     (access-control-attribute (:copier common-lisp:nil)
      (:conc-name "struct-shape-access-control-attribute-"))
   (key (common-lisp:error ":key is required") :type
    (common-lisp:or access-control-attribute-key common-lisp:null))
   (value (common-lisp:error ":value is required") :type
    (common-lisp:or access-control-attribute-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'access-control-attribute 'make-access-control-attribute))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          access-control-attribute))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          access-control-attribute))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          access-control-attribute))
   common-lisp:nil))
(common-lisp:deftype access-control-attribute-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype access-control-attribute-list ()
   '(trivial-types:proper-list access-control-attribute))
 (common-lisp:defun make-access-control-attribute-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            access-control-attribute))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (access-control-attribute-value (:copier common-lisp:nil)
      (:conc-name "struct-shape-access-control-attribute-value-"))
   (source (common-lisp:error ":source is required") :type
    (common-lisp:or access-control-attribute-value-source-list
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'access-control-attribute-value
                    'make-access-control-attribute-value))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          access-control-attribute-value))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          access-control-attribute-value))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source))
      (common-lisp:list
       (common-lisp:cons "Source"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          access-control-attribute-value))
   common-lisp:nil))
(common-lisp:deftype access-control-attribute-value-source ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype access-control-attribute-value-source-list ()
   '(trivial-types:proper-list access-control-attribute-value-source))
 (common-lisp:defun make-access-control-attribute-value-source-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            access-control-attribute-value-source))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (sso-admin-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       access-denied-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-message)))
(common-lisp:deftype access-denied-exception-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (account-assignment (:copier common-lisp:nil)
      (:conc-name "struct-shape-account-assignment-"))
   (account-id common-lisp:nil :type
    (common-lisp:or account-id common-lisp:null))
   (permission-set-arn common-lisp:nil :type
    (common-lisp:or permission-set-arn common-lisp:null))
   (principal-id common-lisp:nil :type
    (common-lisp:or principal-id common-lisp:null))
   (principal-type common-lisp:nil :type
    (common-lisp:or principal-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'account-assignment 'make-account-assignment))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input account-assignment))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input account-assignment))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-id))
      (common-lisp:list
       (common-lisp:cons "PrincipalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-type))
      (common-lisp:list
       (common-lisp:cons "PrincipalType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input account-assignment))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (account-assignment-for-principal (:copier common-lisp:nil)
      (:conc-name "struct-shape-account-assignment-for-principal-"))
   (account-id common-lisp:nil :type
    (common-lisp:or account-id common-lisp:null))
   (permission-set-arn common-lisp:nil :type
    (common-lisp:or permission-set-arn common-lisp:null))
   (principal-id common-lisp:nil :type
    (common-lisp:or principal-id common-lisp:null))
   (principal-type common-lisp:nil :type
    (common-lisp:or principal-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'account-assignment-for-principal
                    'make-account-assignment-for-principal))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          account-assignment-for-principal))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          account-assignment-for-principal))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-id))
      (common-lisp:list
       (common-lisp:cons "PrincipalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-type))
      (common-lisp:list
       (common-lisp:cons "PrincipalType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          account-assignment-for-principal))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype account-assignment-list ()
   '(trivial-types:proper-list account-assignment))
 (common-lisp:defun make-account-assignment-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list account-assignment))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype account-assignment-list-for-principal ()
   '(trivial-types:proper-list account-assignment-for-principal))
 (common-lisp:defun make-account-assignment-list-for-principal
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            account-assignment-for-principal))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (account-assignment-operation-status (:copier common-lisp:nil)
      (:conc-name "struct-shape-account-assignment-operation-status-"))
   (created-date common-lisp:nil :type (common-lisp:or date common-lisp:null))
   (failure-reason common-lisp:nil :type
    (common-lisp:or reason common-lisp:null))
   (permission-set-arn common-lisp:nil :type
    (common-lisp:or permission-set-arn common-lisp:null))
   (principal-id common-lisp:nil :type
    (common-lisp:or principal-id common-lisp:null))
   (principal-type common-lisp:nil :type
    (common-lisp:or principal-type common-lisp:null))
   (request-id common-lisp:nil :type (common-lisp:or uuid common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or status-values common-lisp:null))
   (target-id common-lisp:nil :type
    (common-lisp:or target-id common-lisp:null))
   (target-type common-lisp:nil :type
    (common-lisp:or target-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'account-assignment-operation-status
                    'make-account-assignment-operation-status))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          account-assignment-operation-status))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          account-assignment-operation-status))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failure-reason))
      (common-lisp:list
       (common-lisp:cons "FailureReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-id))
      (common-lisp:list
       (common-lisp:cons "PrincipalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-type))
      (common-lisp:list
       (common-lisp:cons "PrincipalType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-id))
      (common-lisp:list
       (common-lisp:cons "RequestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-id))
      (common-lisp:list
       (common-lisp:cons "TargetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-type))
      (common-lisp:list
       (common-lisp:cons "TargetType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          account-assignment-operation-status))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype account-assignment-operation-status-list ()
   '(trivial-types:proper-list account-assignment-operation-status-metadata))
 (common-lisp:defun make-account-assignment-operation-status-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            account-assignment-operation-status-metadata))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (account-assignment-operation-status-metadata (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-account-assignment-operation-status-metadata-"))
   (created-date common-lisp:nil :type (common-lisp:or date common-lisp:null))
   (request-id common-lisp:nil :type (common-lisp:or uuid common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or status-values common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'account-assignment-operation-status-metadata
                    'make-account-assignment-operation-status-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          account-assignment-operation-status-metadata))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          account-assignment-operation-status-metadata))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-id))
      (common-lisp:list
       (common-lisp:cons "RequestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          account-assignment-operation-status-metadata))
   common-lisp:nil))
(common-lisp:deftype account-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype account-list () '(trivial-types:proper-list account-id))
 (common-lisp:defun make-account-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list account-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (application (:copier common-lisp:nil)
      (:conc-name "struct-shape-application-"))
   (application-account common-lisp:nil :type
    (common-lisp:or account-id common-lisp:null))
   (application-arn common-lisp:nil :type
    (common-lisp:or application-arn common-lisp:null))
   (application-provider-arn common-lisp:nil :type
    (common-lisp:or application-provider-arn common-lisp:null))
   (created-date common-lisp:nil :type (common-lisp:or date common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (instance-arn common-lisp:nil :type
    (common-lisp:or instance-arn common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name-type common-lisp:null))
   (portal-options common-lisp:nil :type
    (common-lisp:or portal-options common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or application-status common-lisp:null)))
 (common-lisp:export (common-lisp:list 'application 'make-application))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input application))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input application))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-account))
      (common-lisp:list
       (common-lisp:cons "ApplicationAccount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'application-provider-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationProviderArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'portal-options))
      (common-lisp:list
       (common-lisp:cons "PortalOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input application))
   common-lisp:nil))
(common-lisp:deftype application-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (application-assignment (:copier common-lisp:nil)
      (:conc-name "struct-shape-application-assignment-"))
   (application-arn (common-lisp:error ":application-arn is required") :type
    (common-lisp:or application-arn common-lisp:null))
   (principal-id (common-lisp:error ":principal-id is required") :type
    (common-lisp:or principal-id common-lisp:null))
   (principal-type (common-lisp:error ":principal-type is required") :type
    (common-lisp:or principal-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'application-assignment 'make-application-assignment))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          application-assignment))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          application-assignment))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-id))
      (common-lisp:list
       (common-lisp:cons "PrincipalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-type))
      (common-lisp:list
       (common-lisp:cons "PrincipalType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          application-assignment))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (application-assignment-for-principal (:copier common-lisp:nil)
      (:conc-name "struct-shape-application-assignment-for-principal-"))
   (application-arn common-lisp:nil :type
    (common-lisp:or application-arn common-lisp:null))
   (principal-id common-lisp:nil :type
    (common-lisp:or principal-id common-lisp:null))
   (principal-type common-lisp:nil :type
    (common-lisp:or principal-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'application-assignment-for-principal
                    'make-application-assignment-for-principal))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          application-assignment-for-principal))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          application-assignment-for-principal))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-id))
      (common-lisp:list
       (common-lisp:cons "PrincipalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-type))
      (common-lisp:list
       (common-lisp:cons "PrincipalType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          application-assignment-for-principal))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype application-assignment-list-for-principal ()
   '(trivial-types:proper-list application-assignment-for-principal))
 (common-lisp:defun make-application-assignment-list-for-principal
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            application-assignment-for-principal))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype application-assignments-list ()
   '(trivial-types:proper-list application-assignment))
 (common-lisp:defun make-application-assignments-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list application-assignment))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype application-list ()
   '(trivial-types:proper-list application))
 (common-lisp:defun make-application-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list application))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (application-provider (:copier common-lisp:nil)
      (:conc-name "struct-shape-application-provider-"))
   (application-provider-arn
    (common-lisp:error ":application-provider-arn is required") :type
    (common-lisp:or application-provider-arn common-lisp:null))
   (display-data common-lisp:nil :type
    (common-lisp:or display-data common-lisp:null))
   (federation-protocol common-lisp:nil :type
    (common-lisp:or federation-protocol common-lisp:null))
   (resource-server-config common-lisp:nil :type
    (common-lisp:or resource-server-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'application-provider 'make-application-provider))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input application-provider))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input application-provider))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'application-provider-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationProviderArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'display-data))
      (common-lisp:list
       (common-lisp:cons "DisplayData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'federation-protocol))
      (common-lisp:list
       (common-lisp:cons "FederationProtocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resource-server-config))
      (common-lisp:list
       (common-lisp:cons "ResourceServerConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input application-provider))
   common-lisp:nil))
(common-lisp:deftype application-provider-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype application-provider-list ()
   '(trivial-types:proper-list application-provider))
 (common-lisp:defun make-application-provider-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list application-provider))
   aws-sdk/generator/shape::members))
(common-lisp:deftype application-status () 'common-lisp:string)
(common-lisp:deftype application-url () 'common-lisp:string)
(common-lisp:deftype application-visibility () 'common-lisp:string)
(common-lisp:deftype assignment-required () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct
     (attach-customer-managed-policy-reference-to-permission-set-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-attach-customer-managed-policy-reference-to-permission-set-request-"))
   (customer-managed-policy-reference
    (common-lisp:error ":customer-managed-policy-reference is required") :type
    (common-lisp:or customer-managed-policy-reference common-lisp:null))
   (instance-arn (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null))
   (permission-set-arn (common-lisp:error ":permission-set-arn is required")
    :type (common-lisp:or permission-set-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list
   'attach-customer-managed-policy-reference-to-permission-set-request
   'make-attach-customer-managed-policy-reference-to-permission-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          attach-customer-managed-policy-reference-to-permission-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          attach-customer-managed-policy-reference-to-permission-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'customer-managed-policy-reference))
      (common-lisp:list
       (common-lisp:cons "CustomerManagedPolicyReference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          attach-customer-managed-policy-reference-to-permission-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (attach-customer-managed-policy-reference-to-permission-set-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-attach-customer-managed-policy-reference-to-permission-set-response-")))
 (common-lisp:export
  (common-lisp:list
   'attach-customer-managed-policy-reference-to-permission-set-response
   'make-attach-customer-managed-policy-reference-to-permission-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          attach-customer-managed-policy-reference-to-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          attach-customer-managed-policy-reference-to-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          attach-customer-managed-policy-reference-to-permission-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (attach-managed-policy-to-permission-set-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-attach-managed-policy-to-permission-set-request-"))
   (instance-arn (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null))
   (managed-policy-arn (common-lisp:error ":managed-policy-arn is required")
    :type (common-lisp:or managed-policy-arn common-lisp:null))
   (permission-set-arn (common-lisp:error ":permission-set-arn is required")
    :type (common-lisp:or permission-set-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'attach-managed-policy-to-permission-set-request
                    'make-attach-managed-policy-to-permission-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          attach-managed-policy-to-permission-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          attach-managed-policy-to-permission-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'managed-policy-arn))
      (common-lisp:list
       (common-lisp:cons "ManagedPolicyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          attach-managed-policy-to-permission-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (attach-managed-policy-to-permission-set-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-attach-managed-policy-to-permission-set-response-")))
 (common-lisp:export
  (common-lisp:list 'attach-managed-policy-to-permission-set-response
                    'make-attach-managed-policy-to-permission-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          attach-managed-policy-to-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          attach-managed-policy-to-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          attach-managed-policy-to-permission-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (attached-managed-policy (:copier common-lisp:nil)
      (:conc-name "struct-shape-attached-managed-policy-"))
   (arn common-lisp:nil :type
    (common-lisp:or managed-policy-arn common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'attached-managed-policy 'make-attached-managed-policy))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          attached-managed-policy))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          attached-managed-policy))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          attached-managed-policy))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype attached-managed-policy-list ()
   '(trivial-types:proper-list attached-managed-policy))
 (common-lisp:defun make-attached-managed-policy-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list attached-managed-policy))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (authentication-method (:copier common-lisp:nil)
      (:conc-name "struct-shape-authentication-method-")))
 (common-lisp:export
  (common-lisp:list 'authentication-method 'make-authentication-method))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          authentication-method))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          authentication-method))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          authentication-method))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (authentication-method-item (:copier common-lisp:nil)
      (:conc-name "struct-shape-authentication-method-item-"))
   (authentication-method common-lisp:nil :type
    (common-lisp:or authentication-method common-lisp:null))
   (authentication-method-type common-lisp:nil :type
    (common-lisp:or authentication-method-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'authentication-method-item
                    'make-authentication-method-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          authentication-method-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          authentication-method-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-method))
      (common-lisp:list
       (common-lisp:cons "AuthenticationMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-method-type))
      (common-lisp:list
       (common-lisp:cons "AuthenticationMethodType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          authentication-method-item))
   common-lisp:nil))
(common-lisp:deftype authentication-method-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype authentication-methods ()
   '(trivial-types:proper-list authentication-method-item))
 (common-lisp:defun make-authentication-methods
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            authentication-method-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (authorization-code-grant (:copier common-lisp:nil)
      (:conc-name "struct-shape-authorization-code-grant-"))
   (redirect-uris common-lisp:nil :type
    (common-lisp:or redirect-uris common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'authorization-code-grant 'make-authorization-code-grant))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          authorization-code-grant))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          authorization-code-grant))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'redirect-uris))
      (common-lisp:list
       (common-lisp:cons "RedirectUris"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          authorization-code-grant))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (authorized-token-issuer (:copier common-lisp:nil)
      (:conc-name "struct-shape-authorized-token-issuer-"))
   (authorized-audiences common-lisp:nil :type
    (common-lisp:or token-issuer-audiences common-lisp:null))
   (trusted-token-issuer-arn common-lisp:nil :type
    (common-lisp:or trusted-token-issuer-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'authorized-token-issuer 'make-authorized-token-issuer))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          authorized-token-issuer))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          authorized-token-issuer))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorized-audiences))
      (common-lisp:list
       (common-lisp:cons "AuthorizedAudiences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'trusted-token-issuer-arn))
      (common-lisp:list
       (common-lisp:cons "TrustedTokenIssuerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          authorized-token-issuer))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype authorized-token-issuers ()
   '(trivial-types:proper-list authorized-token-issuer))
 (common-lisp:defun make-authorized-token-issuers
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list authorized-token-issuer))
   aws-sdk/generator/shape::members))
(common-lisp:deftype claim-attribute-path () 'common-lisp:string)
(common-lisp:deftype client-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (sso-admin-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message)))
(common-lisp:deftype conflict-exception-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (create-account-assignment-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-account-assignment-request-"))
   (instance-arn (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null))
   (permission-set-arn (common-lisp:error ":permission-set-arn is required")
    :type (common-lisp:or permission-set-arn common-lisp:null))
   (principal-id (common-lisp:error ":principal-id is required") :type
    (common-lisp:or principal-id common-lisp:null))
   (principal-type (common-lisp:error ":principal-type is required") :type
    (common-lisp:or principal-type common-lisp:null))
   (target-id (common-lisp:error ":target-id is required") :type
    (common-lisp:or target-id common-lisp:null))
   (target-type (common-lisp:error ":target-type is required") :type
    (common-lisp:or target-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-account-assignment-request
                    'make-create-account-assignment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-account-assignment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-account-assignment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-id))
      (common-lisp:list
       (common-lisp:cons "PrincipalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-type))
      (common-lisp:list
       (common-lisp:cons "PrincipalType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-id))
      (common-lisp:list
       (common-lisp:cons "TargetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-type))
      (common-lisp:list
       (common-lisp:cons "TargetType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-account-assignment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-account-assignment-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-account-assignment-response-"))
   (account-assignment-creation-status common-lisp:nil :type
    (common-lisp:or account-assignment-operation-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-account-assignment-response
                    'make-create-account-assignment-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-account-assignment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-account-assignment-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'account-assignment-creation-status))
      (common-lisp:list
       (common-lisp:cons "AccountAssignmentCreationStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-account-assignment-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-application-assignment-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-application-assignment-request-"))
   (application-arn (common-lisp:error ":application-arn is required") :type
    (common-lisp:or application-arn common-lisp:null))
   (principal-id (common-lisp:error ":principal-id is required") :type
    (common-lisp:or principal-id common-lisp:null))
   (principal-type (common-lisp:error ":principal-type is required") :type
    (common-lisp:or principal-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-application-assignment-request
                    'make-create-application-assignment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-application-assignment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-application-assignment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-id))
      (common-lisp:list
       (common-lisp:cons "PrincipalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-type))
      (common-lisp:list
       (common-lisp:cons "PrincipalType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-application-assignment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-application-assignment-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-application-assignment-response-")))
 (common-lisp:export
  (common-lisp:list 'create-application-assignment-response
                    'make-create-application-assignment-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-application-assignment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-application-assignment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-application-assignment-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-application-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-application-request-"))
   (application-provider-arn
    (common-lisp:error ":application-provider-arn is required") :type
    (common-lisp:or application-provider-arn common-lisp:null))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (instance-arn (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or name-type common-lisp:null))
   (portal-options common-lisp:nil :type
    (common-lisp:or portal-options common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or application-status common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-application-request
                    'make-create-application-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-application-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'application-provider-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationProviderArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'portal-options))
      (common-lisp:list
       (common-lisp:cons "PortalOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-application-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-application-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-application-response-"))
   (application-arn common-lisp:nil :type
    (common-lisp:or application-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-application-response
                    'make-create-application-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-application-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-application-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-application-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-instance-access-control-attribute-configuration-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-create-instance-access-control-attribute-configuration-request-"))
   (instance-access-control-attribute-configuration
    (common-lisp:error
     ":instance-access-control-attribute-configuration is required")
    :type
    (common-lisp:or instance-access-control-attribute-configuration
                    common-lisp:null))
   (instance-arn (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list
   'create-instance-access-control-attribute-configuration-request
   'make-create-instance-access-control-attribute-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-instance-access-control-attribute-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-instance-access-control-attribute-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'instance-access-control-attribute-configuration))
      (common-lisp:list
       (common-lisp:cons "InstanceAccessControlAttributeConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-instance-access-control-attribute-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-instance-access-control-attribute-configuration-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-create-instance-access-control-attribute-configuration-response-")))
 (common-lisp:export
  (common-lisp:list
   'create-instance-access-control-attribute-configuration-response
   'make-create-instance-access-control-attribute-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-instance-access-control-attribute-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-instance-access-control-attribute-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-instance-access-control-attribute-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-instance-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-instance-request-"))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name-type common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-instance-request 'make-create-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-instance-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-instance-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-instance-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-instance-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-instance-response-"))
   (instance-arn common-lisp:nil :type
    (common-lisp:or instance-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-instance-response 'make-create-instance-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-instance-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-instance-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-instance-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-permission-set-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-permission-set-request-"))
   (description common-lisp:nil :type
    (common-lisp:or permission-set-description common-lisp:null))
   (instance-arn (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or permission-set-name common-lisp:null))
   (relay-state common-lisp:nil :type
    (common-lisp:or relay-state common-lisp:null))
   (session-duration common-lisp:nil :type
    (common-lisp:or duration common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-permission-set-request
                    'make-create-permission-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-permission-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-permission-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'relay-state))
      (common-lisp:list
       (common-lisp:cons "RelayState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'session-duration))
      (common-lisp:list
       (common-lisp:cons "SessionDuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-permission-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-permission-set-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-permission-set-response-"))
   (permission-set common-lisp:nil :type
    (common-lisp:or permission-set common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-permission-set-response
                    'make-create-permission-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-permission-set-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set))
      (common-lisp:list
       (common-lisp:cons "PermissionSet"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-permission-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-trusted-token-issuer-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-trusted-token-issuer-request-"))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null))
   (instance-arn (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or trusted-token-issuer-name common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (trusted-token-issuer-configuration
    (common-lisp:error ":trusted-token-issuer-configuration is required") :type
    (common-lisp:or trusted-token-issuer-configuration common-lisp:null))
   (trusted-token-issuer-type
    (common-lisp:error ":trusted-token-issuer-type is required") :type
    (common-lisp:or trusted-token-issuer-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-trusted-token-issuer-request
                    'make-create-trusted-token-issuer-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-trusted-token-issuer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-trusted-token-issuer-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'trusted-token-issuer-configuration))
      (common-lisp:list
       (common-lisp:cons "TrustedTokenIssuerConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'trusted-token-issuer-type))
      (common-lisp:list
       (common-lisp:cons "TrustedTokenIssuerType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-trusted-token-issuer-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-trusted-token-issuer-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-trusted-token-issuer-response-"))
   (trusted-token-issuer-arn common-lisp:nil :type
    (common-lisp:or trusted-token-issuer-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-trusted-token-issuer-response
                    'make-create-trusted-token-issuer-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-trusted-token-issuer-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-trusted-token-issuer-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'trusted-token-issuer-arn))
      (common-lisp:list
       (common-lisp:cons "TrustedTokenIssuerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-trusted-token-issuer-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (customer-managed-policy-reference (:copier common-lisp:nil)
      (:conc-name "struct-shape-customer-managed-policy-reference-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or managed-policy-name common-lisp:null))
   (path common-lisp:nil :type
    (common-lisp:or managed-policy-path common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'customer-managed-policy-reference
                    'make-customer-managed-policy-reference))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          customer-managed-policy-reference))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          customer-managed-policy-reference))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'path))
      (common-lisp:list
       (common-lisp:cons "Path"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          customer-managed-policy-reference))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype customer-managed-policy-reference-list ()
   '(trivial-types:proper-list customer-managed-policy-reference))
 (common-lisp:defun make-customer-managed-policy-reference-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            customer-managed-policy-reference))
   aws-sdk/generator/shape::members))
(common-lisp:deftype date () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (delete-account-assignment-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-account-assignment-request-"))
   (instance-arn (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null))
   (permission-set-arn (common-lisp:error ":permission-set-arn is required")
    :type (common-lisp:or permission-set-arn common-lisp:null))
   (principal-id (common-lisp:error ":principal-id is required") :type
    (common-lisp:or principal-id common-lisp:null))
   (principal-type (common-lisp:error ":principal-type is required") :type
    (common-lisp:or principal-type common-lisp:null))
   (target-id (common-lisp:error ":target-id is required") :type
    (common-lisp:or target-id common-lisp:null))
   (target-type (common-lisp:error ":target-type is required") :type
    (common-lisp:or target-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-account-assignment-request
                    'make-delete-account-assignment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-account-assignment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-account-assignment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-id))
      (common-lisp:list
       (common-lisp:cons "PrincipalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-type))
      (common-lisp:list
       (common-lisp:cons "PrincipalType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-id))
      (common-lisp:list
       (common-lisp:cons "TargetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-type))
      (common-lisp:list
       (common-lisp:cons "TargetType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-account-assignment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-account-assignment-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-account-assignment-response-"))
   (account-assignment-deletion-status common-lisp:nil :type
    (common-lisp:or account-assignment-operation-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-account-assignment-response
                    'make-delete-account-assignment-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-account-assignment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-account-assignment-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'account-assignment-deletion-status))
      (common-lisp:list
       (common-lisp:cons "AccountAssignmentDeletionStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-account-assignment-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-application-access-scope-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-application-access-scope-request-"))
   (application-arn (common-lisp:error ":application-arn is required") :type
    (common-lisp:or application-arn common-lisp:null))
   (scope (common-lisp:error ":scope is required") :type
    (common-lisp:or scope common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-application-access-scope-request
                    'make-delete-application-access-scope-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-access-scope-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-access-scope-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scope))
      (common-lisp:list
       (common-lisp:cons "Scope"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-access-scope-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-application-assignment-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-application-assignment-request-"))
   (application-arn (common-lisp:error ":application-arn is required") :type
    (common-lisp:or application-arn common-lisp:null))
   (principal-id (common-lisp:error ":principal-id is required") :type
    (common-lisp:or principal-id common-lisp:null))
   (principal-type (common-lisp:error ":principal-type is required") :type
    (common-lisp:or principal-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-application-assignment-request
                    'make-delete-application-assignment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-assignment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-assignment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-id))
      (common-lisp:list
       (common-lisp:cons "PrincipalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-type))
      (common-lisp:list
       (common-lisp:cons "PrincipalType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-assignment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-application-assignment-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-application-assignment-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-application-assignment-response
                    'make-delete-application-assignment-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-assignment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-assignment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-assignment-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-application-authentication-method-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-delete-application-authentication-method-request-"))
   (application-arn (common-lisp:error ":application-arn is required") :type
    (common-lisp:or application-arn common-lisp:null))
   (authentication-method-type
    (common-lisp:error ":authentication-method-type is required") :type
    (common-lisp:or authentication-method-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-application-authentication-method-request
                    'make-delete-application-authentication-method-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-authentication-method-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-authentication-method-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-method-type))
      (common-lisp:list
       (common-lisp:cons "AuthenticationMethodType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-authentication-method-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-application-grant-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-application-grant-request-"))
   (application-arn (common-lisp:error ":application-arn is required") :type
    (common-lisp:or application-arn common-lisp:null))
   (grant-type (common-lisp:error ":grant-type is required") :type
    (common-lisp:or grant-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-application-grant-request
                    'make-delete-application-grant-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-grant-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-grant-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'grant-type))
      (common-lisp:list
       (common-lisp:cons "GrantType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-grant-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-application-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-application-request-"))
   (application-arn (common-lisp:error ":application-arn is required") :type
    (common-lisp:or application-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-application-request
                    'make-delete-application-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-application-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-application-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-application-response
                    'make-delete-application-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-inline-policy-from-permission-set-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-delete-inline-policy-from-permission-set-request-"))
   (instance-arn (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null))
   (permission-set-arn (common-lisp:error ":permission-set-arn is required")
    :type (common-lisp:or permission-set-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-inline-policy-from-permission-set-request
                    'make-delete-inline-policy-from-permission-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-inline-policy-from-permission-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-inline-policy-from-permission-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-inline-policy-from-permission-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-inline-policy-from-permission-set-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-delete-inline-policy-from-permission-set-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-inline-policy-from-permission-set-response
                    'make-delete-inline-policy-from-permission-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-inline-policy-from-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-inline-policy-from-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-inline-policy-from-permission-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-instance-access-control-attribute-configuration-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-delete-instance-access-control-attribute-configuration-request-"))
   (instance-arn (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list
   'delete-instance-access-control-attribute-configuration-request
   'make-delete-instance-access-control-attribute-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-instance-access-control-attribute-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-instance-access-control-attribute-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-instance-access-control-attribute-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-instance-access-control-attribute-configuration-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-delete-instance-access-control-attribute-configuration-response-")))
 (common-lisp:export
  (common-lisp:list
   'delete-instance-access-control-attribute-configuration-response
   'make-delete-instance-access-control-attribute-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-instance-access-control-attribute-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-instance-access-control-attribute-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-instance-access-control-attribute-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-instance-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-instance-request-"))
   (instance-arn (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-instance-request 'make-delete-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-instance-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-instance-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-instance-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-instance-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-instance-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-instance-response 'make-delete-instance-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-instance-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-instance-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-instance-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-permission-set-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-permission-set-request-"))
   (instance-arn (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null))
   (permission-set-arn (common-lisp:error ":permission-set-arn is required")
    :type (common-lisp:or permission-set-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-permission-set-request
                    'make-delete-permission-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-permission-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-permission-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-permission-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-permission-set-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-permission-set-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-permission-set-response
                    'make-delete-permission-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-permission-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-permissions-boundary-from-permission-set-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-delete-permissions-boundary-from-permission-set-request-"))
   (instance-arn (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null))
   (permission-set-arn (common-lisp:error ":permission-set-arn is required")
    :type (common-lisp:or permission-set-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-permissions-boundary-from-permission-set-request
                    'make-delete-permissions-boundary-from-permission-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-permissions-boundary-from-permission-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-permissions-boundary-from-permission-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-permissions-boundary-from-permission-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-permissions-boundary-from-permission-set-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-delete-permissions-boundary-from-permission-set-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-permissions-boundary-from-permission-set-response
                    'make-delete-permissions-boundary-from-permission-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-permissions-boundary-from-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-permissions-boundary-from-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-permissions-boundary-from-permission-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-trusted-token-issuer-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-trusted-token-issuer-request-"))
   (trusted-token-issuer-arn
    (common-lisp:error ":trusted-token-issuer-arn is required") :type
    (common-lisp:or trusted-token-issuer-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-trusted-token-issuer-request
                    'make-delete-trusted-token-issuer-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-trusted-token-issuer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-trusted-token-issuer-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'trusted-token-issuer-arn))
      (common-lisp:list
       (common-lisp:cons "TrustedTokenIssuerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-trusted-token-issuer-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-trusted-token-issuer-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-trusted-token-issuer-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-trusted-token-issuer-response
                    'make-delete-trusted-token-issuer-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-trusted-token-issuer-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-trusted-token-issuer-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-trusted-token-issuer-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-account-assignment-creation-status-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-describe-account-assignment-creation-status-request-"))
   (account-assignment-creation-request-id
    (common-lisp:error ":account-assignment-creation-request-id is required")
    :type (common-lisp:or uuid common-lisp:null))
   (instance-arn (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-account-assignment-creation-status-request
                    'make-describe-account-assignment-creation-status-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-account-assignment-creation-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-account-assignment-creation-status-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'account-assignment-creation-request-id))
      (common-lisp:list
       (common-lisp:cons "AccountAssignmentCreationRequestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-account-assignment-creation-status-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-account-assignment-creation-status-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-describe-account-assignment-creation-status-response-"))
   (account-assignment-creation-status common-lisp:nil :type
    (common-lisp:or account-assignment-operation-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-account-assignment-creation-status-response
                    'make-describe-account-assignment-creation-status-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-account-assignment-creation-status-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-account-assignment-creation-status-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'account-assignment-creation-status))
      (common-lisp:list
       (common-lisp:cons "AccountAssignmentCreationStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-account-assignment-creation-status-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-account-assignment-deletion-status-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-describe-account-assignment-deletion-status-request-"))
   (account-assignment-deletion-request-id
    (common-lisp:error ":account-assignment-deletion-request-id is required")
    :type (common-lisp:or uuid common-lisp:null))
   (instance-arn (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-account-assignment-deletion-status-request
                    'make-describe-account-assignment-deletion-status-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-account-assignment-deletion-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-account-assignment-deletion-status-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'account-assignment-deletion-request-id))
      (common-lisp:list
       (common-lisp:cons "AccountAssignmentDeletionRequestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-account-assignment-deletion-status-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-account-assignment-deletion-status-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-describe-account-assignment-deletion-status-response-"))
   (account-assignment-deletion-status common-lisp:nil :type
    (common-lisp:or account-assignment-operation-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-account-assignment-deletion-status-response
                    'make-describe-account-assignment-deletion-status-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-account-assignment-deletion-status-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-account-assignment-deletion-status-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'account-assignment-deletion-status))
      (common-lisp:list
       (common-lisp:cons "AccountAssignmentDeletionStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-account-assignment-deletion-status-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-application-assignment-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-application-assignment-request-"))
   (application-arn (common-lisp:error ":application-arn is required") :type
    (common-lisp:or application-arn common-lisp:null))
   (principal-id (common-lisp:error ":principal-id is required") :type
    (common-lisp:or principal-id common-lisp:null))
   (principal-type (common-lisp:error ":principal-type is required") :type
    (common-lisp:or principal-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-application-assignment-request
                    'make-describe-application-assignment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-application-assignment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-application-assignment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-id))
      (common-lisp:list
       (common-lisp:cons "PrincipalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-type))
      (common-lisp:list
       (common-lisp:cons "PrincipalType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-application-assignment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-application-assignment-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-application-assignment-response-"))
   (application-arn common-lisp:nil :type
    (common-lisp:or application-arn common-lisp:null))
   (principal-id common-lisp:nil :type
    (common-lisp:or principal-id common-lisp:null))
   (principal-type common-lisp:nil :type
    (common-lisp:or principal-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-application-assignment-response
                    'make-describe-application-assignment-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-application-assignment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-application-assignment-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-id))
      (common-lisp:list
       (common-lisp:cons "PrincipalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-type))
      (common-lisp:list
       (common-lisp:cons "PrincipalType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-application-assignment-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-application-provider-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-application-provider-request-"))
   (application-provider-arn
    (common-lisp:error ":application-provider-arn is required") :type
    (common-lisp:or application-provider-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-application-provider-request
                    'make-describe-application-provider-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-application-provider-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-application-provider-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'application-provider-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationProviderArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-application-provider-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-application-provider-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-application-provider-response-"))
   (application-provider-arn
    (common-lisp:error ":application-provider-arn is required") :type
    (common-lisp:or application-provider-arn common-lisp:null))
   (display-data common-lisp:nil :type
    (common-lisp:or display-data common-lisp:null))
   (federation-protocol common-lisp:nil :type
    (common-lisp:or federation-protocol common-lisp:null))
   (resource-server-config common-lisp:nil :type
    (common-lisp:or resource-server-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-application-provider-response
                    'make-describe-application-provider-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-application-provider-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-application-provider-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'application-provider-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationProviderArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'display-data))
      (common-lisp:list
       (common-lisp:cons "DisplayData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'federation-protocol))
      (common-lisp:list
       (common-lisp:cons "FederationProtocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resource-server-config))
      (common-lisp:list
       (common-lisp:cons "ResourceServerConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-application-provider-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-application-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-application-request-"))
   (application-arn (common-lisp:error ":application-arn is required") :type
    (common-lisp:or application-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-application-request
                    'make-describe-application-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-application-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-application-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-application-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-application-response-"))
   (application-account common-lisp:nil :type
    (common-lisp:or account-id common-lisp:null))
   (application-arn common-lisp:nil :type
    (common-lisp:or application-arn common-lisp:null))
   (application-provider-arn common-lisp:nil :type
    (common-lisp:or application-provider-arn common-lisp:null))
   (created-date common-lisp:nil :type (common-lisp:or date common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (instance-arn common-lisp:nil :type
    (common-lisp:or instance-arn common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name-type common-lisp:null))
   (portal-options common-lisp:nil :type
    (common-lisp:or portal-options common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or application-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-application-response
                    'make-describe-application-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-application-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-application-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-account))
      (common-lisp:list
       (common-lisp:cons "ApplicationAccount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'application-provider-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationProviderArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'portal-options))
      (common-lisp:list
       (common-lisp:cons "PortalOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-application-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-instance-access-control-attribute-configuration-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-describe-instance-access-control-attribute-configuration-request-"))
   (instance-arn (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list
   'describe-instance-access-control-attribute-configuration-request
   'make-describe-instance-access-control-attribute-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-instance-access-control-attribute-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-instance-access-control-attribute-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-instance-access-control-attribute-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-instance-access-control-attribute-configuration-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-describe-instance-access-control-attribute-configuration-response-"))
   (instance-access-control-attribute-configuration common-lisp:nil :type
    (common-lisp:or instance-access-control-attribute-configuration
                    common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or instance-access-control-attribute-configuration-status
                    common-lisp:null))
   (status-reason common-lisp:nil :type
    (common-lisp:or
     instance-access-control-attribute-configuration-status-reason
     common-lisp:null)))
 (common-lisp:export
  (common-lisp:list
   'describe-instance-access-control-attribute-configuration-response
   'make-describe-instance-access-control-attribute-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-instance-access-control-attribute-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-instance-access-control-attribute-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'instance-access-control-attribute-configuration))
      (common-lisp:list
       (common-lisp:cons "InstanceAccessControlAttributeConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-reason))
      (common-lisp:list
       (common-lisp:cons "StatusReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-instance-access-control-attribute-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-instance-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-instance-request-"))
   (instance-arn (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-instance-request
                    'make-describe-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-instance-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-instance-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-instance-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-instance-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-instance-response-"))
   (created-date common-lisp:nil :type (common-lisp:or date common-lisp:null))
   (identity-store-id common-lisp:nil :type
    (common-lisp:or id common-lisp:null))
   (instance-arn common-lisp:nil :type
    (common-lisp:or instance-arn common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name-type common-lisp:null))
   (owner-account-id common-lisp:nil :type
    (common-lisp:or account-id common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or instance-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-instance-response
                    'make-describe-instance-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-instance-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-instance-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-store-id))
      (common-lisp:list
       (common-lisp:cons "IdentityStoreId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'owner-account-id))
      (common-lisp:list
       (common-lisp:cons "OwnerAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-instance-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-permission-set-provisioning-status-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-describe-permission-set-provisioning-status-request-"))
   (instance-arn (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null))
   (provision-permission-set-request-id
    (common-lisp:error ":provision-permission-set-request-id is required")
    :type (common-lisp:or uuid common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-permission-set-provisioning-status-request
                    'make-describe-permission-set-provisioning-status-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-permission-set-provisioning-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-permission-set-provisioning-status-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'provision-permission-set-request-id))
      (common-lisp:list
       (common-lisp:cons "ProvisionPermissionSetRequestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-permission-set-provisioning-status-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-permission-set-provisioning-status-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-describe-permission-set-provisioning-status-response-"))
   (permission-set-provisioning-status common-lisp:nil :type
    (common-lisp:or permission-set-provisioning-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-permission-set-provisioning-status-response
                    'make-describe-permission-set-provisioning-status-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-permission-set-provisioning-status-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-permission-set-provisioning-status-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'permission-set-provisioning-status))
      (common-lisp:list
       (common-lisp:cons "PermissionSetProvisioningStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-permission-set-provisioning-status-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-permission-set-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-permission-set-request-"))
   (instance-arn (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null))
   (permission-set-arn (common-lisp:error ":permission-set-arn is required")
    :type (common-lisp:or permission-set-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-permission-set-request
                    'make-describe-permission-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-permission-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-permission-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-permission-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-permission-set-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-permission-set-response-"))
   (permission-set common-lisp:nil :type
    (common-lisp:or permission-set common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-permission-set-response
                    'make-describe-permission-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-permission-set-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set))
      (common-lisp:list
       (common-lisp:cons "PermissionSet"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-permission-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-trusted-token-issuer-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-trusted-token-issuer-request-"))
   (trusted-token-issuer-arn
    (common-lisp:error ":trusted-token-issuer-arn is required") :type
    (common-lisp:or trusted-token-issuer-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-trusted-token-issuer-request
                    'make-describe-trusted-token-issuer-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-trusted-token-issuer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-trusted-token-issuer-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'trusted-token-issuer-arn))
      (common-lisp:list
       (common-lisp:cons "TrustedTokenIssuerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-trusted-token-issuer-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-trusted-token-issuer-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-trusted-token-issuer-response-"))
   (name common-lisp:nil :type
    (common-lisp:or trusted-token-issuer-name common-lisp:null))
   (trusted-token-issuer-arn common-lisp:nil :type
    (common-lisp:or trusted-token-issuer-arn common-lisp:null))
   (trusted-token-issuer-configuration common-lisp:nil :type
    (common-lisp:or trusted-token-issuer-configuration common-lisp:null))
   (trusted-token-issuer-type common-lisp:nil :type
    (common-lisp:or trusted-token-issuer-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-trusted-token-issuer-response
                    'make-describe-trusted-token-issuer-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-trusted-token-issuer-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-trusted-token-issuer-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'trusted-token-issuer-arn))
      (common-lisp:list
       (common-lisp:cons "TrustedTokenIssuerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'trusted-token-issuer-configuration))
      (common-lisp:list
       (common-lisp:cons "TrustedTokenIssuerConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'trusted-token-issuer-type))
      (common-lisp:list
       (common-lisp:cons "TrustedTokenIssuerType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-trusted-token-issuer-response))
   common-lisp:nil))
(common-lisp:deftype description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (detach-customer-managed-policy-reference-from-permission-set-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-detach-customer-managed-policy-reference-from-permission-set-request-"))
   (customer-managed-policy-reference
    (common-lisp:error ":customer-managed-policy-reference is required") :type
    (common-lisp:or customer-managed-policy-reference common-lisp:null))
   (instance-arn (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null))
   (permission-set-arn (common-lisp:error ":permission-set-arn is required")
    :type (common-lisp:or permission-set-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list
   'detach-customer-managed-policy-reference-from-permission-set-request
   'make-detach-customer-managed-policy-reference-from-permission-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detach-customer-managed-policy-reference-from-permission-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detach-customer-managed-policy-reference-from-permission-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'customer-managed-policy-reference))
      (common-lisp:list
       (common-lisp:cons "CustomerManagedPolicyReference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detach-customer-managed-policy-reference-from-permission-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (detach-customer-managed-policy-reference-from-permission-set-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-detach-customer-managed-policy-reference-from-permission-set-response-")))
 (common-lisp:export
  (common-lisp:list
   'detach-customer-managed-policy-reference-from-permission-set-response
   'make-detach-customer-managed-policy-reference-from-permission-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detach-customer-managed-policy-reference-from-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detach-customer-managed-policy-reference-from-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detach-customer-managed-policy-reference-from-permission-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (detach-managed-policy-from-permission-set-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-detach-managed-policy-from-permission-set-request-"))
   (instance-arn (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null))
   (managed-policy-arn (common-lisp:error ":managed-policy-arn is required")
    :type (common-lisp:or managed-policy-arn common-lisp:null))
   (permission-set-arn (common-lisp:error ":permission-set-arn is required")
    :type (common-lisp:or permission-set-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detach-managed-policy-from-permission-set-request
                    'make-detach-managed-policy-from-permission-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detach-managed-policy-from-permission-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detach-managed-policy-from-permission-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'managed-policy-arn))
      (common-lisp:list
       (common-lisp:cons "ManagedPolicyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detach-managed-policy-from-permission-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (detach-managed-policy-from-permission-set-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-detach-managed-policy-from-permission-set-response-")))
 (common-lisp:export
  (common-lisp:list 'detach-managed-policy-from-permission-set-response
                    'make-detach-managed-policy-from-permission-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detach-managed-policy-from-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detach-managed-policy-from-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detach-managed-policy-from-permission-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (display-data (:copier common-lisp:nil)
      (:conc-name "struct-shape-display-data-"))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (display-name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (icon-url common-lisp:nil :type (common-lisp:or icon-url common-lisp:null)))
 (common-lisp:export (common-lisp:list 'display-data 'make-display-data))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input display-data))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input display-data))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'display-name))
      (common-lisp:list
       (common-lisp:cons "DisplayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'icon-url))
      (common-lisp:list
       (common-lisp:cons "IconUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input display-data))
   common-lisp:nil))
(common-lisp:deftype duration () 'common-lisp:string)
(common-lisp:deftype federation-protocol () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (get-application-access-scope-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-application-access-scope-request-"))
   (application-arn (common-lisp:error ":application-arn is required") :type
    (common-lisp:or application-arn common-lisp:null))
   (scope (common-lisp:error ":scope is required") :type
    (common-lisp:or scope common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-application-access-scope-request
                    'make-get-application-access-scope-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-application-access-scope-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-application-access-scope-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scope))
      (common-lisp:list
       (common-lisp:cons "Scope"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-application-access-scope-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-application-access-scope-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-application-access-scope-response-"))
   (authorized-targets common-lisp:nil :type
    (common-lisp:or scope-targets common-lisp:null))
   (scope (common-lisp:error ":scope is required") :type
    (common-lisp:or scope common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-application-access-scope-response
                    'make-get-application-access-scope-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-application-access-scope-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-application-access-scope-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorized-targets))
      (common-lisp:list
       (common-lisp:cons "AuthorizedTargets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scope))
      (common-lisp:list
       (common-lisp:cons "Scope"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-application-access-scope-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-application-assignment-configuration-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-application-assignment-configuration-request-"))
   (application-arn (common-lisp:error ":application-arn is required") :type
    (common-lisp:or application-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-application-assignment-configuration-request
                    'make-get-application-assignment-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-application-assignment-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-application-assignment-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-application-assignment-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-application-assignment-configuration-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-application-assignment-configuration-response-"))
   (assignment-required (common-lisp:error ":assignment-required is required")
    :type (common-lisp:or assignment-required common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-application-assignment-configuration-response
                    'make-get-application-assignment-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-application-assignment-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-application-assignment-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'assignment-required))
      (common-lisp:list
       (common-lisp:cons "AssignmentRequired"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-application-assignment-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-application-authentication-method-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-application-authentication-method-request-"))
   (application-arn (common-lisp:error ":application-arn is required") :type
    (common-lisp:or application-arn common-lisp:null))
   (authentication-method-type
    (common-lisp:error ":authentication-method-type is required") :type
    (common-lisp:or authentication-method-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-application-authentication-method-request
                    'make-get-application-authentication-method-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-application-authentication-method-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-application-authentication-method-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-method-type))
      (common-lisp:list
       (common-lisp:cons "AuthenticationMethodType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-application-authentication-method-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-application-authentication-method-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-application-authentication-method-response-"))
   (authentication-method common-lisp:nil :type
    (common-lisp:or authentication-method common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-application-authentication-method-response
                    'make-get-application-authentication-method-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-application-authentication-method-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-application-authentication-method-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-method))
      (common-lisp:list
       (common-lisp:cons "AuthenticationMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-application-authentication-method-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-application-grant-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-application-grant-request-"))
   (application-arn (common-lisp:error ":application-arn is required") :type
    (common-lisp:or application-arn common-lisp:null))
   (grant-type (common-lisp:error ":grant-type is required") :type
    (common-lisp:or grant-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-application-grant-request
                    'make-get-application-grant-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-application-grant-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-application-grant-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'grant-type))
      (common-lisp:list
       (common-lisp:cons "GrantType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-application-grant-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-application-grant-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-application-grant-response-"))
   (grant (common-lisp:error ":grant is required") :type
    (common-lisp:or grant common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-application-grant-response
                    'make-get-application-grant-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-application-grant-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-application-grant-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'grant))
      (common-lisp:list
       (common-lisp:cons "Grant"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-application-grant-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-inline-policy-for-permission-set-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-inline-policy-for-permission-set-request-"))
   (instance-arn (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null))
   (permission-set-arn (common-lisp:error ":permission-set-arn is required")
    :type (common-lisp:or permission-set-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-inline-policy-for-permission-set-request
                    'make-get-inline-policy-for-permission-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-inline-policy-for-permission-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-inline-policy-for-permission-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-inline-policy-for-permission-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-inline-policy-for-permission-set-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-inline-policy-for-permission-set-response-"))
   (inline-policy common-lisp:nil :type
    (common-lisp:or permission-set-policy-document common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-inline-policy-for-permission-set-response
                    'make-get-inline-policy-for-permission-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-inline-policy-for-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-inline-policy-for-permission-set-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'inline-policy))
      (common-lisp:list
       (common-lisp:cons "InlinePolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-inline-policy-for-permission-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-permissions-boundary-for-permission-set-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-permissions-boundary-for-permission-set-request-"))
   (instance-arn (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null))
   (permission-set-arn (common-lisp:error ":permission-set-arn is required")
    :type (common-lisp:or permission-set-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-permissions-boundary-for-permission-set-request
                    'make-get-permissions-boundary-for-permission-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-permissions-boundary-for-permission-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-permissions-boundary-for-permission-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-permissions-boundary-for-permission-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-permissions-boundary-for-permission-set-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-permissions-boundary-for-permission-set-response-"))
   (permissions-boundary common-lisp:nil :type
    (common-lisp:or permissions-boundary common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-permissions-boundary-for-permission-set-response
                    'make-get-permissions-boundary-for-permission-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-permissions-boundary-for-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-permissions-boundary-for-permission-set-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'permissions-boundary))
      (common-lisp:list
       (common-lisp:cons "PermissionsBoundary"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-permissions-boundary-for-permission-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (grant (:copier common-lisp:nil) (:conc-name "struct-shape-grant-"))
   (authorization-code common-lisp:nil :type
    (common-lisp:or authorization-code-grant common-lisp:null))
   (jwt-bearer common-lisp:nil :type
    (common-lisp:or jwt-bearer-grant common-lisp:null))
   (refresh-token common-lisp:nil :type
    (common-lisp:or refresh-token-grant common-lisp:null))
   (token-exchange common-lisp:nil :type
    (common-lisp:or token-exchange-grant common-lisp:null)))
 (common-lisp:export (common-lisp:list 'grant 'make-grant))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input grant))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input grant))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization-code))
      (common-lisp:list
       (common-lisp:cons "AuthorizationCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'jwt-bearer))
      (common-lisp:list
       (common-lisp:cons "JwtBearer"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'refresh-token))
      (common-lisp:list
       (common-lisp:cons "RefreshToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'token-exchange))
      (common-lisp:list
       (common-lisp:cons "TokenExchange"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input grant))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (grant-item (:copier common-lisp:nil)
      (:conc-name "struct-shape-grant-item-"))
   (grant (common-lisp:error ":grant is required") :type
    (common-lisp:or grant common-lisp:null))
   (grant-type (common-lisp:error ":grant-type is required") :type
    (common-lisp:or grant-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'grant-item 'make-grant-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input grant-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input grant-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'grant))
      (common-lisp:list
       (common-lisp:cons "Grant"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'grant-type))
      (common-lisp:list
       (common-lisp:cons "GrantType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input grant-item))
   common-lisp:nil))
(common-lisp:deftype grant-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype grants () '(trivial-types:proper-list grant-item))
 (common-lisp:defun make-grants
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list grant-item))
   aws-sdk/generator/shape::members))
(common-lisp:deftype icon-url () 'common-lisp:string)
(common-lisp:deftype id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (instance-access-control-attribute-configuration (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-instance-access-control-attribute-configuration-"))
   (access-control-attributes
    (common-lisp:error ":access-control-attributes is required") :type
    (common-lisp:or access-control-attribute-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-access-control-attribute-configuration
                    'make-instance-access-control-attribute-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          instance-access-control-attribute-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          instance-access-control-attribute-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'access-control-attributes))
      (common-lisp:list
       (common-lisp:cons "AccessControlAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          instance-access-control-attribute-configuration))
   common-lisp:nil))
(common-lisp:deftype instance-access-control-attribute-configuration-status ()
  'common-lisp:string)
(common-lisp:deftype instance-access-control-attribute-configuration-status-reason
                     ()
  'common-lisp:string)
(common-lisp:deftype instance-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype instance-list ()
   '(trivial-types:proper-list instance-metadata))
 (common-lisp:defun make-instance-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list instance-metadata))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (instance-metadata (:copier common-lisp:nil)
      (:conc-name "struct-shape-instance-metadata-"))
   (created-date common-lisp:nil :type (common-lisp:or date common-lisp:null))
   (identity-store-id common-lisp:nil :type
    (common-lisp:or id common-lisp:null))
   (instance-arn common-lisp:nil :type
    (common-lisp:or instance-arn common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name-type common-lisp:null))
   (owner-account-id common-lisp:nil :type
    (common-lisp:or account-id common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or instance-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-metadata 'make-instance-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input instance-metadata))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input instance-metadata))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-store-id))
      (common-lisp:list
       (common-lisp:cons "IdentityStoreId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'owner-account-id))
      (common-lisp:list
       (common-lisp:cons "OwnerAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input instance-metadata))
   common-lisp:nil))
(common-lisp:deftype instance-status () 'common-lisp:string)
(common-lisp:deftype internal-failure-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (sso-admin-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-message)))
(common-lisp:deftype jmespath () 'common-lisp:string)
(common-lisp:deftype jwks-retrieval-option () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (jwt-bearer-grant (:copier common-lisp:nil)
      (:conc-name "struct-shape-jwt-bearer-grant-"))
   (authorized-token-issuers common-lisp:nil :type
    (common-lisp:or authorized-token-issuers common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'jwt-bearer-grant 'make-jwt-bearer-grant))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input jwt-bearer-grant))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input jwt-bearer-grant))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorized-token-issuers))
      (common-lisp:list
       (common-lisp:cons "AuthorizedTokenIssuers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input jwt-bearer-grant))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-account-assignment-creation-status-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-account-assignment-creation-status-request-"))
   (filter common-lisp:nil :type
    (common-lisp:or operation-status-filter common-lisp:null))
   (instance-arn (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-account-assignment-creation-status-request
                    'make-list-account-assignment-creation-status-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignment-creation-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignment-creation-status-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignment-creation-status-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-account-assignment-creation-status-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-account-assignment-creation-status-response-"))
   (account-assignments-creation-status common-lisp:nil :type
    (common-lisp:or account-assignment-operation-status-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-account-assignment-creation-status-response
                    'make-list-account-assignment-creation-status-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignment-creation-status-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignment-creation-status-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'account-assignments-creation-status))
      (common-lisp:list
       (common-lisp:cons "AccountAssignmentsCreationStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignment-creation-status-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-account-assignment-deletion-status-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-account-assignment-deletion-status-request-"))
   (filter common-lisp:nil :type
    (common-lisp:or operation-status-filter common-lisp:null))
   (instance-arn (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-account-assignment-deletion-status-request
                    'make-list-account-assignment-deletion-status-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignment-deletion-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignment-deletion-status-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignment-deletion-status-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-account-assignment-deletion-status-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-account-assignment-deletion-status-response-"))
   (account-assignments-deletion-status common-lisp:nil :type
    (common-lisp:or account-assignment-operation-status-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-account-assignment-deletion-status-response
                    'make-list-account-assignment-deletion-status-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignment-deletion-status-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignment-deletion-status-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'account-assignments-deletion-status))
      (common-lisp:list
       (common-lisp:cons "AccountAssignmentsDeletionStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignment-deletion-status-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-account-assignments-filter (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-account-assignments-filter-"))
   (account-id common-lisp:nil :type
    (common-lisp:or account-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-account-assignments-filter
                    'make-list-account-assignments-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignments-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignments-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignments-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-account-assignments-for-principal-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-account-assignments-for-principal-request-"))
   (filter common-lisp:nil :type
    (common-lisp:or list-account-assignments-filter common-lisp:null))
   (instance-arn (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null))
   (principal-id (common-lisp:error ":principal-id is required") :type
    (common-lisp:or principal-id common-lisp:null))
   (principal-type (common-lisp:error ":principal-type is required") :type
    (common-lisp:or principal-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-account-assignments-for-principal-request
                    'make-list-account-assignments-for-principal-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignments-for-principal-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignments-for-principal-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-id))
      (common-lisp:list
       (common-lisp:cons "PrincipalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-type))
      (common-lisp:list
       (common-lisp:cons "PrincipalType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignments-for-principal-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-account-assignments-for-principal-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-account-assignments-for-principal-response-"))
   (account-assignments common-lisp:nil :type
    (common-lisp:or account-assignment-list-for-principal common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-account-assignments-for-principal-response
                    'make-list-account-assignments-for-principal-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignments-for-principal-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignments-for-principal-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-assignments))
      (common-lisp:list
       (common-lisp:cons "AccountAssignments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignments-for-principal-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-account-assignments-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-account-assignments-request-"))
   (account-id (common-lisp:error ":account-id is required") :type
    (common-lisp:or target-id common-lisp:null))
   (instance-arn (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null))
   (permission-set-arn (common-lisp:error ":permission-set-arn is required")
    :type (common-lisp:or permission-set-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-account-assignments-request
                    'make-list-account-assignments-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignments-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignments-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignments-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-account-assignments-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-account-assignments-response-"))
   (account-assignments common-lisp:nil :type
    (common-lisp:or account-assignment-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-account-assignments-response
                    'make-list-account-assignments-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignments-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignments-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-assignments))
      (common-lisp:list
       (common-lisp:cons "AccountAssignments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-account-assignments-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-accounts-for-provisioned-permission-set-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-accounts-for-provisioned-permission-set-request-"))
   (instance-arn (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null))
   (permission-set-arn (common-lisp:error ":permission-set-arn is required")
    :type (common-lisp:or permission-set-arn common-lisp:null))
   (provisioning-status common-lisp:nil :type
    (common-lisp:or provisioning-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-accounts-for-provisioned-permission-set-request
                    'make-list-accounts-for-provisioned-permission-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-accounts-for-provisioned-permission-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-accounts-for-provisioned-permission-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'provisioning-status))
      (common-lisp:list
       (common-lisp:cons "ProvisioningStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-accounts-for-provisioned-permission-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-accounts-for-provisioned-permission-set-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-accounts-for-provisioned-permission-set-response-"))
   (account-ids common-lisp:nil :type
    (common-lisp:or account-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-accounts-for-provisioned-permission-set-response
                    'make-list-accounts-for-provisioned-permission-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-accounts-for-provisioned-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-accounts-for-provisioned-permission-set-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "AccountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-accounts-for-provisioned-permission-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-application-access-scopes-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-application-access-scopes-request-"))
   (application-arn (common-lisp:error ":application-arn is required") :type
    (common-lisp:or application-arn common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or list-application-access-scopes-request-max-results-integer
                    common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-application-access-scopes-request
                    'make-list-application-access-scopes-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-application-access-scopes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-application-access-scopes-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-application-access-scopes-request))
   common-lisp:nil))
(common-lisp:deftype list-application-access-scopes-request-max-results-integer
                     ()
  'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (list-application-access-scopes-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-application-access-scopes-response-"))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null))
   (scopes (common-lisp:error ":scopes is required") :type
    (common-lisp:or scopes common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-application-access-scopes-response
                    'make-list-application-access-scopes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-application-access-scopes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-application-access-scopes-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scopes))
      (common-lisp:list
       (common-lisp:cons "Scopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-application-access-scopes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-application-assignments-filter (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-application-assignments-filter-"))
   (application-arn common-lisp:nil :type
    (common-lisp:or application-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-application-assignments-filter
                    'make-list-application-assignments-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-application-assignments-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-application-assignments-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-application-assignments-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-application-assignments-for-principal-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-application-assignments-for-principal-request-"))
   (filter common-lisp:nil :type
    (common-lisp:or list-application-assignments-filter common-lisp:null))
   (instance-arn (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null))
   (principal-id (common-lisp:error ":principal-id is required") :type
    (common-lisp:or principal-id common-lisp:null))
   (principal-type (common-lisp:error ":principal-type is required") :type
    (common-lisp:or principal-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-application-assignments-for-principal-request
                    'make-list-application-assignments-for-principal-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-application-assignments-for-principal-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-application-assignments-for-principal-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-id))
      (common-lisp:list
       (common-lisp:cons "PrincipalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-type))
      (common-lisp:list
       (common-lisp:cons "PrincipalType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-application-assignments-for-principal-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-application-assignments-for-principal-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-application-assignments-for-principal-response-"))
   (application-assignments common-lisp:nil :type
    (common-lisp:or application-assignment-list-for-principal
                    common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-application-assignments-for-principal-response
                    'make-list-application-assignments-for-principal-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-application-assignments-for-principal-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-application-assignments-for-principal-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'application-assignments))
      (common-lisp:list
       (common-lisp:cons "ApplicationAssignments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-application-assignments-for-principal-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-application-assignments-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-application-assignments-request-"))
   (application-arn (common-lisp:error ":application-arn is required") :type
    (common-lisp:or application-arn common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-application-assignments-request
                    'make-list-application-assignments-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-application-assignments-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-application-assignments-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-application-assignments-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-application-assignments-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-application-assignments-response-"))
   (application-assignments common-lisp:nil :type
    (common-lisp:or application-assignments-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-application-assignments-response
                    'make-list-application-assignments-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-application-assignments-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-application-assignments-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'application-assignments))
      (common-lisp:list
       (common-lisp:cons "ApplicationAssignments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-application-assignments-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-application-authentication-methods-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-application-authentication-methods-request-"))
   (application-arn (common-lisp:error ":application-arn is required") :type
    (common-lisp:or application-arn common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-application-authentication-methods-request
                    'make-list-application-authentication-methods-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-application-authentication-methods-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-application-authentication-methods-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-application-authentication-methods-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-application-authentication-methods-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-application-authentication-methods-response-"))
   (authentication-methods common-lisp:nil :type
    (common-lisp:or authentication-methods common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-application-authentication-methods-response
                    'make-list-application-authentication-methods-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-application-authentication-methods-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-application-authentication-methods-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-methods))
      (common-lisp:list
       (common-lisp:cons "AuthenticationMethods"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-application-authentication-methods-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-application-grants-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-application-grants-request-"))
   (application-arn (common-lisp:error ":application-arn is required") :type
    (common-lisp:or application-arn common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-application-grants-request
                    'make-list-application-grants-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-application-grants-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-application-grants-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-application-grants-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-application-grants-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-application-grants-response-"))
   (grants (common-lisp:error ":grants is required") :type
    (common-lisp:or grants common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-application-grants-response
                    'make-list-application-grants-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-application-grants-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-application-grants-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'grants))
      (common-lisp:list
       (common-lisp:cons "Grants"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-application-grants-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-application-providers-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-application-providers-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-application-providers-request
                    'make-list-application-providers-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-application-providers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-application-providers-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-application-providers-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-application-providers-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-application-providers-response-"))
   (application-providers common-lisp:nil :type
    (common-lisp:or application-provider-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-application-providers-response
                    'make-list-application-providers-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-application-providers-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-application-providers-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'application-providers))
      (common-lisp:list
       (common-lisp:cons "ApplicationProviders"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-application-providers-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-applications-filter (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-applications-filter-"))
   (application-account common-lisp:nil :type
    (common-lisp:or account-id common-lisp:null))
   (application-provider common-lisp:nil :type
    (common-lisp:or application-provider-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-applications-filter 'make-list-applications-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-applications-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-applications-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-account))
      (common-lisp:list
       (common-lisp:cons "ApplicationAccount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'application-provider))
      (common-lisp:list
       (common-lisp:cons "ApplicationProvider"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-applications-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-applications-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-applications-request-"))
   (filter common-lisp:nil :type
    (common-lisp:or list-applications-filter common-lisp:null))
   (instance-arn (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-applications-request
                    'make-list-applications-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-applications-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-applications-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-applications-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-applications-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-applications-response-"))
   (applications common-lisp:nil :type
    (common-lisp:or application-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-applications-response
                    'make-list-applications-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-applications-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-applications-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'applications))
      (common-lisp:list
       (common-lisp:cons "Applications"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-applications-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-customer-managed-policy-references-in-permission-set-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-customer-managed-policy-references-in-permission-set-request-"))
   (instance-arn (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null))
   (permission-set-arn (common-lisp:error ":permission-set-arn is required")
    :type (common-lisp:or permission-set-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list
   'list-customer-managed-policy-references-in-permission-set-request
   'make-list-customer-managed-policy-references-in-permission-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-customer-managed-policy-references-in-permission-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-customer-managed-policy-references-in-permission-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-customer-managed-policy-references-in-permission-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-customer-managed-policy-references-in-permission-set-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-customer-managed-policy-references-in-permission-set-response-"))
   (customer-managed-policy-references common-lisp:nil :type
    (common-lisp:or customer-managed-policy-reference-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list
   'list-customer-managed-policy-references-in-permission-set-response
   'make-list-customer-managed-policy-references-in-permission-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-customer-managed-policy-references-in-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-customer-managed-policy-references-in-permission-set-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'customer-managed-policy-references))
      (common-lisp:list
       (common-lisp:cons "CustomerManagedPolicyReferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-customer-managed-policy-references-in-permission-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-instances-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-instances-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-instances-request 'make-list-instances-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-instances-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-instances-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-instances-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-instances-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-instances-response-"))
   (instances common-lisp:nil :type
    (common-lisp:or instance-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-instances-response 'make-list-instances-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-instances-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-instances-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instances))
      (common-lisp:list
       (common-lisp:cons "Instances"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-instances-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-managed-policies-in-permission-set-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-managed-policies-in-permission-set-request-"))
   (instance-arn (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null))
   (permission-set-arn (common-lisp:error ":permission-set-arn is required")
    :type (common-lisp:or permission-set-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-managed-policies-in-permission-set-request
                    'make-list-managed-policies-in-permission-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-managed-policies-in-permission-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-managed-policies-in-permission-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-managed-policies-in-permission-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-managed-policies-in-permission-set-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-managed-policies-in-permission-set-response-"))
   (attached-managed-policies common-lisp:nil :type
    (common-lisp:or attached-managed-policy-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-managed-policies-in-permission-set-response
                    'make-list-managed-policies-in-permission-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-managed-policies-in-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-managed-policies-in-permission-set-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'attached-managed-policies))
      (common-lisp:list
       (common-lisp:cons "AttachedManagedPolicies"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-managed-policies-in-permission-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-permission-set-provisioning-status-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-permission-set-provisioning-status-request-"))
   (filter common-lisp:nil :type
    (common-lisp:or operation-status-filter common-lisp:null))
   (instance-arn (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-permission-set-provisioning-status-request
                    'make-list-permission-set-provisioning-status-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-permission-set-provisioning-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-permission-set-provisioning-status-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-permission-set-provisioning-status-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-permission-set-provisioning-status-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-permission-set-provisioning-status-response-"))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null))
   (permission-sets-provisioning-status common-lisp:nil :type
    (common-lisp:or permission-set-provisioning-status-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-permission-set-provisioning-status-response
                    'make-list-permission-set-provisioning-status-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-permission-set-provisioning-status-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-permission-set-provisioning-status-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'permission-sets-provisioning-status))
      (common-lisp:list
       (common-lisp:cons "PermissionSetsProvisioningStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-permission-set-provisioning-status-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-permission-sets-provisioned-to-account-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-permission-sets-provisioned-to-account-request-"))
   (account-id (common-lisp:error ":account-id is required") :type
    (common-lisp:or account-id common-lisp:null))
   (instance-arn (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null))
   (provisioning-status common-lisp:nil :type
    (common-lisp:or provisioning-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-permission-sets-provisioned-to-account-request
                    'make-list-permission-sets-provisioned-to-account-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-permission-sets-provisioned-to-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-permission-sets-provisioned-to-account-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'provisioning-status))
      (common-lisp:list
       (common-lisp:cons "ProvisioningStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-permission-sets-provisioned-to-account-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-permission-sets-provisioned-to-account-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-permission-sets-provisioned-to-account-response-"))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null))
   (permission-sets common-lisp:nil :type
    (common-lisp:or permission-set-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-permission-sets-provisioned-to-account-response
                    'make-list-permission-sets-provisioned-to-account-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-permission-sets-provisioned-to-account-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-permission-sets-provisioned-to-account-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-sets))
      (common-lisp:list
       (common-lisp:cons "PermissionSets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-permission-sets-provisioned-to-account-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-permission-sets-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-permission-sets-request-"))
   (instance-arn (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-permission-sets-request
                    'make-list-permission-sets-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-permission-sets-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-permission-sets-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-permission-sets-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-permission-sets-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-permission-sets-response-"))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null))
   (permission-sets common-lisp:nil :type
    (common-lisp:or permission-set-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-permission-sets-response
                    'make-list-permission-sets-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-permission-sets-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-permission-sets-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-sets))
      (common-lisp:list
       (common-lisp:cons "PermissionSets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-permission-sets-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-request-"))
   (instance-arn common-lisp:nil :type
    (common-lisp:or instance-arn common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or taggable-resource-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-response-"))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-trusted-token-issuers-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-trusted-token-issuers-request-"))
   (instance-arn (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-trusted-token-issuers-request
                    'make-list-trusted-token-issuers-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-trusted-token-issuers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-trusted-token-issuers-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-trusted-token-issuers-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-trusted-token-issuers-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-trusted-token-issuers-response-"))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null))
   (trusted-token-issuers common-lisp:nil :type
    (common-lisp:or trusted-token-issuer-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-trusted-token-issuers-response
                    'make-list-trusted-token-issuers-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-trusted-token-issuers-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-trusted-token-issuers-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'trusted-token-issuers))
      (common-lisp:list
       (common-lisp:cons "TrustedTokenIssuers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-trusted-token-issuers-response))
   common-lisp:nil))
(common-lisp:deftype managed-policy-arn () 'common-lisp:string)
(common-lisp:deftype managed-policy-name () 'common-lisp:string)
(common-lisp:deftype managed-policy-path () 'common-lisp:string)
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype name () 'common-lisp:string)
(common-lisp:deftype name-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (oidc-jwt-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-oidc-jwt-configuration-"))
   (claim-attribute-path
    (common-lisp:error ":claim-attribute-path is required") :type
    (common-lisp:or claim-attribute-path common-lisp:null))
   (identity-store-attribute-path
    (common-lisp:error ":identity-store-attribute-path is required") :type
    (common-lisp:or jmespath common-lisp:null))
   (issuer-url (common-lisp:error ":issuer-url is required") :type
    (common-lisp:or trusted-token-issuer-url common-lisp:null))
   (jwks-retrieval-option
    (common-lisp:error ":jwks-retrieval-option is required") :type
    (common-lisp:or jwks-retrieval-option common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'oidc-jwt-configuration 'make-oidc-jwt-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          oidc-jwt-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          oidc-jwt-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'claim-attribute-path))
      (common-lisp:list
       (common-lisp:cons "ClaimAttributePath"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'identity-store-attribute-path))
      (common-lisp:list
       (common-lisp:cons "IdentityStoreAttributePath"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'issuer-url))
      (common-lisp:list
       (common-lisp:cons "IssuerUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'jwks-retrieval-option))
      (common-lisp:list
       (common-lisp:cons "JwksRetrievalOption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          oidc-jwt-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (oidc-jwt-update-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-oidc-jwt-update-configuration-"))
   (claim-attribute-path common-lisp:nil :type
    (common-lisp:or claim-attribute-path common-lisp:null))
   (identity-store-attribute-path common-lisp:nil :type
    (common-lisp:or jmespath common-lisp:null))
   (jwks-retrieval-option common-lisp:nil :type
    (common-lisp:or jwks-retrieval-option common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'oidc-jwt-update-configuration
                    'make-oidc-jwt-update-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          oidc-jwt-update-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          oidc-jwt-update-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'claim-attribute-path))
      (common-lisp:list
       (common-lisp:cons "ClaimAttributePath"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'identity-store-attribute-path))
      (common-lisp:list
       (common-lisp:cons "IdentityStoreAttributePath"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'jwks-retrieval-option))
      (common-lisp:list
       (common-lisp:cons "JwksRetrievalOption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          oidc-jwt-update-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (operation-status-filter (:copier common-lisp:nil)
      (:conc-name "struct-shape-operation-status-filter-"))
   (status common-lisp:nil :type
    (common-lisp:or status-values common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'operation-status-filter 'make-operation-status-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          operation-status-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          operation-status-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          operation-status-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (permission-set (:copier common-lisp:nil)
      (:conc-name "struct-shape-permission-set-"))
   (created-date common-lisp:nil :type (common-lisp:or date common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or permission-set-description common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or permission-set-name common-lisp:null))
   (permission-set-arn common-lisp:nil :type
    (common-lisp:or permission-set-arn common-lisp:null))
   (relay-state common-lisp:nil :type
    (common-lisp:or relay-state common-lisp:null))
   (session-duration common-lisp:nil :type
    (common-lisp:or duration common-lisp:null)))
 (common-lisp:export (common-lisp:list 'permission-set 'make-permission-set))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input permission-set))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input permission-set))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'relay-state))
      (common-lisp:list
       (common-lisp:cons "RelayState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'session-duration))
      (common-lisp:list
       (common-lisp:cons "SessionDuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input permission-set))
   common-lisp:nil))
(common-lisp:deftype permission-set-arn () 'common-lisp:string)
(common-lisp:deftype permission-set-description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype permission-set-list ()
   '(trivial-types:proper-list permission-set-arn))
 (common-lisp:defun make-permission-set-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list permission-set-arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype permission-set-name () 'common-lisp:string)
(common-lisp:deftype permission-set-policy-document () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (permission-set-provisioning-status (:copier common-lisp:nil)
      (:conc-name "struct-shape-permission-set-provisioning-status-"))
   (account-id common-lisp:nil :type
    (common-lisp:or account-id common-lisp:null))
   (created-date common-lisp:nil :type (common-lisp:or date common-lisp:null))
   (failure-reason common-lisp:nil :type
    (common-lisp:or reason common-lisp:null))
   (permission-set-arn common-lisp:nil :type
    (common-lisp:or permission-set-arn common-lisp:null))
   (request-id common-lisp:nil :type (common-lisp:or uuid common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or status-values common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'permission-set-provisioning-status
                    'make-permission-set-provisioning-status))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          permission-set-provisioning-status))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          permission-set-provisioning-status))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failure-reason))
      (common-lisp:list
       (common-lisp:cons "FailureReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-id))
      (common-lisp:list
       (common-lisp:cons "RequestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          permission-set-provisioning-status))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype permission-set-provisioning-status-list ()
   '(trivial-types:proper-list permission-set-provisioning-status-metadata))
 (common-lisp:defun make-permission-set-provisioning-status-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            permission-set-provisioning-status-metadata))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (permission-set-provisioning-status-metadata (:copier common-lisp:nil)
      (:conc-name "struct-shape-permission-set-provisioning-status-metadata-"))
   (created-date common-lisp:nil :type (common-lisp:or date common-lisp:null))
   (request-id common-lisp:nil :type (common-lisp:or uuid common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or status-values common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'permission-set-provisioning-status-metadata
                    'make-permission-set-provisioning-status-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          permission-set-provisioning-status-metadata))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          permission-set-provisioning-status-metadata))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-id))
      (common-lisp:list
       (common-lisp:cons "RequestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          permission-set-provisioning-status-metadata))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (permissions-boundary (:copier common-lisp:nil)
      (:conc-name "struct-shape-permissions-boundary-"))
   (customer-managed-policy-reference common-lisp:nil :type
    (common-lisp:or customer-managed-policy-reference common-lisp:null))
   (managed-policy-arn common-lisp:nil :type
    (common-lisp:or managed-policy-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'permissions-boundary 'make-permissions-boundary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input permissions-boundary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input permissions-boundary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'customer-managed-policy-reference))
      (common-lisp:list
       (common-lisp:cons "CustomerManagedPolicyReference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'managed-policy-arn))
      (common-lisp:list
       (common-lisp:cons "ManagedPolicyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input permissions-boundary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (portal-options (:copier common-lisp:nil)
      (:conc-name "struct-shape-portal-options-"))
   (sign-in-options common-lisp:nil :type
    (common-lisp:or sign-in-options common-lisp:null))
   (visibility common-lisp:nil :type
    (common-lisp:or application-visibility common-lisp:null)))
 (common-lisp:export (common-lisp:list 'portal-options 'make-portal-options))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input portal-options))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input portal-options))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sign-in-options))
      (common-lisp:list
       (common-lisp:cons "SignInOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'visibility))
      (common-lisp:list
       (common-lisp:cons "Visibility"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input portal-options))
   common-lisp:nil))
(common-lisp:deftype principal-id () 'common-lisp:string)
(common-lisp:deftype principal-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (provision-permission-set-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-provision-permission-set-request-"))
   (instance-arn (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null))
   (permission-set-arn (common-lisp:error ":permission-set-arn is required")
    :type (common-lisp:or permission-set-arn common-lisp:null))
   (target-id common-lisp:nil :type
    (common-lisp:or target-id common-lisp:null))
   (target-type (common-lisp:error ":target-type is required") :type
    (common-lisp:or provision-target-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'provision-permission-set-request
                    'make-provision-permission-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          provision-permission-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          provision-permission-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-id))
      (common-lisp:list
       (common-lisp:cons "TargetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-type))
      (common-lisp:list
       (common-lisp:cons "TargetType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          provision-permission-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (provision-permission-set-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-provision-permission-set-response-"))
   (permission-set-provisioning-status common-lisp:nil :type
    (common-lisp:or permission-set-provisioning-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'provision-permission-set-response
                    'make-provision-permission-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          provision-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          provision-permission-set-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'permission-set-provisioning-status))
      (common-lisp:list
       (common-lisp:cons "PermissionSetProvisioningStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          provision-permission-set-response))
   common-lisp:nil))
(common-lisp:deftype provision-target-type () 'common-lisp:string)
(common-lisp:deftype provisioning-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (put-application-access-scope-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-application-access-scope-request-"))
   (application-arn (common-lisp:error ":application-arn is required") :type
    (common-lisp:or application-arn common-lisp:null))
   (authorized-targets common-lisp:nil :type
    (common-lisp:or scope-targets common-lisp:null))
   (scope (common-lisp:error ":scope is required") :type
    (common-lisp:or scope common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-application-access-scope-request
                    'make-put-application-access-scope-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-application-access-scope-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-application-access-scope-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorized-targets))
      (common-lisp:list
       (common-lisp:cons "AuthorizedTargets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scope))
      (common-lisp:list
       (common-lisp:cons "Scope"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-application-access-scope-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-application-assignment-configuration-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-application-assignment-configuration-request-"))
   (application-arn (common-lisp:error ":application-arn is required") :type
    (common-lisp:or application-arn common-lisp:null))
   (assignment-required (common-lisp:error ":assignment-required is required")
    :type (common-lisp:or assignment-required common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-application-assignment-configuration-request
                    'make-put-application-assignment-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-application-assignment-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-application-assignment-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'assignment-required))
      (common-lisp:list
       (common-lisp:cons "AssignmentRequired"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-application-assignment-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-application-assignment-configuration-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-application-assignment-configuration-response-")))
 (common-lisp:export
  (common-lisp:list 'put-application-assignment-configuration-response
                    'make-put-application-assignment-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-application-assignment-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-application-assignment-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-application-assignment-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-application-authentication-method-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-application-authentication-method-request-"))
   (application-arn (common-lisp:error ":application-arn is required") :type
    (common-lisp:or application-arn common-lisp:null))
   (authentication-method
    (common-lisp:error ":authentication-method is required") :type
    (common-lisp:or authentication-method common-lisp:null))
   (authentication-method-type
    (common-lisp:error ":authentication-method-type is required") :type
    (common-lisp:or authentication-method-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-application-authentication-method-request
                    'make-put-application-authentication-method-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-application-authentication-method-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-application-authentication-method-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-method))
      (common-lisp:list
       (common-lisp:cons "AuthenticationMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-method-type))
      (common-lisp:list
       (common-lisp:cons "AuthenticationMethodType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-application-authentication-method-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-application-grant-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-application-grant-request-"))
   (application-arn (common-lisp:error ":application-arn is required") :type
    (common-lisp:or application-arn common-lisp:null))
   (grant (common-lisp:error ":grant is required") :type
    (common-lisp:or grant common-lisp:null))
   (grant-type (common-lisp:error ":grant-type is required") :type
    (common-lisp:or grant-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-application-grant-request
                    'make-put-application-grant-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-application-grant-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-application-grant-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'grant))
      (common-lisp:list
       (common-lisp:cons "Grant"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'grant-type))
      (common-lisp:list
       (common-lisp:cons "GrantType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-application-grant-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-inline-policy-to-permission-set-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-inline-policy-to-permission-set-request-"))
   (inline-policy (common-lisp:error ":inline-policy is required") :type
    (common-lisp:or permission-set-policy-document common-lisp:null))
   (instance-arn (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null))
   (permission-set-arn (common-lisp:error ":permission-set-arn is required")
    :type (common-lisp:or permission-set-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-inline-policy-to-permission-set-request
                    'make-put-inline-policy-to-permission-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-inline-policy-to-permission-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-inline-policy-to-permission-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'inline-policy))
      (common-lisp:list
       (common-lisp:cons "InlinePolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-inline-policy-to-permission-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-inline-policy-to-permission-set-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-inline-policy-to-permission-set-response-")))
 (common-lisp:export
  (common-lisp:list 'put-inline-policy-to-permission-set-response
                    'make-put-inline-policy-to-permission-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-inline-policy-to-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-inline-policy-to-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-inline-policy-to-permission-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-permissions-boundary-to-permission-set-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-permissions-boundary-to-permission-set-request-"))
   (instance-arn (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null))
   (permission-set-arn (common-lisp:error ":permission-set-arn is required")
    :type (common-lisp:or permission-set-arn common-lisp:null))
   (permissions-boundary
    (common-lisp:error ":permissions-boundary is required") :type
    (common-lisp:or permissions-boundary common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-permissions-boundary-to-permission-set-request
                    'make-put-permissions-boundary-to-permission-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-permissions-boundary-to-permission-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-permissions-boundary-to-permission-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'permissions-boundary))
      (common-lisp:list
       (common-lisp:cons "PermissionsBoundary"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-permissions-boundary-to-permission-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-permissions-boundary-to-permission-set-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-put-permissions-boundary-to-permission-set-response-")))
 (common-lisp:export
  (common-lisp:list 'put-permissions-boundary-to-permission-set-response
                    'make-put-permissions-boundary-to-permission-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-permissions-boundary-to-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-permissions-boundary-to-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-permissions-boundary-to-permission-set-response))
   common-lisp:nil))
(common-lisp:deftype reason () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype redirect-uris () '(trivial-types:proper-list uri))
 (common-lisp:defun make-redirect-uris
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list uri))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (refresh-token-grant (:copier common-lisp:nil)
      (:conc-name "struct-shape-refresh-token-grant-")))
 (common-lisp:export
  (common-lisp:list 'refresh-token-grant 'make-refresh-token-grant))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input refresh-token-grant))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input refresh-token-grant))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input refresh-token-grant))
   common-lisp:nil))
(common-lisp:deftype relay-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (sso-admin-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:deftype resource-not-found-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (resource-server-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-resource-server-config-"))
   (scopes common-lisp:nil :type
    (common-lisp:or resource-server-scopes common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-server-config 'make-resource-server-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          resource-server-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          resource-server-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scopes))
      (common-lisp:list
       (common-lisp:cons "Scopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          resource-server-config))
   common-lisp:nil))
(common-lisp:deftype resource-server-scope () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (resource-server-scope-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-resource-server-scope-details-"))
   (detailed-title common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (long-description common-lisp:nil :type
    (common-lisp:or description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-server-scope-details
                    'make-resource-server-scope-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          resource-server-scope-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          resource-server-scope-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'detailed-title))
      (common-lisp:list
       (common-lisp:cons "DetailedTitle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'long-description))
      (common-lisp:list
       (common-lisp:cons "LongDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          resource-server-scope-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype resource-server-scopes () 'common-lisp:hash-table)
 (common-lisp:defun make-resource-server-scopes
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype scope () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (scope-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-scope-details-"))
   (authorized-targets common-lisp:nil :type
    (common-lisp:or scope-targets common-lisp:null))
   (scope (common-lisp:error ":scope is required") :type
    (common-lisp:or scope common-lisp:null)))
 (common-lisp:export (common-lisp:list 'scope-details 'make-scope-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input scope-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input scope-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorized-targets))
      (common-lisp:list
       (common-lisp:cons "AuthorizedTargets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scope))
      (common-lisp:list
       (common-lisp:cons "Scope"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input scope-details))
   common-lisp:nil))
(common-lisp:deftype scope-target () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype scope-targets ()
   '(trivial-types:proper-list scope-target))
 (common-lisp:defun make-scope-targets
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list scope-target))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype scopes () '(trivial-types:proper-list scope-details))
 (common-lisp:defun make-scopes
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list scope-details))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition service-quota-exceeded-exception
     (sso-admin-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-quota-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-quota-exceeded-exception
                    'service-quota-exceeded-exception-message)))
(common-lisp:deftype service-quota-exceeded-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (sign-in-options (:copier common-lisp:nil)
      (:conc-name "struct-shape-sign-in-options-"))
   (application-url common-lisp:nil :type
    (common-lisp:or application-url common-lisp:null))
   (origin (common-lisp:error ":origin is required") :type
    (common-lisp:or sign-in-origin common-lisp:null)))
 (common-lisp:export (common-lisp:list 'sign-in-options 'make-sign-in-options))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input sign-in-options))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input sign-in-options))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-url))
      (common-lisp:list
       (common-lisp:cons "ApplicationUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'origin))
      (common-lisp:list
       (common-lisp:cons "Origin"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input sign-in-options))
   common-lisp:nil))
(common-lisp:deftype sign-in-origin () 'common-lisp:string)
(common-lisp:deftype status-values () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (tag (:copier common-lisp:nil) (:conc-name "struct-shape-tag-"))
   (key (common-lisp:error ":key is required") :type
    (common-lisp:or tag-key common-lisp:null))
   (value (common-lisp:error ":value is required") :type
    (common-lisp:or tag-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag))
   common-lisp:nil))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun make-tag-key-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun make-tag-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-request-"))
   (instance-arn common-lisp:nil :type
    (common-lisp:or instance-arn common-lisp:null))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or taggable-resource-arn common-lisp:null))
   (tags (common-lisp:error ":tags is required") :type
    (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:deftype taggable-resource-arn () 'common-lisp:string)
(common-lisp:deftype target-id () 'common-lisp:string)
(common-lisp:deftype target-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (sso-admin-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       throttling-exception-message)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message)))
(common-lisp:deftype throttling-exception-message () 'common-lisp:string)
(common-lisp:deftype token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (token-exchange-grant (:copier common-lisp:nil)
      (:conc-name "struct-shape-token-exchange-grant-")))
 (common-lisp:export
  (common-lisp:list 'token-exchange-grant 'make-token-exchange-grant))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input token-exchange-grant))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input token-exchange-grant))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input token-exchange-grant))
   common-lisp:nil))
(common-lisp:deftype token-issuer-audience () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype token-issuer-audiences ()
   '(trivial-types:proper-list token-issuer-audience))
 (common-lisp:defun make-token-issuer-audiences
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list token-issuer-audience))
   aws-sdk/generator/shape::members))
(common-lisp:deftype trusted-token-issuer-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (trusted-token-issuer-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-trusted-token-issuer-configuration-"))
   (oidc-jwt-configuration common-lisp:nil :type
    (common-lisp:or oidc-jwt-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'trusted-token-issuer-configuration
                    'make-trusted-token-issuer-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          trusted-token-issuer-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          trusted-token-issuer-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'oidc-jwt-configuration))
      (common-lisp:list
       (common-lisp:cons "OidcJwtConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          trusted-token-issuer-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype trusted-token-issuer-list ()
   '(trivial-types:proper-list trusted-token-issuer-metadata))
 (common-lisp:defun make-trusted-token-issuer-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            trusted-token-issuer-metadata))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (trusted-token-issuer-metadata (:copier common-lisp:nil)
      (:conc-name "struct-shape-trusted-token-issuer-metadata-"))
   (name common-lisp:nil :type
    (common-lisp:or trusted-token-issuer-name common-lisp:null))
   (trusted-token-issuer-arn common-lisp:nil :type
    (common-lisp:or trusted-token-issuer-arn common-lisp:null))
   (trusted-token-issuer-type common-lisp:nil :type
    (common-lisp:or trusted-token-issuer-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'trusted-token-issuer-metadata
                    'make-trusted-token-issuer-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          trusted-token-issuer-metadata))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          trusted-token-issuer-metadata))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'trusted-token-issuer-arn))
      (common-lisp:list
       (common-lisp:cons "TrustedTokenIssuerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'trusted-token-issuer-type))
      (common-lisp:list
       (common-lisp:cons "TrustedTokenIssuerType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          trusted-token-issuer-metadata))
   common-lisp:nil))
(common-lisp:deftype trusted-token-issuer-name () 'common-lisp:string)
(common-lisp:deftype trusted-token-issuer-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (trusted-token-issuer-update-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-trusted-token-issuer-update-configuration-"))
   (oidc-jwt-configuration common-lisp:nil :type
    (common-lisp:or oidc-jwt-update-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'trusted-token-issuer-update-configuration
                    'make-trusted-token-issuer-update-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          trusted-token-issuer-update-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          trusted-token-issuer-update-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'oidc-jwt-configuration))
      (common-lisp:list
       (common-lisp:cons "OidcJwtConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          trusted-token-issuer-update-configuration))
   common-lisp:nil))
(common-lisp:deftype trusted-token-issuer-url () 'common-lisp:string)
(common-lisp:deftype uri () 'common-lisp:string)
(common-lisp:deftype uuid () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-request-"))
   (instance-arn common-lisp:nil :type
    (common-lisp:or instance-arn common-lisp:null))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or taggable-resource-arn common-lisp:null))
   (tag-keys (common-lisp:error ":tag-keys is required") :type
    (common-lisp:or tag-key-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-keys))
      (common-lisp:list
       (common-lisp:cons "TagKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-application-portal-options (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-application-portal-options-"))
   (sign-in-options common-lisp:nil :type
    (common-lisp:or sign-in-options common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-application-portal-options
                    'make-update-application-portal-options))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-application-portal-options))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-application-portal-options))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sign-in-options))
      (common-lisp:list
       (common-lisp:cons "SignInOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-application-portal-options))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-application-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-application-request-"))
   (application-arn (common-lisp:error ":application-arn is required") :type
    (common-lisp:or application-arn common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name-type common-lisp:null))
   (portal-options common-lisp:nil :type
    (common-lisp:or update-application-portal-options common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or application-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-application-request
                    'make-update-application-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-application-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'portal-options))
      (common-lisp:list
       (common-lisp:cons "PortalOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-application-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-application-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-application-response-")))
 (common-lisp:export
  (common-lisp:list 'update-application-response
                    'make-update-application-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-application-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-application-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-application-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-instance-access-control-attribute-configuration-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-update-instance-access-control-attribute-configuration-request-"))
   (instance-access-control-attribute-configuration
    (common-lisp:error
     ":instance-access-control-attribute-configuration is required")
    :type
    (common-lisp:or instance-access-control-attribute-configuration
                    common-lisp:null))
   (instance-arn (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list
   'update-instance-access-control-attribute-configuration-request
   'make-update-instance-access-control-attribute-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-instance-access-control-attribute-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-instance-access-control-attribute-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'instance-access-control-attribute-configuration))
      (common-lisp:list
       (common-lisp:cons "InstanceAccessControlAttributeConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-instance-access-control-attribute-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-instance-access-control-attribute-configuration-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-update-instance-access-control-attribute-configuration-response-")))
 (common-lisp:export
  (common-lisp:list
   'update-instance-access-control-attribute-configuration-response
   'make-update-instance-access-control-attribute-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-instance-access-control-attribute-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-instance-access-control-attribute-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-instance-access-control-attribute-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-instance-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-instance-request-"))
   (instance-arn (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or name-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-instance-request 'make-update-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-instance-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-instance-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-instance-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-instance-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-instance-response-")))
 (common-lisp:export
  (common-lisp:list 'update-instance-response 'make-update-instance-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-instance-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-instance-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-instance-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-permission-set-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-permission-set-request-"))
   (description common-lisp:nil :type
    (common-lisp:or permission-set-description common-lisp:null))
   (instance-arn (common-lisp:error ":instance-arn is required") :type
    (common-lisp:or instance-arn common-lisp:null))
   (permission-set-arn (common-lisp:error ":permission-set-arn is required")
    :type (common-lisp:or permission-set-arn common-lisp:null))
   (relay-state common-lisp:nil :type
    (common-lisp:or relay-state common-lisp:null))
   (session-duration common-lisp:nil :type
    (common-lisp:or duration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-permission-set-request
                    'make-update-permission-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-permission-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-permission-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "InstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-set-arn))
      (common-lisp:list
       (common-lisp:cons "PermissionSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'relay-state))
      (common-lisp:list
       (common-lisp:cons "RelayState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'session-duration))
      (common-lisp:list
       (common-lisp:cons "SessionDuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-permission-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-permission-set-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-permission-set-response-")))
 (common-lisp:export
  (common-lisp:list 'update-permission-set-response
                    'make-update-permission-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-permission-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-permission-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-trusted-token-issuer-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-trusted-token-issuer-request-"))
   (name common-lisp:nil :type
    (common-lisp:or trusted-token-issuer-name common-lisp:null))
   (trusted-token-issuer-arn
    (common-lisp:error ":trusted-token-issuer-arn is required") :type
    (common-lisp:or trusted-token-issuer-arn common-lisp:null))
   (trusted-token-issuer-configuration common-lisp:nil :type
    (common-lisp:or trusted-token-issuer-update-configuration
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-trusted-token-issuer-request
                    'make-update-trusted-token-issuer-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-trusted-token-issuer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-trusted-token-issuer-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'trusted-token-issuer-arn))
      (common-lisp:list
       (common-lisp:cons "TrustedTokenIssuerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'trusted-token-issuer-configuration))
      (common-lisp:list
       (common-lisp:cons "TrustedTokenIssuerConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-trusted-token-issuer-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-trusted-token-issuer-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-trusted-token-issuer-response-")))
 (common-lisp:export
  (common-lisp:list 'update-trusted-token-issuer-response
                    'make-update-trusted-token-issuer-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-trusted-token-issuer-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-trusted-token-issuer-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-trusted-token-issuer-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (sso-admin-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       validation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-message)))
(common-lisp:deftype validation-exception-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun attach-customer-managed-policy-reference-to-permission-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key customer-managed-policy-reference
                     instance-arn permission-set-arn)
   (common-lisp:declare
    (common-lisp:ignorable customer-managed-policy-reference instance-arn
     permission-set-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-attach-customer-managed-policy-reference-to-permission-set-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AttachCustomerManagedPolicyReferenceToPermissionSet"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export
  'attach-customer-managed-policy-reference-to-permission-set))
(common-lisp:progn
 (common-lisp:defun attach-managed-policy-to-permission-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn managed-policy-arn
                     permission-set-arn)
   (common-lisp:declare
    (common-lisp:ignorable instance-arn managed-policy-arn permission-set-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-attach-managed-policy-to-permission-set-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AttachManagedPolicyToPermissionSet"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'attach-managed-policy-to-permission-set))
(common-lisp:progn
 (common-lisp:defun create-account-assignment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn permission-set-arn
                     principal-id principal-type target-id target-type)
   (common-lisp:declare
    (common-lisp:ignorable instance-arn permission-set-arn principal-id
     principal-type target-id target-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-account-assignment-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateAccountAssignment"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-account-assignment))
(common-lisp:progn
 (common-lisp:defun create-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-provider-arn client-token
                     description instance-arn name portal-options status tags)
   (common-lisp:declare
    (common-lisp:ignorable application-provider-arn client-token description
     instance-arn name portal-options status tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-application-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateApplication"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-application))
(common-lisp:progn
 (common-lisp:defun create-application-assignment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-arn principal-id
                     principal-type)
   (common-lisp:declare
    (common-lisp:ignorable application-arn principal-id principal-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-application-assignment-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateApplicationAssignment"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-application-assignment))
(common-lisp:progn
 (common-lisp:defun create-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token name tags)
   (common-lisp:declare (common-lisp:ignorable client-token name tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-instance-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateInstance"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-instance))
(common-lisp:progn
 (common-lisp:defun create-instance-access-control-attribute-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key
                     instance-access-control-attribute-configuration
                     instance-arn)
   (common-lisp:declare
    (common-lisp:ignorable instance-access-control-attribute-configuration
     instance-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-instance-access-control-attribute-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateInstanceAccessControlAttributeConfiguration"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-instance-access-control-attribute-configuration))
(common-lisp:progn
 (common-lisp:defun create-permission-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key description instance-arn name relay-state
                     session-duration tags)
   (common-lisp:declare
    (common-lisp:ignorable description instance-arn name relay-state
     session-duration tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-permission-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreatePermissionSet"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-permission-set))
(common-lisp:progn
 (common-lisp:defun create-trusted-token-issuer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token instance-arn name tags
                     trusted-token-issuer-configuration
                     trusted-token-issuer-type)
   (common-lisp:declare
    (common-lisp:ignorable client-token instance-arn name tags
     trusted-token-issuer-configuration trusted-token-issuer-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-trusted-token-issuer-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateTrustedTokenIssuer"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-trusted-token-issuer))
(common-lisp:progn
 (common-lisp:defun delete-account-assignment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn permission-set-arn
                     principal-id principal-type target-id target-type)
   (common-lisp:declare
    (common-lisp:ignorable instance-arn permission-set-arn principal-id
     principal-type target-id target-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-account-assignment-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteAccountAssignment"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-account-assignment))
(common-lisp:progn
 (common-lisp:defun delete-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-arn)
   (common-lisp:declare (common-lisp:ignorable application-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-application-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteApplication"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-application))
(common-lisp:progn
 (common-lisp:defun delete-application-access-scope
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-arn scope)
   (common-lisp:declare (common-lisp:ignorable application-arn scope))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-application-access-scope-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteApplicationAccessScope"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-application-access-scope))
(common-lisp:progn
 (common-lisp:defun delete-application-assignment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-arn principal-id
                     principal-type)
   (common-lisp:declare
    (common-lisp:ignorable application-arn principal-id principal-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-application-assignment-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteApplicationAssignment"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-application-assignment))
(common-lisp:progn
 (common-lisp:defun delete-application-authentication-method
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-arn
                     authentication-method-type)
   (common-lisp:declare
    (common-lisp:ignorable application-arn authentication-method-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-application-authentication-method-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteApplicationAuthenticationMethod"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-application-authentication-method))
(common-lisp:progn
 (common-lisp:defun delete-application-grant
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-arn grant-type)
   (common-lisp:declare (common-lisp:ignorable application-arn grant-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-application-grant-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteApplicationGrant"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-application-grant))
(common-lisp:progn
 (common-lisp:defun delete-inline-policy-from-permission-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn permission-set-arn)
   (common-lisp:declare
    (common-lisp:ignorable instance-arn permission-set-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-inline-policy-from-permission-set-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteInlinePolicyFromPermissionSet"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-inline-policy-from-permission-set))
(common-lisp:progn
 (common-lisp:defun delete-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn)
   (common-lisp:declare (common-lisp:ignorable instance-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-instance-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteInstance"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-instance))
(common-lisp:progn
 (common-lisp:defun delete-instance-access-control-attribute-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn)
   (common-lisp:declare (common-lisp:ignorable instance-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-instance-access-control-attribute-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteInstanceAccessControlAttributeConfiguration"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-instance-access-control-attribute-configuration))
(common-lisp:progn
 (common-lisp:defun delete-permission-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn permission-set-arn)
   (common-lisp:declare
    (common-lisp:ignorable instance-arn permission-set-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-permission-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeletePermissionSet"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-permission-set))
(common-lisp:progn
 (common-lisp:defun delete-permissions-boundary-from-permission-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn permission-set-arn)
   (common-lisp:declare
    (common-lisp:ignorable instance-arn permission-set-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-permissions-boundary-from-permission-set-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeletePermissionsBoundaryFromPermissionSet"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-permissions-boundary-from-permission-set))
(common-lisp:progn
 (common-lisp:defun delete-trusted-token-issuer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key trusted-token-issuer-arn)
   (common-lisp:declare (common-lisp:ignorable trusted-token-issuer-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-trusted-token-issuer-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteTrustedTokenIssuer"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-trusted-token-issuer))
(common-lisp:progn
 (common-lisp:defun describe-account-assignment-creation-status
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-assignment-creation-request-id
                     instance-arn)
   (common-lisp:declare
    (common-lisp:ignorable account-assignment-creation-request-id
     instance-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-account-assignment-creation-status-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeAccountAssignmentCreationStatus"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-account-assignment-creation-status))
(common-lisp:progn
 (common-lisp:defun describe-account-assignment-deletion-status
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-assignment-deletion-request-id
                     instance-arn)
   (common-lisp:declare
    (common-lisp:ignorable account-assignment-deletion-request-id
     instance-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-account-assignment-deletion-status-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeAccountAssignmentDeletionStatus"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-account-assignment-deletion-status))
(common-lisp:progn
 (common-lisp:defun describe-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-arn)
   (common-lisp:declare (common-lisp:ignorable application-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-application-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeApplication"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-application))
(common-lisp:progn
 (common-lisp:defun describe-application-assignment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-arn principal-id
                     principal-type)
   (common-lisp:declare
    (common-lisp:ignorable application-arn principal-id principal-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-application-assignment-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeApplicationAssignment"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-application-assignment))
(common-lisp:progn
 (common-lisp:defun describe-application-provider
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-provider-arn)
   (common-lisp:declare (common-lisp:ignorable application-provider-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-application-provider-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeApplicationProvider"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-application-provider))
(common-lisp:progn
 (common-lisp:defun describe-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn)
   (common-lisp:declare (common-lisp:ignorable instance-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-instance-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeInstance"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-instance))
(common-lisp:progn
 (common-lisp:defun describe-instance-access-control-attribute-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn)
   (common-lisp:declare (common-lisp:ignorable instance-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-instance-access-control-attribute-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeInstanceAccessControlAttributeConfiguration"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-instance-access-control-attribute-configuration))
(common-lisp:progn
 (common-lisp:defun describe-permission-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn permission-set-arn)
   (common-lisp:declare
    (common-lisp:ignorable instance-arn permission-set-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-permission-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribePermissionSet"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-permission-set))
(common-lisp:progn
 (common-lisp:defun describe-permission-set-provisioning-status
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn
                     provision-permission-set-request-id)
   (common-lisp:declare
    (common-lisp:ignorable instance-arn provision-permission-set-request-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-permission-set-provisioning-status-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribePermissionSetProvisioningStatus"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-permission-set-provisioning-status))
(common-lisp:progn
 (common-lisp:defun describe-trusted-token-issuer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key trusted-token-issuer-arn)
   (common-lisp:declare (common-lisp:ignorable trusted-token-issuer-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-trusted-token-issuer-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeTrustedTokenIssuer"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-trusted-token-issuer))
(common-lisp:progn
 (common-lisp:defun detach-customer-managed-policy-reference-from-permission-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key customer-managed-policy-reference
                     instance-arn permission-set-arn)
   (common-lisp:declare
    (common-lisp:ignorable customer-managed-policy-reference instance-arn
     permission-set-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-detach-customer-managed-policy-reference-from-permission-set-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DetachCustomerManagedPolicyReferenceFromPermissionSet"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export
  'detach-customer-managed-policy-reference-from-permission-set))
(common-lisp:progn
 (common-lisp:defun detach-managed-policy-from-permission-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn managed-policy-arn
                     permission-set-arn)
   (common-lisp:declare
    (common-lisp:ignorable instance-arn managed-policy-arn permission-set-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-detach-managed-policy-from-permission-set-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DetachManagedPolicyFromPermissionSet"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'detach-managed-policy-from-permission-set))
(common-lisp:progn
 (common-lisp:defun get-application-access-scope
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-arn scope)
   (common-lisp:declare (common-lisp:ignorable application-arn scope))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-application-access-scope-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetApplicationAccessScope"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-application-access-scope))
(common-lisp:progn
 (common-lisp:defun get-application-assignment-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-arn)
   (common-lisp:declare (common-lisp:ignorable application-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-application-assignment-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetApplicationAssignmentConfiguration"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-application-assignment-configuration))
(common-lisp:progn
 (common-lisp:defun get-application-authentication-method
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-arn
                     authentication-method-type)
   (common-lisp:declare
    (common-lisp:ignorable application-arn authentication-method-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-application-authentication-method-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetApplicationAuthenticationMethod"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-application-authentication-method))
(common-lisp:progn
 (common-lisp:defun get-application-grant
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-arn grant-type)
   (common-lisp:declare (common-lisp:ignorable application-arn grant-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-application-grant-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetApplicationGrant"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-application-grant))
(common-lisp:progn
 (common-lisp:defun get-inline-policy-for-permission-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn permission-set-arn)
   (common-lisp:declare
    (common-lisp:ignorable instance-arn permission-set-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-inline-policy-for-permission-set-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetInlinePolicyForPermissionSet"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-inline-policy-for-permission-set))
(common-lisp:progn
 (common-lisp:defun get-permissions-boundary-for-permission-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn permission-set-arn)
   (common-lisp:declare
    (common-lisp:ignorable instance-arn permission-set-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-permissions-boundary-for-permission-set-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetPermissionsBoundaryForPermissionSet"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-permissions-boundary-for-permission-set))
(common-lisp:progn
 (common-lisp:defun list-account-assignment-creation-status
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter instance-arn max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable filter instance-arn max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-account-assignment-creation-status-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListAccountAssignmentCreationStatus"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-account-assignment-creation-status))
(common-lisp:progn
 (common-lisp:defun list-account-assignment-deletion-status
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter instance-arn max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable filter instance-arn max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-account-assignment-deletion-status-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListAccountAssignmentDeletionStatus"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-account-assignment-deletion-status))
(common-lisp:progn
 (common-lisp:defun list-account-assignments
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id instance-arn max-results
                     next-token permission-set-arn)
   (common-lisp:declare
    (common-lisp:ignorable account-id instance-arn max-results next-token
     permission-set-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-account-assignments-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListAccountAssignments"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-account-assignments))
(common-lisp:progn
 (common-lisp:defun list-account-assignments-for-principal
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter instance-arn max-results
                     next-token principal-id principal-type)
   (common-lisp:declare
    (common-lisp:ignorable filter instance-arn max-results next-token
     principal-id principal-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-account-assignments-for-principal-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListAccountAssignmentsForPrincipal"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-account-assignments-for-principal))
(common-lisp:progn
 (common-lisp:defun list-accounts-for-provisioned-permission-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn max-results next-token
                     permission-set-arn provisioning-status)
   (common-lisp:declare
    (common-lisp:ignorable instance-arn max-results next-token
     permission-set-arn provisioning-status))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-accounts-for-provisioned-permission-set-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListAccountsForProvisionedPermissionSet"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-accounts-for-provisioned-permission-set))
(common-lisp:progn
 (common-lisp:defun list-application-access-scopes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-arn max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable application-arn max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-application-access-scopes-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListApplicationAccessScopes"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-application-access-scopes))
(common-lisp:progn
 (common-lisp:defun list-application-assignments
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-arn max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable application-arn max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-application-assignments-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListApplicationAssignments"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-application-assignments))
(common-lisp:progn
 (common-lisp:defun list-application-assignments-for-principal
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter instance-arn max-results
                     next-token principal-id principal-type)
   (common-lisp:declare
    (common-lisp:ignorable filter instance-arn max-results next-token
     principal-id principal-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-application-assignments-for-principal-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListApplicationAssignmentsForPrincipal"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-application-assignments-for-principal))
(common-lisp:progn
 (common-lisp:defun list-application-authentication-methods
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-arn next-token)
   (common-lisp:declare (common-lisp:ignorable application-arn next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-application-authentication-methods-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListApplicationAuthenticationMethods"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-application-authentication-methods))
(common-lisp:progn
 (common-lisp:defun list-application-grants
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-arn next-token)
   (common-lisp:declare (common-lisp:ignorable application-arn next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-application-grants-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListApplicationGrants"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-application-grants))
(common-lisp:progn
 (common-lisp:defun list-application-providers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-application-providers-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListApplicationProviders"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-application-providers))
(common-lisp:progn
 (common-lisp:defun list-applications
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter instance-arn max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable filter instance-arn max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-applications-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListApplications"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-applications))
(common-lisp:progn
 (common-lisp:defun list-customer-managed-policy-references-in-permission-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn max-results next-token
                     permission-set-arn)
   (common-lisp:declare
    (common-lisp:ignorable instance-arn max-results next-token
     permission-set-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-customer-managed-policy-references-in-permission-set-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListCustomerManagedPolicyReferencesInPermissionSet"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export
  'list-customer-managed-policy-references-in-permission-set))
(common-lisp:progn
 (common-lisp:defun list-instances
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-instances-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListInstances"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-instances))
(common-lisp:progn
 (common-lisp:defun list-managed-policies-in-permission-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn max-results next-token
                     permission-set-arn)
   (common-lisp:declare
    (common-lisp:ignorable instance-arn max-results next-token
     permission-set-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-managed-policies-in-permission-set-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListManagedPoliciesInPermissionSet"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-managed-policies-in-permission-set))
(common-lisp:progn
 (common-lisp:defun list-permission-set-provisioning-status
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter instance-arn max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable filter instance-arn max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-permission-set-provisioning-status-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListPermissionSetProvisioningStatus"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-permission-set-provisioning-status))
(common-lisp:progn
 (common-lisp:defun list-permission-sets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable instance-arn max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-permission-sets-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListPermissionSets"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-permission-sets))
(common-lisp:progn
 (common-lisp:defun list-permission-sets-provisioned-to-account
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id instance-arn max-results
                     next-token provisioning-status)
   (common-lisp:declare
    (common-lisp:ignorable account-id instance-arn max-results next-token
     provisioning-status))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-permission-sets-provisioned-to-account-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListPermissionSetsProvisionedToAccount"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-permission-sets-provisioned-to-account))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn next-token resource-arn)
   (common-lisp:declare
    (common-lisp:ignorable instance-arn next-token resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListTagsForResource"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun list-trusted-token-issuers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable instance-arn max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-trusted-token-issuers-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListTrustedTokenIssuers"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-trusted-token-issuers))
(common-lisp:progn
 (common-lisp:defun provision-permission-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn permission-set-arn target-id
                     target-type)
   (common-lisp:declare
    (common-lisp:ignorable instance-arn permission-set-arn target-id
     target-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-provision-permission-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ProvisionPermissionSet"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'provision-permission-set))
(common-lisp:progn
 (common-lisp:defun put-application-access-scope
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-arn authorized-targets scope)
   (common-lisp:declare
    (common-lisp:ignorable application-arn authorized-targets scope))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-application-access-scope-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "PutApplicationAccessScope"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-application-access-scope))
(common-lisp:progn
 (common-lisp:defun put-application-assignment-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-arn assignment-required)
   (common-lisp:declare
    (common-lisp:ignorable application-arn assignment-required))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-application-assignment-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "PutApplicationAssignmentConfiguration"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-application-assignment-configuration))
(common-lisp:progn
 (common-lisp:defun put-application-authentication-method
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-arn authentication-method
                     authentication-method-type)
   (common-lisp:declare
    (common-lisp:ignorable application-arn authentication-method
     authentication-method-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-application-authentication-method-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "PutApplicationAuthenticationMethod"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-application-authentication-method))
(common-lisp:progn
 (common-lisp:defun put-application-grant
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-arn grant grant-type)
   (common-lisp:declare
    (common-lisp:ignorable application-arn grant grant-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-application-grant-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "PutApplicationGrant"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-application-grant))
(common-lisp:progn
 (common-lisp:defun put-inline-policy-to-permission-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key inline-policy instance-arn
                     permission-set-arn)
   (common-lisp:declare
    (common-lisp:ignorable inline-policy instance-arn permission-set-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-inline-policy-to-permission-set-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "PutInlinePolicyToPermissionSet"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-inline-policy-to-permission-set))
(common-lisp:progn
 (common-lisp:defun put-permissions-boundary-to-permission-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn permission-set-arn
                     permissions-boundary)
   (common-lisp:declare
    (common-lisp:ignorable instance-arn permission-set-arn
     permissions-boundary))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-permissions-boundary-to-permission-set-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "PutPermissionsBoundaryToPermissionSet"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-permissions-boundary-to-permission-set))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable instance-arn resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "TagResource"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn resource-arn tag-keys)
   (common-lisp:declare
    (common-lisp:ignorable instance-arn resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UntagResource"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-arn description name
                     portal-options status)
   (common-lisp:declare
    (common-lisp:ignorable application-arn description name portal-options
     status))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-application-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateApplication"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-application))
(common-lisp:progn
 (common-lisp:defun update-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn name)
   (common-lisp:declare (common-lisp:ignorable instance-arn name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-instance-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateInstance"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-instance))
(common-lisp:progn
 (common-lisp:defun update-instance-access-control-attribute-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key
                     instance-access-control-attribute-configuration
                     instance-arn)
   (common-lisp:declare
    (common-lisp:ignorable instance-access-control-attribute-configuration
     instance-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-instance-access-control-attribute-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateInstanceAccessControlAttributeConfiguration"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-instance-access-control-attribute-configuration))
(common-lisp:progn
 (common-lisp:defun update-permission-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key description instance-arn
                     permission-set-arn relay-state session-duration)
   (common-lisp:declare
    (common-lisp:ignorable description instance-arn permission-set-arn
     relay-state session-duration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-permission-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdatePermissionSet"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-permission-set))
(common-lisp:progn
 (common-lisp:defun update-trusted-token-issuer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name trusted-token-issuer-arn
                     trusted-token-issuer-configuration)
   (common-lisp:declare
    (common-lisp:ignorable name trusted-token-issuer-arn
     trusted-token-issuer-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-trusted-token-issuer-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sso-admin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateTrustedTokenIssuer"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-trusted-token-issuer))
