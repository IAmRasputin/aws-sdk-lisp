;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/ram/api
  (:use)
  (:nicknames #:aws/ram)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/ram/api)
(common-lisp:progn
 (common-lisp:defclass ram-request (aws-sdk/request:request) common-lisp:nil
                       (:default-initargs :service "ram"))
 (common-lisp:export 'ram-request))
(common-lisp:progn
 (common-lisp:define-condition ram-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'ram-error))
(common-lisp:defvar *error-map*
  '(("IdempotentParameterMismatchException"
     . idempotent-parameter-mismatch-exception)
    ("InvalidClientTokenException" . invalid-client-token-exception)
    ("InvalidMaxResultsException" . invalid-max-results-exception)
    ("InvalidNextTokenException" . invalid-next-token-exception)
    ("InvalidParameterException" . invalid-parameter-exception)
    ("InvalidResourceTypeException" . invalid-resource-type-exception)
    ("InvalidStateTransitionException" . invalid-state-transition-exception)
    ("MalformedArnException" . malformed-arn-exception)
    ("MissingRequiredParameterException"
     . missing-required-parameter-exception)
    ("OperationNotPermittedException" . operation-not-permitted-exception)
    ("ResourceArnNotFoundException" . resource-arn-not-found-exception)
    ("ResourceShareInvitationAlreadyAcceptedException"
     . resource-share-invitation-already-accepted-exception)
    ("ResourceShareInvitationAlreadyRejectedException"
     . resource-share-invitation-already-rejected-exception)
    ("ResourceShareInvitationArnNotFoundException"
     . resource-share-invitation-arn-not-found-exception)
    ("ResourceShareInvitationExpiredException"
     . resource-share-invitation-expired-exception)
    ("ResourceShareLimitExceededException"
     . resource-share-limit-exceeded-exception)
    ("ServerInternalException" . server-internal-exception)
    ("ServiceUnavailableException" . service-unavailable-exception)
    ("TagLimitExceededException" . tag-limit-exceeded-exception)
    ("TagPolicyViolationException" . tag-policy-violation-exception)
    ("ThrottlingException" . throttling-exception)
    ("UnknownResourceException" . unknown-resource-exception)))
(common-lisp:progn
 (common-lisp:defstruct
     (accept-resource-share-invitation-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-accept-resource-share-invitation-request-"))
   (resource-share-invitation-arn
    (common-lisp:error ":resourceshareinvitationarn is required") :type
    (common-lisp:or string common-lisp:null))
   (client-token common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'accept-resource-share-invitation-request
                    'make-accept-resource-share-invitation-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          accept-resource-share-invitation-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          accept-resource-share-invitation-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resource-share-invitation-arn))
      (common-lisp:list
       (common-lisp:cons "resourceShareInvitationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          accept-resource-share-invitation-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (accept-resource-share-invitation-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-accept-resource-share-invitation-response-"))
   (resource-share-invitation common-lisp:nil :type
    (common-lisp:or resource-share-invitation common-lisp:null))
   (client-token common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'accept-resource-share-invitation-response
                    'make-accept-resource-share-invitation-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          accept-resource-share-invitation-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          accept-resource-share-invitation-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resource-share-invitation))
      (common-lisp:list
       (common-lisp:cons "resourceShareInvitation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          accept-resource-share-invitation-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-resource-share-permission-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-associate-resource-share-permission-request-"))
   (resource-share-arn (common-lisp:error ":resourcesharearn is required")
    :type (common-lisp:or string common-lisp:null))
   (permission-arn (common-lisp:error ":permissionarn is required") :type
    (common-lisp:or string common-lisp:null))
   (replace common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (client-token common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (permission-version common-lisp:nil :type
    (common-lisp:or integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'associate-resource-share-permission-request
                    'make-associate-resource-share-permission-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-resource-share-permission-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-resource-share-permission-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-share-arn))
      (common-lisp:list
       (common-lisp:cons "resourceShareArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-arn))
      (common-lisp:list
       (common-lisp:cons "permissionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replace))
      (common-lisp:list
       (common-lisp:cons "replace"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-version))
      (common-lisp:list
       (common-lisp:cons "permissionVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-resource-share-permission-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-resource-share-permission-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-associate-resource-share-permission-response-"))
   (return-value common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (client-token common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'associate-resource-share-permission-response
                    'make-associate-resource-share-permission-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-resource-share-permission-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-resource-share-permission-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'return-value))
      (common-lisp:list
       (common-lisp:cons "returnValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-resource-share-permission-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-resource-share-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-associate-resource-share-request-"))
   (resource-share-arn (common-lisp:error ":resourcesharearn is required")
    :type (common-lisp:or string common-lisp:null))
   (resource-arns common-lisp:nil :type
    (common-lisp:or resource-arn-list common-lisp:null))
   (principals common-lisp:nil :type
    (common-lisp:or principal-arn-or-id-list common-lisp:null))
   (client-token common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'associate-resource-share-request
                    'make-associate-resource-share-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-resource-share-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-resource-share-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-share-arn))
      (common-lisp:list
       (common-lisp:cons "resourceShareArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arns))
      (common-lisp:list
       (common-lisp:cons "resourceArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principals))
      (common-lisp:list
       (common-lisp:cons "principals"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-resource-share-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-resource-share-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-associate-resource-share-response-"))
   (resource-share-associations common-lisp:nil :type
    (common-lisp:or resource-share-association-list common-lisp:null))
   (client-token common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'associate-resource-share-response
                    'make-associate-resource-share-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-resource-share-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-resource-share-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resource-share-associations))
      (common-lisp:list
       (common-lisp:cons "resourceShareAssociations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-resource-share-response))
   common-lisp:nil))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct
     (create-resource-share-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-resource-share-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or string common-lisp:null))
   (resource-arns common-lisp:nil :type
    (common-lisp:or resource-arn-list common-lisp:null))
   (principals common-lisp:nil :type
    (common-lisp:or principal-arn-or-id-list common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (allow-external-principals common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (client-token common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (permission-arns common-lisp:nil :type
    (common-lisp:or permission-arn-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-resource-share-request
                    'make-create-resource-share-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-share-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-share-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arns))
      (common-lisp:list
       (common-lisp:cons "resourceArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principals))
      (common-lisp:list
       (common-lisp:cons "principals"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'allow-external-principals))
      (common-lisp:list
       (common-lisp:cons "allowExternalPrincipals"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-arns))
      (common-lisp:list
       (common-lisp:cons "permissionArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-share-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-resource-share-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-resource-share-response-"))
   (resource-share common-lisp:nil :type
    (common-lisp:or resource-share common-lisp:null))
   (client-token common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-resource-share-response
                    'make-create-resource-share-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-share-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-share-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-share))
      (common-lisp:list
       (common-lisp:cons "resourceShare"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-share-response))
   common-lisp:nil))
(common-lisp:deftype date-time () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (delete-resource-share-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-resource-share-request-"))
   (resource-share-arn (common-lisp:error ":resourcesharearn is required")
    :type (common-lisp:or string common-lisp:null))
   (client-token common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-resource-share-request
                    'make-delete-resource-share-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-share-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-share-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-share-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-resource-share-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-resource-share-response-"))
   (return-value common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (client-token common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-resource-share-response
                    'make-delete-resource-share-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-share-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-share-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'return-value))
      (common-lisp:list
       (common-lisp:cons "returnValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-share-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-resource-share-permission-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-disassociate-resource-share-permission-request-"))
   (resource-share-arn (common-lisp:error ":resourcesharearn is required")
    :type (common-lisp:or string common-lisp:null))
   (permission-arn (common-lisp:error ":permissionarn is required") :type
    (common-lisp:or string common-lisp:null))
   (client-token common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disassociate-resource-share-permission-request
                    'make-disassociate-resource-share-permission-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-resource-share-permission-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-resource-share-permission-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-share-arn))
      (common-lisp:list
       (common-lisp:cons "resourceShareArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-arn))
      (common-lisp:list
       (common-lisp:cons "permissionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-resource-share-permission-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-resource-share-permission-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-disassociate-resource-share-permission-response-"))
   (return-value common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (client-token common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disassociate-resource-share-permission-response
                    'make-disassociate-resource-share-permission-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-resource-share-permission-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-resource-share-permission-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'return-value))
      (common-lisp:list
       (common-lisp:cons "returnValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-resource-share-permission-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-resource-share-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-disassociate-resource-share-request-"))
   (resource-share-arn (common-lisp:error ":resourcesharearn is required")
    :type (common-lisp:or string common-lisp:null))
   (resource-arns common-lisp:nil :type
    (common-lisp:or resource-arn-list common-lisp:null))
   (principals common-lisp:nil :type
    (common-lisp:or principal-arn-or-id-list common-lisp:null))
   (client-token common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disassociate-resource-share-request
                    'make-disassociate-resource-share-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-resource-share-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-resource-share-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-share-arn))
      (common-lisp:list
       (common-lisp:cons "resourceShareArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arns))
      (common-lisp:list
       (common-lisp:cons "resourceArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principals))
      (common-lisp:list
       (common-lisp:cons "principals"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-resource-share-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-resource-share-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-disassociate-resource-share-response-"))
   (resource-share-associations common-lisp:nil :type
    (common-lisp:or resource-share-association-list common-lisp:null))
   (client-token common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disassociate-resource-share-response
                    'make-disassociate-resource-share-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-resource-share-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-resource-share-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resource-share-associations))
      (common-lisp:list
       (common-lisp:cons "resourceShareAssociations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-resource-share-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (enable-sharing-with-aws-organization-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-enable-sharing-with-aws-organization-request-")))
 (common-lisp:export
  (common-lisp:list 'enable-sharing-with-aws-organization-request
                    'make-enable-sharing-with-aws-organization-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          enable-sharing-with-aws-organization-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          enable-sharing-with-aws-organization-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          enable-sharing-with-aws-organization-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (enable-sharing-with-aws-organization-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-enable-sharing-with-aws-organization-response-"))
   (return-value common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'enable-sharing-with-aws-organization-response
                    'make-enable-sharing-with-aws-organization-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          enable-sharing-with-aws-organization-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          enable-sharing-with-aws-organization-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'return-value))
      (common-lisp:list
       (common-lisp:cons "returnValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          enable-sharing-with-aws-organization-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-permission-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-permission-request-"))
   (permission-arn (common-lisp:error ":permissionarn is required") :type
    (common-lisp:or string common-lisp:null))
   (permission-version common-lisp:nil :type
    (common-lisp:or integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-permission-request 'make-get-permission-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-permission-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-permission-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-arn))
      (common-lisp:list
       (common-lisp:cons "permissionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-version))
      (common-lisp:list
       (common-lisp:cons "permissionVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-permission-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-permission-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-permission-response-"))
   (permission common-lisp:nil :type
    (common-lisp:or resource-share-permission-detail common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-permission-response 'make-get-permission-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-permission-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-permission-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission))
      (common-lisp:list
       (common-lisp:cons "permission"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-permission-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-resource-policies-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-resource-policies-request-"))
   (resource-arns (common-lisp:error ":resourcearns is required") :type
    (common-lisp:or resource-arn-list common-lisp:null))
   (principal common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-resource-policies-request
                    'make-get-resource-policies-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-policies-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-policies-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arns))
      (common-lisp:list
       (common-lisp:cons "resourceArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal))
      (common-lisp:list
       (common-lisp:cons "principal"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-policies-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-resource-policies-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-resource-policies-response-"))
   (policies common-lisp:nil :type
    (common-lisp:or policy-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-resource-policies-response
                    'make-get-resource-policies-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-policies-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-policies-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policies))
      (common-lisp:list
       (common-lisp:cons "policies"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-policies-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-resource-share-associations-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-resource-share-associations-request-"))
   (association-type (common-lisp:error ":associationtype is required") :type
    (common-lisp:or resource-share-association-type common-lisp:null))
   (resource-share-arns common-lisp:nil :type
    (common-lisp:or resource-share-arn-list common-lisp:null))
   (resource-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (principal common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (association-status common-lisp:nil :type
    (common-lisp:or resource-share-association-status common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-resource-share-associations-request
                    'make-get-resource-share-associations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-share-associations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-share-associations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'association-type))
      (common-lisp:list
       (common-lisp:cons "associationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-share-arns))
      (common-lisp:list
       (common-lisp:cons "resourceShareArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "resourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal))
      (common-lisp:list
       (common-lisp:cons "principal"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'association-status))
      (common-lisp:list
       (common-lisp:cons "associationStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-share-associations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-resource-share-associations-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-resource-share-associations-response-"))
   (resource-share-associations common-lisp:nil :type
    (common-lisp:or resource-share-association-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-resource-share-associations-response
                    'make-get-resource-share-associations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-share-associations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-share-associations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resource-share-associations))
      (common-lisp:list
       (common-lisp:cons "resourceShareAssociations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-share-associations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-resource-share-invitations-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-resource-share-invitations-request-"))
   (resource-share-invitation-arns common-lisp:nil :type
    (common-lisp:or resource-share-invitation-arn-list common-lisp:null))
   (resource-share-arns common-lisp:nil :type
    (common-lisp:or resource-share-arn-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-resource-share-invitations-request
                    'make-get-resource-share-invitations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-share-invitations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-share-invitations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resource-share-invitation-arns))
      (common-lisp:list
       (common-lisp:cons "resourceShareInvitationArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-share-arns))
      (common-lisp:list
       (common-lisp:cons "resourceShareArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-share-invitations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-resource-share-invitations-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-resource-share-invitations-response-"))
   (resource-share-invitations common-lisp:nil :type
    (common-lisp:or resource-share-invitation-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-resource-share-invitations-response
                    'make-get-resource-share-invitations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-share-invitations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-share-invitations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resource-share-invitations))
      (common-lisp:list
       (common-lisp:cons "resourceShareInvitations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-share-invitations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-resource-shares-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-resource-shares-request-"))
   (resource-share-arns common-lisp:nil :type
    (common-lisp:or resource-share-arn-list common-lisp:null))
   (resource-share-status common-lisp:nil :type
    (common-lisp:or resource-share-status common-lisp:null))
   (resource-owner (common-lisp:error ":resourceowner is required") :type
    (common-lisp:or resource-owner common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tag-filters common-lisp:nil :type
    (common-lisp:or tag-filters common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (permission-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-resource-shares-request
                    'make-get-resource-shares-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-shares-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-shares-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-share-arns))
      (common-lisp:list
       (common-lisp:cons "resourceShareArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resource-share-status))
      (common-lisp:list
       (common-lisp:cons "resourceShareStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-owner))
      (common-lisp:list
       (common-lisp:cons "resourceOwner"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-filters))
      (common-lisp:list
       (common-lisp:cons "tagFilters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-arn))
      (common-lisp:list
       (common-lisp:cons "permissionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-shares-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-resource-shares-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-resource-shares-response-"))
   (resource-shares common-lisp:nil :type
    (common-lisp:or resource-share-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-resource-shares-response
                    'make-get-resource-shares-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-shares-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-shares-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-shares))
      (common-lisp:list
       (common-lisp:cons "resourceShares"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-shares-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition idempotent-parameter-mismatch-exception
     (ram-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       idempotent-parameter-mismatch-exception-message)))
 (common-lisp:export
  (common-lisp:list 'idempotent-parameter-mismatch-exception
                    'idempotent-parameter-mismatch-exception-message)))
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition invalid-client-token-exception
     (ram-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-client-token-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-client-token-exception
                    'invalid-client-token-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-max-results-exception
     (ram-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-max-results-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-max-results-exception
                    'invalid-max-results-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-next-token-exception
     (ram-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-next-token-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-next-token-exception
                    'invalid-next-token-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-parameter-exception
     (ram-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-parameter-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-parameter-exception
                    'invalid-parameter-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-resource-type-exception
     (ram-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-resource-type-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-resource-type-exception
                    'invalid-resource-type-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-state-transition-exception
     (ram-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-state-transition-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-state-transition-exception
                    'invalid-state-transition-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (list-pending-invitation-resources-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-pending-invitation-resources-request-"))
   (resource-share-invitation-arn
    (common-lisp:error ":resourceshareinvitationarn is required") :type
    (common-lisp:or string common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (resource-region-scope common-lisp:nil :type
    (common-lisp:or resource-region-scope-filter common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-pending-invitation-resources-request
                    'make-list-pending-invitation-resources-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-pending-invitation-resources-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-pending-invitation-resources-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resource-share-invitation-arn))
      (common-lisp:list
       (common-lisp:cons "resourceShareInvitationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resource-region-scope))
      (common-lisp:list
       (common-lisp:cons "resourceRegionScope"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-pending-invitation-resources-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-pending-invitation-resources-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-pending-invitation-resources-response-"))
   (resources common-lisp:nil :type
    (common-lisp:or resource-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-pending-invitation-resources-response
                    'make-list-pending-invitation-resources-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-pending-invitation-resources-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-pending-invitation-resources-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resources))
      (common-lisp:list
       (common-lisp:cons "resources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-pending-invitation-resources-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-permission-versions-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-permission-versions-request-"))
   (permission-arn (common-lisp:error ":permissionarn is required") :type
    (common-lisp:or string common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-permission-versions-request
                    'make-list-permission-versions-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-permission-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-permission-versions-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission-arn))
      (common-lisp:list
       (common-lisp:cons "permissionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-permission-versions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-permission-versions-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-permission-versions-response-"))
   (permissions common-lisp:nil :type
    (common-lisp:or resource-share-permission-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-permission-versions-response
                    'make-list-permission-versions-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-permission-versions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-permission-versions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permissions))
      (common-lisp:list
       (common-lisp:cons "permissions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-permission-versions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-permissions-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-permissions-request-"))
   (resource-type common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-permissions-request 'make-list-permissions-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-permissions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-permissions-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "resourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-permissions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-permissions-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-permissions-response-"))
   (permissions common-lisp:nil :type
    (common-lisp:or resource-share-permission-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-permissions-response
                    'make-list-permissions-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-permissions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-permissions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permissions))
      (common-lisp:list
       (common-lisp:cons "permissions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-permissions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-principals-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-principals-request-"))
   (resource-owner (common-lisp:error ":resourceowner is required") :type
    (common-lisp:or resource-owner common-lisp:null))
   (resource-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (principals common-lisp:nil :type
    (common-lisp:or principal-arn-or-id-list common-lisp:null))
   (resource-type common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (resource-share-arns common-lisp:nil :type
    (common-lisp:or resource-share-arn-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-principals-request 'make-list-principals-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-principals-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-principals-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-owner))
      (common-lisp:list
       (common-lisp:cons "resourceOwner"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "resourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principals))
      (common-lisp:list
       (common-lisp:cons "principals"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "resourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-share-arns))
      (common-lisp:list
       (common-lisp:cons "resourceShareArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-principals-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-principals-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-principals-response-"))
   (principals common-lisp:nil :type
    (common-lisp:or principal-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-principals-response 'make-list-principals-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-principals-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-principals-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principals))
      (common-lisp:list
       (common-lisp:cons "principals"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-principals-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-resource-share-permissions-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-resource-share-permissions-request-"))
   (resource-share-arn (common-lisp:error ":resourcesharearn is required")
    :type (common-lisp:or string common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-resource-share-permissions-request
                    'make-list-resource-share-permissions-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-share-permissions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-share-permissions-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-share-arn))
      (common-lisp:list
       (common-lisp:cons "resourceShareArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-share-permissions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-resource-share-permissions-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-resource-share-permissions-response-"))
   (permissions common-lisp:nil :type
    (common-lisp:or resource-share-permission-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-resource-share-permissions-response
                    'make-list-resource-share-permissions-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-share-permissions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-share-permissions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permissions))
      (common-lisp:list
       (common-lisp:cons "permissions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-share-permissions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-resource-types-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-resource-types-request-"))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (resource-region-scope common-lisp:nil :type
    (common-lisp:or resource-region-scope-filter common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-resource-types-request
                    'make-list-resource-types-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-types-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-types-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resource-region-scope))
      (common-lisp:list
       (common-lisp:cons "resourceRegionScope"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-types-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-resource-types-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-resource-types-response-"))
   (resource-types common-lisp:nil :type
    (common-lisp:or service-name-and-resource-type-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-resource-types-response
                    'make-list-resource-types-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-types-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-types-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-types))
      (common-lisp:list
       (common-lisp:cons "resourceTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-types-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-resources-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-resources-request-"))
   (resource-owner (common-lisp:error ":resourceowner is required") :type
    (common-lisp:or resource-owner common-lisp:null))
   (principal common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (resource-type common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (resource-arns common-lisp:nil :type
    (common-lisp:or resource-arn-list common-lisp:null))
   (resource-share-arns common-lisp:nil :type
    (common-lisp:or resource-share-arn-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (resource-region-scope common-lisp:nil :type
    (common-lisp:or resource-region-scope-filter common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-resources-request 'make-list-resources-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-resources-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-resources-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-owner))
      (common-lisp:list
       (common-lisp:cons "resourceOwner"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal))
      (common-lisp:list
       (common-lisp:cons "principal"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "resourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arns))
      (common-lisp:list
       (common-lisp:cons "resourceArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-share-arns))
      (common-lisp:list
       (common-lisp:cons "resourceShareArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resource-region-scope))
      (common-lisp:list
       (common-lisp:cons "resourceRegionScope"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-resources-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-resources-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-resources-response-"))
   (resources common-lisp:nil :type
    (common-lisp:or resource-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-resources-response 'make-list-resources-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-resources-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-resources-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resources))
      (common-lisp:list
       (common-lisp:cons "resources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-resources-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition malformed-arn-exception
     (ram-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       malformed-arn-exception-message)))
 (common-lisp:export
  (common-lisp:list 'malformed-arn-exception 'malformed-arn-exception-message)))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition missing-required-parameter-exception
     (ram-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       missing-required-parameter-exception-message)))
 (common-lisp:export
  (common-lisp:list 'missing-required-parameter-exception
                    'missing-required-parameter-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition operation-not-permitted-exception
     (ram-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       operation-not-permitted-exception-message)))
 (common-lisp:export
  (common-lisp:list 'operation-not-permitted-exception
                    'operation-not-permitted-exception-message)))
(common-lisp:progn
 (common-lisp:deftype permission-arn-list ()
   '(trivial-types:proper-list string))
 (common-lisp:defun |make-permission-arn-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:deftype policy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype policy-list () '(trivial-types:proper-list policy))
 (common-lisp:defun |make-policy-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list policy))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (principal (:copier common-lisp:nil)
      (:conc-name "struct-shape-principal-"))
   (id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (resource-share-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (last-updated-time common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (external common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'principal 'make-principal))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input principal))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input principal))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-share-arn))
      (common-lisp:list
       (common-lisp:cons "resourceShareArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "creationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-time))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'external))
      (common-lisp:list
       (common-lisp:cons "external"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input principal))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype principal-arn-or-id-list ()
   '(trivial-types:proper-list string))
 (common-lisp:defun |make-principal-arn-or-id-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype principal-list () '(trivial-types:proper-list principal))
 (common-lisp:defun |make-principal-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list principal))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (promote-resource-share-created-from-policy-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-promote-resource-share-created-from-policy-request-"))
   (resource-share-arn (common-lisp:error ":resourcesharearn is required")
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'promote-resource-share-created-from-policy-request
                    'make-promote-resource-share-created-from-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          promote-resource-share-created-from-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          promote-resource-share-created-from-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          promote-resource-share-created-from-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (promote-resource-share-created-from-policy-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-promote-resource-share-created-from-policy-response-"))
   (return-value common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'promote-resource-share-created-from-policy-response
                    'make-promote-resource-share-created-from-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          promote-resource-share-created-from-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          promote-resource-share-created-from-policy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'return-value))
      (common-lisp:list
       (common-lisp:cons "returnValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          promote-resource-share-created-from-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (reject-resource-share-invitation-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-reject-resource-share-invitation-request-"))
   (resource-share-invitation-arn
    (common-lisp:error ":resourceshareinvitationarn is required") :type
    (common-lisp:or string common-lisp:null))
   (client-token common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'reject-resource-share-invitation-request
                    'make-reject-resource-share-invitation-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          reject-resource-share-invitation-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          reject-resource-share-invitation-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resource-share-invitation-arn))
      (common-lisp:list
       (common-lisp:cons "resourceShareInvitationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          reject-resource-share-invitation-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (reject-resource-share-invitation-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-reject-resource-share-invitation-response-"))
   (resource-share-invitation common-lisp:nil :type
    (common-lisp:or resource-share-invitation common-lisp:null))
   (client-token common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'reject-resource-share-invitation-response
                    'make-reject-resource-share-invitation-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          reject-resource-share-invitation-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          reject-resource-share-invitation-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resource-share-invitation))
      (common-lisp:list
       (common-lisp:cons "resourceShareInvitation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          reject-resource-share-invitation-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (resource (:copier common-lisp:nil) (:conc-name "struct-shape-resource-"))
   (arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (resource-share-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (resource-group-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or resource-status common-lisp:null))
   (status-message common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (last-updated-time common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (resource-region-scope common-lisp:nil :type
    (common-lisp:or resource-region-scope common-lisp:null)))
 (common-lisp:export (common-lisp:list 'resource 'make-resource))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input resource))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input resource))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-share-arn))
      (common-lisp:list
       (common-lisp:cons "resourceShareArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-group-arn))
      (common-lisp:list
       (common-lisp:cons "resourceGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-message))
      (common-lisp:list
       (common-lisp:cons "statusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "creationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-time))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resource-region-scope))
      (common-lisp:list
       (common-lisp:cons "resourceRegionScope"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input resource))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype resource-arn-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-resource-arn-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition resource-arn-not-found-exception
     (ram-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-arn-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-arn-not-found-exception
                    'resource-arn-not-found-exception-message)))
(common-lisp:progn
 (common-lisp:deftype resource-list () '(trivial-types:proper-list resource))
 (common-lisp:defun |make-resource-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource))
   aws-sdk/generator/shape::members))
(common-lisp:deftype resource-owner () 'common-lisp:string)
(common-lisp:deftype resource-region-scope () 'common-lisp:string)
(common-lisp:deftype resource-region-scope-filter () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (resource-share (:copier common-lisp:nil)
      (:conc-name "struct-shape-resource-share-"))
   (resource-share-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (owning-account-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (allow-external-principals common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or resource-share-status common-lisp:null))
   (status-message common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (last-updated-time common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (feature-set common-lisp:nil :type
    (common-lisp:or resource-share-feature-set common-lisp:null)))
 (common-lisp:export (common-lisp:list 'resource-share 'make-resource-share))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input resource-share))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input resource-share))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-share-arn))
      (common-lisp:list
       (common-lisp:cons "resourceShareArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'owning-account-id))
      (common-lisp:list
       (common-lisp:cons "owningAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'allow-external-principals))
      (common-lisp:list
       (common-lisp:cons "allowExternalPrincipals"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-message))
      (common-lisp:list
       (common-lisp:cons "statusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "creationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-time))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'feature-set))
      (common-lisp:list
       (common-lisp:cons "featureSet"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input resource-share))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype resource-share-arn-list ()
   '(trivial-types:proper-list string))
 (common-lisp:defun |make-resource-share-arn-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (resource-share-association (:copier common-lisp:nil)
      (:conc-name "struct-shape-resource-share-association-"))
   (resource-share-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (resource-share-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (associated-entity common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (association-type common-lisp:nil :type
    (common-lisp:or resource-share-association-type common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or resource-share-association-status common-lisp:null))
   (status-message common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (last-updated-time common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (external common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-share-association
                    'make-resource-share-association))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          resource-share-association))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          resource-share-association))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-share-arn))
      (common-lisp:list
       (common-lisp:cons "resourceShareArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-share-name))
      (common-lisp:list
       (common-lisp:cons "resourceShareName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'associated-entity))
      (common-lisp:list
       (common-lisp:cons "associatedEntity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'association-type))
      (common-lisp:list
       (common-lisp:cons "associationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-message))
      (common-lisp:list
       (common-lisp:cons "statusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "creationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-time))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'external))
      (common-lisp:list
       (common-lisp:cons "external"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          resource-share-association))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype resource-share-association-list ()
   '(trivial-types:proper-list resource-share-association))
 (common-lisp:defun |make-resource-share-association-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            resource-share-association))
   aws-sdk/generator/shape::members))
(common-lisp:deftype resource-share-association-status () 'common-lisp:string)
(common-lisp:deftype resource-share-association-type () 'common-lisp:string)
(common-lisp:deftype resource-share-feature-set () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (resource-share-invitation (:copier common-lisp:nil)
      (:conc-name "struct-shape-resource-share-invitation-"))
   (resource-share-invitation-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (resource-share-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (resource-share-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (sender-account-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (receiver-account-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (invitation-timestamp common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or resource-share-invitation-status common-lisp:null))
   (resource-share-associations common-lisp:nil :type
    (common-lisp:or resource-share-association-list common-lisp:null))
   (receiver-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-share-invitation
                    'make-resource-share-invitation))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          resource-share-invitation))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          resource-share-invitation))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resource-share-invitation-arn))
      (common-lisp:list
       (common-lisp:cons "resourceShareInvitationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-share-name))
      (common-lisp:list
       (common-lisp:cons "resourceShareName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-share-arn))
      (common-lisp:list
       (common-lisp:cons "resourceShareArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sender-account-id))
      (common-lisp:list
       (common-lisp:cons "senderAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'receiver-account-id))
      (common-lisp:list
       (common-lisp:cons "receiverAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'invitation-timestamp))
      (common-lisp:list
       (common-lisp:cons "invitationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resource-share-associations))
      (common-lisp:list
       (common-lisp:cons "resourceShareAssociations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'receiver-arn))
      (common-lisp:list
       (common-lisp:cons "receiverArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          resource-share-invitation))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition resource-share-invitation-already-accepted-exception
     (ram-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-share-invitation-already-accepted-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-share-invitation-already-accepted-exception
                    'resource-share-invitation-already-accepted-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition resource-share-invitation-already-rejected-exception
     (ram-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-share-invitation-already-rejected-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-share-invitation-already-rejected-exception
                    'resource-share-invitation-already-rejected-exception-message)))
(common-lisp:progn
 (common-lisp:deftype resource-share-invitation-arn-list ()
   '(trivial-types:proper-list string))
 (common-lisp:defun |make-resource-share-invitation-arn-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition resource-share-invitation-arn-not-found-exception
     (ram-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-share-invitation-arn-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-share-invitation-arn-not-found-exception
                    'resource-share-invitation-arn-not-found-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition resource-share-invitation-expired-exception
     (ram-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-share-invitation-expired-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-share-invitation-expired-exception
                    'resource-share-invitation-expired-exception-message)))
(common-lisp:progn
 (common-lisp:deftype resource-share-invitation-list ()
   '(trivial-types:proper-list resource-share-invitation))
 (common-lisp:defun |make-resource-share-invitation-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            resource-share-invitation))
   aws-sdk/generator/shape::members))
(common-lisp:deftype resource-share-invitation-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-share-limit-exceeded-exception
     (ram-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-share-limit-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-share-limit-exceeded-exception
                    'resource-share-limit-exceeded-exception-message)))
(common-lisp:progn
 (common-lisp:deftype resource-share-list ()
   '(trivial-types:proper-list resource-share))
 (common-lisp:defun |make-resource-share-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource-share))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (resource-share-permission-detail (:copier common-lisp:nil)
      (:conc-name "struct-shape-resource-share-permission-detail-"))
   (arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (default-version common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (resource-type common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (permission common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (last-updated-time common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (is-resource-type-default common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-share-permission-detail
                    'make-resource-share-permission-detail))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          resource-share-permission-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          resource-share-permission-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'default-version))
      (common-lisp:list
       (common-lisp:cons "defaultVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "resourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permission))
      (common-lisp:list
       (common-lisp:cons "permission"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "creationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-time))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'is-resource-type-default))
      (common-lisp:list
       (common-lisp:cons "isResourceTypeDefault"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          resource-share-permission-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype resource-share-permission-list ()
   '(trivial-types:proper-list resource-share-permission-summary))
 (common-lisp:defun |make-resource-share-permission-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            resource-share-permission-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (resource-share-permission-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-resource-share-permission-summary-"))
   (arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (default-version common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (resource-type common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (last-updated-time common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (is-resource-type-default common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-share-permission-summary
                    'make-resource-share-permission-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          resource-share-permission-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          resource-share-permission-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'default-version))
      (common-lisp:list
       (common-lisp:cons "defaultVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "resourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "creationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-time))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'is-resource-type-default))
      (common-lisp:list
       (common-lisp:cons "isResourceTypeDefault"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          resource-share-permission-summary))
   common-lisp:nil))
(common-lisp:deftype resource-share-status () 'common-lisp:string)
(common-lisp:deftype resource-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition server-internal-exception
     (ram-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       server-internal-exception-message)))
 (common-lisp:export
  (common-lisp:list 'server-internal-exception
                    'server-internal-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (service-name-and-resource-type (:copier common-lisp:nil)
      (:conc-name "struct-shape-service-name-and-resource-type-"))
   (resource-type common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (service-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (resource-region-scope common-lisp:nil :type
    (common-lisp:or resource-region-scope common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'service-name-and-resource-type
                    'make-service-name-and-resource-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          service-name-and-resource-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          service-name-and-resource-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "resourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-name))
      (common-lisp:list
       (common-lisp:cons "serviceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resource-region-scope))
      (common-lisp:list
       (common-lisp:cons "resourceRegionScope"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          service-name-and-resource-type))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype service-name-and-resource-type-list ()
   '(trivial-types:proper-list service-name-and-resource-type))
 (common-lisp:defun |make-service-name-and-resource-type-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            service-name-and-resource-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition service-unavailable-exception
     (ram-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-unavailable-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-unavailable-exception
                    'service-unavailable-exception-message)))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (tag (:copier common-lisp:nil) (:conc-name "struct-shape-tag-"))
   (key common-lisp:nil :type (common-lisp:or tag-key common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or tag-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-filter (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-filter-"))
   (tag-key common-lisp:nil :type (common-lisp:or tag-key common-lisp:null))
   (tag-values common-lisp:nil :type
    (common-lisp:or tag-value-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag-filter 'make-tag-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-key))
      (common-lisp:list
       (common-lisp:cons "tagKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-values))
      (common-lisp:list
       (common-lisp:cons "tagValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype tag-filters () '(trivial-types:proper-list tag-filter))
 (common-lisp:defun |make-tag-filters|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-filter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun |make-tag-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition tag-limit-exceeded-exception
     (ram-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       tag-limit-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'tag-limit-exceeded-exception
                    'tag-limit-exceeded-exception-message)))
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-tag-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition tag-policy-violation-exception
     (ram-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       tag-policy-violation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'tag-policy-violation-exception
                    'tag-policy-violation-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-request-"))
   (resource-share-arn (common-lisp:error ":resourcesharearn is required")
    :type (common-lisp:or string common-lisp:null))
   (tags (common-lisp:error ":tags is required") :type
    (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-share-arn))
      (common-lisp:list
       (common-lisp:cons "resourceShareArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-value-list () '(trivial-types:proper-list tag-value))
 (common-lisp:defun |make-tag-value-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (ram-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       throttling-exception-message)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition unknown-resource-exception
     (ram-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       unknown-resource-exception-message)))
 (common-lisp:export
  (common-lisp:list 'unknown-resource-exception
                    'unknown-resource-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-request-"))
   (resource-share-arn (common-lisp:error ":resourcesharearn is required")
    :type (common-lisp:or string common-lisp:null))
   (tag-keys (common-lisp:error ":tagkeys is required") :type
    (common-lisp:or tag-key-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-share-arn))
      (common-lisp:list
       (common-lisp:cons "resourceShareArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-keys))
      (common-lisp:list
       (common-lisp:cons "tagKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-resource-share-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-resource-share-request-"))
   (resource-share-arn (common-lisp:error ":resourcesharearn is required")
    :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (allow-external-principals common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (client-token common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-resource-share-request
                    'make-update-resource-share-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-share-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-share-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-share-arn))
      (common-lisp:list
       (common-lisp:cons "resourceShareArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'allow-external-principals))
      (common-lisp:list
       (common-lisp:cons "allowExternalPrincipals"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-share-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-resource-share-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-resource-share-response-"))
   (resource-share common-lisp:nil :type
    (common-lisp:or resource-share common-lisp:null))
   (client-token common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-resource-share-response
                    'make-update-resource-share-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-share-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-share-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-share))
      (common-lisp:list
       (common-lisp:cons "resourceShare"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-share-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defun accept-resource-share-invitation
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-share-invitation-arn
                     client-token)
   (common-lisp:declare
    (common-lisp:ignorable resource-share-invitation-arn client-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-accept-resource-share-invitation-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ram-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/acceptresourceshareinvitation"
                                                        "AcceptResourceShareInvitation"
                                                        "2018-01-04"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'accept-resource-share-invitation))
(common-lisp:progn
 (common-lisp:defun associate-resource-share
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-share-arn resource-arns
                     principals client-token)
   (common-lisp:declare
    (common-lisp:ignorable resource-share-arn resource-arns principals
     client-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-associate-resource-share-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ram-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/associateresourceshare"
                                                        "AssociateResourceShare"
                                                        "2018-01-04"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'associate-resource-share))
(common-lisp:progn
 (common-lisp:defun associate-resource-share-permission
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-share-arn permission-arn replace
                     client-token permission-version)
   (common-lisp:declare
    (common-lisp:ignorable resource-share-arn permission-arn replace
     client-token permission-version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-associate-resource-share-permission-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ram-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/associateresourcesharepermission"
                                                        "AssociateResourceSharePermission"
                                                        "2018-01-04"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'associate-resource-share-permission))
(common-lisp:progn
 (common-lisp:defun create-resource-share
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name resource-arns principals tags
                     allow-external-principals client-token permission-arns)
   (common-lisp:declare
    (common-lisp:ignorable name resource-arns principals tags
     allow-external-principals client-token permission-arns))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-resource-share-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ram-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/createresourceshare"
                                                        "CreateResourceShare"
                                                        "2018-01-04"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-resource-share))
(common-lisp:progn
 (common-lisp:defun delete-resource-share
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-share-arn client-token)
   (common-lisp:declare
    (common-lisp:ignorable resource-share-arn client-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-resource-share-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ram-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        "/deleteresourceshare"
                                                        "DeleteResourceShare"
                                                        "2018-01-04"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-resource-share))
(common-lisp:progn
 (common-lisp:defun disassociate-resource-share
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-share-arn resource-arns
                     principals client-token)
   (common-lisp:declare
    (common-lisp:ignorable resource-share-arn resource-arns principals
     client-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-disassociate-resource-share-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ram-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/disassociateresourceshare"
                                                        "DisassociateResourceShare"
                                                        "2018-01-04"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'disassociate-resource-share))
(common-lisp:progn
 (common-lisp:defun disassociate-resource-share-permission
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-share-arn permission-arn
                     client-token)
   (common-lisp:declare
    (common-lisp:ignorable resource-share-arn permission-arn client-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-disassociate-resource-share-permission-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ram-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/disassociateresourcesharepermission"
                                                        "DisassociateResourceSharePermission"
                                                        "2018-01-04"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'disassociate-resource-share-permission))
(common-lisp:progn
 (common-lisp:defun enable-sharing-with-aws-organization ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'ram-request :method "POST" :path
                                "/enablesharingwithawsorganization" :params
                                `(("Action"
                                   ,@"EnableSharingWithAwsOrganization")
                                  ("Version" ,@"2018-01-04"))))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'enable-sharing-with-aws-organization))
(common-lisp:progn
 (common-lisp:defun get-permission
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key permission-arn permission-version)
   (common-lisp:declare
    (common-lisp:ignorable permission-arn permission-version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-permission-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ram-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/getpermission"
                                                        "GetPermission"
                                                        "2018-01-04"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-permission))
(common-lisp:progn
 (common-lisp:defun get-resource-policies
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arns principal next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable resource-arns principal next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-resource-policies-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ram-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/getresourcepolicies"
                                                        "GetResourcePolicies"
                                                        "2018-01-04"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-resource-policies))
(common-lisp:progn
 (common-lisp:defun get-resource-share-associations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key association-type resource-share-arns
                     resource-arn principal association-status next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable association-type resource-share-arns resource-arn
     principal association-status next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-resource-share-associations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ram-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/getresourceshareassociations"
                                                        "GetResourceShareAssociations"
                                                        "2018-01-04"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-resource-share-associations))
(common-lisp:progn
 (common-lisp:defun get-resource-share-invitations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-share-invitation-arns
                     resource-share-arns next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable resource-share-invitation-arns resource-share-arns
     next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-resource-share-invitations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ram-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/getresourceshareinvitations"
                                                        "GetResourceShareInvitations"
                                                        "2018-01-04"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-resource-share-invitations))
(common-lisp:progn
 (common-lisp:defun get-resource-shares
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-share-arns resource-share-status
                     resource-owner name tag-filters next-token max-results
                     permission-arn)
   (common-lisp:declare
    (common-lisp:ignorable resource-share-arns resource-share-status
     resource-owner name tag-filters next-token max-results permission-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-resource-shares-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ram-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/getresourceshares"
                                                        "GetResourceShares"
                                                        "2018-01-04"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-resource-shares))
(common-lisp:progn
 (common-lisp:defun list-pending-invitation-resources
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-share-invitation-arn next-token
                     max-results resource-region-scope)
   (common-lisp:declare
    (common-lisp:ignorable resource-share-invitation-arn next-token max-results
     resource-region-scope))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-pending-invitation-resources-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ram-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/listpendinginvitationresources"
                                                        "ListPendingInvitationResources"
                                                        "2018-01-04"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-pending-invitation-resources))
(common-lisp:progn
 (common-lisp:defun list-permission-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key permission-arn next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable permission-arn next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-permission-versions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ram-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/listpermissionversions"
                                                        "ListPermissionVersions"
                                                        "2018-01-04"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-permission-versions))
(common-lisp:progn
 (common-lisp:defun list-permissions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-type next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable resource-type next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-permissions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ram-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/listpermissions"
                                                        "ListPermissions"
                                                        "2018-01-04"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-permissions))
(common-lisp:progn
 (common-lisp:defun list-principals
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-owner resource-arn principals
                     resource-type resource-share-arns next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable resource-owner resource-arn principals resource-type
     resource-share-arns next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-principals-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ram-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/listprincipals"
                                                        "ListPrincipals"
                                                        "2018-01-04"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-principals))
(common-lisp:progn
 (common-lisp:defun list-resource-share-permissions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-share-arn next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable resource-share-arn next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-resource-share-permissions-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ram-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/listresourcesharepermissions"
                                                        "ListResourceSharePermissions"
                                                        "2018-01-04"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-resource-share-permissions))
(common-lisp:progn
 (common-lisp:defun list-resource-types
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results
                     resource-region-scope)
   (common-lisp:declare
    (common-lisp:ignorable next-token max-results resource-region-scope))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-resource-types-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ram-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/listresourcetypes"
                                                        "ListResourceTypes"
                                                        "2018-01-04"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-resource-types))
(common-lisp:progn
 (common-lisp:defun list-resources
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-owner principal resource-type
                     resource-arns resource-share-arns next-token max-results
                     resource-region-scope)
   (common-lisp:declare
    (common-lisp:ignorable resource-owner principal resource-type resource-arns
     resource-share-arns next-token max-results resource-region-scope))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-resources-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ram-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/listresources"
                                                        "ListResources"
                                                        "2018-01-04"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-resources))
(common-lisp:progn
 (common-lisp:defun promote-resource-share-created-from-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-share-arn)
   (common-lisp:declare (common-lisp:ignorable resource-share-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-promote-resource-share-created-from-policy-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ram-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/promoteresourcesharecreatedfrompolicy"
                                                        "PromoteResourceShareCreatedFromPolicy"
                                                        "2018-01-04"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'promote-resource-share-created-from-policy))
(common-lisp:progn
 (common-lisp:defun reject-resource-share-invitation
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-share-invitation-arn
                     client-token)
   (common-lisp:declare
    (common-lisp:ignorable resource-share-invitation-arn client-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-reject-resource-share-invitation-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ram-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/rejectresourceshareinvitation"
                                                        "RejectResourceShareInvitation"
                                                        "2018-01-04"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'reject-resource-share-invitation))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-share-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-share-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ram-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/tagresource"
                                                        "TagResource"
                                                        "2018-01-04"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-share-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-share-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ram-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/untagresource"
                                                        "UntagResource"
                                                        "2018-01-04"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-resource-share
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-share-arn name
                     allow-external-principals client-token)
   (common-lisp:declare
    (common-lisp:ignorable resource-share-arn name allow-external-principals
     client-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-resource-share-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ram-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/updateresourceshare"
                                                        "UpdateResourceShare"
                                                        "2018-01-04"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-resource-share))
