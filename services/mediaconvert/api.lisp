;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/mediaconvert/api
  (:use)
  (:nicknames #:aws/mediaconvert)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/mediaconvert/api)
(common-lisp:progn
 (common-lisp:defclass mediaconvert-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "mediaconvert" :protocol
                        :rest-json))
 (common-lisp:export 'mediaconvert-request))
(common-lisp:progn
 (common-lisp:define-condition mediaconvert-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'mediaconvert-error))
(common-lisp:defvar *error-map*
  '(("BadRequestException" . bad-request-exception)
    ("ConflictException" . conflict-exception)
    ("ForbiddenException" . forbidden-exception)
    ("InternalServerErrorException" . internal-server-error-exception)
    ("NotFoundException" . not-found-exception)
    ("TooManyRequestsException" . too-many-requests-exception)))
(common-lisp:deftype aac-audio-description-broadcaster-mix ()
  'common-lisp:string)
(common-lisp:deftype aac-codec-profile () 'common-lisp:string)
(common-lisp:deftype aac-coding-mode () 'common-lisp:string)
(common-lisp:deftype aac-rate-control-mode () 'common-lisp:string)
(common-lisp:deftype aac-raw-format () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (aac-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-aac-settings-"))
   (audio-description-broadcaster-mix common-lisp:nil :type
    (common-lisp:or aac-audio-description-broadcaster-mix common-lisp:null))
   (bitrate common-lisp:nil :type
    (common-lisp:or |__integerMin6000Max1024000| common-lisp:null))
   (codec-profile common-lisp:nil :type
    (common-lisp:or aac-codec-profile common-lisp:null))
   (coding-mode common-lisp:nil :type
    (common-lisp:or aac-coding-mode common-lisp:null))
   (rate-control-mode common-lisp:nil :type
    (common-lisp:or aac-rate-control-mode common-lisp:null))
   (raw-format common-lisp:nil :type
    (common-lisp:or aac-raw-format common-lisp:null))
   (sample-rate common-lisp:nil :type
    (common-lisp:or |__integerMin8000Max96000| common-lisp:null))
   (specification common-lisp:nil :type
    (common-lisp:or aac-specification common-lisp:null))
   (vbr-quality common-lisp:nil :type
    (common-lisp:or aac-vbr-quality common-lisp:null)))
 (common-lisp:export (common-lisp:list 'aac-settings 'make-aac-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input aac-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input aac-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'audio-description-broadcaster-mix))
      (common-lisp:list
       (common-lisp:cons "AudioDescriptionBroadcasterMix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bitrate))
      (common-lisp:list
       (common-lisp:cons "Bitrate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'codec-profile))
      (common-lisp:list
       (common-lisp:cons "CodecProfile"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'coding-mode))
      (common-lisp:list
       (common-lisp:cons "CodingMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rate-control-mode))
      (common-lisp:list
       (common-lisp:cons "RateControlMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'raw-format))
      (common-lisp:list
       (common-lisp:cons "RawFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sample-rate))
      (common-lisp:list
       (common-lisp:cons "SampleRate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'specification))
      (common-lisp:list
       (common-lisp:cons "Specification"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vbr-quality))
      (common-lisp:list
       (common-lisp:cons "VbrQuality"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input aac-settings))
   common-lisp:nil))
(common-lisp:deftype aac-specification () 'common-lisp:string)
(common-lisp:deftype aac-vbr-quality () 'common-lisp:string)
(common-lisp:deftype ac3bitstream-mode () 'common-lisp:string)
(common-lisp:deftype ac3coding-mode () 'common-lisp:string)
(common-lisp:deftype ac3dynamic-range-compression-line () 'common-lisp:string)
(common-lisp:deftype ac3dynamic-range-compression-profile ()
  'common-lisp:string)
(common-lisp:deftype ac3dynamic-range-compression-rf () 'common-lisp:string)
(common-lisp:deftype ac3lfe-filter () 'common-lisp:string)
(common-lisp:deftype ac3metadata-control () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (ac3settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-ac3settings-"))
   (bitrate common-lisp:nil :type
    (common-lisp:or |__integerMin64000Max640000| common-lisp:null))
   (bitstream-mode common-lisp:nil :type
    (common-lisp:or ac3bitstream-mode common-lisp:null))
   (coding-mode common-lisp:nil :type
    (common-lisp:or ac3coding-mode common-lisp:null))
   (dialnorm common-lisp:nil :type
    (common-lisp:or |__integerMin1Max31| common-lisp:null))
   (dynamic-range-compression-line common-lisp:nil :type
    (common-lisp:or ac3dynamic-range-compression-line common-lisp:null))
   (dynamic-range-compression-profile common-lisp:nil :type
    (common-lisp:or ac3dynamic-range-compression-profile common-lisp:null))
   (dynamic-range-compression-rf common-lisp:nil :type
    (common-lisp:or ac3dynamic-range-compression-rf common-lisp:null))
   (lfe-filter common-lisp:nil :type
    (common-lisp:or ac3lfe-filter common-lisp:null))
   (metadata-control common-lisp:nil :type
    (common-lisp:or ac3metadata-control common-lisp:null))
   (sample-rate common-lisp:nil :type
    (common-lisp:or |__integerMin48000Max48000| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'ac3settings 'make-ac3settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input ac3settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input ac3settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bitrate))
      (common-lisp:list
       (common-lisp:cons "Bitrate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bitstream-mode))
      (common-lisp:list
       (common-lisp:cons "BitstreamMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'coding-mode))
      (common-lisp:list
       (common-lisp:cons "CodingMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dialnorm))
      (common-lisp:list
       (common-lisp:cons "Dialnorm"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dynamic-range-compression-line))
      (common-lisp:list
       (common-lisp:cons "DynamicRangeCompressionLine"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dynamic-range-compression-profile))
      (common-lisp:list
       (common-lisp:cons "DynamicRangeCompressionProfile"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dynamic-range-compression-rf))
      (common-lisp:list
       (common-lisp:cons "DynamicRangeCompressionRf"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lfe-filter))
      (common-lisp:list
       (common-lisp:cons "LfeFilter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata-control))
      (common-lisp:list
       (common-lisp:cons "MetadataControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sample-rate))
      (common-lisp:list
       (common-lisp:cons "SampleRate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input ac3settings))
   common-lisp:nil))
(common-lisp:deftype acceleration-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (acceleration-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-acceleration-settings-"))
   (mode (common-lisp:error ":mode is required") :type
    (common-lisp:or acceleration-mode common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'acceleration-settings 'make-acceleration-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          acceleration-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          acceleration-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mode))
      (common-lisp:list
       (common-lisp:cons "Mode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          acceleration-settings))
   common-lisp:nil))
(common-lisp:deftype acceleration-status () 'common-lisp:string)
(common-lisp:deftype advanced-input-filter () 'common-lisp:string)
(common-lisp:deftype advanced-input-filter-add-texture () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (advanced-input-filter-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-advanced-input-filter-settings-"))
   (add-texture common-lisp:nil :type
    (common-lisp:or advanced-input-filter-add-texture common-lisp:null))
   (sharpening common-lisp:nil :type
    (common-lisp:or advanced-input-filter-sharpen common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'advanced-input-filter-settings
                    'make-advanced-input-filter-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          advanced-input-filter-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          advanced-input-filter-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'add-texture))
      (common-lisp:list
       (common-lisp:cons "AddTexture"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sharpening))
      (common-lisp:list
       (common-lisp:cons "Sharpening"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          advanced-input-filter-settings))
   common-lisp:nil))
(common-lisp:deftype advanced-input-filter-sharpen () 'common-lisp:string)
(common-lisp:deftype afd-signaling () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (aiff-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-aiff-settings-"))
   (bit-depth common-lisp:nil :type
    (common-lisp:or |__integerMin16Max24| common-lisp:null))
   (channels common-lisp:nil :type
    (common-lisp:or |__integerMin1Max64| common-lisp:null))
   (sample-rate common-lisp:nil :type
    (common-lisp:or |__integerMin8000Max192000| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'aiff-settings 'make-aiff-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input aiff-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input aiff-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bit-depth))
      (common-lisp:list
       (common-lisp:cons "BitDepth"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channels))
      (common-lisp:list
       (common-lisp:cons "Channels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sample-rate))
      (common-lisp:list
       (common-lisp:cons "SampleRate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input aiff-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (allowed-rendition-size (:copier common-lisp:nil)
      (:conc-name "struct-shape-allowed-rendition-size-"))
   (height common-lisp:nil :type
    (common-lisp:or |__integerMin32Max8192| common-lisp:null))
   (required common-lisp:nil :type
    (common-lisp:or required-flag common-lisp:null))
   (width common-lisp:nil :type
    (common-lisp:or |__integerMin32Max8192| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'allowed-rendition-size 'make-allowed-rendition-size))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          allowed-rendition-size))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          allowed-rendition-size))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'height))
      (common-lisp:list
       (common-lisp:cons "Height"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'required))
      (common-lisp:list
       (common-lisp:cons "Required"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'width))
      (common-lisp:list
       (common-lisp:cons "Width"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          allowed-rendition-size))
   common-lisp:nil))
(common-lisp:deftype alpha-behavior () 'common-lisp:string)
(common-lisp:deftype ancillary-convert608to708 () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (ancillary-source-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-ancillary-source-settings-"))
   (convert608to708 common-lisp:nil :type
    (common-lisp:or ancillary-convert608to708 common-lisp:null))
   (source-ancillary-channel-number common-lisp:nil :type
    (common-lisp:or |__integerMin1Max4| common-lisp:null))
   (terminate-captions common-lisp:nil :type
    (common-lisp:or ancillary-terminate-captions common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'ancillary-source-settings
                    'make-ancillary-source-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ancillary-source-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ancillary-source-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'convert608to708))
      (common-lisp:list
       (common-lisp:cons "Convert608To708"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-ancillary-channel-number))
      (common-lisp:list
       (common-lisp:cons "SourceAncillaryChannelNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'terminate-captions))
      (common-lisp:list
       (common-lisp:cons "TerminateCaptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ancillary-source-settings))
   common-lisp:nil))
(common-lisp:deftype ancillary-terminate-captions () 'common-lisp:string)
(common-lisp:deftype anti-alias () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (associate-certificate-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-associate-certificate-request-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'associate-certificate-request
                    'make-associate-certificate-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-certificate-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-certificate-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-certificate-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-certificate-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-associate-certificate-response-")))
 (common-lisp:export
  (common-lisp:list 'associate-certificate-response
                    'make-associate-certificate-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-certificate-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-certificate-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-certificate-response))
   common-lisp:nil))
(common-lisp:deftype audio-channel-tag () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (audio-channel-tagging-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-audio-channel-tagging-settings-"))
   (channel-tag common-lisp:nil :type
    (common-lisp:or audio-channel-tag common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'audio-channel-tagging-settings
                    'make-audio-channel-tagging-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          audio-channel-tagging-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          audio-channel-tagging-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-tag))
      (common-lisp:list
       (common-lisp:cons "ChannelTag"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          audio-channel-tagging-settings))
   common-lisp:nil))
(common-lisp:deftype audio-codec () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (audio-codec-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-audio-codec-settings-"))
   (aac-settings common-lisp:nil :type
    (common-lisp:or aac-settings common-lisp:null))
   (ac3settings common-lisp:nil :type
    (common-lisp:or ac3settings common-lisp:null))
   (aiff-settings common-lisp:nil :type
    (common-lisp:or aiff-settings common-lisp:null))
   (codec common-lisp:nil :type (common-lisp:or audio-codec common-lisp:null))
   (eac3atmos-settings common-lisp:nil :type
    (common-lisp:or eac3atmos-settings common-lisp:null))
   (eac3settings common-lisp:nil :type
    (common-lisp:or eac3settings common-lisp:null))
   (mp2settings common-lisp:nil :type
    (common-lisp:or mp2settings common-lisp:null))
   (mp3settings common-lisp:nil :type
    (common-lisp:or mp3settings common-lisp:null))
   (opus-settings common-lisp:nil :type
    (common-lisp:or opus-settings common-lisp:null))
   (vorbis-settings common-lisp:nil :type
    (common-lisp:or vorbis-settings common-lisp:null))
   (wav-settings common-lisp:nil :type
    (common-lisp:or wav-settings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'audio-codec-settings 'make-audio-codec-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input audio-codec-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input audio-codec-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aac-settings))
      (common-lisp:list
       (common-lisp:cons "AacSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ac3settings))
      (common-lisp:list
       (common-lisp:cons "Ac3Settings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aiff-settings))
      (common-lisp:list
       (common-lisp:cons "AiffSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'codec))
      (common-lisp:list
       (common-lisp:cons "Codec"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'eac3atmos-settings))
      (common-lisp:list
       (common-lisp:cons "Eac3AtmosSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'eac3settings))
      (common-lisp:list
       (common-lisp:cons "Eac3Settings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mp2settings))
      (common-lisp:list
       (common-lisp:cons "Mp2Settings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mp3settings))
      (common-lisp:list
       (common-lisp:cons "Mp3Settings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'opus-settings))
      (common-lisp:list
       (common-lisp:cons "OpusSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vorbis-settings))
      (common-lisp:list
       (common-lisp:cons "VorbisSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'wav-settings))
      (common-lisp:list
       (common-lisp:cons "WavSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input audio-codec-settings))
   common-lisp:nil))
(common-lisp:deftype audio-default-selection () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (audio-description (:copier common-lisp:nil)
      (:conc-name "struct-shape-audio-description-"))
   (audio-channel-tagging-settings common-lisp:nil :type
    (common-lisp:or audio-channel-tagging-settings common-lisp:null))
   (audio-normalization-settings common-lisp:nil :type
    (common-lisp:or audio-normalization-settings common-lisp:null))
   (audio-source-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (audio-type common-lisp:nil :type
    (common-lisp:or |__integerMin0Max255| common-lisp:null))
   (audio-type-control common-lisp:nil :type
    (common-lisp:or audio-type-control common-lisp:null))
   (codec-settings common-lisp:nil :type
    (common-lisp:or audio-codec-settings common-lisp:null))
   (custom-language-code common-lisp:nil :type
    (common-lisp:or |__stringPatternAZaZ23AZaZ| common-lisp:null))
   (language-code common-lisp:nil :type
    (common-lisp:or language-code common-lisp:null))
   (language-code-control common-lisp:nil :type
    (common-lisp:or audio-language-code-control common-lisp:null))
   (remix-settings common-lisp:nil :type
    (common-lisp:or remix-settings common-lisp:null))
   (stream-name common-lisp:nil :type
    (common-lisp:or |__stringPatternWS| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'audio-description 'make-audio-description))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input audio-description))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input audio-description))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'audio-channel-tagging-settings))
      (common-lisp:list
       (common-lisp:cons "AudioChannelTaggingSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'audio-normalization-settings))
      (common-lisp:list
       (common-lisp:cons "AudioNormalizationSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audio-source-name))
      (common-lisp:list
       (common-lisp:cons "AudioSourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audio-type))
      (common-lisp:list
       (common-lisp:cons "AudioType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audio-type-control))
      (common-lisp:list
       (common-lisp:cons "AudioTypeControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'codec-settings))
      (common-lisp:list
       (common-lisp:cons "CodecSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'custom-language-code))
      (common-lisp:list
       (common-lisp:cons "CustomLanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'language-code-control))
      (common-lisp:list
       (common-lisp:cons "LanguageCodeControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'remix-settings))
      (common-lisp:list
       (common-lisp:cons "RemixSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-name))
      (common-lisp:list
       (common-lisp:cons "StreamName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input audio-description))
   common-lisp:nil))
(common-lisp:deftype audio-duration-correction () 'common-lisp:string)
(common-lisp:deftype audio-language-code-control () 'common-lisp:string)
(common-lisp:deftype audio-normalization-algorithm () 'common-lisp:string)
(common-lisp:deftype audio-normalization-algorithm-control ()
  'common-lisp:string)
(common-lisp:deftype audio-normalization-loudness-logging ()
  'common-lisp:string)
(common-lisp:deftype audio-normalization-peak-calculation ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (audio-normalization-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-audio-normalization-settings-"))
   (algorithm common-lisp:nil :type
    (common-lisp:or audio-normalization-algorithm common-lisp:null))
   (algorithm-control common-lisp:nil :type
    (common-lisp:or audio-normalization-algorithm-control common-lisp:null))
   (correction-gate-level common-lisp:nil :type
    (common-lisp:or |__integerMinNegative70Max0| common-lisp:null))
   (loudness-logging common-lisp:nil :type
    (common-lisp:or audio-normalization-loudness-logging common-lisp:null))
   (peak-calculation common-lisp:nil :type
    (common-lisp:or audio-normalization-peak-calculation common-lisp:null))
   (target-lkfs common-lisp:nil :type
    (common-lisp:or |__doubleMinNegative59Max0| common-lisp:null))
   (true-peak-limiter-threshold common-lisp:nil :type
    (common-lisp:or |__doubleMinNegative8Max0| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'audio-normalization-settings
                    'make-audio-normalization-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          audio-normalization-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          audio-normalization-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'algorithm))
      (common-lisp:list
       (common-lisp:cons "Algorithm"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'algorithm-control))
      (common-lisp:list
       (common-lisp:cons "AlgorithmControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'correction-gate-level))
      (common-lisp:list
       (common-lisp:cons "CorrectionGateLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'loudness-logging))
      (common-lisp:list
       (common-lisp:cons "LoudnessLogging"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'peak-calculation))
      (common-lisp:list
       (common-lisp:cons "PeakCalculation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-lkfs))
      (common-lisp:list
       (common-lisp:cons "TargetLkfs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'true-peak-limiter-threshold))
      (common-lisp:list
       (common-lisp:cons "TruePeakLimiterThreshold"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          audio-normalization-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (audio-selector (:copier common-lisp:nil)
      (:conc-name "struct-shape-audio-selector-"))
   (audio-duration-correction common-lisp:nil :type
    (common-lisp:or audio-duration-correction common-lisp:null))
   (custom-language-code common-lisp:nil :type
    (common-lisp:or |__stringMin3Max3PatternAZaZ3| common-lisp:null))
   (default-selection common-lisp:nil :type
    (common-lisp:or audio-default-selection common-lisp:null))
   (external-audio-file-input common-lisp:nil :type
    (common-lisp:or |__stringPatternS3Https| common-lisp:null))
   (hls-rendition-group-settings common-lisp:nil :type
    (common-lisp:or hls-rendition-group-settings common-lisp:null))
   (language-code common-lisp:nil :type
    (common-lisp:or language-code common-lisp:null))
   (offset common-lisp:nil :type
    (common-lisp:or |__integerMinNegative2147483648Max2147483647|
                    common-lisp:null))
   (pids common-lisp:nil :type
    (common-lisp:or |__listOf__integerMin1Max2147483647| common-lisp:null))
   (program-selection common-lisp:nil :type
    (common-lisp:or |__integerMin0Max8| common-lisp:null))
   (remix-settings common-lisp:nil :type
    (common-lisp:or remix-settings common-lisp:null))
   (selector-type common-lisp:nil :type
    (common-lisp:or audio-selector-type common-lisp:null))
   (tracks common-lisp:nil :type
    (common-lisp:or |__listOf__integerMin1Max2147483647| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'audio-selector 'make-audio-selector))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input audio-selector))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input audio-selector))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'audio-duration-correction))
      (common-lisp:list
       (common-lisp:cons "AudioDurationCorrection"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'custom-language-code))
      (common-lisp:list
       (common-lisp:cons "CustomLanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'default-selection))
      (common-lisp:list
       (common-lisp:cons "DefaultSelection"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'external-audio-file-input))
      (common-lisp:list
       (common-lisp:cons "ExternalAudioFileInput"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'hls-rendition-group-settings))
      (common-lisp:list
       (common-lisp:cons "HlsRenditionGroupSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'offset))
      (common-lisp:list
       (common-lisp:cons "Offset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pids))
      (common-lisp:list
       (common-lisp:cons "Pids"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'program-selection))
      (common-lisp:list
       (common-lisp:cons "ProgramSelection"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'remix-settings))
      (common-lisp:list
       (common-lisp:cons "RemixSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'selector-type))
      (common-lisp:list
       (common-lisp:cons "SelectorType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tracks))
      (common-lisp:list
       (common-lisp:cons "Tracks"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input audio-selector))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (audio-selector-group (:copier common-lisp:nil)
      (:conc-name "struct-shape-audio-selector-group-"))
   (audio-selector-names common-lisp:nil :type
    (common-lisp:or |__listOf__stringMin1| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'audio-selector-group 'make-audio-selector-group))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input audio-selector-group))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input audio-selector-group))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'audio-selector-names))
      (common-lisp:list
       (common-lisp:cons "AudioSelectorNames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input audio-selector-group))
   common-lisp:nil))
(common-lisp:deftype audio-selector-type () 'common-lisp:string)
(common-lisp:deftype audio-type-control () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (automated-abr-rule (:copier common-lisp:nil)
      (:conc-name "struct-shape-automated-abr-rule-"))
   (allowed-renditions common-lisp:nil :type
    (common-lisp:or |__listOfAllowedRenditionSize| common-lisp:null))
   (force-include-renditions common-lisp:nil :type
    (common-lisp:or |__listOfForceIncludeRenditionSize| common-lisp:null))
   (min-bottom-rendition-size common-lisp:nil :type
    (common-lisp:or min-bottom-rendition-size common-lisp:null))
   (min-top-rendition-size common-lisp:nil :type
    (common-lisp:or min-top-rendition-size common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or rule-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'automated-abr-rule 'make-automated-abr-rule))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input automated-abr-rule))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input automated-abr-rule))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'allowed-renditions))
      (common-lisp:list
       (common-lisp:cons "AllowedRenditions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'force-include-renditions))
      (common-lisp:list
       (common-lisp:cons "ForceIncludeRenditions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'min-bottom-rendition-size))
      (common-lisp:list
       (common-lisp:cons "MinBottomRenditionSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'min-top-rendition-size))
      (common-lisp:list
       (common-lisp:cons "MinTopRenditionSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input automated-abr-rule))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (automated-abr-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-automated-abr-settings-"))
   (max-abr-bitrate common-lisp:nil :type
    (common-lisp:or |__integerMin100000Max100000000| common-lisp:null))
   (max-renditions common-lisp:nil :type
    (common-lisp:or |__integerMin3Max15| common-lisp:null))
   (min-abr-bitrate common-lisp:nil :type
    (common-lisp:or |__integerMin100000Max100000000| common-lisp:null))
   (rules common-lisp:nil :type
    (common-lisp:or |__listOfAutomatedAbrRule| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'automated-abr-settings 'make-automated-abr-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          automated-abr-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          automated-abr-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-abr-bitrate))
      (common-lisp:list
       (common-lisp:cons "MaxAbrBitrate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-renditions))
      (common-lisp:list
       (common-lisp:cons "MaxRenditions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'min-abr-bitrate))
      (common-lisp:list
       (common-lisp:cons "MinAbrBitrate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rules))
      (common-lisp:list
       (common-lisp:cons "Rules"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          automated-abr-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (automated-encoding-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-automated-encoding-settings-"))
   (abr-settings common-lisp:nil :type
    (common-lisp:or automated-abr-settings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'automated-encoding-settings
                    'make-automated-encoding-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          automated-encoding-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          automated-encoding-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'abr-settings))
      (common-lisp:list
       (common-lisp:cons "AbrSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          automated-encoding-settings))
   common-lisp:nil))
(common-lisp:deftype av1adaptive-quantization () 'common-lisp:string)
(common-lisp:deftype av1bit-depth () 'common-lisp:string)
(common-lisp:deftype av1framerate-control () 'common-lisp:string)
(common-lisp:deftype av1framerate-conversion-algorithm () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (av1qvbr-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-av1qvbr-settings-"))
   (qvbr-quality-level common-lisp:nil :type
    (common-lisp:or |__integerMin1Max10| common-lisp:null))
   (qvbr-quality-level-fine-tune common-lisp:nil :type
    (common-lisp:or |__doubleMin0Max1| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'av1qvbr-settings 'make-av1qvbr-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input av1qvbr-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input av1qvbr-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'qvbr-quality-level))
      (common-lisp:list
       (common-lisp:cons "QvbrQualityLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'qvbr-quality-level-fine-tune))
      (common-lisp:list
       (common-lisp:cons "QvbrQualityLevelFineTune"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input av1qvbr-settings))
   common-lisp:nil))
(common-lisp:deftype av1rate-control-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (av1settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-av1settings-"))
   (adaptive-quantization common-lisp:nil :type
    (common-lisp:or av1adaptive-quantization common-lisp:null))
   (bit-depth common-lisp:nil :type
    (common-lisp:or av1bit-depth common-lisp:null))
   (framerate-control common-lisp:nil :type
    (common-lisp:or av1framerate-control common-lisp:null))
   (framerate-conversion-algorithm common-lisp:nil :type
    (common-lisp:or av1framerate-conversion-algorithm common-lisp:null))
   (framerate-denominator common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2147483647| common-lisp:null))
   (framerate-numerator common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2147483647| common-lisp:null))
   (gop-size common-lisp:nil :type
    (common-lisp:or |__doubleMin0| common-lisp:null))
   (max-bitrate common-lisp:nil :type
    (common-lisp:or |__integerMin1000Max1152000000| common-lisp:null))
   (number-bframes-between-reference-frames common-lisp:nil :type
    (common-lisp:or |__integerMin0Max15| common-lisp:null))
   (qvbr-settings common-lisp:nil :type
    (common-lisp:or av1qvbr-settings common-lisp:null))
   (rate-control-mode common-lisp:nil :type
    (common-lisp:or av1rate-control-mode common-lisp:null))
   (slices common-lisp:nil :type
    (common-lisp:or |__integerMin1Max32| common-lisp:null))
   (spatial-adaptive-quantization common-lisp:nil :type
    (common-lisp:or av1spatial-adaptive-quantization common-lisp:null)))
 (common-lisp:export (common-lisp:list 'av1settings 'make-av1settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input av1settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input av1settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'adaptive-quantization))
      (common-lisp:list
       (common-lisp:cons "AdaptiveQuantization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bit-depth))
      (common-lisp:list
       (common-lisp:cons "BitDepth"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'framerate-control))
      (common-lisp:list
       (common-lisp:cons "FramerateControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'framerate-conversion-algorithm))
      (common-lisp:list
       (common-lisp:cons "FramerateConversionAlgorithm"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'framerate-denominator))
      (common-lisp:list
       (common-lisp:cons "FramerateDenominator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'framerate-numerator))
      (common-lisp:list
       (common-lisp:cons "FramerateNumerator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gop-size))
      (common-lisp:list
       (common-lisp:cons "GopSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-bitrate))
      (common-lisp:list
       (common-lisp:cons "MaxBitrate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-bframes-between-reference-frames))
      (common-lisp:list
       (common-lisp:cons "NumberBFramesBetweenReferenceFrames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'qvbr-settings))
      (common-lisp:list
       (common-lisp:cons "QvbrSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rate-control-mode))
      (common-lisp:list
       (common-lisp:cons "RateControlMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slices))
      (common-lisp:list
       (common-lisp:cons "Slices"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'spatial-adaptive-quantization))
      (common-lisp:list
       (common-lisp:cons "SpatialAdaptiveQuantization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input av1settings))
   common-lisp:nil))
(common-lisp:deftype av1spatial-adaptive-quantization () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (avail-blanking (:copier common-lisp:nil)
      (:conc-name "struct-shape-avail-blanking-"))
   (avail-blanking-image common-lisp:nil :type
    (common-lisp:or |__stringMin14PatternS3BmpBMPPngPNGHttpsBmpBMPPngPNG|
                    common-lisp:null)))
 (common-lisp:export (common-lisp:list 'avail-blanking 'make-avail-blanking))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input avail-blanking))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input avail-blanking))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'avail-blanking-image))
      (common-lisp:list
       (common-lisp:cons "AvailBlankingImage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input avail-blanking))
   common-lisp:nil))
(common-lisp:deftype avc-intra-class () 'common-lisp:string)
(common-lisp:deftype avc-intra-framerate-control () 'common-lisp:string)
(common-lisp:deftype avc-intra-framerate-conversion-algorithm ()
  'common-lisp:string)
(common-lisp:deftype avc-intra-interlace-mode () 'common-lisp:string)
(common-lisp:deftype avc-intra-scan-type-conversion-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (avc-intra-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-avc-intra-settings-"))
   (avc-intra-class common-lisp:nil :type
    (common-lisp:or avc-intra-class common-lisp:null))
   (avc-intra-uhd-settings common-lisp:nil :type
    (common-lisp:or avc-intra-uhd-settings common-lisp:null))
   (framerate-control common-lisp:nil :type
    (common-lisp:or avc-intra-framerate-control common-lisp:null))
   (framerate-conversion-algorithm common-lisp:nil :type
    (common-lisp:or avc-intra-framerate-conversion-algorithm common-lisp:null))
   (framerate-denominator common-lisp:nil :type
    (common-lisp:or |__integerMin1Max1001| common-lisp:null))
   (framerate-numerator common-lisp:nil :type
    (common-lisp:or |__integerMin24Max60000| common-lisp:null))
   (interlace-mode common-lisp:nil :type
    (common-lisp:or avc-intra-interlace-mode common-lisp:null))
   (scan-type-conversion-mode common-lisp:nil :type
    (common-lisp:or avc-intra-scan-type-conversion-mode common-lisp:null))
   (slow-pal common-lisp:nil :type
    (common-lisp:or avc-intra-slow-pal common-lisp:null))
   (telecine common-lisp:nil :type
    (common-lisp:or avc-intra-telecine common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'avc-intra-settings 'make-avc-intra-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input avc-intra-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input avc-intra-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'avc-intra-class))
      (common-lisp:list
       (common-lisp:cons "AvcIntraClass"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'avc-intra-uhd-settings))
      (common-lisp:list
       (common-lisp:cons "AvcIntraUhdSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'framerate-control))
      (common-lisp:list
       (common-lisp:cons "FramerateControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'framerate-conversion-algorithm))
      (common-lisp:list
       (common-lisp:cons "FramerateConversionAlgorithm"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'framerate-denominator))
      (common-lisp:list
       (common-lisp:cons "FramerateDenominator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'framerate-numerator))
      (common-lisp:list
       (common-lisp:cons "FramerateNumerator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'interlace-mode))
      (common-lisp:list
       (common-lisp:cons "InterlaceMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'scan-type-conversion-mode))
      (common-lisp:list
       (common-lisp:cons "ScanTypeConversionMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slow-pal))
      (common-lisp:list
       (common-lisp:cons "SlowPal"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'telecine))
      (common-lisp:list
       (common-lisp:cons "Telecine"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input avc-intra-settings))
   common-lisp:nil))
(common-lisp:deftype avc-intra-slow-pal () 'common-lisp:string)
(common-lisp:deftype avc-intra-telecine () 'common-lisp:string)
(common-lisp:deftype avc-intra-uhd-quality-tuning-level () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (avc-intra-uhd-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-avc-intra-uhd-settings-"))
   (quality-tuning-level common-lisp:nil :type
    (common-lisp:or avc-intra-uhd-quality-tuning-level common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'avc-intra-uhd-settings 'make-avc-intra-uhd-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          avc-intra-uhd-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          avc-intra-uhd-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'quality-tuning-level))
      (common-lisp:list
       (common-lisp:cons "QualityTuningLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          avc-intra-uhd-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition bad-request-exception
     (mediaconvert-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       bad-request-exception-message)))
 (common-lisp:export
  (common-lisp:list 'bad-request-exception 'bad-request-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (bandwidth-reduction-filter (:copier common-lisp:nil)
      (:conc-name "struct-shape-bandwidth-reduction-filter-"))
   (sharpening common-lisp:nil :type
    (common-lisp:or bandwidth-reduction-filter-sharpening common-lisp:null))
   (strength common-lisp:nil :type
    (common-lisp:or bandwidth-reduction-filter-strength common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'bandwidth-reduction-filter
                    'make-bandwidth-reduction-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          bandwidth-reduction-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          bandwidth-reduction-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sharpening))
      (common-lisp:list
       (common-lisp:cons "Sharpening"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'strength))
      (common-lisp:list
       (common-lisp:cons "Strength"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          bandwidth-reduction-filter))
   common-lisp:nil))
(common-lisp:deftype bandwidth-reduction-filter-sharpening ()
  'common-lisp:string)
(common-lisp:deftype bandwidth-reduction-filter-strength () 'common-lisp:string)
(common-lisp:deftype billing-tags-source () 'common-lisp:string)
(common-lisp:deftype burn-in-subtitle-style-passthrough () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (burnin-destination-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-burnin-destination-settings-"))
   (alignment common-lisp:nil :type
    (common-lisp:or burnin-subtitle-alignment common-lisp:null))
   (apply-font-color common-lisp:nil :type
    (common-lisp:or burnin-subtitle-apply-font-color common-lisp:null))
   (background-color common-lisp:nil :type
    (common-lisp:or burnin-subtitle-background-color common-lisp:null))
   (background-opacity common-lisp:nil :type
    (common-lisp:or |__integerMin0Max255| common-lisp:null))
   (fallback-font common-lisp:nil :type
    (common-lisp:or burnin-subtitle-fallback-font common-lisp:null))
   (font-color common-lisp:nil :type
    (common-lisp:or burnin-subtitle-font-color common-lisp:null))
   (font-opacity common-lisp:nil :type
    (common-lisp:or |__integerMin0Max255| common-lisp:null))
   (font-resolution common-lisp:nil :type
    (common-lisp:or |__integerMin96Max600| common-lisp:null))
   (font-script common-lisp:nil :type
    (common-lisp:or font-script common-lisp:null))
   (font-size common-lisp:nil :type
    (common-lisp:or |__integerMin0Max96| common-lisp:null))
   (hex-font-color common-lisp:nil :type
    (common-lisp:or |__stringMin6Max8Pattern09aFAF609aFAF2| common-lisp:null))
   (outline-color common-lisp:nil :type
    (common-lisp:or burnin-subtitle-outline-color common-lisp:null))
   (outline-size common-lisp:nil :type
    (common-lisp:or |__integerMin0Max10| common-lisp:null))
   (shadow-color common-lisp:nil :type
    (common-lisp:or burnin-subtitle-shadow-color common-lisp:null))
   (shadow-opacity common-lisp:nil :type
    (common-lisp:or |__integerMin0Max255| common-lisp:null))
   (shadow-xoffset common-lisp:nil :type
    (common-lisp:or |__integerMinNegative2147483648Max2147483647|
                    common-lisp:null))
   (shadow-yoffset common-lisp:nil :type
    (common-lisp:or |__integerMinNegative2147483648Max2147483647|
                    common-lisp:null))
   (style-passthrough common-lisp:nil :type
    (common-lisp:or burn-in-subtitle-style-passthrough common-lisp:null))
   (teletext-spacing common-lisp:nil :type
    (common-lisp:or burnin-subtitle-teletext-spacing common-lisp:null))
   (xposition common-lisp:nil :type
    (common-lisp:or |__integerMin0Max2147483647| common-lisp:null))
   (yposition common-lisp:nil :type
    (common-lisp:or |__integerMin0Max2147483647| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'burnin-destination-settings
                    'make-burnin-destination-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          burnin-destination-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          burnin-destination-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alignment))
      (common-lisp:list
       (common-lisp:cons "Alignment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'apply-font-color))
      (common-lisp:list
       (common-lisp:cons "ApplyFontColor"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'background-color))
      (common-lisp:list
       (common-lisp:cons "BackgroundColor"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'background-opacity))
      (common-lisp:list
       (common-lisp:cons "BackgroundOpacity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fallback-font))
      (common-lisp:list
       (common-lisp:cons "FallbackFont"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'font-color))
      (common-lisp:list
       (common-lisp:cons "FontColor"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'font-opacity))
      (common-lisp:list
       (common-lisp:cons "FontOpacity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'font-resolution))
      (common-lisp:list
       (common-lisp:cons "FontResolution"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'font-script))
      (common-lisp:list
       (common-lisp:cons "FontScript"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'font-size))
      (common-lisp:list
       (common-lisp:cons "FontSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hex-font-color))
      (common-lisp:list
       (common-lisp:cons "HexFontColor"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'outline-color))
      (common-lisp:list
       (common-lisp:cons "OutlineColor"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'outline-size))
      (common-lisp:list
       (common-lisp:cons "OutlineSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'shadow-color))
      (common-lisp:list
       (common-lisp:cons "ShadowColor"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'shadow-opacity))
      (common-lisp:list
       (common-lisp:cons "ShadowOpacity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'shadow-xoffset))
      (common-lisp:list
       (common-lisp:cons "ShadowXOffset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'shadow-yoffset))
      (common-lisp:list
       (common-lisp:cons "ShadowYOffset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'style-passthrough))
      (common-lisp:list
       (common-lisp:cons "StylePassthrough"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'teletext-spacing))
      (common-lisp:list
       (common-lisp:cons "TeletextSpacing"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'xposition))
      (common-lisp:list
       (common-lisp:cons "XPosition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'yposition))
      (common-lisp:list
       (common-lisp:cons "YPosition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          burnin-destination-settings))
   common-lisp:nil))
(common-lisp:deftype burnin-subtitle-alignment () 'common-lisp:string)
(common-lisp:deftype burnin-subtitle-apply-font-color () 'common-lisp:string)
(common-lisp:deftype burnin-subtitle-background-color () 'common-lisp:string)
(common-lisp:deftype burnin-subtitle-fallback-font () 'common-lisp:string)
(common-lisp:deftype burnin-subtitle-font-color () 'common-lisp:string)
(common-lisp:deftype burnin-subtitle-outline-color () 'common-lisp:string)
(common-lisp:deftype burnin-subtitle-shadow-color () 'common-lisp:string)
(common-lisp:deftype burnin-subtitle-teletext-spacing () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (cancel-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-cancel-job-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cancel-job-request 'make-cancel-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input cancel-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input cancel-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input cancel-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (cancel-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-cancel-job-response-")))
 (common-lisp:export
  (common-lisp:list 'cancel-job-response 'make-cancel-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input cancel-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input cancel-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input cancel-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (caption-description (:copier common-lisp:nil)
      (:conc-name "struct-shape-caption-description-"))
   (caption-selector-name common-lisp:nil :type
    (common-lisp:or |__stringMin1| common-lisp:null))
   (custom-language-code common-lisp:nil :type
    (common-lisp:or |__stringPatternAZaZ23AZaZ| common-lisp:null))
   (destination-settings common-lisp:nil :type
    (common-lisp:or caption-destination-settings common-lisp:null))
   (language-code common-lisp:nil :type
    (common-lisp:or language-code common-lisp:null))
   (language-description common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'caption-description 'make-caption-description))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input caption-description))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input caption-description))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'caption-selector-name))
      (common-lisp:list
       (common-lisp:cons "CaptionSelectorName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'custom-language-code))
      (common-lisp:list
       (common-lisp:cons "CustomLanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'destination-settings))
      (common-lisp:list
       (common-lisp:cons "DestinationSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'language-description))
      (common-lisp:list
       (common-lisp:cons "LanguageDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input caption-description))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (caption-description-preset (:copier common-lisp:nil)
      (:conc-name "struct-shape-caption-description-preset-"))
   (custom-language-code common-lisp:nil :type
    (common-lisp:or |__stringPatternAZaZ23AZaZ| common-lisp:null))
   (destination-settings common-lisp:nil :type
    (common-lisp:or caption-destination-settings common-lisp:null))
   (language-code common-lisp:nil :type
    (common-lisp:or language-code common-lisp:null))
   (language-description common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'caption-description-preset
                    'make-caption-description-preset))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          caption-description-preset))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          caption-description-preset))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'custom-language-code))
      (common-lisp:list
       (common-lisp:cons "CustomLanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'destination-settings))
      (common-lisp:list
       (common-lisp:cons "DestinationSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'language-description))
      (common-lisp:list
       (common-lisp:cons "LanguageDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          caption-description-preset))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (caption-destination-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-caption-destination-settings-"))
   (burnin-destination-settings common-lisp:nil :type
    (common-lisp:or burnin-destination-settings common-lisp:null))
   (destination-type common-lisp:nil :type
    (common-lisp:or caption-destination-type common-lisp:null))
   (dvb-sub-destination-settings common-lisp:nil :type
    (common-lisp:or dvb-sub-destination-settings common-lisp:null))
   (embedded-destination-settings common-lisp:nil :type
    (common-lisp:or embedded-destination-settings common-lisp:null))
   (imsc-destination-settings common-lisp:nil :type
    (common-lisp:or imsc-destination-settings common-lisp:null))
   (scc-destination-settings common-lisp:nil :type
    (common-lisp:or scc-destination-settings common-lisp:null))
   (srt-destination-settings common-lisp:nil :type
    (common-lisp:or srt-destination-settings common-lisp:null))
   (teletext-destination-settings common-lisp:nil :type
    (common-lisp:or teletext-destination-settings common-lisp:null))
   (ttml-destination-settings common-lisp:nil :type
    (common-lisp:or ttml-destination-settings common-lisp:null))
   (webvtt-destination-settings common-lisp:nil :type
    (common-lisp:or webvtt-destination-settings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'caption-destination-settings
                    'make-caption-destination-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          caption-destination-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          caption-destination-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'burnin-destination-settings))
      (common-lisp:list
       (common-lisp:cons "BurninDestinationSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination-type))
      (common-lisp:list
       (common-lisp:cons "DestinationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dvb-sub-destination-settings))
      (common-lisp:list
       (common-lisp:cons "DvbSubDestinationSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'embedded-destination-settings))
      (common-lisp:list
       (common-lisp:cons "EmbeddedDestinationSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'imsc-destination-settings))
      (common-lisp:list
       (common-lisp:cons "ImscDestinationSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'scc-destination-settings))
      (common-lisp:list
       (common-lisp:cons "SccDestinationSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'srt-destination-settings))
      (common-lisp:list
       (common-lisp:cons "SrtDestinationSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'teletext-destination-settings))
      (common-lisp:list
       (common-lisp:cons "TeletextDestinationSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ttml-destination-settings))
      (common-lisp:list
       (common-lisp:cons "TtmlDestinationSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'webvtt-destination-settings))
      (common-lisp:list
       (common-lisp:cons "WebvttDestinationSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          caption-destination-settings))
   common-lisp:nil))
(common-lisp:deftype caption-destination-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (caption-selector (:copier common-lisp:nil)
      (:conc-name "struct-shape-caption-selector-"))
   (custom-language-code common-lisp:nil :type
    (common-lisp:or |__stringMin3Max3PatternAZaZ3| common-lisp:null))
   (language-code common-lisp:nil :type
    (common-lisp:or language-code common-lisp:null))
   (source-settings common-lisp:nil :type
    (common-lisp:or caption-source-settings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'caption-selector 'make-caption-selector))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input caption-selector))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input caption-selector))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'custom-language-code))
      (common-lisp:list
       (common-lisp:cons "CustomLanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-settings))
      (common-lisp:list
       (common-lisp:cons "SourceSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input caption-selector))
   common-lisp:nil))
(common-lisp:deftype caption-source-convert-paint-on-to-pop-on ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (caption-source-framerate (:copier common-lisp:nil)
      (:conc-name "struct-shape-caption-source-framerate-"))
   (framerate-denominator common-lisp:nil :type
    (common-lisp:or |__integerMin1Max1001| common-lisp:null))
   (framerate-numerator common-lisp:nil :type
    (common-lisp:or |__integerMin1Max60000| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'caption-source-framerate 'make-caption-source-framerate))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          caption-source-framerate))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          caption-source-framerate))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'framerate-denominator))
      (common-lisp:list
       (common-lisp:cons "FramerateDenominator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'framerate-numerator))
      (common-lisp:list
       (common-lisp:cons "FramerateNumerator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          caption-source-framerate))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (caption-source-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-caption-source-settings-"))
   (ancillary-source-settings common-lisp:nil :type
    (common-lisp:or ancillary-source-settings common-lisp:null))
   (dvb-sub-source-settings common-lisp:nil :type
    (common-lisp:or dvb-sub-source-settings common-lisp:null))
   (embedded-source-settings common-lisp:nil :type
    (common-lisp:or embedded-source-settings common-lisp:null))
   (file-source-settings common-lisp:nil :type
    (common-lisp:or file-source-settings common-lisp:null))
   (source-type common-lisp:nil :type
    (common-lisp:or caption-source-type common-lisp:null))
   (teletext-source-settings common-lisp:nil :type
    (common-lisp:or teletext-source-settings common-lisp:null))
   (track-source-settings common-lisp:nil :type
    (common-lisp:or track-source-settings common-lisp:null))
   (webvtt-hls-source-settings common-lisp:nil :type
    (common-lisp:or webvtt-hls-source-settings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'caption-source-settings 'make-caption-source-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          caption-source-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          caption-source-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ancillary-source-settings))
      (common-lisp:list
       (common-lisp:cons "AncillarySourceSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dvb-sub-source-settings))
      (common-lisp:list
       (common-lisp:cons "DvbSubSourceSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'embedded-source-settings))
      (common-lisp:list
       (common-lisp:cons "EmbeddedSourceSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'file-source-settings))
      (common-lisp:list
       (common-lisp:cons "FileSourceSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-type))
      (common-lisp:list
       (common-lisp:cons "SourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'teletext-source-settings))
      (common-lisp:list
       (common-lisp:cons "TeletextSourceSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'track-source-settings))
      (common-lisp:list
       (common-lisp:cons "TrackSourceSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'webvtt-hls-source-settings))
      (common-lisp:list
       (common-lisp:cons "WebvttHlsSourceSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          caption-source-settings))
   common-lisp:nil))
(common-lisp:deftype caption-source-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (channel-mapping (:copier common-lisp:nil)
      (:conc-name "struct-shape-channel-mapping-"))
   (output-channels common-lisp:nil :type
    (common-lisp:or |__listOfOutputChannelMapping| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'channel-mapping 'make-channel-mapping))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input channel-mapping))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input channel-mapping))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-channels))
      (common-lisp:list
       (common-lisp:cons "OutputChannels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input channel-mapping))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (clip-limits (:copier common-lisp:nil)
      (:conc-name "struct-shape-clip-limits-"))
   (maximum-rgbtolerance common-lisp:nil :type
    (common-lisp:or |__integerMin90Max105| common-lisp:null))
   (maximum-yuv common-lisp:nil :type
    (common-lisp:or |__integerMin920Max1023| common-lisp:null))
   (minimum-rgbtolerance common-lisp:nil :type
    (common-lisp:or |__integerMinNegative5Max10| common-lisp:null))
   (minimum-yuv common-lisp:nil :type
    (common-lisp:or |__integerMin0Max128| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'clip-limits 'make-clip-limits))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input clip-limits))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input clip-limits))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'maximum-rgbtolerance))
      (common-lisp:list
       (common-lisp:cons "MaximumRGBTolerance"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'maximum-yuv))
      (common-lisp:list
       (common-lisp:cons "MaximumYUV"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'minimum-rgbtolerance))
      (common-lisp:list
       (common-lisp:cons "MinimumRGBTolerance"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'minimum-yuv))
      (common-lisp:list
       (common-lisp:cons "MinimumYUV"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input clip-limits))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (cmaf-additional-manifest (:copier common-lisp:nil)
      (:conc-name "struct-shape-cmaf-additional-manifest-"))
   (manifest-name-modifier common-lisp:nil :type
    (common-lisp:or |__stringMin1| common-lisp:null))
   (selected-outputs common-lisp:nil :type
    (common-lisp:or |__listOf__stringMin1| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cmaf-additional-manifest 'make-cmaf-additional-manifest))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cmaf-additional-manifest))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cmaf-additional-manifest))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'manifest-name-modifier))
      (common-lisp:list
       (common-lisp:cons "ManifestNameModifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'selected-outputs))
      (common-lisp:list
       (common-lisp:cons "SelectedOutputs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cmaf-additional-manifest))
   common-lisp:nil))
(common-lisp:deftype cmaf-client-cache () 'common-lisp:string)
(common-lisp:deftype cmaf-codec-specification () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (cmaf-encryption-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-cmaf-encryption-settings-"))
   (constant-initialization-vector common-lisp:nil :type
    (common-lisp:or |__stringMin32Max32Pattern09aFAF32| common-lisp:null))
   (encryption-method common-lisp:nil :type
    (common-lisp:or cmaf-encryption-type common-lisp:null))
   (initialization-vector-in-manifest common-lisp:nil :type
    (common-lisp:or cmaf-initialization-vector-in-manifest common-lisp:null))
   (speke-key-provider common-lisp:nil :type
    (common-lisp:or speke-key-provider-cmaf common-lisp:null))
   (static-key-provider common-lisp:nil :type
    (common-lisp:or static-key-provider common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or cmaf-key-provider-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cmaf-encryption-settings 'make-cmaf-encryption-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cmaf-encryption-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cmaf-encryption-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'constant-initialization-vector))
      (common-lisp:list
       (common-lisp:cons "ConstantInitializationVector"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption-method))
      (common-lisp:list
       (common-lisp:cons "EncryptionMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'initialization-vector-in-manifest))
      (common-lisp:list
       (common-lisp:cons "InitializationVectorInManifest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'speke-key-provider))
      (common-lisp:list
       (common-lisp:cons "SpekeKeyProvider"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'static-key-provider))
      (common-lisp:list
       (common-lisp:cons "StaticKeyProvider"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cmaf-encryption-settings))
   common-lisp:nil))
(common-lisp:deftype cmaf-encryption-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (cmaf-group-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-cmaf-group-settings-"))
   (additional-manifests common-lisp:nil :type
    (common-lisp:or |__listOfCmafAdditionalManifest| common-lisp:null))
   (base-url common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (client-cache common-lisp:nil :type
    (common-lisp:or cmaf-client-cache common-lisp:null))
   (codec-specification common-lisp:nil :type
    (common-lisp:or cmaf-codec-specification common-lisp:null))
   (dash-manifest-style common-lisp:nil :type
    (common-lisp:or dash-manifest-style common-lisp:null))
   (destination common-lisp:nil :type
    (common-lisp:or |__stringPatternS3| common-lisp:null))
   (destination-settings common-lisp:nil :type
    (common-lisp:or destination-settings common-lisp:null))
   (encryption common-lisp:nil :type
    (common-lisp:or cmaf-encryption-settings common-lisp:null))
   (fragment-length common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2147483647| common-lisp:null))
   (image-based-trick-play common-lisp:nil :type
    (common-lisp:or cmaf-image-based-trick-play common-lisp:null))
   (image-based-trick-play-settings common-lisp:nil :type
    (common-lisp:or cmaf-image-based-trick-play-settings common-lisp:null))
   (manifest-compression common-lisp:nil :type
    (common-lisp:or cmaf-manifest-compression common-lisp:null))
   (manifest-duration-format common-lisp:nil :type
    (common-lisp:or cmaf-manifest-duration-format common-lisp:null))
   (min-buffer-time common-lisp:nil :type
    (common-lisp:or |__integerMin0Max2147483647| common-lisp:null))
   (min-final-segment-length common-lisp:nil :type
    (common-lisp:or |__doubleMin0Max2147483647| common-lisp:null))
   (mpd-manifest-bandwidth-type common-lisp:nil :type
    (common-lisp:or cmaf-mpd-manifest-bandwidth-type common-lisp:null))
   (mpd-profile common-lisp:nil :type
    (common-lisp:or cmaf-mpd-profile common-lisp:null))
   (pts-offset-handling-for-bframes common-lisp:nil :type
    (common-lisp:or cmaf-pts-offset-handling-for-bframes common-lisp:null))
   (segment-control common-lisp:nil :type
    (common-lisp:or cmaf-segment-control common-lisp:null))
   (segment-length common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2147483647| common-lisp:null))
   (segment-length-control common-lisp:nil :type
    (common-lisp:or cmaf-segment-length-control common-lisp:null))
   (stream-inf-resolution common-lisp:nil :type
    (common-lisp:or cmaf-stream-inf-resolution common-lisp:null))
   (target-duration-compatibility-mode common-lisp:nil :type
    (common-lisp:or cmaf-target-duration-compatibility-mode common-lisp:null))
   (video-composition-offsets common-lisp:nil :type
    (common-lisp:or cmaf-video-composition-offsets common-lisp:null))
   (write-dash-manifest common-lisp:nil :type
    (common-lisp:or cmaf-write-dashmanifest common-lisp:null))
   (write-hls-manifest common-lisp:nil :type
    (common-lisp:or cmaf-write-hlsmanifest common-lisp:null))
   (write-segment-timeline-in-representation common-lisp:nil :type
    (common-lisp:or cmaf-write-segment-timeline-in-representation
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cmaf-group-settings 'make-cmaf-group-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input cmaf-group-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input cmaf-group-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-manifests))
      (common-lisp:list
       (common-lisp:cons "AdditionalManifests"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'base-url))
      (common-lisp:list
       (common-lisp:cons "BaseUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-cache))
      (common-lisp:list
       (common-lisp:cons "ClientCache"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'codec-specification))
      (common-lisp:list
       (common-lisp:cons "CodecSpecification"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dash-manifest-style))
      (common-lisp:list
       (common-lisp:cons "DashManifestStyle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination))
      (common-lisp:list
       (common-lisp:cons "Destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'destination-settings))
      (common-lisp:list
       (common-lisp:cons "DestinationSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption))
      (common-lisp:list
       (common-lisp:cons "Encryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fragment-length))
      (common-lisp:list
       (common-lisp:cons "FragmentLength"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'image-based-trick-play))
      (common-lisp:list
       (common-lisp:cons "ImageBasedTrickPlay"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'image-based-trick-play-settings))
      (common-lisp:list
       (common-lisp:cons "ImageBasedTrickPlaySettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'manifest-compression))
      (common-lisp:list
       (common-lisp:cons "ManifestCompression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'manifest-duration-format))
      (common-lisp:list
       (common-lisp:cons "ManifestDurationFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'min-buffer-time))
      (common-lisp:list
       (common-lisp:cons "MinBufferTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'min-final-segment-length))
      (common-lisp:list
       (common-lisp:cons "MinFinalSegmentLength"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'mpd-manifest-bandwidth-type))
      (common-lisp:list
       (common-lisp:cons "MpdManifestBandwidthType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mpd-profile))
      (common-lisp:list
       (common-lisp:cons "MpdProfile"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pts-offset-handling-for-bframes))
      (common-lisp:list
       (common-lisp:cons "PtsOffsetHandlingForBFrames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-control))
      (common-lisp:list
       (common-lisp:cons "SegmentControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-length))
      (common-lisp:list
       (common-lisp:cons "SegmentLength"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'segment-length-control))
      (common-lisp:list
       (common-lisp:cons "SegmentLengthControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'stream-inf-resolution))
      (common-lisp:list
       (common-lisp:cons "StreamInfResolution"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'target-duration-compatibility-mode))
      (common-lisp:list
       (common-lisp:cons "TargetDurationCompatibilityMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'video-composition-offsets))
      (common-lisp:list
       (common-lisp:cons "VideoCompositionOffsets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'write-dash-manifest))
      (common-lisp:list
       (common-lisp:cons "WriteDashManifest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'write-hls-manifest))
      (common-lisp:list
       (common-lisp:cons "WriteHlsManifest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'write-segment-timeline-in-representation))
      (common-lisp:list
       (common-lisp:cons "WriteSegmentTimelineInRepresentation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input cmaf-group-settings))
   common-lisp:nil))
(common-lisp:deftype cmaf-image-based-trick-play () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (cmaf-image-based-trick-play-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-cmaf-image-based-trick-play-settings-"))
   (interval-cadence common-lisp:nil :type
    (common-lisp:or cmaf-interval-cadence common-lisp:null))
   (thumbnail-height common-lisp:nil :type
    (common-lisp:or |__integerMin2Max4096| common-lisp:null))
   (thumbnail-interval common-lisp:nil :type
    (common-lisp:or |__doubleMin0Max2147483647| common-lisp:null))
   (thumbnail-width common-lisp:nil :type
    (common-lisp:or |__integerMin8Max4096| common-lisp:null))
   (tile-height common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2048| common-lisp:null))
   (tile-width common-lisp:nil :type
    (common-lisp:or |__integerMin1Max512| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cmaf-image-based-trick-play-settings
                    'make-cmaf-image-based-trick-play-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cmaf-image-based-trick-play-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cmaf-image-based-trick-play-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'interval-cadence))
      (common-lisp:list
       (common-lisp:cons "IntervalCadence"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'thumbnail-height))
      (common-lisp:list
       (common-lisp:cons "ThumbnailHeight"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'thumbnail-interval))
      (common-lisp:list
       (common-lisp:cons "ThumbnailInterval"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'thumbnail-width))
      (common-lisp:list
       (common-lisp:cons "ThumbnailWidth"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tile-height))
      (common-lisp:list
       (common-lisp:cons "TileHeight"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tile-width))
      (common-lisp:list
       (common-lisp:cons "TileWidth"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cmaf-image-based-trick-play-settings))
   common-lisp:nil))
(common-lisp:deftype cmaf-initialization-vector-in-manifest ()
  'common-lisp:string)
(common-lisp:deftype cmaf-interval-cadence () 'common-lisp:string)
(common-lisp:deftype cmaf-key-provider-type () 'common-lisp:string)
(common-lisp:deftype cmaf-manifest-compression () 'common-lisp:string)
(common-lisp:deftype cmaf-manifest-duration-format () 'common-lisp:string)
(common-lisp:deftype cmaf-mpd-manifest-bandwidth-type () 'common-lisp:string)
(common-lisp:deftype cmaf-mpd-profile () 'common-lisp:string)
(common-lisp:deftype cmaf-pts-offset-handling-for-bframes ()
  'common-lisp:string)
(common-lisp:deftype cmaf-segment-control () 'common-lisp:string)
(common-lisp:deftype cmaf-segment-length-control () 'common-lisp:string)
(common-lisp:deftype cmaf-stream-inf-resolution () 'common-lisp:string)
(common-lisp:deftype cmaf-target-duration-compatibility-mode ()
  'common-lisp:string)
(common-lisp:deftype cmaf-video-composition-offsets () 'common-lisp:string)
(common-lisp:deftype cmaf-write-dashmanifest () 'common-lisp:string)
(common-lisp:deftype cmaf-write-hlsmanifest () 'common-lisp:string)
(common-lisp:deftype cmaf-write-segment-timeline-in-representation ()
  'common-lisp:string)
(common-lisp:deftype cmfc-audio-duration () 'common-lisp:string)
(common-lisp:deftype cmfc-audio-track-type () 'common-lisp:string)
(common-lisp:deftype cmfc-descriptive-video-service-flag () 'common-lisp:string)
(common-lisp:deftype cmfc-iframe-only-manifest () 'common-lisp:string)
(common-lisp:deftype cmfc-klv-metadata () 'common-lisp:string)
(common-lisp:deftype cmfc-manifest-metadata-signaling () 'common-lisp:string)
(common-lisp:deftype cmfc-scte35esam () 'common-lisp:string)
(common-lisp:deftype cmfc-scte35source () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (cmfc-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-cmfc-settings-"))
   (audio-duration common-lisp:nil :type
    (common-lisp:or cmfc-audio-duration common-lisp:null))
   (audio-group-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (audio-rendition-sets common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (audio-track-type common-lisp:nil :type
    (common-lisp:or cmfc-audio-track-type common-lisp:null))
   (descriptive-video-service-flag common-lisp:nil :type
    (common-lisp:or cmfc-descriptive-video-service-flag common-lisp:null))
   (iframe-only-manifest common-lisp:nil :type
    (common-lisp:or cmfc-iframe-only-manifest common-lisp:null))
   (klv-metadata common-lisp:nil :type
    (common-lisp:or cmfc-klv-metadata common-lisp:null))
   (manifest-metadata-signaling common-lisp:nil :type
    (common-lisp:or cmfc-manifest-metadata-signaling common-lisp:null))
   (scte35esam common-lisp:nil :type
    (common-lisp:or cmfc-scte35esam common-lisp:null))
   (scte35source common-lisp:nil :type
    (common-lisp:or cmfc-scte35source common-lisp:null))
   (timed-metadata common-lisp:nil :type
    (common-lisp:or cmfc-timed-metadata common-lisp:null))
   (timed-metadata-box-version common-lisp:nil :type
    (common-lisp:or cmfc-timed-metadata-box-version common-lisp:null))
   (timed-metadata-scheme-id-uri common-lisp:nil :type
    (common-lisp:or |__stringMax1000| common-lisp:null))
   (timed-metadata-value common-lisp:nil :type
    (common-lisp:or |__stringMax1000| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cmfc-settings 'make-cmfc-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input cmfc-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input cmfc-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audio-duration))
      (common-lisp:list
       (common-lisp:cons "AudioDuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audio-group-id))
      (common-lisp:list
       (common-lisp:cons "AudioGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'audio-rendition-sets))
      (common-lisp:list
       (common-lisp:cons "AudioRenditionSets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audio-track-type))
      (common-lisp:list
       (common-lisp:cons "AudioTrackType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'descriptive-video-service-flag))
      (common-lisp:list
       (common-lisp:cons "DescriptiveVideoServiceFlag"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'iframe-only-manifest))
      (common-lisp:list
       (common-lisp:cons "IFrameOnlyManifest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'klv-metadata))
      (common-lisp:list
       (common-lisp:cons "KlvMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'manifest-metadata-signaling))
      (common-lisp:list
       (common-lisp:cons "ManifestMetadataSignaling"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scte35esam))
      (common-lisp:list
       (common-lisp:cons "Scte35Esam"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scte35source))
      (common-lisp:list
       (common-lisp:cons "Scte35Source"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timed-metadata))
      (common-lisp:list
       (common-lisp:cons "TimedMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'timed-metadata-box-version))
      (common-lisp:list
       (common-lisp:cons "TimedMetadataBoxVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'timed-metadata-scheme-id-uri))
      (common-lisp:list
       (common-lisp:cons "TimedMetadataSchemeIdUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'timed-metadata-value))
      (common-lisp:list
       (common-lisp:cons "TimedMetadataValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input cmfc-settings))
   common-lisp:nil))
(common-lisp:deftype cmfc-timed-metadata () 'common-lisp:string)
(common-lisp:deftype cmfc-timed-metadata-box-version () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (color-corrector (:copier common-lisp:nil)
      (:conc-name "struct-shape-color-corrector-"))
   (brightness common-lisp:nil :type
    (common-lisp:or |__integerMin1Max100| common-lisp:null))
   (clip-limits common-lisp:nil :type
    (common-lisp:or clip-limits common-lisp:null))
   (color-space-conversion common-lisp:nil :type
    (common-lisp:or color-space-conversion common-lisp:null))
   (contrast common-lisp:nil :type
    (common-lisp:or |__integerMin1Max100| common-lisp:null))
   (hdr10metadata common-lisp:nil :type
    (common-lisp:or hdr10metadata common-lisp:null))
   (hdr-to-sdr-tone-mapper common-lisp:nil :type
    (common-lisp:or hdrto-sdrtone-mapper common-lisp:null))
   (hue common-lisp:nil :type
    (common-lisp:or |__integerMinNegative180Max180| common-lisp:null))
   (sample-range-conversion common-lisp:nil :type
    (common-lisp:or sample-range-conversion common-lisp:null))
   (saturation common-lisp:nil :type
    (common-lisp:or |__integerMin1Max100| common-lisp:null))
   (sdr-reference-white-level common-lisp:nil :type
    (common-lisp:or |__integerMin100Max1000| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'color-corrector 'make-color-corrector))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input color-corrector))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input color-corrector))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'brightness))
      (common-lisp:list
       (common-lisp:cons "Brightness"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'clip-limits))
      (common-lisp:list
       (common-lisp:cons "ClipLimits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'color-space-conversion))
      (common-lisp:list
       (common-lisp:cons "ColorSpaceConversion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'contrast))
      (common-lisp:list
       (common-lisp:cons "Contrast"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hdr10metadata))
      (common-lisp:list
       (common-lisp:cons "Hdr10Metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'hdr-to-sdr-tone-mapper))
      (common-lisp:list
       (common-lisp:cons "HdrToSdrToneMapper"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hue))
      (common-lisp:list
       (common-lisp:cons "Hue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sample-range-conversion))
      (common-lisp:list
       (common-lisp:cons "SampleRangeConversion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'saturation))
      (common-lisp:list
       (common-lisp:cons "Saturation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sdr-reference-white-level))
      (common-lisp:list
       (common-lisp:cons "SdrReferenceWhiteLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input color-corrector))
   common-lisp:nil))
(common-lisp:deftype color-metadata () 'common-lisp:string)
(common-lisp:deftype color-space () 'common-lisp:string)
(common-lisp:deftype color-space-conversion () 'common-lisp:string)
(common-lisp:deftype color-space-usage () 'common-lisp:string)
(common-lisp:deftype commitment () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (mediaconvert-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (container-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-container-settings-"))
   (cmfc-settings common-lisp:nil :type
    (common-lisp:or cmfc-settings common-lisp:null))
   (container common-lisp:nil :type
    (common-lisp:or container-type common-lisp:null))
   (f4v-settings common-lisp:nil :type
    (common-lisp:or f4v-settings common-lisp:null))
   (m2ts-settings common-lisp:nil :type
    (common-lisp:or m2ts-settings common-lisp:null))
   (m3u8settings common-lisp:nil :type
    (common-lisp:or m3u8settings common-lisp:null))
   (mov-settings common-lisp:nil :type
    (common-lisp:or mov-settings common-lisp:null))
   (mp4settings common-lisp:nil :type
    (common-lisp:or mp4settings common-lisp:null))
   (mpd-settings common-lisp:nil :type
    (common-lisp:or mpd-settings common-lisp:null))
   (mxf-settings common-lisp:nil :type
    (common-lisp:or mxf-settings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'container-settings 'make-container-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input container-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input container-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cmfc-settings))
      (common-lisp:list
       (common-lisp:cons "CmfcSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container))
      (common-lisp:list
       (common-lisp:cons "Container"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'f4v-settings))
      (common-lisp:list
       (common-lisp:cons "F4vSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'm2ts-settings))
      (common-lisp:list
       (common-lisp:cons "M2tsSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'm3u8settings))
      (common-lisp:list
       (common-lisp:cons "M3u8Settings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mov-settings))
      (common-lisp:list
       (common-lisp:cons "MovSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mp4settings))
      (common-lisp:list
       (common-lisp:cons "Mp4Settings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mpd-settings))
      (common-lisp:list
       (common-lisp:cons "MpdSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mxf-settings))
      (common-lisp:list
       (common-lisp:cons "MxfSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input container-settings))
   common-lisp:nil))
(common-lisp:deftype container-type () 'common-lisp:string)
(common-lisp:deftype copy-protection-action () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (create-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-job-request-"))
   (acceleration-settings common-lisp:nil :type
    (common-lisp:or acceleration-settings common-lisp:null))
   (billing-tags-source common-lisp:nil :type
    (common-lisp:or billing-tags-source common-lisp:null))
   (client-request-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (hop-destinations common-lisp:nil :type
    (common-lisp:or |__listOfHopDestination| common-lisp:null))
   (job-template common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (priority common-lisp:nil :type
    (common-lisp:or |__integerMinNegative50Max50| common-lisp:null))
   (queue common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (role (common-lisp:error ":role is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (settings (common-lisp:error ":settings is required") :type
    (common-lisp:or job-settings common-lisp:null))
   (simulate-reserved-queue common-lisp:nil :type
    (common-lisp:or simulate-reserved-queue common-lisp:null))
   (status-update-interval common-lisp:nil :type
    (common-lisp:or status-update-interval common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or |__mapOf__string| common-lisp:null))
   (user-metadata common-lisp:nil :type
    (common-lisp:or |__mapOf__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-job-request 'make-create-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'acceleration-settings))
      (common-lisp:list
       (common-lisp:cons "AccelerationSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-tags-source))
      (common-lisp:list
       (common-lisp:cons "BillingTagsSource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hop-destinations))
      (common-lisp:list
       (common-lisp:cons "HopDestinations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-template))
      (common-lisp:list
       (common-lisp:cons "JobTemplate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'priority))
      (common-lisp:list
       (common-lisp:cons "Priority"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'queue))
      (common-lisp:list
       (common-lisp:cons "Queue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role))
      (common-lisp:list
       (common-lisp:cons "Role"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'settings))
      (common-lisp:list
       (common-lisp:cons "Settings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'simulate-reserved-queue))
      (common-lisp:list
       (common-lisp:cons "SimulateReservedQueue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'status-update-interval))
      (common-lisp:list
       (common-lisp:cons "StatusUpdateInterval"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-metadata))
      (common-lisp:list
       (common-lisp:cons "UserMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-job-response-"))
   (job common-lisp:nil :type (common-lisp:or job common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-job-response 'make-create-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job))
      (common-lisp:list
       (common-lisp:cons "Job"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-job-template-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-job-template-request-"))
   (acceleration-settings common-lisp:nil :type
    (common-lisp:or acceleration-settings common-lisp:null))
   (category common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (hop-destinations common-lisp:nil :type
    (common-lisp:or |__listOfHopDestination| common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (priority common-lisp:nil :type
    (common-lisp:or |__integerMinNegative50Max50| common-lisp:null))
   (queue common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (settings (common-lisp:error ":settings is required") :type
    (common-lisp:or job-template-settings common-lisp:null))
   (status-update-interval common-lisp:nil :type
    (common-lisp:or status-update-interval common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or |__mapOf__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-job-template-request
                    'make-create-job-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-job-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-job-template-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'acceleration-settings))
      (common-lisp:list
       (common-lisp:cons "AccelerationSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'category))
      (common-lisp:list
       (common-lisp:cons "Category"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hop-destinations))
      (common-lisp:list
       (common-lisp:cons "HopDestinations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'priority))
      (common-lisp:list
       (common-lisp:cons "Priority"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'queue))
      (common-lisp:list
       (common-lisp:cons "Queue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'settings))
      (common-lisp:list
       (common-lisp:cons "Settings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'status-update-interval))
      (common-lisp:list
       (common-lisp:cons "StatusUpdateInterval"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-job-template-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-job-template-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-job-template-response-"))
   (job-template common-lisp:nil :type
    (common-lisp:or job-template common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-job-template-response
                    'make-create-job-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-job-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-job-template-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-template))
      (common-lisp:list
       (common-lisp:cons "JobTemplate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-job-template-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-preset-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-preset-request-"))
   (category common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (settings (common-lisp:error ":settings is required") :type
    (common-lisp:or preset-settings common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or |__mapOf__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-preset-request 'make-create-preset-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-preset-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-preset-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'category))
      (common-lisp:list
       (common-lisp:cons "Category"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'settings))
      (common-lisp:list
       (common-lisp:cons "Settings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-preset-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-preset-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-preset-response-"))
   (preset common-lisp:nil :type (common-lisp:or preset common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-preset-response 'make-create-preset-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-preset-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-preset-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'preset))
      (common-lisp:list
       (common-lisp:cons "Preset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-preset-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-queue-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-queue-request-"))
   (description common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (pricing-plan common-lisp:nil :type
    (common-lisp:or pricing-plan common-lisp:null))
   (reservation-plan-settings common-lisp:nil :type
    (common-lisp:or reservation-plan-settings common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or queue-status common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or |__mapOf__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-queue-request 'make-create-queue-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-queue-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-queue-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pricing-plan))
      (common-lisp:list
       (common-lisp:cons "PricingPlan"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'reservation-plan-settings))
      (common-lisp:list
       (common-lisp:cons "ReservationPlanSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-queue-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-queue-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-queue-response-"))
   (queue common-lisp:nil :type (common-lisp:or queue common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-queue-response 'make-create-queue-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-queue-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-queue-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'queue))
      (common-lisp:list
       (common-lisp:cons "Queue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-queue-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (dash-additional-manifest (:copier common-lisp:nil)
      (:conc-name "struct-shape-dash-additional-manifest-"))
   (manifest-name-modifier common-lisp:nil :type
    (common-lisp:or |__stringMin1| common-lisp:null))
   (selected-outputs common-lisp:nil :type
    (common-lisp:or |__listOf__stringMin1| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'dash-additional-manifest 'make-dash-additional-manifest))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          dash-additional-manifest))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          dash-additional-manifest))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'manifest-name-modifier))
      (common-lisp:list
       (common-lisp:cons "ManifestNameModifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'selected-outputs))
      (common-lisp:list
       (common-lisp:cons "SelectedOutputs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          dash-additional-manifest))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (dash-iso-encryption-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-dash-iso-encryption-settings-"))
   (playback-device-compatibility common-lisp:nil :type
    (common-lisp:or dash-iso-playback-device-compatibility common-lisp:null))
   (speke-key-provider common-lisp:nil :type
    (common-lisp:or speke-key-provider common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'dash-iso-encryption-settings
                    'make-dash-iso-encryption-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          dash-iso-encryption-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          dash-iso-encryption-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'playback-device-compatibility))
      (common-lisp:list
       (common-lisp:cons "PlaybackDeviceCompatibility"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'speke-key-provider))
      (common-lisp:list
       (common-lisp:cons "SpekeKeyProvider"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          dash-iso-encryption-settings))
   common-lisp:nil))
(common-lisp:deftype dash-iso-group-audio-channel-config-scheme-id-uri ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (dash-iso-group-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-dash-iso-group-settings-"))
   (additional-manifests common-lisp:nil :type
    (common-lisp:or |__listOfDashAdditionalManifest| common-lisp:null))
   (audio-channel-config-scheme-id-uri common-lisp:nil :type
    (common-lisp:or dash-iso-group-audio-channel-config-scheme-id-uri
                    common-lisp:null))
   (base-url common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (dash-manifest-style common-lisp:nil :type
    (common-lisp:or dash-manifest-style common-lisp:null))
   (destination common-lisp:nil :type
    (common-lisp:or |__stringPatternS3| common-lisp:null))
   (destination-settings common-lisp:nil :type
    (common-lisp:or destination-settings common-lisp:null))
   (encryption common-lisp:nil :type
    (common-lisp:or dash-iso-encryption-settings common-lisp:null))
   (fragment-length common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2147483647| common-lisp:null))
   (hbbtv-compliance common-lisp:nil :type
    (common-lisp:or dash-iso-hbbtv-compliance common-lisp:null))
   (image-based-trick-play common-lisp:nil :type
    (common-lisp:or dash-iso-image-based-trick-play common-lisp:null))
   (image-based-trick-play-settings common-lisp:nil :type
    (common-lisp:or dash-iso-image-based-trick-play-settings common-lisp:null))
   (min-buffer-time common-lisp:nil :type
    (common-lisp:or |__integerMin0Max2147483647| common-lisp:null))
   (min-final-segment-length common-lisp:nil :type
    (common-lisp:or |__doubleMin0Max2147483647| common-lisp:null))
   (mpd-manifest-bandwidth-type common-lisp:nil :type
    (common-lisp:or dash-iso-mpd-manifest-bandwidth-type common-lisp:null))
   (mpd-profile common-lisp:nil :type
    (common-lisp:or dash-iso-mpd-profile common-lisp:null))
   (pts-offset-handling-for-bframes common-lisp:nil :type
    (common-lisp:or dash-iso-pts-offset-handling-for-bframes common-lisp:null))
   (segment-control common-lisp:nil :type
    (common-lisp:or dash-iso-segment-control common-lisp:null))
   (segment-length common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2147483647| common-lisp:null))
   (segment-length-control common-lisp:nil :type
    (common-lisp:or dash-iso-segment-length-control common-lisp:null))
   (video-composition-offsets common-lisp:nil :type
    (common-lisp:or dash-iso-video-composition-offsets common-lisp:null))
   (write-segment-timeline-in-representation common-lisp:nil :type
    (common-lisp:or dash-iso-write-segment-timeline-in-representation
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'dash-iso-group-settings 'make-dash-iso-group-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          dash-iso-group-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          dash-iso-group-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-manifests))
      (common-lisp:list
       (common-lisp:cons "AdditionalManifests"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'audio-channel-config-scheme-id-uri))
      (common-lisp:list
       (common-lisp:cons "AudioChannelConfigSchemeIdUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'base-url))
      (common-lisp:list
       (common-lisp:cons "BaseUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dash-manifest-style))
      (common-lisp:list
       (common-lisp:cons "DashManifestStyle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination))
      (common-lisp:list
       (common-lisp:cons "Destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'destination-settings))
      (common-lisp:list
       (common-lisp:cons "DestinationSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption))
      (common-lisp:list
       (common-lisp:cons "Encryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fragment-length))
      (common-lisp:list
       (common-lisp:cons "FragmentLength"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hbbtv-compliance))
      (common-lisp:list
       (common-lisp:cons "HbbtvCompliance"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'image-based-trick-play))
      (common-lisp:list
       (common-lisp:cons "ImageBasedTrickPlay"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'image-based-trick-play-settings))
      (common-lisp:list
       (common-lisp:cons "ImageBasedTrickPlaySettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'min-buffer-time))
      (common-lisp:list
       (common-lisp:cons "MinBufferTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'min-final-segment-length))
      (common-lisp:list
       (common-lisp:cons "MinFinalSegmentLength"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'mpd-manifest-bandwidth-type))
      (common-lisp:list
       (common-lisp:cons "MpdManifestBandwidthType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mpd-profile))
      (common-lisp:list
       (common-lisp:cons "MpdProfile"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pts-offset-handling-for-bframes))
      (common-lisp:list
       (common-lisp:cons "PtsOffsetHandlingForBFrames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-control))
      (common-lisp:list
       (common-lisp:cons "SegmentControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-length))
      (common-lisp:list
       (common-lisp:cons "SegmentLength"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'segment-length-control))
      (common-lisp:list
       (common-lisp:cons "SegmentLengthControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'video-composition-offsets))
      (common-lisp:list
       (common-lisp:cons "VideoCompositionOffsets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'write-segment-timeline-in-representation))
      (common-lisp:list
       (common-lisp:cons "WriteSegmentTimelineInRepresentation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          dash-iso-group-settings))
   common-lisp:nil))
(common-lisp:deftype dash-iso-hbbtv-compliance () 'common-lisp:string)
(common-lisp:deftype dash-iso-image-based-trick-play () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (dash-iso-image-based-trick-play-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-dash-iso-image-based-trick-play-settings-"))
   (interval-cadence common-lisp:nil :type
    (common-lisp:or dash-iso-interval-cadence common-lisp:null))
   (thumbnail-height common-lisp:nil :type
    (common-lisp:or |__integerMin1Max4096| common-lisp:null))
   (thumbnail-interval common-lisp:nil :type
    (common-lisp:or |__doubleMin0Max2147483647| common-lisp:null))
   (thumbnail-width common-lisp:nil :type
    (common-lisp:or |__integerMin8Max4096| common-lisp:null))
   (tile-height common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2048| common-lisp:null))
   (tile-width common-lisp:nil :type
    (common-lisp:or |__integerMin1Max512| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'dash-iso-image-based-trick-play-settings
                    'make-dash-iso-image-based-trick-play-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          dash-iso-image-based-trick-play-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          dash-iso-image-based-trick-play-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'interval-cadence))
      (common-lisp:list
       (common-lisp:cons "IntervalCadence"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'thumbnail-height))
      (common-lisp:list
       (common-lisp:cons "ThumbnailHeight"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'thumbnail-interval))
      (common-lisp:list
       (common-lisp:cons "ThumbnailInterval"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'thumbnail-width))
      (common-lisp:list
       (common-lisp:cons "ThumbnailWidth"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tile-height))
      (common-lisp:list
       (common-lisp:cons "TileHeight"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tile-width))
      (common-lisp:list
       (common-lisp:cons "TileWidth"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          dash-iso-image-based-trick-play-settings))
   common-lisp:nil))
(common-lisp:deftype dash-iso-interval-cadence () 'common-lisp:string)
(common-lisp:deftype dash-iso-mpd-manifest-bandwidth-type ()
  'common-lisp:string)
(common-lisp:deftype dash-iso-mpd-profile () 'common-lisp:string)
(common-lisp:deftype dash-iso-playback-device-compatibility ()
  'common-lisp:string)
(common-lisp:deftype dash-iso-pts-offset-handling-for-bframes ()
  'common-lisp:string)
(common-lisp:deftype dash-iso-segment-control () 'common-lisp:string)
(common-lisp:deftype dash-iso-segment-length-control () 'common-lisp:string)
(common-lisp:deftype dash-iso-video-composition-offsets () 'common-lisp:string)
(common-lisp:deftype dash-iso-write-segment-timeline-in-representation ()
  'common-lisp:string)
(common-lisp:deftype dash-manifest-style () 'common-lisp:string)
(common-lisp:deftype decryption-mode () 'common-lisp:string)
(common-lisp:deftype deinterlace-algorithm () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (deinterlacer (:copier common-lisp:nil)
      (:conc-name "struct-shape-deinterlacer-"))
   (algorithm common-lisp:nil :type
    (common-lisp:or deinterlace-algorithm common-lisp:null))
   (control common-lisp:nil :type
    (common-lisp:or deinterlacer-control common-lisp:null))
   (mode common-lisp:nil :type
    (common-lisp:or deinterlacer-mode common-lisp:null)))
 (common-lisp:export (common-lisp:list 'deinterlacer 'make-deinterlacer))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input deinterlacer))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input deinterlacer))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'algorithm))
      (common-lisp:list
       (common-lisp:cons "Algorithm"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'control))
      (common-lisp:list
       (common-lisp:cons "Control"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mode))
      (common-lisp:list
       (common-lisp:cons "Mode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input deinterlacer))
   common-lisp:nil))
(common-lisp:deftype deinterlacer-control () 'common-lisp:string)
(common-lisp:deftype deinterlacer-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (delete-job-template-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-job-template-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-job-template-request
                    'make-delete-job-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-job-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-job-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-job-template-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-job-template-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-job-template-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-job-template-response
                    'make-delete-job-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-job-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-job-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-job-template-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-policy-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-policy-request-")))
 (common-lisp:export
  (common-lisp:list 'delete-policy-request 'make-delete-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-policy-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-policy-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-policy-response 'make-delete-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-preset-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-preset-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-preset-request 'make-delete-preset-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-preset-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-preset-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-preset-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-preset-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-preset-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-preset-response 'make-delete-preset-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-preset-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-preset-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-preset-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-queue-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-queue-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-queue-request 'make-delete-queue-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-queue-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-queue-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-queue-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-queue-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-queue-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-queue-response 'make-delete-queue-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-queue-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-queue-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-queue-response))
   common-lisp:nil))
(common-lisp:deftype describe-endpoints-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (describe-endpoints-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-endpoints-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (mode common-lisp:nil :type
    (common-lisp:or describe-endpoints-mode common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-endpoints-request
                    'make-describe-endpoints-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-endpoints-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-endpoints-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mode))
      (common-lisp:list
       (common-lisp:cons "Mode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-endpoints-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-endpoints-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-endpoints-response-"))
   (endpoints common-lisp:nil :type
    (common-lisp:or |__listOfEndpoint| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-endpoints-response
                    'make-describe-endpoints-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-endpoints-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-endpoints-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoints))
      (common-lisp:list
       (common-lisp:cons "Endpoints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-endpoints-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (destination-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-destination-settings-"))
   (s3settings common-lisp:nil :type
    (common-lisp:or s3destination-settings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'destination-settings 'make-destination-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input destination-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input destination-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3settings))
      (common-lisp:list
       (common-lisp:cons "S3Settings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input destination-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-certificate-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-disassociate-certificate-request-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disassociate-certificate-request
                    'make-disassociate-certificate-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-certificate-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-certificate-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-certificate-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-certificate-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-disassociate-certificate-response-")))
 (common-lisp:export
  (common-lisp:list 'disassociate-certificate-response
                    'make-disassociate-certificate-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-certificate-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-certificate-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-certificate-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (dolby-vision (:copier common-lisp:nil)
      (:conc-name "struct-shape-dolby-vision-"))
   (l6metadata common-lisp:nil :type
    (common-lisp:or dolby-vision-level6metadata common-lisp:null))
   (l6mode common-lisp:nil :type
    (common-lisp:or dolby-vision-level6mode common-lisp:null))
   (mapping common-lisp:nil :type
    (common-lisp:or dolby-vision-mapping common-lisp:null))
   (profile common-lisp:nil :type
    (common-lisp:or dolby-vision-profile common-lisp:null)))
 (common-lisp:export (common-lisp:list 'dolby-vision 'make-dolby-vision))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dolby-vision))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dolby-vision))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'l6metadata))
      (common-lisp:list
       (common-lisp:cons "L6Metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'l6mode))
      (common-lisp:list
       (common-lisp:cons "L6Mode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mapping))
      (common-lisp:list
       (common-lisp:cons "Mapping"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'profile))
      (common-lisp:list
       (common-lisp:cons "Profile"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dolby-vision))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (dolby-vision-level6metadata (:copier common-lisp:nil)
      (:conc-name "struct-shape-dolby-vision-level6metadata-"))
   (max-cll common-lisp:nil :type
    (common-lisp:or |__integerMin0Max65535| common-lisp:null))
   (max-fall common-lisp:nil :type
    (common-lisp:or |__integerMin0Max65535| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'dolby-vision-level6metadata
                    'make-dolby-vision-level6metadata))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          dolby-vision-level6metadata))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          dolby-vision-level6metadata))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-cll))
      (common-lisp:list
       (common-lisp:cons "MaxCll"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-fall))
      (common-lisp:list
       (common-lisp:cons "MaxFall"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          dolby-vision-level6metadata))
   common-lisp:nil))
(common-lisp:deftype dolby-vision-level6mode () 'common-lisp:string)
(common-lisp:deftype dolby-vision-mapping () 'common-lisp:string)
(common-lisp:deftype dolby-vision-profile () 'common-lisp:string)
(common-lisp:deftype drop-frame-timecode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (dvb-nit-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-dvb-nit-settings-"))
   (network-id common-lisp:nil :type
    (common-lisp:or |__integerMin0Max65535| common-lisp:null))
   (network-name common-lisp:nil :type
    (common-lisp:or |__stringMin1Max256| common-lisp:null))
   (nit-interval common-lisp:nil :type
    (common-lisp:or |__integerMin25Max10000| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'dvb-nit-settings 'make-dvb-nit-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dvb-nit-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dvb-nit-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'network-id))
      (common-lisp:list
       (common-lisp:cons "NetworkId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'network-name))
      (common-lisp:list
       (common-lisp:cons "NetworkName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'nit-interval))
      (common-lisp:list
       (common-lisp:cons "NitInterval"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dvb-nit-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (dvb-sdt-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-dvb-sdt-settings-"))
   (output-sdt common-lisp:nil :type
    (common-lisp:or output-sdt common-lisp:null))
   (sdt-interval common-lisp:nil :type
    (common-lisp:or |__integerMin25Max2000| common-lisp:null))
   (service-name common-lisp:nil :type
    (common-lisp:or |__stringMin1Max256| common-lisp:null))
   (service-provider-name common-lisp:nil :type
    (common-lisp:or |__stringMin1Max256| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'dvb-sdt-settings 'make-dvb-sdt-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dvb-sdt-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dvb-sdt-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-sdt))
      (common-lisp:list
       (common-lisp:cons "OutputSdt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sdt-interval))
      (common-lisp:list
       (common-lisp:cons "SdtInterval"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-name))
      (common-lisp:list
       (common-lisp:cons "ServiceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'service-provider-name))
      (common-lisp:list
       (common-lisp:cons "ServiceProviderName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dvb-sdt-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (dvb-sub-destination-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-dvb-sub-destination-settings-"))
   (alignment common-lisp:nil :type
    (common-lisp:or dvb-subtitle-alignment common-lisp:null))
   (apply-font-color common-lisp:nil :type
    (common-lisp:or dvb-subtitle-apply-font-color common-lisp:null))
   (background-color common-lisp:nil :type
    (common-lisp:or dvb-subtitle-background-color common-lisp:null))
   (background-opacity common-lisp:nil :type
    (common-lisp:or |__integerMin0Max255| common-lisp:null))
   (dds-handling common-lisp:nil :type
    (common-lisp:or dvbdds-handling common-lisp:null))
   (dds-xcoordinate common-lisp:nil :type
    (common-lisp:or |__integerMin0Max2147483647| common-lisp:null))
   (dds-ycoordinate common-lisp:nil :type
    (common-lisp:or |__integerMin0Max2147483647| common-lisp:null))
   (fallback-font common-lisp:nil :type
    (common-lisp:or dvb-sub-subtitle-fallback-font common-lisp:null))
   (font-color common-lisp:nil :type
    (common-lisp:or dvb-subtitle-font-color common-lisp:null))
   (font-opacity common-lisp:nil :type
    (common-lisp:or |__integerMin0Max255| common-lisp:null))
   (font-resolution common-lisp:nil :type
    (common-lisp:or |__integerMin96Max600| common-lisp:null))
   (font-script common-lisp:nil :type
    (common-lisp:or font-script common-lisp:null))
   (font-size common-lisp:nil :type
    (common-lisp:or |__integerMin0Max96| common-lisp:null))
   (height common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2147483647| common-lisp:null))
   (hex-font-color common-lisp:nil :type
    (common-lisp:or |__stringMin6Max8Pattern09aFAF609aFAF2| common-lisp:null))
   (outline-color common-lisp:nil :type
    (common-lisp:or dvb-subtitle-outline-color common-lisp:null))
   (outline-size common-lisp:nil :type
    (common-lisp:or |__integerMin0Max10| common-lisp:null))
   (shadow-color common-lisp:nil :type
    (common-lisp:or dvb-subtitle-shadow-color common-lisp:null))
   (shadow-opacity common-lisp:nil :type
    (common-lisp:or |__integerMin0Max255| common-lisp:null))
   (shadow-xoffset common-lisp:nil :type
    (common-lisp:or |__integerMinNegative2147483648Max2147483647|
                    common-lisp:null))
   (shadow-yoffset common-lisp:nil :type
    (common-lisp:or |__integerMinNegative2147483648Max2147483647|
                    common-lisp:null))
   (style-passthrough common-lisp:nil :type
    (common-lisp:or dvb-subtitle-style-passthrough common-lisp:null))
   (subtitling-type common-lisp:nil :type
    (common-lisp:or dvb-subtitling-type common-lisp:null))
   (teletext-spacing common-lisp:nil :type
    (common-lisp:or dvb-subtitle-teletext-spacing common-lisp:null))
   (width common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2147483647| common-lisp:null))
   (xposition common-lisp:nil :type
    (common-lisp:or |__integerMin0Max2147483647| common-lisp:null))
   (yposition common-lisp:nil :type
    (common-lisp:or |__integerMin0Max2147483647| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'dvb-sub-destination-settings
                    'make-dvb-sub-destination-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          dvb-sub-destination-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          dvb-sub-destination-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alignment))
      (common-lisp:list
       (common-lisp:cons "Alignment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'apply-font-color))
      (common-lisp:list
       (common-lisp:cons "ApplyFontColor"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'background-color))
      (common-lisp:list
       (common-lisp:cons "BackgroundColor"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'background-opacity))
      (common-lisp:list
       (common-lisp:cons "BackgroundOpacity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dds-handling))
      (common-lisp:list
       (common-lisp:cons "DdsHandling"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dds-xcoordinate))
      (common-lisp:list
       (common-lisp:cons "DdsXCoordinate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dds-ycoordinate))
      (common-lisp:list
       (common-lisp:cons "DdsYCoordinate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fallback-font))
      (common-lisp:list
       (common-lisp:cons "FallbackFont"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'font-color))
      (common-lisp:list
       (common-lisp:cons "FontColor"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'font-opacity))
      (common-lisp:list
       (common-lisp:cons "FontOpacity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'font-resolution))
      (common-lisp:list
       (common-lisp:cons "FontResolution"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'font-script))
      (common-lisp:list
       (common-lisp:cons "FontScript"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'font-size))
      (common-lisp:list
       (common-lisp:cons "FontSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'height))
      (common-lisp:list
       (common-lisp:cons "Height"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hex-font-color))
      (common-lisp:list
       (common-lisp:cons "HexFontColor"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'outline-color))
      (common-lisp:list
       (common-lisp:cons "OutlineColor"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'outline-size))
      (common-lisp:list
       (common-lisp:cons "OutlineSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'shadow-color))
      (common-lisp:list
       (common-lisp:cons "ShadowColor"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'shadow-opacity))
      (common-lisp:list
       (common-lisp:cons "ShadowOpacity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'shadow-xoffset))
      (common-lisp:list
       (common-lisp:cons "ShadowXOffset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'shadow-yoffset))
      (common-lisp:list
       (common-lisp:cons "ShadowYOffset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'style-passthrough))
      (common-lisp:list
       (common-lisp:cons "StylePassthrough"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subtitling-type))
      (common-lisp:list
       (common-lisp:cons "SubtitlingType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'teletext-spacing))
      (common-lisp:list
       (common-lisp:cons "TeletextSpacing"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'width))
      (common-lisp:list
       (common-lisp:cons "Width"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'xposition))
      (common-lisp:list
       (common-lisp:cons "XPosition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'yposition))
      (common-lisp:list
       (common-lisp:cons "YPosition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          dvb-sub-destination-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (dvb-sub-source-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-dvb-sub-source-settings-"))
   (pid common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2147483647| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'dvb-sub-source-settings 'make-dvb-sub-source-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          dvb-sub-source-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          dvb-sub-source-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pid))
      (common-lisp:list
       (common-lisp:cons "Pid"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          dvb-sub-source-settings))
   common-lisp:nil))
(common-lisp:deftype dvb-sub-subtitle-fallback-font () 'common-lisp:string)
(common-lisp:deftype dvb-subtitle-alignment () 'common-lisp:string)
(common-lisp:deftype dvb-subtitle-apply-font-color () 'common-lisp:string)
(common-lisp:deftype dvb-subtitle-background-color () 'common-lisp:string)
(common-lisp:deftype dvb-subtitle-font-color () 'common-lisp:string)
(common-lisp:deftype dvb-subtitle-outline-color () 'common-lisp:string)
(common-lisp:deftype dvb-subtitle-shadow-color () 'common-lisp:string)
(common-lisp:deftype dvb-subtitle-style-passthrough () 'common-lisp:string)
(common-lisp:deftype dvb-subtitle-teletext-spacing () 'common-lisp:string)
(common-lisp:deftype dvb-subtitling-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (dvb-tdt-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-dvb-tdt-settings-"))
   (tdt-interval common-lisp:nil :type
    (common-lisp:or |__integerMin1000Max30000| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'dvb-tdt-settings 'make-dvb-tdt-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dvb-tdt-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dvb-tdt-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tdt-interval))
      (common-lisp:list
       (common-lisp:cons "TdtInterval"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dvb-tdt-settings))
   common-lisp:nil))
(common-lisp:deftype dvbdds-handling () 'common-lisp:string)
(common-lisp:deftype eac3atmos-bitstream-mode () 'common-lisp:string)
(common-lisp:deftype eac3atmos-coding-mode () 'common-lisp:string)
(common-lisp:deftype eac3atmos-dialogue-intelligence () 'common-lisp:string)
(common-lisp:deftype eac3atmos-downmix-control () 'common-lisp:string)
(common-lisp:deftype eac3atmos-dynamic-range-compression-line ()
  'common-lisp:string)
(common-lisp:deftype eac3atmos-dynamic-range-compression-rf ()
  'common-lisp:string)
(common-lisp:deftype eac3atmos-dynamic-range-control () 'common-lisp:string)
(common-lisp:deftype eac3atmos-metering-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (eac3atmos-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-eac3atmos-settings-"))
   (bitrate common-lisp:nil :type
    (common-lisp:or |__integerMin384000Max1024000| common-lisp:null))
   (bitstream-mode common-lisp:nil :type
    (common-lisp:or eac3atmos-bitstream-mode common-lisp:null))
   (coding-mode common-lisp:nil :type
    (common-lisp:or eac3atmos-coding-mode common-lisp:null))
   (dialogue-intelligence common-lisp:nil :type
    (common-lisp:or eac3atmos-dialogue-intelligence common-lisp:null))
   (downmix-control common-lisp:nil :type
    (common-lisp:or eac3atmos-downmix-control common-lisp:null))
   (dynamic-range-compression-line common-lisp:nil :type
    (common-lisp:or eac3atmos-dynamic-range-compression-line common-lisp:null))
   (dynamic-range-compression-rf common-lisp:nil :type
    (common-lisp:or eac3atmos-dynamic-range-compression-rf common-lisp:null))
   (dynamic-range-control common-lisp:nil :type
    (common-lisp:or eac3atmos-dynamic-range-control common-lisp:null))
   (lo-ro-center-mix-level common-lisp:nil :type
    (common-lisp:or |__doubleMinNegative6Max3| common-lisp:null))
   (lo-ro-surround-mix-level common-lisp:nil :type
    (common-lisp:or |__doubleMinNegative60MaxNegative1| common-lisp:null))
   (lt-rt-center-mix-level common-lisp:nil :type
    (common-lisp:or |__doubleMinNegative6Max3| common-lisp:null))
   (lt-rt-surround-mix-level common-lisp:nil :type
    (common-lisp:or |__doubleMinNegative60MaxNegative1| common-lisp:null))
   (metering-mode common-lisp:nil :type
    (common-lisp:or eac3atmos-metering-mode common-lisp:null))
   (sample-rate common-lisp:nil :type
    (common-lisp:or |__integerMin48000Max48000| common-lisp:null))
   (speech-threshold common-lisp:nil :type
    (common-lisp:or |__integerMin0Max100| common-lisp:null))
   (stereo-downmix common-lisp:nil :type
    (common-lisp:or eac3atmos-stereo-downmix common-lisp:null))
   (surround-ex-mode common-lisp:nil :type
    (common-lisp:or eac3atmos-surround-ex-mode common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'eac3atmos-settings 'make-eac3atmos-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input eac3atmos-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input eac3atmos-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bitrate))
      (common-lisp:list
       (common-lisp:cons "Bitrate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bitstream-mode))
      (common-lisp:list
       (common-lisp:cons "BitstreamMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'coding-mode))
      (common-lisp:list
       (common-lisp:cons "CodingMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dialogue-intelligence))
      (common-lisp:list
       (common-lisp:cons "DialogueIntelligence"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'downmix-control))
      (common-lisp:list
       (common-lisp:cons "DownmixControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dynamic-range-compression-line))
      (common-lisp:list
       (common-lisp:cons "DynamicRangeCompressionLine"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dynamic-range-compression-rf))
      (common-lisp:list
       (common-lisp:cons "DynamicRangeCompressionRf"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dynamic-range-control))
      (common-lisp:list
       (common-lisp:cons "DynamicRangeControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'lo-ro-center-mix-level))
      (common-lisp:list
       (common-lisp:cons "LoRoCenterMixLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'lo-ro-surround-mix-level))
      (common-lisp:list
       (common-lisp:cons "LoRoSurroundMixLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'lt-rt-center-mix-level))
      (common-lisp:list
       (common-lisp:cons "LtRtCenterMixLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'lt-rt-surround-mix-level))
      (common-lisp:list
       (common-lisp:cons "LtRtSurroundMixLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metering-mode))
      (common-lisp:list
       (common-lisp:cons "MeteringMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sample-rate))
      (common-lisp:list
       (common-lisp:cons "SampleRate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'speech-threshold))
      (common-lisp:list
       (common-lisp:cons "SpeechThreshold"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stereo-downmix))
      (common-lisp:list
       (common-lisp:cons "StereoDownmix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'surround-ex-mode))
      (common-lisp:list
       (common-lisp:cons "SurroundExMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input eac3atmos-settings))
   common-lisp:nil))
(common-lisp:deftype eac3atmos-stereo-downmix () 'common-lisp:string)
(common-lisp:deftype eac3atmos-surround-ex-mode () 'common-lisp:string)
(common-lisp:deftype eac3attenuation-control () 'common-lisp:string)
(common-lisp:deftype eac3bitstream-mode () 'common-lisp:string)
(common-lisp:deftype eac3coding-mode () 'common-lisp:string)
(common-lisp:deftype eac3dc-filter () 'common-lisp:string)
(common-lisp:deftype eac3dynamic-range-compression-line () 'common-lisp:string)
(common-lisp:deftype eac3dynamic-range-compression-rf () 'common-lisp:string)
(common-lisp:deftype eac3lfe-control () 'common-lisp:string)
(common-lisp:deftype eac3lfe-filter () 'common-lisp:string)
(common-lisp:deftype eac3metadata-control () 'common-lisp:string)
(common-lisp:deftype eac3passthrough-control () 'common-lisp:string)
(common-lisp:deftype eac3phase-control () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (eac3settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-eac3settings-"))
   (attenuation-control common-lisp:nil :type
    (common-lisp:or eac3attenuation-control common-lisp:null))
   (bitrate common-lisp:nil :type
    (common-lisp:or |__integerMin32000Max3024000| common-lisp:null))
   (bitstream-mode common-lisp:nil :type
    (common-lisp:or eac3bitstream-mode common-lisp:null))
   (coding-mode common-lisp:nil :type
    (common-lisp:or eac3coding-mode common-lisp:null))
   (dc-filter common-lisp:nil :type
    (common-lisp:or eac3dc-filter common-lisp:null))
   (dialnorm common-lisp:nil :type
    (common-lisp:or |__integerMin1Max31| common-lisp:null))
   (dynamic-range-compression-line common-lisp:nil :type
    (common-lisp:or eac3dynamic-range-compression-line common-lisp:null))
   (dynamic-range-compression-rf common-lisp:nil :type
    (common-lisp:or eac3dynamic-range-compression-rf common-lisp:null))
   (lfe-control common-lisp:nil :type
    (common-lisp:or eac3lfe-control common-lisp:null))
   (lfe-filter common-lisp:nil :type
    (common-lisp:or eac3lfe-filter common-lisp:null))
   (lo-ro-center-mix-level common-lisp:nil :type
    (common-lisp:or |__doubleMinNegative60Max3| common-lisp:null))
   (lo-ro-surround-mix-level common-lisp:nil :type
    (common-lisp:or |__doubleMinNegative60MaxNegative1| common-lisp:null))
   (lt-rt-center-mix-level common-lisp:nil :type
    (common-lisp:or |__doubleMinNegative60Max3| common-lisp:null))
   (lt-rt-surround-mix-level common-lisp:nil :type
    (common-lisp:or |__doubleMinNegative60MaxNegative1| common-lisp:null))
   (metadata-control common-lisp:nil :type
    (common-lisp:or eac3metadata-control common-lisp:null))
   (passthrough-control common-lisp:nil :type
    (common-lisp:or eac3passthrough-control common-lisp:null))
   (phase-control common-lisp:nil :type
    (common-lisp:or eac3phase-control common-lisp:null))
   (sample-rate common-lisp:nil :type
    (common-lisp:or |__integerMin48000Max48000| common-lisp:null))
   (stereo-downmix common-lisp:nil :type
    (common-lisp:or eac3stereo-downmix common-lisp:null))
   (surround-ex-mode common-lisp:nil :type
    (common-lisp:or eac3surround-ex-mode common-lisp:null))
   (surround-mode common-lisp:nil :type
    (common-lisp:or eac3surround-mode common-lisp:null)))
 (common-lisp:export (common-lisp:list 'eac3settings 'make-eac3settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input eac3settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input eac3settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attenuation-control))
      (common-lisp:list
       (common-lisp:cons "AttenuationControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bitrate))
      (common-lisp:list
       (common-lisp:cons "Bitrate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bitstream-mode))
      (common-lisp:list
       (common-lisp:cons "BitstreamMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'coding-mode))
      (common-lisp:list
       (common-lisp:cons "CodingMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dc-filter))
      (common-lisp:list
       (common-lisp:cons "DcFilter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dialnorm))
      (common-lisp:list
       (common-lisp:cons "Dialnorm"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dynamic-range-compression-line))
      (common-lisp:list
       (common-lisp:cons "DynamicRangeCompressionLine"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dynamic-range-compression-rf))
      (common-lisp:list
       (common-lisp:cons "DynamicRangeCompressionRf"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lfe-control))
      (common-lisp:list
       (common-lisp:cons "LfeControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lfe-filter))
      (common-lisp:list
       (common-lisp:cons "LfeFilter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'lo-ro-center-mix-level))
      (common-lisp:list
       (common-lisp:cons "LoRoCenterMixLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'lo-ro-surround-mix-level))
      (common-lisp:list
       (common-lisp:cons "LoRoSurroundMixLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'lt-rt-center-mix-level))
      (common-lisp:list
       (common-lisp:cons "LtRtCenterMixLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'lt-rt-surround-mix-level))
      (common-lisp:list
       (common-lisp:cons "LtRtSurroundMixLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata-control))
      (common-lisp:list
       (common-lisp:cons "MetadataControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'passthrough-control))
      (common-lisp:list
       (common-lisp:cons "PassthroughControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phase-control))
      (common-lisp:list
       (common-lisp:cons "PhaseControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sample-rate))
      (common-lisp:list
       (common-lisp:cons "SampleRate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stereo-downmix))
      (common-lisp:list
       (common-lisp:cons "StereoDownmix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'surround-ex-mode))
      (common-lisp:list
       (common-lisp:cons "SurroundExMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'surround-mode))
      (common-lisp:list
       (common-lisp:cons "SurroundMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input eac3settings))
   common-lisp:nil))
(common-lisp:deftype eac3stereo-downmix () 'common-lisp:string)
(common-lisp:deftype eac3surround-ex-mode () 'common-lisp:string)
(common-lisp:deftype eac3surround-mode () 'common-lisp:string)
(common-lisp:deftype embedded-convert608to708 () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (embedded-destination-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-embedded-destination-settings-"))
   (destination608channel-number common-lisp:nil :type
    (common-lisp:or |__integerMin1Max4| common-lisp:null))
   (destination708service-number common-lisp:nil :type
    (common-lisp:or |__integerMin1Max6| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'embedded-destination-settings
                    'make-embedded-destination-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          embedded-destination-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          embedded-destination-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'destination608channel-number))
      (common-lisp:list
       (common-lisp:cons "Destination608ChannelNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'destination708service-number))
      (common-lisp:list
       (common-lisp:cons "Destination708ServiceNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          embedded-destination-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (embedded-source-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-embedded-source-settings-"))
   (convert608to708 common-lisp:nil :type
    (common-lisp:or embedded-convert608to708 common-lisp:null))
   (source608channel-number common-lisp:nil :type
    (common-lisp:or |__integerMin1Max4| common-lisp:null))
   (source608track-number common-lisp:nil :type
    (common-lisp:or |__integerMin1Max1| common-lisp:null))
   (terminate-captions common-lisp:nil :type
    (common-lisp:or embedded-terminate-captions common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'embedded-source-settings 'make-embedded-source-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          embedded-source-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          embedded-source-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'convert608to708))
      (common-lisp:list
       (common-lisp:cons "Convert608To708"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source608channel-number))
      (common-lisp:list
       (common-lisp:cons "Source608ChannelNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source608track-number))
      (common-lisp:list
       (common-lisp:cons "Source608TrackNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'terminate-captions))
      (common-lisp:list
       (common-lisp:cons "TerminateCaptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          embedded-source-settings))
   common-lisp:nil))
(common-lisp:deftype embedded-terminate-captions () 'common-lisp:string)
(common-lisp:deftype embedded-timecode-override () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (endpoint (:copier common-lisp:nil) (:conc-name "struct-shape-endpoint-"))
   (url common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'endpoint 'make-endpoint))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input endpoint))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input endpoint))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'url))
      (common-lisp:list
       (common-lisp:cons "Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input endpoint))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (esam-manifest-confirm-condition-notification (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-esam-manifest-confirm-condition-notification-"))
   (mcc-xml common-lisp:nil :type
    (common-lisp:or |__stringPatternSNManifestConfirmConditionNotificationNS|
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'esam-manifest-confirm-condition-notification
                    'make-esam-manifest-confirm-condition-notification))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          esam-manifest-confirm-condition-notification))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          esam-manifest-confirm-condition-notification))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mcc-xml))
      (common-lisp:list
       (common-lisp:cons "MccXml"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          esam-manifest-confirm-condition-notification))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (esam-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-esam-settings-"))
   (manifest-confirm-condition-notification common-lisp:nil :type
    (common-lisp:or esam-manifest-confirm-condition-notification
                    common-lisp:null))
   (response-signal-preroll common-lisp:nil :type
    (common-lisp:or |__integerMin0Max30000| common-lisp:null))
   (signal-processing-notification common-lisp:nil :type
    (common-lisp:or esam-signal-processing-notification common-lisp:null)))
 (common-lisp:export (common-lisp:list 'esam-settings 'make-esam-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input esam-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input esam-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'manifest-confirm-condition-notification))
      (common-lisp:list
       (common-lisp:cons "ManifestConfirmConditionNotification"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'response-signal-preroll))
      (common-lisp:list
       (common-lisp:cons "ResponseSignalPreroll"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'signal-processing-notification))
      (common-lisp:list
       (common-lisp:cons "SignalProcessingNotification"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input esam-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (esam-signal-processing-notification (:copier common-lisp:nil)
      (:conc-name "struct-shape-esam-signal-processing-notification-"))
   (scc-xml common-lisp:nil :type
    (common-lisp:or |__stringPatternSNSignalProcessingNotificationNS|
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'esam-signal-processing-notification
                    'make-esam-signal-processing-notification))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          esam-signal-processing-notification))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          esam-signal-processing-notification))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scc-xml))
      (common-lisp:list
       (common-lisp:cons "SccXml"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          esam-signal-processing-notification))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (exception-body (:copier common-lisp:nil)
      (:conc-name "struct-shape-exception-body-"))
   (message common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'exception-body 'make-exception-body))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input exception-body))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input exception-body))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input exception-body))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (extended-data-services (:copier common-lisp:nil)
      (:conc-name "struct-shape-extended-data-services-"))
   (copy-protection-action common-lisp:nil :type
    (common-lisp:or copy-protection-action common-lisp:null))
   (vchip-action common-lisp:nil :type
    (common-lisp:or vchip-action common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'extended-data-services 'make-extended-data-services))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          extended-data-services))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          extended-data-services))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'copy-protection-action))
      (common-lisp:list
       (common-lisp:cons "CopyProtectionAction"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vchip-action))
      (common-lisp:list
       (common-lisp:cons "VchipAction"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          extended-data-services))
   common-lisp:nil))
(common-lisp:deftype f4v-moov-placement () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (f4v-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-f4v-settings-"))
   (moov-placement common-lisp:nil :type
    (common-lisp:or f4v-moov-placement common-lisp:null)))
 (common-lisp:export (common-lisp:list 'f4v-settings 'make-f4v-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input f4v-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input f4v-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'moov-placement))
      (common-lisp:list
       (common-lisp:cons "MoovPlacement"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input f4v-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (file-group-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-file-group-settings-"))
   (destination common-lisp:nil :type
    (common-lisp:or |__stringPatternS3| common-lisp:null))
   (destination-settings common-lisp:nil :type
    (common-lisp:or destination-settings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'file-group-settings 'make-file-group-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input file-group-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input file-group-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination))
      (common-lisp:list
       (common-lisp:cons "Destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'destination-settings))
      (common-lisp:list
       (common-lisp:cons "DestinationSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input file-group-settings))
   common-lisp:nil))
(common-lisp:deftype file-source-convert608to708 () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (file-source-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-file-source-settings-"))
   (convert608to708 common-lisp:nil :type
    (common-lisp:or file-source-convert608to708 common-lisp:null))
   (convert-paint-to-pop common-lisp:nil :type
    (common-lisp:or caption-source-convert-paint-on-to-pop-on
                    common-lisp:null))
   (framerate common-lisp:nil :type
    (common-lisp:or caption-source-framerate common-lisp:null))
   (source-file common-lisp:nil :type
    (common-lisp:or
     |__stringMin14PatternS3SccSCCTtmlTTMLDfxpDFXPStlSTLSrtSRTXmlXMLSmiSMIVttVTTWebvttWEBVTTHttpsSccSCCTtmlTTMLDfxpDFXPStlSTLSrtSRTXmlXMLSmiSMIVttVTTWebvttWEBVTT|
     common-lisp:null))
   (time-delta common-lisp:nil :type
    (common-lisp:or |__integerMinNegative2147483648Max2147483647|
                    common-lisp:null))
   (time-delta-units common-lisp:nil :type
    (common-lisp:or file-source-time-delta-units common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'file-source-settings 'make-file-source-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input file-source-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input file-source-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'convert608to708))
      (common-lisp:list
       (common-lisp:cons "Convert608To708"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'convert-paint-to-pop))
      (common-lisp:list
       (common-lisp:cons "ConvertPaintToPop"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'framerate))
      (common-lisp:list
       (common-lisp:cons "Framerate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-file))
      (common-lisp:list
       (common-lisp:cons "SourceFile"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'time-delta))
      (common-lisp:list
       (common-lisp:cons "TimeDelta"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'time-delta-units))
      (common-lisp:list
       (common-lisp:cons "TimeDeltaUnits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input file-source-settings))
   common-lisp:nil))
(common-lisp:deftype file-source-time-delta-units () 'common-lisp:string)
(common-lisp:deftype font-script () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition forbidden-exception
     (mediaconvert-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       forbidden-exception-message)))
 (common-lisp:export
  (common-lisp:list 'forbidden-exception 'forbidden-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (force-include-rendition-size (:copier common-lisp:nil)
      (:conc-name "struct-shape-force-include-rendition-size-"))
   (height common-lisp:nil :type
    (common-lisp:or |__integerMin32Max8192| common-lisp:null))
   (width common-lisp:nil :type
    (common-lisp:or |__integerMin32Max8192| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'force-include-rendition-size
                    'make-force-include-rendition-size))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          force-include-rendition-size))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          force-include-rendition-size))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'height))
      (common-lisp:list
       (common-lisp:cons "Height"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'width))
      (common-lisp:list
       (common-lisp:cons "Width"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          force-include-rendition-size))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (frame-capture-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-frame-capture-settings-"))
   (framerate-denominator common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2147483647| common-lisp:null))
   (framerate-numerator common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2147483647| common-lisp:null))
   (max-captures common-lisp:nil :type
    (common-lisp:or |__integerMin1Max10000000| common-lisp:null))
   (quality common-lisp:nil :type
    (common-lisp:or |__integerMin1Max100| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'frame-capture-settings 'make-frame-capture-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          frame-capture-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          frame-capture-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'framerate-denominator))
      (common-lisp:list
       (common-lisp:cons "FramerateDenominator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'framerate-numerator))
      (common-lisp:list
       (common-lisp:cons "FramerateNumerator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-captures))
      (common-lisp:list
       (common-lisp:cons "MaxCaptures"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'quality))
      (common-lisp:list
       (common-lisp:cons "Quality"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          frame-capture-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-job-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-job-request 'make-get-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-job-response-"))
   (job common-lisp:nil :type (common-lisp:or job common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-job-response 'make-get-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job))
      (common-lisp:list
       (common-lisp:cons "Job"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-job-template-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-job-template-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-job-template-request 'make-get-job-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-job-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-job-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-job-template-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-job-template-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-job-template-response-"))
   (job-template common-lisp:nil :type
    (common-lisp:or job-template common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-job-template-response
                    'make-get-job-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-job-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-job-template-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-template))
      (common-lisp:list
       (common-lisp:cons "JobTemplate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-job-template-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-policy-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-policy-request-")))
 (common-lisp:export
  (common-lisp:list 'get-policy-request 'make-get-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-policy-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-policy-response-"))
   (policy common-lisp:nil :type (common-lisp:or policy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-policy-response 'make-get-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-policy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "Policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-preset-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-preset-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-preset-request 'make-get-preset-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-preset-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-preset-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-preset-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-preset-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-preset-response-"))
   (preset common-lisp:nil :type (common-lisp:or preset common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-preset-response 'make-get-preset-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-preset-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-preset-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'preset))
      (common-lisp:list
       (common-lisp:cons "Preset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-preset-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-queue-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-queue-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-queue-request 'make-get-queue-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-queue-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-queue-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-queue-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-queue-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-queue-response-"))
   (queue common-lisp:nil :type (common-lisp:or queue common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-queue-response 'make-get-queue-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-queue-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-queue-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'queue))
      (common-lisp:list
       (common-lisp:cons "Queue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-queue-response))
   common-lisp:nil))
(common-lisp:deftype h264adaptive-quantization () 'common-lisp:string)
(common-lisp:deftype h264codec-level () 'common-lisp:string)
(common-lisp:deftype h264codec-profile () 'common-lisp:string)
(common-lisp:deftype h264dynamic-sub-gop () 'common-lisp:string)
(common-lisp:deftype h264entropy-encoding () 'common-lisp:string)
(common-lisp:deftype h264field-encoding () 'common-lisp:string)
(common-lisp:deftype h264flicker-adaptive-quantization () 'common-lisp:string)
(common-lisp:deftype h264framerate-control () 'common-lisp:string)
(common-lisp:deftype h264framerate-conversion-algorithm () 'common-lisp:string)
(common-lisp:deftype h264gop-breference () 'common-lisp:string)
(common-lisp:deftype h264gop-size-units () 'common-lisp:string)
(common-lisp:deftype h264interlace-mode () 'common-lisp:string)
(common-lisp:deftype h264par-control () 'common-lisp:string)
(common-lisp:deftype h264quality-tuning-level () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (h264qvbr-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-h264qvbr-settings-"))
   (max-average-bitrate common-lisp:nil :type
    (common-lisp:or |__integerMin1000Max1152000000| common-lisp:null))
   (qvbr-quality-level common-lisp:nil :type
    (common-lisp:or |__integerMin1Max10| common-lisp:null))
   (qvbr-quality-level-fine-tune common-lisp:nil :type
    (common-lisp:or |__doubleMin0Max1| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'h264qvbr-settings 'make-h264qvbr-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input h264qvbr-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input h264qvbr-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-average-bitrate))
      (common-lisp:list
       (common-lisp:cons "MaxAverageBitrate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'qvbr-quality-level))
      (common-lisp:list
       (common-lisp:cons "QvbrQualityLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'qvbr-quality-level-fine-tune))
      (common-lisp:list
       (common-lisp:cons "QvbrQualityLevelFineTune"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input h264qvbr-settings))
   common-lisp:nil))
(common-lisp:deftype h264rate-control-mode () 'common-lisp:string)
(common-lisp:deftype h264repeat-pps () 'common-lisp:string)
(common-lisp:deftype h264scan-type-conversion-mode () 'common-lisp:string)
(common-lisp:deftype h264scene-change-detect () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (h264settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-h264settings-"))
   (adaptive-quantization common-lisp:nil :type
    (common-lisp:or h264adaptive-quantization common-lisp:null))
   (bandwidth-reduction-filter common-lisp:nil :type
    (common-lisp:or bandwidth-reduction-filter common-lisp:null))
   (bitrate common-lisp:nil :type
    (common-lisp:or |__integerMin1000Max1152000000| common-lisp:null))
   (codec-level common-lisp:nil :type
    (common-lisp:or h264codec-level common-lisp:null))
   (codec-profile common-lisp:nil :type
    (common-lisp:or h264codec-profile common-lisp:null))
   (dynamic-sub-gop common-lisp:nil :type
    (common-lisp:or h264dynamic-sub-gop common-lisp:null))
   (entropy-encoding common-lisp:nil :type
    (common-lisp:or h264entropy-encoding common-lisp:null))
   (field-encoding common-lisp:nil :type
    (common-lisp:or h264field-encoding common-lisp:null))
   (flicker-adaptive-quantization common-lisp:nil :type
    (common-lisp:or h264flicker-adaptive-quantization common-lisp:null))
   (framerate-control common-lisp:nil :type
    (common-lisp:or h264framerate-control common-lisp:null))
   (framerate-conversion-algorithm common-lisp:nil :type
    (common-lisp:or h264framerate-conversion-algorithm common-lisp:null))
   (framerate-denominator common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2147483647| common-lisp:null))
   (framerate-numerator common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2147483647| common-lisp:null))
   (gop-breference common-lisp:nil :type
    (common-lisp:or h264gop-breference common-lisp:null))
   (gop-closed-cadence common-lisp:nil :type
    (common-lisp:or |__integerMin0Max2147483647| common-lisp:null))
   (gop-size common-lisp:nil :type
    (common-lisp:or |__doubleMin0| common-lisp:null))
   (gop-size-units common-lisp:nil :type
    (common-lisp:or h264gop-size-units common-lisp:null))
   (hrd-buffer-final-fill-percentage common-lisp:nil :type
    (common-lisp:or |__integerMin0Max100| common-lisp:null))
   (hrd-buffer-initial-fill-percentage common-lisp:nil :type
    (common-lisp:or |__integerMin0Max100| common-lisp:null))
   (hrd-buffer-size common-lisp:nil :type
    (common-lisp:or |__integerMin0Max1152000000| common-lisp:null))
   (interlace-mode common-lisp:nil :type
    (common-lisp:or h264interlace-mode common-lisp:null))
   (max-bitrate common-lisp:nil :type
    (common-lisp:or |__integerMin1000Max1152000000| common-lisp:null))
   (min-iinterval common-lisp:nil :type
    (common-lisp:or |__integerMin0Max30| common-lisp:null))
   (number-bframes-between-reference-frames common-lisp:nil :type
    (common-lisp:or |__integerMin0Max7| common-lisp:null))
   (number-reference-frames common-lisp:nil :type
    (common-lisp:or |__integerMin1Max6| common-lisp:null))
   (par-control common-lisp:nil :type
    (common-lisp:or h264par-control common-lisp:null))
   (par-denominator common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2147483647| common-lisp:null))
   (par-numerator common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2147483647| common-lisp:null))
   (quality-tuning-level common-lisp:nil :type
    (common-lisp:or h264quality-tuning-level common-lisp:null))
   (qvbr-settings common-lisp:nil :type
    (common-lisp:or h264qvbr-settings common-lisp:null))
   (rate-control-mode common-lisp:nil :type
    (common-lisp:or h264rate-control-mode common-lisp:null))
   (repeat-pps common-lisp:nil :type
    (common-lisp:or h264repeat-pps common-lisp:null))
   (scan-type-conversion-mode common-lisp:nil :type
    (common-lisp:or h264scan-type-conversion-mode common-lisp:null))
   (scene-change-detect common-lisp:nil :type
    (common-lisp:or h264scene-change-detect common-lisp:null))
   (slices common-lisp:nil :type
    (common-lisp:or |__integerMin1Max32| common-lisp:null))
   (slow-pal common-lisp:nil :type
    (common-lisp:or h264slow-pal common-lisp:null))
   (softness common-lisp:nil :type
    (common-lisp:or |__integerMin0Max128| common-lisp:null))
   (spatial-adaptive-quantization common-lisp:nil :type
    (common-lisp:or h264spatial-adaptive-quantization common-lisp:null))
   (syntax common-lisp:nil :type (common-lisp:or h264syntax common-lisp:null))
   (telecine common-lisp:nil :type
    (common-lisp:or h264telecine common-lisp:null))
   (temporal-adaptive-quantization common-lisp:nil :type
    (common-lisp:or h264temporal-adaptive-quantization common-lisp:null))
   (unregistered-sei-timecode common-lisp:nil :type
    (common-lisp:or h264unregistered-sei-timecode common-lisp:null)))
 (common-lisp:export (common-lisp:list 'h264settings 'make-h264settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input h264settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input h264settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'adaptive-quantization))
      (common-lisp:list
       (common-lisp:cons "AdaptiveQuantization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'bandwidth-reduction-filter))
      (common-lisp:list
       (common-lisp:cons "BandwidthReductionFilter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bitrate))
      (common-lisp:list
       (common-lisp:cons "Bitrate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'codec-level))
      (common-lisp:list
       (common-lisp:cons "CodecLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'codec-profile))
      (common-lisp:list
       (common-lisp:cons "CodecProfile"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dynamic-sub-gop))
      (common-lisp:list
       (common-lisp:cons "DynamicSubGop"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entropy-encoding))
      (common-lisp:list
       (common-lisp:cons "EntropyEncoding"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'field-encoding))
      (common-lisp:list
       (common-lisp:cons "FieldEncoding"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'flicker-adaptive-quantization))
      (common-lisp:list
       (common-lisp:cons "FlickerAdaptiveQuantization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'framerate-control))
      (common-lisp:list
       (common-lisp:cons "FramerateControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'framerate-conversion-algorithm))
      (common-lisp:list
       (common-lisp:cons "FramerateConversionAlgorithm"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'framerate-denominator))
      (common-lisp:list
       (common-lisp:cons "FramerateDenominator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'framerate-numerator))
      (common-lisp:list
       (common-lisp:cons "FramerateNumerator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gop-breference))
      (common-lisp:list
       (common-lisp:cons "GopBReference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gop-closed-cadence))
      (common-lisp:list
       (common-lisp:cons "GopClosedCadence"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gop-size))
      (common-lisp:list
       (common-lisp:cons "GopSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gop-size-units))
      (common-lisp:list
       (common-lisp:cons "GopSizeUnits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'hrd-buffer-final-fill-percentage))
      (common-lisp:list
       (common-lisp:cons "HrdBufferFinalFillPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'hrd-buffer-initial-fill-percentage))
      (common-lisp:list
       (common-lisp:cons "HrdBufferInitialFillPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hrd-buffer-size))
      (common-lisp:list
       (common-lisp:cons "HrdBufferSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'interlace-mode))
      (common-lisp:list
       (common-lisp:cons "InterlaceMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-bitrate))
      (common-lisp:list
       (common-lisp:cons "MaxBitrate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'min-iinterval))
      (common-lisp:list
       (common-lisp:cons "MinIInterval"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-bframes-between-reference-frames))
      (common-lisp:list
       (common-lisp:cons "NumberBFramesBetweenReferenceFrames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-reference-frames))
      (common-lisp:list
       (common-lisp:cons "NumberReferenceFrames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'par-control))
      (common-lisp:list
       (common-lisp:cons "ParControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'par-denominator))
      (common-lisp:list
       (common-lisp:cons "ParDenominator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'par-numerator))
      (common-lisp:list
       (common-lisp:cons "ParNumerator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'quality-tuning-level))
      (common-lisp:list
       (common-lisp:cons "QualityTuningLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'qvbr-settings))
      (common-lisp:list
       (common-lisp:cons "QvbrSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rate-control-mode))
      (common-lisp:list
       (common-lisp:cons "RateControlMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'repeat-pps))
      (common-lisp:list
       (common-lisp:cons "RepeatPps"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'scan-type-conversion-mode))
      (common-lisp:list
       (common-lisp:cons "ScanTypeConversionMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scene-change-detect))
      (common-lisp:list
       (common-lisp:cons "SceneChangeDetect"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slices))
      (common-lisp:list
       (common-lisp:cons "Slices"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slow-pal))
      (common-lisp:list
       (common-lisp:cons "SlowPal"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'softness))
      (common-lisp:list
       (common-lisp:cons "Softness"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'spatial-adaptive-quantization))
      (common-lisp:list
       (common-lisp:cons "SpatialAdaptiveQuantization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'syntax))
      (common-lisp:list
       (common-lisp:cons "Syntax"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'telecine))
      (common-lisp:list
       (common-lisp:cons "Telecine"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'temporal-adaptive-quantization))
      (common-lisp:list
       (common-lisp:cons "TemporalAdaptiveQuantization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'unregistered-sei-timecode))
      (common-lisp:list
       (common-lisp:cons "UnregisteredSeiTimecode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input h264settings))
   common-lisp:nil))
(common-lisp:deftype h264slow-pal () 'common-lisp:string)
(common-lisp:deftype h264spatial-adaptive-quantization () 'common-lisp:string)
(common-lisp:deftype h264syntax () 'common-lisp:string)
(common-lisp:deftype h264telecine () 'common-lisp:string)
(common-lisp:deftype h264temporal-adaptive-quantization () 'common-lisp:string)
(common-lisp:deftype h264unregistered-sei-timecode () 'common-lisp:string)
(common-lisp:deftype h265adaptive-quantization () 'common-lisp:string)
(common-lisp:deftype h265alternate-transfer-function-sei () 'common-lisp:string)
(common-lisp:deftype h265codec-level () 'common-lisp:string)
(common-lisp:deftype h265codec-profile () 'common-lisp:string)
(common-lisp:deftype h265dynamic-sub-gop () 'common-lisp:string)
(common-lisp:deftype h265flicker-adaptive-quantization () 'common-lisp:string)
(common-lisp:deftype h265framerate-control () 'common-lisp:string)
(common-lisp:deftype h265framerate-conversion-algorithm () 'common-lisp:string)
(common-lisp:deftype h265gop-breference () 'common-lisp:string)
(common-lisp:deftype h265gop-size-units () 'common-lisp:string)
(common-lisp:deftype h265interlace-mode () 'common-lisp:string)
(common-lisp:deftype h265par-control () 'common-lisp:string)
(common-lisp:deftype h265quality-tuning-level () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (h265qvbr-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-h265qvbr-settings-"))
   (max-average-bitrate common-lisp:nil :type
    (common-lisp:or |__integerMin1000Max1466400000| common-lisp:null))
   (qvbr-quality-level common-lisp:nil :type
    (common-lisp:or |__integerMin1Max10| common-lisp:null))
   (qvbr-quality-level-fine-tune common-lisp:nil :type
    (common-lisp:or |__doubleMin0Max1| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'h265qvbr-settings 'make-h265qvbr-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input h265qvbr-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input h265qvbr-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-average-bitrate))
      (common-lisp:list
       (common-lisp:cons "MaxAverageBitrate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'qvbr-quality-level))
      (common-lisp:list
       (common-lisp:cons "QvbrQualityLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'qvbr-quality-level-fine-tune))
      (common-lisp:list
       (common-lisp:cons "QvbrQualityLevelFineTune"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input h265qvbr-settings))
   common-lisp:nil))
(common-lisp:deftype h265rate-control-mode () 'common-lisp:string)
(common-lisp:deftype h265sample-adaptive-offset-filter-mode ()
  'common-lisp:string)
(common-lisp:deftype h265scan-type-conversion-mode () 'common-lisp:string)
(common-lisp:deftype h265scene-change-detect () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (h265settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-h265settings-"))
   (adaptive-quantization common-lisp:nil :type
    (common-lisp:or h265adaptive-quantization common-lisp:null))
   (alternate-transfer-function-sei common-lisp:nil :type
    (common-lisp:or h265alternate-transfer-function-sei common-lisp:null))
   (bitrate common-lisp:nil :type
    (common-lisp:or |__integerMin1000Max1466400000| common-lisp:null))
   (codec-level common-lisp:nil :type
    (common-lisp:or h265codec-level common-lisp:null))
   (codec-profile common-lisp:nil :type
    (common-lisp:or h265codec-profile common-lisp:null))
   (dynamic-sub-gop common-lisp:nil :type
    (common-lisp:or h265dynamic-sub-gop common-lisp:null))
   (flicker-adaptive-quantization common-lisp:nil :type
    (common-lisp:or h265flicker-adaptive-quantization common-lisp:null))
   (framerate-control common-lisp:nil :type
    (common-lisp:or h265framerate-control common-lisp:null))
   (framerate-conversion-algorithm common-lisp:nil :type
    (common-lisp:or h265framerate-conversion-algorithm common-lisp:null))
   (framerate-denominator common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2147483647| common-lisp:null))
   (framerate-numerator common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2147483647| common-lisp:null))
   (gop-breference common-lisp:nil :type
    (common-lisp:or h265gop-breference common-lisp:null))
   (gop-closed-cadence common-lisp:nil :type
    (common-lisp:or |__integerMin0Max2147483647| common-lisp:null))
   (gop-size common-lisp:nil :type
    (common-lisp:or |__doubleMin0| common-lisp:null))
   (gop-size-units common-lisp:nil :type
    (common-lisp:or h265gop-size-units common-lisp:null))
   (hrd-buffer-final-fill-percentage common-lisp:nil :type
    (common-lisp:or |__integerMin0Max100| common-lisp:null))
   (hrd-buffer-initial-fill-percentage common-lisp:nil :type
    (common-lisp:or |__integerMin0Max100| common-lisp:null))
   (hrd-buffer-size common-lisp:nil :type
    (common-lisp:or |__integerMin0Max1466400000| common-lisp:null))
   (interlace-mode common-lisp:nil :type
    (common-lisp:or h265interlace-mode common-lisp:null))
   (max-bitrate common-lisp:nil :type
    (common-lisp:or |__integerMin1000Max1466400000| common-lisp:null))
   (min-iinterval common-lisp:nil :type
    (common-lisp:or |__integerMin0Max30| common-lisp:null))
   (number-bframes-between-reference-frames common-lisp:nil :type
    (common-lisp:or |__integerMin0Max7| common-lisp:null))
   (number-reference-frames common-lisp:nil :type
    (common-lisp:or |__integerMin1Max6| common-lisp:null))
   (par-control common-lisp:nil :type
    (common-lisp:or h265par-control common-lisp:null))
   (par-denominator common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2147483647| common-lisp:null))
   (par-numerator common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2147483647| common-lisp:null))
   (quality-tuning-level common-lisp:nil :type
    (common-lisp:or h265quality-tuning-level common-lisp:null))
   (qvbr-settings common-lisp:nil :type
    (common-lisp:or h265qvbr-settings common-lisp:null))
   (rate-control-mode common-lisp:nil :type
    (common-lisp:or h265rate-control-mode common-lisp:null))
   (sample-adaptive-offset-filter-mode common-lisp:nil :type
    (common-lisp:or h265sample-adaptive-offset-filter-mode common-lisp:null))
   (scan-type-conversion-mode common-lisp:nil :type
    (common-lisp:or h265scan-type-conversion-mode common-lisp:null))
   (scene-change-detect common-lisp:nil :type
    (common-lisp:or h265scene-change-detect common-lisp:null))
   (slices common-lisp:nil :type
    (common-lisp:or |__integerMin1Max32| common-lisp:null))
   (slow-pal common-lisp:nil :type
    (common-lisp:or h265slow-pal common-lisp:null))
   (spatial-adaptive-quantization common-lisp:nil :type
    (common-lisp:or h265spatial-adaptive-quantization common-lisp:null))
   (telecine common-lisp:nil :type
    (common-lisp:or h265telecine common-lisp:null))
   (temporal-adaptive-quantization common-lisp:nil :type
    (common-lisp:or h265temporal-adaptive-quantization common-lisp:null))
   (temporal-ids common-lisp:nil :type
    (common-lisp:or h265temporal-ids common-lisp:null))
   (tiles common-lisp:nil :type (common-lisp:or h265tiles common-lisp:null))
   (unregistered-sei-timecode common-lisp:nil :type
    (common-lisp:or h265unregistered-sei-timecode common-lisp:null))
   (write-mp4packaging-type common-lisp:nil :type
    (common-lisp:or h265write-mp4packaging-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'h265settings 'make-h265settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input h265settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input h265settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'adaptive-quantization))
      (common-lisp:list
       (common-lisp:cons "AdaptiveQuantization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'alternate-transfer-function-sei))
      (common-lisp:list
       (common-lisp:cons "AlternateTransferFunctionSei"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bitrate))
      (common-lisp:list
       (common-lisp:cons "Bitrate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'codec-level))
      (common-lisp:list
       (common-lisp:cons "CodecLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'codec-profile))
      (common-lisp:list
       (common-lisp:cons "CodecProfile"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dynamic-sub-gop))
      (common-lisp:list
       (common-lisp:cons "DynamicSubGop"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'flicker-adaptive-quantization))
      (common-lisp:list
       (common-lisp:cons "FlickerAdaptiveQuantization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'framerate-control))
      (common-lisp:list
       (common-lisp:cons "FramerateControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'framerate-conversion-algorithm))
      (common-lisp:list
       (common-lisp:cons "FramerateConversionAlgorithm"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'framerate-denominator))
      (common-lisp:list
       (common-lisp:cons "FramerateDenominator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'framerate-numerator))
      (common-lisp:list
       (common-lisp:cons "FramerateNumerator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gop-breference))
      (common-lisp:list
       (common-lisp:cons "GopBReference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gop-closed-cadence))
      (common-lisp:list
       (common-lisp:cons "GopClosedCadence"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gop-size))
      (common-lisp:list
       (common-lisp:cons "GopSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gop-size-units))
      (common-lisp:list
       (common-lisp:cons "GopSizeUnits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'hrd-buffer-final-fill-percentage))
      (common-lisp:list
       (common-lisp:cons "HrdBufferFinalFillPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'hrd-buffer-initial-fill-percentage))
      (common-lisp:list
       (common-lisp:cons "HrdBufferInitialFillPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hrd-buffer-size))
      (common-lisp:list
       (common-lisp:cons "HrdBufferSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'interlace-mode))
      (common-lisp:list
       (common-lisp:cons "InterlaceMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-bitrate))
      (common-lisp:list
       (common-lisp:cons "MaxBitrate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'min-iinterval))
      (common-lisp:list
       (common-lisp:cons "MinIInterval"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-bframes-between-reference-frames))
      (common-lisp:list
       (common-lisp:cons "NumberBFramesBetweenReferenceFrames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-reference-frames))
      (common-lisp:list
       (common-lisp:cons "NumberReferenceFrames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'par-control))
      (common-lisp:list
       (common-lisp:cons "ParControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'par-denominator))
      (common-lisp:list
       (common-lisp:cons "ParDenominator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'par-numerator))
      (common-lisp:list
       (common-lisp:cons "ParNumerator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'quality-tuning-level))
      (common-lisp:list
       (common-lisp:cons "QualityTuningLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'qvbr-settings))
      (common-lisp:list
       (common-lisp:cons "QvbrSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rate-control-mode))
      (common-lisp:list
       (common-lisp:cons "RateControlMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sample-adaptive-offset-filter-mode))
      (common-lisp:list
       (common-lisp:cons "SampleAdaptiveOffsetFilterMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'scan-type-conversion-mode))
      (common-lisp:list
       (common-lisp:cons "ScanTypeConversionMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scene-change-detect))
      (common-lisp:list
       (common-lisp:cons "SceneChangeDetect"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slices))
      (common-lisp:list
       (common-lisp:cons "Slices"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slow-pal))
      (common-lisp:list
       (common-lisp:cons "SlowPal"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'spatial-adaptive-quantization))
      (common-lisp:list
       (common-lisp:cons "SpatialAdaptiveQuantization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'telecine))
      (common-lisp:list
       (common-lisp:cons "Telecine"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'temporal-adaptive-quantization))
      (common-lisp:list
       (common-lisp:cons "TemporalAdaptiveQuantization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'temporal-ids))
      (common-lisp:list
       (common-lisp:cons "TemporalIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tiles))
      (common-lisp:list
       (common-lisp:cons "Tiles"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'unregistered-sei-timecode))
      (common-lisp:list
       (common-lisp:cons "UnregisteredSeiTimecode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'write-mp4packaging-type))
      (common-lisp:list
       (common-lisp:cons "WriteMp4PackagingType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input h265settings))
   common-lisp:nil))
(common-lisp:deftype h265slow-pal () 'common-lisp:string)
(common-lisp:deftype h265spatial-adaptive-quantization () 'common-lisp:string)
(common-lisp:deftype h265telecine () 'common-lisp:string)
(common-lisp:deftype h265temporal-adaptive-quantization () 'common-lisp:string)
(common-lisp:deftype h265temporal-ids () 'common-lisp:string)
(common-lisp:deftype h265tiles () 'common-lisp:string)
(common-lisp:deftype h265unregistered-sei-timecode () 'common-lisp:string)
(common-lisp:deftype h265write-mp4packaging-type () 'common-lisp:string)
(common-lisp:deftype hdrto-sdrtone-mapper () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (hdr10metadata (:copier common-lisp:nil)
      (:conc-name "struct-shape-hdr10metadata-"))
   (blue-primary-x common-lisp:nil :type
    (common-lisp:or |__integerMin0Max50000| common-lisp:null))
   (blue-primary-y common-lisp:nil :type
    (common-lisp:or |__integerMin0Max50000| common-lisp:null))
   (green-primary-x common-lisp:nil :type
    (common-lisp:or |__integerMin0Max50000| common-lisp:null))
   (green-primary-y common-lisp:nil :type
    (common-lisp:or |__integerMin0Max50000| common-lisp:null))
   (max-content-light-level common-lisp:nil :type
    (common-lisp:or |__integerMin0Max65535| common-lisp:null))
   (max-frame-average-light-level common-lisp:nil :type
    (common-lisp:or |__integerMin0Max65535| common-lisp:null))
   (max-luminance common-lisp:nil :type
    (common-lisp:or |__integerMin0Max2147483647| common-lisp:null))
   (min-luminance common-lisp:nil :type
    (common-lisp:or |__integerMin0Max2147483647| common-lisp:null))
   (red-primary-x common-lisp:nil :type
    (common-lisp:or |__integerMin0Max50000| common-lisp:null))
   (red-primary-y common-lisp:nil :type
    (common-lisp:or |__integerMin0Max50000| common-lisp:null))
   (white-point-x common-lisp:nil :type
    (common-lisp:or |__integerMin0Max50000| common-lisp:null))
   (white-point-y common-lisp:nil :type
    (common-lisp:or |__integerMin0Max50000| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'hdr10metadata 'make-hdr10metadata))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input hdr10metadata))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input hdr10metadata))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'blue-primary-x))
      (common-lisp:list
       (common-lisp:cons "BluePrimaryX"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'blue-primary-y))
      (common-lisp:list
       (common-lisp:cons "BluePrimaryY"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'green-primary-x))
      (common-lisp:list
       (common-lisp:cons "GreenPrimaryX"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'green-primary-y))
      (common-lisp:list
       (common-lisp:cons "GreenPrimaryY"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'max-content-light-level))
      (common-lisp:list
       (common-lisp:cons "MaxContentLightLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'max-frame-average-light-level))
      (common-lisp:list
       (common-lisp:cons "MaxFrameAverageLightLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-luminance))
      (common-lisp:list
       (common-lisp:cons "MaxLuminance"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'min-luminance))
      (common-lisp:list
       (common-lisp:cons "MinLuminance"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'red-primary-x))
      (common-lisp:list
       (common-lisp:cons "RedPrimaryX"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'red-primary-y))
      (common-lisp:list
       (common-lisp:cons "RedPrimaryY"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'white-point-x))
      (common-lisp:list
       (common-lisp:cons "WhitePointX"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'white-point-y))
      (common-lisp:list
       (common-lisp:cons "WhitePointY"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input hdr10metadata))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (hdr10plus (:copier common-lisp:nil)
      (:conc-name "struct-shape-hdr10plus-"))
   (mastering-monitor-nits common-lisp:nil :type
    (common-lisp:or |__integerMin0Max4000| common-lisp:null))
   (target-monitor-nits common-lisp:nil :type
    (common-lisp:or |__integerMin0Max4000| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'hdr10plus 'make-hdr10plus))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input hdr10plus))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input hdr10plus))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'mastering-monitor-nits))
      (common-lisp:list
       (common-lisp:cons "MasteringMonitorNits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-monitor-nits))
      (common-lisp:list
       (common-lisp:cons "TargetMonitorNits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input hdr10plus))
   common-lisp:nil))
(common-lisp:deftype hls-ad-markers () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (hls-additional-manifest (:copier common-lisp:nil)
      (:conc-name "struct-shape-hls-additional-manifest-"))
   (manifest-name-modifier common-lisp:nil :type
    (common-lisp:or |__stringMin1| common-lisp:null))
   (selected-outputs common-lisp:nil :type
    (common-lisp:or |__listOf__stringMin1| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'hls-additional-manifest 'make-hls-additional-manifest))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          hls-additional-manifest))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          hls-additional-manifest))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'manifest-name-modifier))
      (common-lisp:list
       (common-lisp:cons "ManifestNameModifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'selected-outputs))
      (common-lisp:list
       (common-lisp:cons "SelectedOutputs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          hls-additional-manifest))
   common-lisp:nil))
(common-lisp:deftype hls-audio-only-container () 'common-lisp:string)
(common-lisp:deftype hls-audio-only-header () 'common-lisp:string)
(common-lisp:deftype hls-audio-track-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (hls-caption-language-mapping (:copier common-lisp:nil)
      (:conc-name "struct-shape-hls-caption-language-mapping-"))
   (caption-channel common-lisp:nil :type
    (common-lisp:or |__integerMinNegative2147483648Max2147483647|
                    common-lisp:null))
   (custom-language-code common-lisp:nil :type
    (common-lisp:or |__stringMin3Max3PatternAZaZ3| common-lisp:null))
   (language-code common-lisp:nil :type
    (common-lisp:or language-code common-lisp:null))
   (language-description common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'hls-caption-language-mapping
                    'make-hls-caption-language-mapping))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          hls-caption-language-mapping))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          hls-caption-language-mapping))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'caption-channel))
      (common-lisp:list
       (common-lisp:cons "CaptionChannel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'custom-language-code))
      (common-lisp:list
       (common-lisp:cons "CustomLanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'language-description))
      (common-lisp:list
       (common-lisp:cons "LanguageDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          hls-caption-language-mapping))
   common-lisp:nil))
(common-lisp:deftype hls-caption-language-setting () 'common-lisp:string)
(common-lisp:deftype hls-caption-segment-length-control () 'common-lisp:string)
(common-lisp:deftype hls-client-cache () 'common-lisp:string)
(common-lisp:deftype hls-codec-specification () 'common-lisp:string)
(common-lisp:deftype hls-descriptive-video-service-flag () 'common-lisp:string)
(common-lisp:deftype hls-directory-structure () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (hls-encryption-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-hls-encryption-settings-"))
   (constant-initialization-vector common-lisp:nil :type
    (common-lisp:or |__stringMin32Max32Pattern09aFAF32| common-lisp:null))
   (encryption-method common-lisp:nil :type
    (common-lisp:or hls-encryption-type common-lisp:null))
   (initialization-vector-in-manifest common-lisp:nil :type
    (common-lisp:or hls-initialization-vector-in-manifest common-lisp:null))
   (offline-encrypted common-lisp:nil :type
    (common-lisp:or hls-offline-encrypted common-lisp:null))
   (speke-key-provider common-lisp:nil :type
    (common-lisp:or speke-key-provider common-lisp:null))
   (static-key-provider common-lisp:nil :type
    (common-lisp:or static-key-provider common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or hls-key-provider-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'hls-encryption-settings 'make-hls-encryption-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          hls-encryption-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          hls-encryption-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'constant-initialization-vector))
      (common-lisp:list
       (common-lisp:cons "ConstantInitializationVector"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption-method))
      (common-lisp:list
       (common-lisp:cons "EncryptionMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'initialization-vector-in-manifest))
      (common-lisp:list
       (common-lisp:cons "InitializationVectorInManifest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'offline-encrypted))
      (common-lisp:list
       (common-lisp:cons "OfflineEncrypted"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'speke-key-provider))
      (common-lisp:list
       (common-lisp:cons "SpekeKeyProvider"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'static-key-provider))
      (common-lisp:list
       (common-lisp:cons "StaticKeyProvider"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          hls-encryption-settings))
   common-lisp:nil))
(common-lisp:deftype hls-encryption-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (hls-group-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-hls-group-settings-"))
   (ad-markers common-lisp:nil :type
    (common-lisp:or |__listOfHlsAdMarkers| common-lisp:null))
   (additional-manifests common-lisp:nil :type
    (common-lisp:or |__listOfHlsAdditionalManifest| common-lisp:null))
   (audio-only-header common-lisp:nil :type
    (common-lisp:or hls-audio-only-header common-lisp:null))
   (base-url common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (caption-language-mappings common-lisp:nil :type
    (common-lisp:or |__listOfHlsCaptionLanguageMapping| common-lisp:null))
   (caption-language-setting common-lisp:nil :type
    (common-lisp:or hls-caption-language-setting common-lisp:null))
   (caption-segment-length-control common-lisp:nil :type
    (common-lisp:or hls-caption-segment-length-control common-lisp:null))
   (client-cache common-lisp:nil :type
    (common-lisp:or hls-client-cache common-lisp:null))
   (codec-specification common-lisp:nil :type
    (common-lisp:or hls-codec-specification common-lisp:null))
   (destination common-lisp:nil :type
    (common-lisp:or |__stringPatternS3| common-lisp:null))
   (destination-settings common-lisp:nil :type
    (common-lisp:or destination-settings common-lisp:null))
   (directory-structure common-lisp:nil :type
    (common-lisp:or hls-directory-structure common-lisp:null))
   (encryption common-lisp:nil :type
    (common-lisp:or hls-encryption-settings common-lisp:null))
   (image-based-trick-play common-lisp:nil :type
    (common-lisp:or hls-image-based-trick-play common-lisp:null))
   (image-based-trick-play-settings common-lisp:nil :type
    (common-lisp:or hls-image-based-trick-play-settings common-lisp:null))
   (manifest-compression common-lisp:nil :type
    (common-lisp:or hls-manifest-compression common-lisp:null))
   (manifest-duration-format common-lisp:nil :type
    (common-lisp:or hls-manifest-duration-format common-lisp:null))
   (min-final-segment-length common-lisp:nil :type
    (common-lisp:or |__doubleMin0Max2147483647| common-lisp:null))
   (min-segment-length common-lisp:nil :type
    (common-lisp:or |__integerMin0Max2147483647| common-lisp:null))
   (output-selection common-lisp:nil :type
    (common-lisp:or hls-output-selection common-lisp:null))
   (program-date-time common-lisp:nil :type
    (common-lisp:or hls-program-date-time common-lisp:null))
   (program-date-time-period common-lisp:nil :type
    (common-lisp:or |__integerMin0Max3600| common-lisp:null))
   (segment-control common-lisp:nil :type
    (common-lisp:or hls-segment-control common-lisp:null))
   (segment-length common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2147483647| common-lisp:null))
   (segment-length-control common-lisp:nil :type
    (common-lisp:or hls-segment-length-control common-lisp:null))
   (segments-per-subdirectory common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2147483647| common-lisp:null))
   (stream-inf-resolution common-lisp:nil :type
    (common-lisp:or hls-stream-inf-resolution common-lisp:null))
   (target-duration-compatibility-mode common-lisp:nil :type
    (common-lisp:or hls-target-duration-compatibility-mode common-lisp:null))
   (timed-metadata-id3frame common-lisp:nil :type
    (common-lisp:or hls-timed-metadata-id3frame common-lisp:null))
   (timed-metadata-id3period common-lisp:nil :type
    (common-lisp:or |__integerMinNegative2147483648Max2147483647|
                    common-lisp:null))
   (timestamp-delta-milliseconds common-lisp:nil :type
    (common-lisp:or |__integerMinNegative2147483648Max2147483647|
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'hls-group-settings 'make-hls-group-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input hls-group-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input hls-group-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ad-markers))
      (common-lisp:list
       (common-lisp:cons "AdMarkers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-manifests))
      (common-lisp:list
       (common-lisp:cons "AdditionalManifests"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audio-only-header))
      (common-lisp:list
       (common-lisp:cons "AudioOnlyHeader"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'base-url))
      (common-lisp:list
       (common-lisp:cons "BaseUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'caption-language-mappings))
      (common-lisp:list
       (common-lisp:cons "CaptionLanguageMappings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'caption-language-setting))
      (common-lisp:list
       (common-lisp:cons "CaptionLanguageSetting"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'caption-segment-length-control))
      (common-lisp:list
       (common-lisp:cons "CaptionSegmentLengthControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-cache))
      (common-lisp:list
       (common-lisp:cons "ClientCache"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'codec-specification))
      (common-lisp:list
       (common-lisp:cons "CodecSpecification"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination))
      (common-lisp:list
       (common-lisp:cons "Destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'destination-settings))
      (common-lisp:list
       (common-lisp:cons "DestinationSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'directory-structure))
      (common-lisp:list
       (common-lisp:cons "DirectoryStructure"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption))
      (common-lisp:list
       (common-lisp:cons "Encryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'image-based-trick-play))
      (common-lisp:list
       (common-lisp:cons "ImageBasedTrickPlay"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'image-based-trick-play-settings))
      (common-lisp:list
       (common-lisp:cons "ImageBasedTrickPlaySettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'manifest-compression))
      (common-lisp:list
       (common-lisp:cons "ManifestCompression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'manifest-duration-format))
      (common-lisp:list
       (common-lisp:cons "ManifestDurationFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'min-final-segment-length))
      (common-lisp:list
       (common-lisp:cons "MinFinalSegmentLength"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'min-segment-length))
      (common-lisp:list
       (common-lisp:cons "MinSegmentLength"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-selection))
      (common-lisp:list
       (common-lisp:cons "OutputSelection"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'program-date-time))
      (common-lisp:list
       (common-lisp:cons "ProgramDateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'program-date-time-period))
      (common-lisp:list
       (common-lisp:cons "ProgramDateTimePeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-control))
      (common-lisp:list
       (common-lisp:cons "SegmentControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-length))
      (common-lisp:list
       (common-lisp:cons "SegmentLength"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'segment-length-control))
      (common-lisp:list
       (common-lisp:cons "SegmentLengthControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'segments-per-subdirectory))
      (common-lisp:list
       (common-lisp:cons "SegmentsPerSubdirectory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'stream-inf-resolution))
      (common-lisp:list
       (common-lisp:cons "StreamInfResolution"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'target-duration-compatibility-mode))
      (common-lisp:list
       (common-lisp:cons "TargetDurationCompatibilityMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'timed-metadata-id3frame))
      (common-lisp:list
       (common-lisp:cons "TimedMetadataId3Frame"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'timed-metadata-id3period))
      (common-lisp:list
       (common-lisp:cons "TimedMetadataId3Period"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'timestamp-delta-milliseconds))
      (common-lisp:list
       (common-lisp:cons "TimestampDeltaMilliseconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input hls-group-settings))
   common-lisp:nil))
(common-lisp:deftype hls-iframe-only-manifest () 'common-lisp:string)
(common-lisp:deftype hls-image-based-trick-play () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (hls-image-based-trick-play-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-hls-image-based-trick-play-settings-"))
   (interval-cadence common-lisp:nil :type
    (common-lisp:or hls-interval-cadence common-lisp:null))
   (thumbnail-height common-lisp:nil :type
    (common-lisp:or |__integerMin2Max4096| common-lisp:null))
   (thumbnail-interval common-lisp:nil :type
    (common-lisp:or |__doubleMin0Max2147483647| common-lisp:null))
   (thumbnail-width common-lisp:nil :type
    (common-lisp:or |__integerMin8Max4096| common-lisp:null))
   (tile-height common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2048| common-lisp:null))
   (tile-width common-lisp:nil :type
    (common-lisp:or |__integerMin1Max512| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'hls-image-based-trick-play-settings
                    'make-hls-image-based-trick-play-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          hls-image-based-trick-play-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          hls-image-based-trick-play-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'interval-cadence))
      (common-lisp:list
       (common-lisp:cons "IntervalCadence"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'thumbnail-height))
      (common-lisp:list
       (common-lisp:cons "ThumbnailHeight"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'thumbnail-interval))
      (common-lisp:list
       (common-lisp:cons "ThumbnailInterval"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'thumbnail-width))
      (common-lisp:list
       (common-lisp:cons "ThumbnailWidth"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tile-height))
      (common-lisp:list
       (common-lisp:cons "TileHeight"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tile-width))
      (common-lisp:list
       (common-lisp:cons "TileWidth"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          hls-image-based-trick-play-settings))
   common-lisp:nil))
(common-lisp:deftype hls-initialization-vector-in-manifest ()
  'common-lisp:string)
(common-lisp:deftype hls-interval-cadence () 'common-lisp:string)
(common-lisp:deftype hls-key-provider-type () 'common-lisp:string)
(common-lisp:deftype hls-manifest-compression () 'common-lisp:string)
(common-lisp:deftype hls-manifest-duration-format () 'common-lisp:string)
(common-lisp:deftype hls-offline-encrypted () 'common-lisp:string)
(common-lisp:deftype hls-output-selection () 'common-lisp:string)
(common-lisp:deftype hls-program-date-time () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (hls-rendition-group-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-hls-rendition-group-settings-"))
   (rendition-group-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (rendition-language-code common-lisp:nil :type
    (common-lisp:or language-code common-lisp:null))
   (rendition-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'hls-rendition-group-settings
                    'make-hls-rendition-group-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          hls-rendition-group-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          hls-rendition-group-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rendition-group-id))
      (common-lisp:list
       (common-lisp:cons "RenditionGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'rendition-language-code))
      (common-lisp:list
       (common-lisp:cons "RenditionLanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rendition-name))
      (common-lisp:list
       (common-lisp:cons "RenditionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          hls-rendition-group-settings))
   common-lisp:nil))
(common-lisp:deftype hls-segment-control () 'common-lisp:string)
(common-lisp:deftype hls-segment-length-control () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (hls-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-hls-settings-"))
   (audio-group-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (audio-only-container common-lisp:nil :type
    (common-lisp:or hls-audio-only-container common-lisp:null))
   (audio-rendition-sets common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (audio-track-type common-lisp:nil :type
    (common-lisp:or hls-audio-track-type common-lisp:null))
   (descriptive-video-service-flag common-lisp:nil :type
    (common-lisp:or hls-descriptive-video-service-flag common-lisp:null))
   (iframe-only-manifest common-lisp:nil :type
    (common-lisp:or hls-iframe-only-manifest common-lisp:null))
   (segment-modifier common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'hls-settings 'make-hls-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input hls-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input hls-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audio-group-id))
      (common-lisp:list
       (common-lisp:cons "AudioGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'audio-only-container))
      (common-lisp:list
       (common-lisp:cons "AudioOnlyContainer"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'audio-rendition-sets))
      (common-lisp:list
       (common-lisp:cons "AudioRenditionSets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audio-track-type))
      (common-lisp:list
       (common-lisp:cons "AudioTrackType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'descriptive-video-service-flag))
      (common-lisp:list
       (common-lisp:cons "DescriptiveVideoServiceFlag"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'iframe-only-manifest))
      (common-lisp:list
       (common-lisp:cons "IFrameOnlyManifest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-modifier))
      (common-lisp:list
       (common-lisp:cons "SegmentModifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input hls-settings))
   common-lisp:nil))
(common-lisp:deftype hls-stream-inf-resolution () 'common-lisp:string)
(common-lisp:deftype hls-target-duration-compatibility-mode ()
  'common-lisp:string)
(common-lisp:deftype hls-timed-metadata-id3frame () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (hop-destination (:copier common-lisp:nil)
      (:conc-name "struct-shape-hop-destination-"))
   (priority common-lisp:nil :type
    (common-lisp:or |__integerMinNegative50Max50| common-lisp:null))
   (queue common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (wait-minutes common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'hop-destination 'make-hop-destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input hop-destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input hop-destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'priority))
      (common-lisp:list
       (common-lisp:cons "Priority"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'queue))
      (common-lisp:list
       (common-lisp:cons "Queue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'wait-minutes))
      (common-lisp:list
       (common-lisp:cons "WaitMinutes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input hop-destination))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (id3insertion (:copier common-lisp:nil)
      (:conc-name "struct-shape-id3insertion-"))
   (id3 common-lisp:nil :type
    (common-lisp:or |__stringPatternAZaZ0902| common-lisp:null))
   (timecode common-lisp:nil :type
    (common-lisp:or |__stringPattern010920405090509092| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'id3insertion 'make-id3insertion))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input id3insertion))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input id3insertion))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id3))
      (common-lisp:list
       (common-lisp:cons "Id3"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timecode))
      (common-lisp:list
       (common-lisp:cons "Timecode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input id3insertion))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (image-inserter (:copier common-lisp:nil)
      (:conc-name "struct-shape-image-inserter-"))
   (insertable-images common-lisp:nil :type
    (common-lisp:or |__listOfInsertableImage| common-lisp:null))
   (sdr-reference-white-level common-lisp:nil :type
    (common-lisp:or |__integerMin100Max1000| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'image-inserter 'make-image-inserter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input image-inserter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input image-inserter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'insertable-images))
      (common-lisp:list
       (common-lisp:cons "InsertableImages"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sdr-reference-white-level))
      (common-lisp:list
       (common-lisp:cons "SdrReferenceWhiteLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input image-inserter))
   common-lisp:nil))
(common-lisp:deftype imsc-accessibility-subs () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (imsc-destination-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-imsc-destination-settings-"))
   (accessibility common-lisp:nil :type
    (common-lisp:or imsc-accessibility-subs common-lisp:null))
   (style-passthrough common-lisp:nil :type
    (common-lisp:or imsc-style-passthrough common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'imsc-destination-settings
                    'make-imsc-destination-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          imsc-destination-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          imsc-destination-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'accessibility))
      (common-lisp:list
       (common-lisp:cons "Accessibility"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'style-passthrough))
      (common-lisp:list
       (common-lisp:cons "StylePassthrough"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          imsc-destination-settings))
   common-lisp:nil))
(common-lisp:deftype imsc-style-passthrough () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (input (:copier common-lisp:nil) (:conc-name "struct-shape-input-"))
   (advanced-input-filter common-lisp:nil :type
    (common-lisp:or advanced-input-filter common-lisp:null))
   (advanced-input-filter-settings common-lisp:nil :type
    (common-lisp:or advanced-input-filter-settings common-lisp:null))
   (audio-selector-groups common-lisp:nil :type
    (common-lisp:or |__mapOfAudioSelectorGroup| common-lisp:null))
   (audio-selectors common-lisp:nil :type
    (common-lisp:or |__mapOfAudioSelector| common-lisp:null))
   (caption-selectors common-lisp:nil :type
    (common-lisp:or |__mapOfCaptionSelector| common-lisp:null))
   (crop common-lisp:nil :type (common-lisp:or rectangle common-lisp:null))
   (deblock-filter common-lisp:nil :type
    (common-lisp:or input-deblock-filter common-lisp:null))
   (decryption-settings common-lisp:nil :type
    (common-lisp:or input-decryption-settings common-lisp:null))
   (denoise-filter common-lisp:nil :type
    (common-lisp:or input-denoise-filter common-lisp:null))
   (dolby-vision-metadata-xml common-lisp:nil :type
    (common-lisp:or |__stringMin14PatternS3XmlXMLHttpsXmlXML|
                    common-lisp:null))
   (file-input common-lisp:nil :type
    (common-lisp:or |__stringPatternS3Https| common-lisp:null))
   (filter-enable common-lisp:nil :type
    (common-lisp:or input-filter-enable common-lisp:null))
   (filter-strength common-lisp:nil :type
    (common-lisp:or |__integerMin0Max5| common-lisp:null))
   (image-inserter common-lisp:nil :type
    (common-lisp:or image-inserter common-lisp:null))
   (input-clippings common-lisp:nil :type
    (common-lisp:or |__listOfInputClipping| common-lisp:null))
   (input-scan-type common-lisp:nil :type
    (common-lisp:or input-scan-type common-lisp:null))
   (position common-lisp:nil :type (common-lisp:or rectangle common-lisp:null))
   (program-number common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2147483647| common-lisp:null))
   (psi-control common-lisp:nil :type
    (common-lisp:or input-psi-control common-lisp:null))
   (supplemental-imps common-lisp:nil :type
    (common-lisp:or |__listOf__stringPatternS3ASSETMAPXml| common-lisp:null))
   (timecode-source common-lisp:nil :type
    (common-lisp:or input-timecode-source common-lisp:null))
   (timecode-start common-lisp:nil :type
    (common-lisp:or |__stringMin11Max11Pattern01D20305D205D| common-lisp:null))
   (video-generator common-lisp:nil :type
    (common-lisp:or input-video-generator common-lisp:null))
   (video-selector common-lisp:nil :type
    (common-lisp:or video-selector common-lisp:null)))
 (common-lisp:export (common-lisp:list 'input 'make-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'advanced-input-filter))
      (common-lisp:list
       (common-lisp:cons "AdvancedInputFilter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'advanced-input-filter-settings))
      (common-lisp:list
       (common-lisp:cons "AdvancedInputFilterSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'audio-selector-groups))
      (common-lisp:list
       (common-lisp:cons "AudioSelectorGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audio-selectors))
      (common-lisp:list
       (common-lisp:cons "AudioSelectors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'caption-selectors))
      (common-lisp:list
       (common-lisp:cons "CaptionSelectors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'crop))
      (common-lisp:list
       (common-lisp:cons "Crop"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deblock-filter))
      (common-lisp:list
       (common-lisp:cons "DeblockFilter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'decryption-settings))
      (common-lisp:list
       (common-lisp:cons "DecryptionSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'denoise-filter))
      (common-lisp:list
       (common-lisp:cons "DenoiseFilter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dolby-vision-metadata-xml))
      (common-lisp:list
       (common-lisp:cons "DolbyVisionMetadataXml"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-input))
      (common-lisp:list
       (common-lisp:cons "FileInput"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter-enable))
      (common-lisp:list
       (common-lisp:cons "FilterEnable"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter-strength))
      (common-lisp:list
       (common-lisp:cons "FilterStrength"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'image-inserter))
      (common-lisp:list
       (common-lisp:cons "ImageInserter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-clippings))
      (common-lisp:list
       (common-lisp:cons "InputClippings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-scan-type))
      (common-lisp:list
       (common-lisp:cons "InputScanType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "Position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'program-number))
      (common-lisp:list
       (common-lisp:cons "ProgramNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'psi-control))
      (common-lisp:list
       (common-lisp:cons "PsiControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'supplemental-imps))
      (common-lisp:list
       (common-lisp:cons "SupplementalImps"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timecode-source))
      (common-lisp:list
       (common-lisp:cons "TimecodeSource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timecode-start))
      (common-lisp:list
       (common-lisp:cons "TimecodeStart"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'video-generator))
      (common-lisp:list
       (common-lisp:cons "VideoGenerator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'video-selector))
      (common-lisp:list
       (common-lisp:cons "VideoSelector"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (input-clipping (:copier common-lisp:nil)
      (:conc-name "struct-shape-input-clipping-"))
   (end-timecode common-lisp:nil :type
    (common-lisp:or |__stringPattern010920405090509092| common-lisp:null))
   (start-timecode common-lisp:nil :type
    (common-lisp:or |__stringPattern010920405090509092| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'input-clipping 'make-input-clipping))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input input-clipping))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input input-clipping))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-timecode))
      (common-lisp:list
       (common-lisp:cons "EndTimecode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-timecode))
      (common-lisp:list
       (common-lisp:cons "StartTimecode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input input-clipping))
   common-lisp:nil))
(common-lisp:deftype input-deblock-filter () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (input-decryption-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-input-decryption-settings-"))
   (decryption-mode common-lisp:nil :type
    (common-lisp:or decryption-mode common-lisp:null))
   (encrypted-decryption-key common-lisp:nil :type
    (common-lisp:or |__stringMin24Max512PatternAZaZ0902| common-lisp:null))
   (initialization-vector common-lisp:nil :type
    (common-lisp:or |__stringMin16Max24PatternAZaZ0922AZaZ0916|
                    common-lisp:null))
   (kms-key-region common-lisp:nil :type
    (common-lisp:or
     |__stringMin9Max19PatternAZ26EastWestCentralNorthSouthEastWest1912|
     common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'input-decryption-settings
                    'make-input-decryption-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          input-decryption-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          input-decryption-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'decryption-mode))
      (common-lisp:list
       (common-lisp:cons "DecryptionMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'encrypted-decryption-key))
      (common-lisp:list
       (common-lisp:cons "EncryptedDecryptionKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'initialization-vector))
      (common-lisp:list
       (common-lisp:cons "InitializationVector"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key-region))
      (common-lisp:list
       (common-lisp:cons "KmsKeyRegion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          input-decryption-settings))
   common-lisp:nil))
(common-lisp:deftype input-denoise-filter () 'common-lisp:string)
(common-lisp:deftype input-filter-enable () 'common-lisp:string)
(common-lisp:deftype input-policy () 'common-lisp:string)
(common-lisp:deftype input-psi-control () 'common-lisp:string)
(common-lisp:deftype input-rotate () 'common-lisp:string)
(common-lisp:deftype input-sample-range () 'common-lisp:string)
(common-lisp:deftype input-scan-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (input-template (:copier common-lisp:nil)
      (:conc-name "struct-shape-input-template-"))
   (advanced-input-filter common-lisp:nil :type
    (common-lisp:or advanced-input-filter common-lisp:null))
   (advanced-input-filter-settings common-lisp:nil :type
    (common-lisp:or advanced-input-filter-settings common-lisp:null))
   (audio-selector-groups common-lisp:nil :type
    (common-lisp:or |__mapOfAudioSelectorGroup| common-lisp:null))
   (audio-selectors common-lisp:nil :type
    (common-lisp:or |__mapOfAudioSelector| common-lisp:null))
   (caption-selectors common-lisp:nil :type
    (common-lisp:or |__mapOfCaptionSelector| common-lisp:null))
   (crop common-lisp:nil :type (common-lisp:or rectangle common-lisp:null))
   (deblock-filter common-lisp:nil :type
    (common-lisp:or input-deblock-filter common-lisp:null))
   (denoise-filter common-lisp:nil :type
    (common-lisp:or input-denoise-filter common-lisp:null))
   (dolby-vision-metadata-xml common-lisp:nil :type
    (common-lisp:or |__stringMin14PatternS3XmlXMLHttpsXmlXML|
                    common-lisp:null))
   (filter-enable common-lisp:nil :type
    (common-lisp:or input-filter-enable common-lisp:null))
   (filter-strength common-lisp:nil :type
    (common-lisp:or |__integerMin0Max5| common-lisp:null))
   (image-inserter common-lisp:nil :type
    (common-lisp:or image-inserter common-lisp:null))
   (input-clippings common-lisp:nil :type
    (common-lisp:or |__listOfInputClipping| common-lisp:null))
   (input-scan-type common-lisp:nil :type
    (common-lisp:or input-scan-type common-lisp:null))
   (position common-lisp:nil :type (common-lisp:or rectangle common-lisp:null))
   (program-number common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2147483647| common-lisp:null))
   (psi-control common-lisp:nil :type
    (common-lisp:or input-psi-control common-lisp:null))
   (timecode-source common-lisp:nil :type
    (common-lisp:or input-timecode-source common-lisp:null))
   (timecode-start common-lisp:nil :type
    (common-lisp:or |__stringMin11Max11Pattern01D20305D205D| common-lisp:null))
   (video-selector common-lisp:nil :type
    (common-lisp:or video-selector common-lisp:null)))
 (common-lisp:export (common-lisp:list 'input-template 'make-input-template))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input input-template))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input input-template))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'advanced-input-filter))
      (common-lisp:list
       (common-lisp:cons "AdvancedInputFilter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'advanced-input-filter-settings))
      (common-lisp:list
       (common-lisp:cons "AdvancedInputFilterSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'audio-selector-groups))
      (common-lisp:list
       (common-lisp:cons "AudioSelectorGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audio-selectors))
      (common-lisp:list
       (common-lisp:cons "AudioSelectors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'caption-selectors))
      (common-lisp:list
       (common-lisp:cons "CaptionSelectors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'crop))
      (common-lisp:list
       (common-lisp:cons "Crop"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deblock-filter))
      (common-lisp:list
       (common-lisp:cons "DeblockFilter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'denoise-filter))
      (common-lisp:list
       (common-lisp:cons "DenoiseFilter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dolby-vision-metadata-xml))
      (common-lisp:list
       (common-lisp:cons "DolbyVisionMetadataXml"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter-enable))
      (common-lisp:list
       (common-lisp:cons "FilterEnable"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter-strength))
      (common-lisp:list
       (common-lisp:cons "FilterStrength"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'image-inserter))
      (common-lisp:list
       (common-lisp:cons "ImageInserter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-clippings))
      (common-lisp:list
       (common-lisp:cons "InputClippings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-scan-type))
      (common-lisp:list
       (common-lisp:cons "InputScanType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "Position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'program-number))
      (common-lisp:list
       (common-lisp:cons "ProgramNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'psi-control))
      (common-lisp:list
       (common-lisp:cons "PsiControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timecode-source))
      (common-lisp:list
       (common-lisp:cons "TimecodeSource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timecode-start))
      (common-lisp:list
       (common-lisp:cons "TimecodeStart"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'video-selector))
      (common-lisp:list
       (common-lisp:cons "VideoSelector"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input input-template))
   common-lisp:nil))
(common-lisp:deftype input-timecode-source () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (input-video-generator (:copier common-lisp:nil)
      (:conc-name "struct-shape-input-video-generator-"))
   (duration common-lisp:nil :type
    (common-lisp:or |__integerMin50Max86400000| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'input-video-generator 'make-input-video-generator))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          input-video-generator))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          input-video-generator))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'duration))
      (common-lisp:list
       (common-lisp:cons "Duration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          input-video-generator))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (insertable-image (:copier common-lisp:nil)
      (:conc-name "struct-shape-insertable-image-"))
   (duration common-lisp:nil :type
    (common-lisp:or |__integerMin0Max2147483647| common-lisp:null))
   (fade-in common-lisp:nil :type
    (common-lisp:or |__integerMin0Max2147483647| common-lisp:null))
   (fade-out common-lisp:nil :type
    (common-lisp:or |__integerMin0Max2147483647| common-lisp:null))
   (height common-lisp:nil :type
    (common-lisp:or |__integerMin0Max2147483647| common-lisp:null))
   (image-inserter-input common-lisp:nil :type
    (common-lisp:or
     |__stringMin14PatternS3BmpBMPPngPNGTgaTGAHttpsBmpBMPPngPNGTgaTGA|
     common-lisp:null))
   (image-x common-lisp:nil :type
    (common-lisp:or |__integerMin0Max2147483647| common-lisp:null))
   (image-y common-lisp:nil :type
    (common-lisp:or |__integerMin0Max2147483647| common-lisp:null))
   (layer common-lisp:nil :type
    (common-lisp:or |__integerMin0Max99| common-lisp:null))
   (opacity common-lisp:nil :type
    (common-lisp:or |__integerMin0Max100| common-lisp:null))
   (start-time common-lisp:nil :type
    (common-lisp:or |__stringPattern01D20305D205D| common-lisp:null))
   (width common-lisp:nil :type
    (common-lisp:or |__integerMin0Max2147483647| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'insertable-image 'make-insertable-image))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input insertable-image))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input insertable-image))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'duration))
      (common-lisp:list
       (common-lisp:cons "Duration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fade-in))
      (common-lisp:list
       (common-lisp:cons "FadeIn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fade-out))
      (common-lisp:list
       (common-lisp:cons "FadeOut"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'height))
      (common-lisp:list
       (common-lisp:cons "Height"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'image-inserter-input))
      (common-lisp:list
       (common-lisp:cons "ImageInserterInput"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'image-x))
      (common-lisp:list
       (common-lisp:cons "ImageX"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'image-y))
      (common-lisp:list
       (common-lisp:cons "ImageY"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'layer))
      (common-lisp:list
       (common-lisp:cons "Layer"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'opacity))
      (common-lisp:list
       (common-lisp:cons "Opacity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'width))
      (common-lisp:list
       (common-lisp:cons "Width"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input insertable-image))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition internal-server-error-exception
     (mediaconvert-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-error-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-error-exception
                    'internal-server-error-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (job (:copier common-lisp:nil) (:conc-name "struct-shape-job-"))
   (acceleration-settings common-lisp:nil :type
    (common-lisp:or acceleration-settings common-lisp:null))
   (acceleration-status common-lisp:nil :type
    (common-lisp:or acceleration-status common-lisp:null))
   (arn common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (billing-tags-source common-lisp:nil :type
    (common-lisp:or billing-tags-source common-lisp:null))
   (client-request-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (current-phase common-lisp:nil :type
    (common-lisp:or job-phase common-lisp:null))
   (error-code common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (error-message common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (hop-destinations common-lisp:nil :type
    (common-lisp:or |__listOfHopDestination| common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (job-percent-complete common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (job-template common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (messages common-lisp:nil :type
    (common-lisp:or job-messages common-lisp:null))
   (output-group-details common-lisp:nil :type
    (common-lisp:or |__listOfOutputGroupDetail| common-lisp:null))
   (priority common-lisp:nil :type
    (common-lisp:or |__integerMinNegative50Max50| common-lisp:null))
   (queue common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (queue-transitions common-lisp:nil :type
    (common-lisp:or |__listOfQueueTransition| common-lisp:null))
   (retry-count common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (role (common-lisp:error ":role is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (settings (common-lisp:error ":settings is required") :type
    (common-lisp:or job-settings common-lisp:null))
   (simulate-reserved-queue common-lisp:nil :type
    (common-lisp:or simulate-reserved-queue common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or job-status common-lisp:null))
   (status-update-interval common-lisp:nil :type
    (common-lisp:or status-update-interval common-lisp:null))
   (timing common-lisp:nil :type (common-lisp:or timing common-lisp:null))
   (user-metadata common-lisp:nil :type
    (common-lisp:or |__mapOf__string| common-lisp:null))
   (warnings common-lisp:nil :type
    (common-lisp:or |__listOfWarningGroup| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'job 'make-job))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input job))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input job))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'acceleration-settings))
      (common-lisp:list
       (common-lisp:cons "AccelerationSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'acceleration-status))
      (common-lisp:list
       (common-lisp:cons "AccelerationStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-tags-source))
      (common-lisp:list
       (common-lisp:cons "BillingTagsSource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'current-phase))
      (common-lisp:list
       (common-lisp:cons "CurrentPhase"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-code))
      (common-lisp:list
       (common-lisp:cons "ErrorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "ErrorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hop-destinations))
      (common-lisp:list
       (common-lisp:cons "HopDestinations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'job-percent-complete))
      (common-lisp:list
       (common-lisp:cons "JobPercentComplete"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-template))
      (common-lisp:list
       (common-lisp:cons "JobTemplate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'messages))
      (common-lisp:list
       (common-lisp:cons "Messages"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'output-group-details))
      (common-lisp:list
       (common-lisp:cons "OutputGroupDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'priority))
      (common-lisp:list
       (common-lisp:cons "Priority"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'queue))
      (common-lisp:list
       (common-lisp:cons "Queue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'queue-transitions))
      (common-lisp:list
       (common-lisp:cons "QueueTransitions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'retry-count))
      (common-lisp:list
       (common-lisp:cons "RetryCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role))
      (common-lisp:list
       (common-lisp:cons "Role"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'settings))
      (common-lisp:list
       (common-lisp:cons "Settings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'simulate-reserved-queue))
      (common-lisp:list
       (common-lisp:cons "SimulateReservedQueue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'status-update-interval))
      (common-lisp:list
       (common-lisp:cons "StatusUpdateInterval"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timing))
      (common-lisp:list
       (common-lisp:cons "Timing"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-metadata))
      (common-lisp:list
       (common-lisp:cons "UserMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warnings))
      (common-lisp:list
       (common-lisp:cons "Warnings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input job))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (job-messages (:copier common-lisp:nil)
      (:conc-name "struct-shape-job-messages-"))
   (info common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (warning common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'job-messages 'make-job-messages))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input job-messages))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input job-messages))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'info))
      (common-lisp:list
       (common-lisp:cons "Info"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warning))
      (common-lisp:list
       (common-lisp:cons "Warning"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input job-messages))
   common-lisp:nil))
(common-lisp:deftype job-phase () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (job-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-job-settings-"))
   (ad-avail-offset common-lisp:nil :type
    (common-lisp:or |__integerMinNegative1000Max1000| common-lisp:null))
   (avail-blanking common-lisp:nil :type
    (common-lisp:or avail-blanking common-lisp:null))
   (esam common-lisp:nil :type (common-lisp:or esam-settings common-lisp:null))
   (extended-data-services common-lisp:nil :type
    (common-lisp:or extended-data-services common-lisp:null))
   (inputs common-lisp:nil :type
    (common-lisp:or |__listOfInput| common-lisp:null))
   (kantar-watermark common-lisp:nil :type
    (common-lisp:or kantar-watermark-settings common-lisp:null))
   (motion-image-inserter common-lisp:nil :type
    (common-lisp:or motion-image-inserter common-lisp:null))
   (nielsen-configuration common-lisp:nil :type
    (common-lisp:or nielsen-configuration common-lisp:null))
   (nielsen-non-linear-watermark common-lisp:nil :type
    (common-lisp:or nielsen-non-linear-watermark-settings common-lisp:null))
   (output-groups common-lisp:nil :type
    (common-lisp:or |__listOfOutputGroup| common-lisp:null))
   (timecode-config common-lisp:nil :type
    (common-lisp:or timecode-config common-lisp:null))
   (timed-metadata-insertion common-lisp:nil :type
    (common-lisp:or timed-metadata-insertion common-lisp:null)))
 (common-lisp:export (common-lisp:list 'job-settings 'make-job-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input job-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input job-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ad-avail-offset))
      (common-lisp:list
       (common-lisp:cons "AdAvailOffset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'avail-blanking))
      (common-lisp:list
       (common-lisp:cons "AvailBlanking"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'esam))
      (common-lisp:list
       (common-lisp:cons "Esam"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'extended-data-services))
      (common-lisp:list
       (common-lisp:cons "ExtendedDataServices"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'inputs))
      (common-lisp:list
       (common-lisp:cons "Inputs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kantar-watermark))
      (common-lisp:list
       (common-lisp:cons "KantarWatermark"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'motion-image-inserter))
      (common-lisp:list
       (common-lisp:cons "MotionImageInserter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'nielsen-configuration))
      (common-lisp:list
       (common-lisp:cons "NielsenConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'nielsen-non-linear-watermark))
      (common-lisp:list
       (common-lisp:cons "NielsenNonLinearWatermark"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-groups))
      (common-lisp:list
       (common-lisp:cons "OutputGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timecode-config))
      (common-lisp:list
       (common-lisp:cons "TimecodeConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'timed-metadata-insertion))
      (common-lisp:list
       (common-lisp:cons "TimedMetadataInsertion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input job-settings))
   common-lisp:nil))
(common-lisp:deftype job-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (job-template (:copier common-lisp:nil)
      (:conc-name "struct-shape-job-template-"))
   (acceleration-settings common-lisp:nil :type
    (common-lisp:or acceleration-settings common-lisp:null))
   (arn common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (category common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (hop-destinations common-lisp:nil :type
    (common-lisp:or |__listOfHopDestination| common-lisp:null))
   (last-updated common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (priority common-lisp:nil :type
    (common-lisp:or |__integerMinNegative50Max50| common-lisp:null))
   (queue common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (settings (common-lisp:error ":settings is required") :type
    (common-lisp:or job-template-settings common-lisp:null))
   (status-update-interval common-lisp:nil :type
    (common-lisp:or status-update-interval common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'job-template 'make-job-template))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input job-template))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input job-template))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'acceleration-settings))
      (common-lisp:list
       (common-lisp:cons "AccelerationSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'category))
      (common-lisp:list
       (common-lisp:cons "Category"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hop-destinations))
      (common-lisp:list
       (common-lisp:cons "HopDestinations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated))
      (common-lisp:list
       (common-lisp:cons "LastUpdated"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'priority))
      (common-lisp:list
       (common-lisp:cons "Priority"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'queue))
      (common-lisp:list
       (common-lisp:cons "Queue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'settings))
      (common-lisp:list
       (common-lisp:cons "Settings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'status-update-interval))
      (common-lisp:list
       (common-lisp:cons "StatusUpdateInterval"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input job-template))
   common-lisp:nil))
(common-lisp:deftype job-template-list-by () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (job-template-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-job-template-settings-"))
   (ad-avail-offset common-lisp:nil :type
    (common-lisp:or |__integerMinNegative1000Max1000| common-lisp:null))
   (avail-blanking common-lisp:nil :type
    (common-lisp:or avail-blanking common-lisp:null))
   (esam common-lisp:nil :type (common-lisp:or esam-settings common-lisp:null))
   (extended-data-services common-lisp:nil :type
    (common-lisp:or extended-data-services common-lisp:null))
   (inputs common-lisp:nil :type
    (common-lisp:or |__listOfInputTemplate| common-lisp:null))
   (kantar-watermark common-lisp:nil :type
    (common-lisp:or kantar-watermark-settings common-lisp:null))
   (motion-image-inserter common-lisp:nil :type
    (common-lisp:or motion-image-inserter common-lisp:null))
   (nielsen-configuration common-lisp:nil :type
    (common-lisp:or nielsen-configuration common-lisp:null))
   (nielsen-non-linear-watermark common-lisp:nil :type
    (common-lisp:or nielsen-non-linear-watermark-settings common-lisp:null))
   (output-groups common-lisp:nil :type
    (common-lisp:or |__listOfOutputGroup| common-lisp:null))
   (timecode-config common-lisp:nil :type
    (common-lisp:or timecode-config common-lisp:null))
   (timed-metadata-insertion common-lisp:nil :type
    (common-lisp:or timed-metadata-insertion common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'job-template-settings 'make-job-template-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          job-template-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          job-template-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ad-avail-offset))
      (common-lisp:list
       (common-lisp:cons "AdAvailOffset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'avail-blanking))
      (common-lisp:list
       (common-lisp:cons "AvailBlanking"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'esam))
      (common-lisp:list
       (common-lisp:cons "Esam"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'extended-data-services))
      (common-lisp:list
       (common-lisp:cons "ExtendedDataServices"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'inputs))
      (common-lisp:list
       (common-lisp:cons "Inputs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kantar-watermark))
      (common-lisp:list
       (common-lisp:cons "KantarWatermark"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'motion-image-inserter))
      (common-lisp:list
       (common-lisp:cons "MotionImageInserter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'nielsen-configuration))
      (common-lisp:list
       (common-lisp:cons "NielsenConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'nielsen-non-linear-watermark))
      (common-lisp:list
       (common-lisp:cons "NielsenNonLinearWatermark"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-groups))
      (common-lisp:list
       (common-lisp:cons "OutputGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timecode-config))
      (common-lisp:list
       (common-lisp:cons "TimecodeConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'timed-metadata-insertion))
      (common-lisp:list
       (common-lisp:cons "TimedMetadataInsertion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          job-template-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (kantar-watermark-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-kantar-watermark-settings-"))
   (channel-name common-lisp:nil :type
    (common-lisp:or |__stringMin1Max20| common-lisp:null))
   (content-reference common-lisp:nil :type
    (common-lisp:or |__stringMin1Max50PatternAZAZ09| common-lisp:null))
   (credentials-secret-name common-lisp:nil :type
    (common-lisp:or |__stringMin1Max512PatternAZAZ09| common-lisp:null))
   (file-offset common-lisp:nil :type
    (common-lisp:or |__doubleMin0| common-lisp:null))
   (kantar-license-id common-lisp:nil :type
    (common-lisp:or |__integerMin0Max2147483647| common-lisp:null))
   (kantar-server-url common-lisp:nil :type
    (common-lisp:or |__stringPatternHttpsKantarmediaComFr| common-lisp:null))
   (log-destination common-lisp:nil :type
    (common-lisp:or |__stringPatternS3| common-lisp:null))
   (metadata3 common-lisp:nil :type
    (common-lisp:or |__stringMin1Max50| common-lisp:null))
   (metadata4 common-lisp:nil :type
    (common-lisp:or |__stringMin1Max50| common-lisp:null))
   (metadata5 common-lisp:nil :type
    (common-lisp:or |__stringMin1Max50| common-lisp:null))
   (metadata6 common-lisp:nil :type
    (common-lisp:or |__stringMin1Max50| common-lisp:null))
   (metadata7 common-lisp:nil :type
    (common-lisp:or |__stringMin1Max50| common-lisp:null))
   (metadata8 common-lisp:nil :type
    (common-lisp:or |__stringMin1Max50| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'kantar-watermark-settings
                    'make-kantar-watermark-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          kantar-watermark-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          kantar-watermark-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-name))
      (common-lisp:list
       (common-lisp:cons "ChannelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-reference))
      (common-lisp:list
       (common-lisp:cons "ContentReference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'credentials-secret-name))
      (common-lisp:list
       (common-lisp:cons "CredentialsSecretName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-offset))
      (common-lisp:list
       (common-lisp:cons "FileOffset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kantar-license-id))
      (common-lisp:list
       (common-lisp:cons "KantarLicenseId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kantar-server-url))
      (common-lisp:list
       (common-lisp:cons "KantarServerUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-destination))
      (common-lisp:list
       (common-lisp:cons "LogDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata3))
      (common-lisp:list
       (common-lisp:cons "Metadata3"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata4))
      (common-lisp:list
       (common-lisp:cons "Metadata4"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata5))
      (common-lisp:list
       (common-lisp:cons "Metadata5"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata6))
      (common-lisp:list
       (common-lisp:cons "Metadata6"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata7))
      (common-lisp:list
       (common-lisp:cons "Metadata7"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata8))
      (common-lisp:list
       (common-lisp:cons "Metadata8"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          kantar-watermark-settings))
   common-lisp:nil))
(common-lisp:deftype language-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (list-job-templates-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-job-templates-request-"))
   (category common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (list-by common-lisp:nil :type
    (common-lisp:or job-template-list-by common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or |__integerMin1Max20| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (order common-lisp:nil :type (common-lisp:or order common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-job-templates-request
                    'make-list-job-templates-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-job-templates-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-job-templates-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-job-templates-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-job-templates-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-job-templates-response-"))
   (job-templates common-lisp:nil :type
    (common-lisp:or |__listOfJobTemplate| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-job-templates-response
                    'make-list-job-templates-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-job-templates-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-job-templates-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-templates))
      (common-lisp:list
       (common-lisp:cons "JobTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-job-templates-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-jobs-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-jobs-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or |__integerMin1Max20| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (order common-lisp:nil :type (common-lisp:or order common-lisp:null))
   (queue common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or job-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-jobs-request 'make-list-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-jobs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-jobs-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-jobs-response-"))
   (jobs common-lisp:nil :type (common-lisp:or |__listOfJob| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-jobs-response 'make-list-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'jobs))
      (common-lisp:list
       (common-lisp:cons "Jobs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-jobs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-presets-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-presets-request-"))
   (category common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (list-by common-lisp:nil :type
    (common-lisp:or preset-list-by common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or |__integerMin1Max20| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (order common-lisp:nil :type (common-lisp:or order common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-presets-request 'make-list-presets-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-presets-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-presets-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-presets-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-presets-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-presets-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (presets common-lisp:nil :type
    (common-lisp:or |__listOfPreset| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-presets-response 'make-list-presets-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-presets-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-presets-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'presets))
      (common-lisp:list
       (common-lisp:cons "Presets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-presets-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-queues-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-queues-request-"))
   (list-by common-lisp:nil :type
    (common-lisp:or queue-list-by common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or |__integerMin1Max20| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (order common-lisp:nil :type (common-lisp:or order common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-queues-request 'make-list-queues-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-queues-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-queues-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-queues-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-queues-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-queues-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (queues common-lisp:nil :type
    (common-lisp:or |__listOfQueue| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-queues-response 'make-list-queues-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-queues-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-queues-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'queues))
      (common-lisp:list
       (common-lisp:cons "Queues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-queues-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-request-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-response-"))
   (resource-tags common-lisp:nil :type
    (common-lisp:or resource-tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-tags))
      (common-lisp:list
       (common-lisp:cons "ResourceTags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:deftype m2ts-audio-buffer-model () 'common-lisp:string)
(common-lisp:deftype m2ts-audio-duration () 'common-lisp:string)
(common-lisp:deftype m2ts-buffer-model () 'common-lisp:string)
(common-lisp:deftype m2ts-data-pts-control () 'common-lisp:string)
(common-lisp:deftype m2ts-ebp-audio-interval () 'common-lisp:string)
(common-lisp:deftype m2ts-ebp-placement () 'common-lisp:string)
(common-lisp:deftype m2ts-es-rate-in-pes () 'common-lisp:string)
(common-lisp:deftype m2ts-force-ts-video-ebp-order () 'common-lisp:string)
(common-lisp:deftype m2ts-klv-metadata () 'common-lisp:string)
(common-lisp:deftype m2ts-nielsen-id3 () 'common-lisp:string)
(common-lisp:deftype m2ts-pcr-control () 'common-lisp:string)
(common-lisp:deftype m2ts-rate-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (m2ts-scte35esam (:copier common-lisp:nil)
      (:conc-name "struct-shape-m2ts-scte35esam-"))
   (scte35esam-pid common-lisp:nil :type
    (common-lisp:or |__integerMin32Max8182| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'm2ts-scte35esam 'make-m2ts-scte35esam))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input m2ts-scte35esam))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input m2ts-scte35esam))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scte35esam-pid))
      (common-lisp:list
       (common-lisp:cons "Scte35EsamPid"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input m2ts-scte35esam))
   common-lisp:nil))
(common-lisp:deftype m2ts-scte35source () 'common-lisp:string)
(common-lisp:deftype m2ts-segmentation-markers () 'common-lisp:string)
(common-lisp:deftype m2ts-segmentation-style () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (m2ts-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-m2ts-settings-"))
   (audio-buffer-model common-lisp:nil :type
    (common-lisp:or m2ts-audio-buffer-model common-lisp:null))
   (audio-duration common-lisp:nil :type
    (common-lisp:or m2ts-audio-duration common-lisp:null))
   (audio-frames-per-pes common-lisp:nil :type
    (common-lisp:or |__integerMin0Max2147483647| common-lisp:null))
   (audio-pids common-lisp:nil :type
    (common-lisp:or |__listOf__integerMin32Max8182| common-lisp:null))
   (bitrate common-lisp:nil :type
    (common-lisp:or |__integerMin0Max2147483647| common-lisp:null))
   (buffer-model common-lisp:nil :type
    (common-lisp:or m2ts-buffer-model common-lisp:null))
   (data-ptscontrol common-lisp:nil :type
    (common-lisp:or m2ts-data-pts-control common-lisp:null))
   (dvb-nit-settings common-lisp:nil :type
    (common-lisp:or dvb-nit-settings common-lisp:null))
   (dvb-sdt-settings common-lisp:nil :type
    (common-lisp:or dvb-sdt-settings common-lisp:null))
   (dvb-sub-pids common-lisp:nil :type
    (common-lisp:or |__listOf__integerMin32Max8182| common-lisp:null))
   (dvb-tdt-settings common-lisp:nil :type
    (common-lisp:or dvb-tdt-settings common-lisp:null))
   (dvb-teletext-pid common-lisp:nil :type
    (common-lisp:or |__integerMin32Max8182| common-lisp:null))
   (ebp-audio-interval common-lisp:nil :type
    (common-lisp:or m2ts-ebp-audio-interval common-lisp:null))
   (ebp-placement common-lisp:nil :type
    (common-lisp:or m2ts-ebp-placement common-lisp:null))
   (es-rate-in-pes common-lisp:nil :type
    (common-lisp:or m2ts-es-rate-in-pes common-lisp:null))
   (force-ts-video-ebp-order common-lisp:nil :type
    (common-lisp:or m2ts-force-ts-video-ebp-order common-lisp:null))
   (fragment-time common-lisp:nil :type
    (common-lisp:or |__doubleMin0| common-lisp:null))
   (klv-metadata common-lisp:nil :type
    (common-lisp:or m2ts-klv-metadata common-lisp:null))
   (max-pcr-interval common-lisp:nil :type
    (common-lisp:or |__integerMin0Max500| common-lisp:null))
   (min-ebp-interval common-lisp:nil :type
    (common-lisp:or |__integerMin0Max10000| common-lisp:null))
   (nielsen-id3 common-lisp:nil :type
    (common-lisp:or m2ts-nielsen-id3 common-lisp:null))
   (null-packet-bitrate common-lisp:nil :type
    (common-lisp:or |__doubleMin0| common-lisp:null))
   (pat-interval common-lisp:nil :type
    (common-lisp:or |__integerMin0Max1000| common-lisp:null))
   (pcr-control common-lisp:nil :type
    (common-lisp:or m2ts-pcr-control common-lisp:null))
   (pcr-pid common-lisp:nil :type
    (common-lisp:or |__integerMin32Max8182| common-lisp:null))
   (pmt-interval common-lisp:nil :type
    (common-lisp:or |__integerMin0Max1000| common-lisp:null))
   (pmt-pid common-lisp:nil :type
    (common-lisp:or |__integerMin32Max8182| common-lisp:null))
   (private-metadata-pid common-lisp:nil :type
    (common-lisp:or |__integerMin32Max8182| common-lisp:null))
   (program-number common-lisp:nil :type
    (common-lisp:or |__integerMin0Max65535| common-lisp:null))
   (rate-mode common-lisp:nil :type
    (common-lisp:or m2ts-rate-mode common-lisp:null))
   (scte35esam common-lisp:nil :type
    (common-lisp:or m2ts-scte35esam common-lisp:null))
   (scte35pid common-lisp:nil :type
    (common-lisp:or |__integerMin32Max8182| common-lisp:null))
   (scte35source common-lisp:nil :type
    (common-lisp:or m2ts-scte35source common-lisp:null))
   (segmentation-markers common-lisp:nil :type
    (common-lisp:or m2ts-segmentation-markers common-lisp:null))
   (segmentation-style common-lisp:nil :type
    (common-lisp:or m2ts-segmentation-style common-lisp:null))
   (segmentation-time common-lisp:nil :type
    (common-lisp:or |__doubleMin0| common-lisp:null))
   (timed-metadata-pid common-lisp:nil :type
    (common-lisp:or |__integerMin32Max8182| common-lisp:null))
   (transport-stream-id common-lisp:nil :type
    (common-lisp:or |__integerMin0Max65535| common-lisp:null))
   (video-pid common-lisp:nil :type
    (common-lisp:or |__integerMin32Max8182| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'm2ts-settings 'make-m2ts-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input m2ts-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input m2ts-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audio-buffer-model))
      (common-lisp:list
       (common-lisp:cons "AudioBufferModel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audio-duration))
      (common-lisp:list
       (common-lisp:cons "AudioDuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'audio-frames-per-pes))
      (common-lisp:list
       (common-lisp:cons "AudioFramesPerPes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audio-pids))
      (common-lisp:list
       (common-lisp:cons "AudioPids"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bitrate))
      (common-lisp:list
       (common-lisp:cons "Bitrate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'buffer-model))
      (common-lisp:list
       (common-lisp:cons "BufferModel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-ptscontrol))
      (common-lisp:list
       (common-lisp:cons "DataPTSControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dvb-nit-settings))
      (common-lisp:list
       (common-lisp:cons "DvbNitSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dvb-sdt-settings))
      (common-lisp:list
       (common-lisp:cons "DvbSdtSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dvb-sub-pids))
      (common-lisp:list
       (common-lisp:cons "DvbSubPids"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dvb-tdt-settings))
      (common-lisp:list
       (common-lisp:cons "DvbTdtSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dvb-teletext-pid))
      (common-lisp:list
       (common-lisp:cons "DvbTeletextPid"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ebp-audio-interval))
      (common-lisp:list
       (common-lisp:cons "EbpAudioInterval"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ebp-placement))
      (common-lisp:list
       (common-lisp:cons "EbpPlacement"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'es-rate-in-pes))
      (common-lisp:list
       (common-lisp:cons "EsRateInPes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'force-ts-video-ebp-order))
      (common-lisp:list
       (common-lisp:cons "ForceTsVideoEbpOrder"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fragment-time))
      (common-lisp:list
       (common-lisp:cons "FragmentTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'klv-metadata))
      (common-lisp:list
       (common-lisp:cons "KlvMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-pcr-interval))
      (common-lisp:list
       (common-lisp:cons "MaxPcrInterval"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'min-ebp-interval))
      (common-lisp:list
       (common-lisp:cons "MinEbpInterval"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'nielsen-id3))
      (common-lisp:list
       (common-lisp:cons "NielsenId3"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'null-packet-bitrate))
      (common-lisp:list
       (common-lisp:cons "NullPacketBitrate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pat-interval))
      (common-lisp:list
       (common-lisp:cons "PatInterval"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pcr-control))
      (common-lisp:list
       (common-lisp:cons "PcrControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pcr-pid))
      (common-lisp:list
       (common-lisp:cons "PcrPid"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pmt-interval))
      (common-lisp:list
       (common-lisp:cons "PmtInterval"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pmt-pid))
      (common-lisp:list
       (common-lisp:cons "PmtPid"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'private-metadata-pid))
      (common-lisp:list
       (common-lisp:cons "PrivateMetadataPid"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'program-number))
      (common-lisp:list
       (common-lisp:cons "ProgramNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rate-mode))
      (common-lisp:list
       (common-lisp:cons "RateMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scte35esam))
      (common-lisp:list
       (common-lisp:cons "Scte35Esam"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scte35pid))
      (common-lisp:list
       (common-lisp:cons "Scte35Pid"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scte35source))
      (common-lisp:list
       (common-lisp:cons "Scte35Source"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'segmentation-markers))
      (common-lisp:list
       (common-lisp:cons "SegmentationMarkers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segmentation-style))
      (common-lisp:list
       (common-lisp:cons "SegmentationStyle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segmentation-time))
      (common-lisp:list
       (common-lisp:cons "SegmentationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timed-metadata-pid))
      (common-lisp:list
       (common-lisp:cons "TimedMetadataPid"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'transport-stream-id))
      (common-lisp:list
       (common-lisp:cons "TransportStreamId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'video-pid))
      (common-lisp:list
       (common-lisp:cons "VideoPid"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input m2ts-settings))
   common-lisp:nil))
(common-lisp:deftype m3u8audio-duration () 'common-lisp:string)
(common-lisp:deftype m3u8data-pts-control () 'common-lisp:string)
(common-lisp:deftype m3u8nielsen-id3 () 'common-lisp:string)
(common-lisp:deftype m3u8pcr-control () 'common-lisp:string)
(common-lisp:deftype m3u8scte35source () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (m3u8settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-m3u8settings-"))
   (audio-duration common-lisp:nil :type
    (common-lisp:or m3u8audio-duration common-lisp:null))
   (audio-frames-per-pes common-lisp:nil :type
    (common-lisp:or |__integerMin0Max2147483647| common-lisp:null))
   (audio-pids common-lisp:nil :type
    (common-lisp:or |__listOf__integerMin32Max8182| common-lisp:null))
   (data-ptscontrol common-lisp:nil :type
    (common-lisp:or m3u8data-pts-control common-lisp:null))
   (max-pcr-interval common-lisp:nil :type
    (common-lisp:or |__integerMin0Max500| common-lisp:null))
   (nielsen-id3 common-lisp:nil :type
    (common-lisp:or m3u8nielsen-id3 common-lisp:null))
   (pat-interval common-lisp:nil :type
    (common-lisp:or |__integerMin0Max1000| common-lisp:null))
   (pcr-control common-lisp:nil :type
    (common-lisp:or m3u8pcr-control common-lisp:null))
   (pcr-pid common-lisp:nil :type
    (common-lisp:or |__integerMin32Max8182| common-lisp:null))
   (pmt-interval common-lisp:nil :type
    (common-lisp:or |__integerMin0Max1000| common-lisp:null))
   (pmt-pid common-lisp:nil :type
    (common-lisp:or |__integerMin32Max8182| common-lisp:null))
   (private-metadata-pid common-lisp:nil :type
    (common-lisp:or |__integerMin32Max8182| common-lisp:null))
   (program-number common-lisp:nil :type
    (common-lisp:or |__integerMin0Max65535| common-lisp:null))
   (scte35pid common-lisp:nil :type
    (common-lisp:or |__integerMin32Max8182| common-lisp:null))
   (scte35source common-lisp:nil :type
    (common-lisp:or m3u8scte35source common-lisp:null))
   (timed-metadata common-lisp:nil :type
    (common-lisp:or timed-metadata common-lisp:null))
   (timed-metadata-pid common-lisp:nil :type
    (common-lisp:or |__integerMin32Max8182| common-lisp:null))
   (transport-stream-id common-lisp:nil :type
    (common-lisp:or |__integerMin0Max65535| common-lisp:null))
   (video-pid common-lisp:nil :type
    (common-lisp:or |__integerMin32Max8182| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'm3u8settings 'make-m3u8settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input m3u8settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input m3u8settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audio-duration))
      (common-lisp:list
       (common-lisp:cons "AudioDuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'audio-frames-per-pes))
      (common-lisp:list
       (common-lisp:cons "AudioFramesPerPes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audio-pids))
      (common-lisp:list
       (common-lisp:cons "AudioPids"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-ptscontrol))
      (common-lisp:list
       (common-lisp:cons "DataPTSControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-pcr-interval))
      (common-lisp:list
       (common-lisp:cons "MaxPcrInterval"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'nielsen-id3))
      (common-lisp:list
       (common-lisp:cons "NielsenId3"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pat-interval))
      (common-lisp:list
       (common-lisp:cons "PatInterval"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pcr-control))
      (common-lisp:list
       (common-lisp:cons "PcrControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pcr-pid))
      (common-lisp:list
       (common-lisp:cons "PcrPid"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pmt-interval))
      (common-lisp:list
       (common-lisp:cons "PmtInterval"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pmt-pid))
      (common-lisp:list
       (common-lisp:cons "PmtPid"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'private-metadata-pid))
      (common-lisp:list
       (common-lisp:cons "PrivateMetadataPid"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'program-number))
      (common-lisp:list
       (common-lisp:cons "ProgramNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scte35pid))
      (common-lisp:list
       (common-lisp:cons "Scte35Pid"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scte35source))
      (common-lisp:list
       (common-lisp:cons "Scte35Source"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timed-metadata))
      (common-lisp:list
       (common-lisp:cons "TimedMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timed-metadata-pid))
      (common-lisp:list
       (common-lisp:cons "TimedMetadataPid"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'transport-stream-id))
      (common-lisp:list
       (common-lisp:cons "TransportStreamId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'video-pid))
      (common-lisp:list
       (common-lisp:cons "VideoPid"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input m3u8settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (min-bottom-rendition-size (:copier common-lisp:nil)
      (:conc-name "struct-shape-min-bottom-rendition-size-"))
   (height common-lisp:nil :type
    (common-lisp:or |__integerMin32Max8192| common-lisp:null))
   (width common-lisp:nil :type
    (common-lisp:or |__integerMin32Max8192| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'min-bottom-rendition-size
                    'make-min-bottom-rendition-size))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          min-bottom-rendition-size))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          min-bottom-rendition-size))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'height))
      (common-lisp:list
       (common-lisp:cons "Height"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'width))
      (common-lisp:list
       (common-lisp:cons "Width"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          min-bottom-rendition-size))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (min-top-rendition-size (:copier common-lisp:nil)
      (:conc-name "struct-shape-min-top-rendition-size-"))
   (height common-lisp:nil :type
    (common-lisp:or |__integerMin32Max8192| common-lisp:null))
   (width common-lisp:nil :type
    (common-lisp:or |__integerMin32Max8192| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'min-top-rendition-size 'make-min-top-rendition-size))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          min-top-rendition-size))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          min-top-rendition-size))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'height))
      (common-lisp:list
       (common-lisp:cons "Height"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'width))
      (common-lisp:list
       (common-lisp:cons "Width"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          min-top-rendition-size))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (motion-image-inserter (:copier common-lisp:nil)
      (:conc-name "struct-shape-motion-image-inserter-"))
   (framerate common-lisp:nil :type
    (common-lisp:or motion-image-insertion-framerate common-lisp:null))
   (input common-lisp:nil :type
    (common-lisp:or |__stringMin14PatternS3Mov09PngHttpsMov09Png|
                    common-lisp:null))
   (insertion-mode common-lisp:nil :type
    (common-lisp:or motion-image-insertion-mode common-lisp:null))
   (offset common-lisp:nil :type
    (common-lisp:or motion-image-insertion-offset common-lisp:null))
   (playback common-lisp:nil :type
    (common-lisp:or motion-image-playback common-lisp:null))
   (start-time common-lisp:nil :type
    (common-lisp:or |__stringMin11Max11Pattern01D20305D205D|
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'motion-image-inserter 'make-motion-image-inserter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          motion-image-inserter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          motion-image-inserter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'framerate))
      (common-lisp:list
       (common-lisp:cons "Framerate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input))
      (common-lisp:list
       (common-lisp:cons "Input"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'insertion-mode))
      (common-lisp:list
       (common-lisp:cons "InsertionMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'offset))
      (common-lisp:list
       (common-lisp:cons "Offset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'playback))
      (common-lisp:list
       (common-lisp:cons "Playback"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          motion-image-inserter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (motion-image-insertion-framerate (:copier common-lisp:nil)
      (:conc-name "struct-shape-motion-image-insertion-framerate-"))
   (framerate-denominator common-lisp:nil :type
    (common-lisp:or |__integerMin1Max17895697| common-lisp:null))
   (framerate-numerator common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2147483640| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'motion-image-insertion-framerate
                    'make-motion-image-insertion-framerate))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          motion-image-insertion-framerate))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          motion-image-insertion-framerate))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'framerate-denominator))
      (common-lisp:list
       (common-lisp:cons "FramerateDenominator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'framerate-numerator))
      (common-lisp:list
       (common-lisp:cons "FramerateNumerator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          motion-image-insertion-framerate))
   common-lisp:nil))
(common-lisp:deftype motion-image-insertion-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (motion-image-insertion-offset (:copier common-lisp:nil)
      (:conc-name "struct-shape-motion-image-insertion-offset-"))
   (image-x common-lisp:nil :type
    (common-lisp:or |__integerMin0Max2147483647| common-lisp:null))
   (image-y common-lisp:nil :type
    (common-lisp:or |__integerMin0Max2147483647| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'motion-image-insertion-offset
                    'make-motion-image-insertion-offset))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          motion-image-insertion-offset))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          motion-image-insertion-offset))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'image-x))
      (common-lisp:list
       (common-lisp:cons "ImageX"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'image-y))
      (common-lisp:list
       (common-lisp:cons "ImageY"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          motion-image-insertion-offset))
   common-lisp:nil))
(common-lisp:deftype motion-image-playback () 'common-lisp:string)
(common-lisp:deftype mov-clap-atom () 'common-lisp:string)
(common-lisp:deftype mov-cslg-atom () 'common-lisp:string)
(common-lisp:deftype mov-mpeg2four-cccontrol () 'common-lisp:string)
(common-lisp:deftype mov-padding-control () 'common-lisp:string)
(common-lisp:deftype mov-reference () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (mov-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-mov-settings-"))
   (clap-atom common-lisp:nil :type
    (common-lisp:or mov-clap-atom common-lisp:null))
   (cslg-atom common-lisp:nil :type
    (common-lisp:or mov-cslg-atom common-lisp:null))
   (mpeg2four-cccontrol common-lisp:nil :type
    (common-lisp:or mov-mpeg2four-cccontrol common-lisp:null))
   (padding-control common-lisp:nil :type
    (common-lisp:or mov-padding-control common-lisp:null))
   (reference common-lisp:nil :type
    (common-lisp:or mov-reference common-lisp:null)))
 (common-lisp:export (common-lisp:list 'mov-settings 'make-mov-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input mov-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input mov-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'clap-atom))
      (common-lisp:list
       (common-lisp:cons "ClapAtom"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cslg-atom))
      (common-lisp:list
       (common-lisp:cons "CslgAtom"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mpeg2four-cccontrol))
      (common-lisp:list
       (common-lisp:cons "Mpeg2FourCCControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'padding-control))
      (common-lisp:list
       (common-lisp:cons "PaddingControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reference))
      (common-lisp:list
       (common-lisp:cons "Reference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input mov-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (mp2settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-mp2settings-"))
   (bitrate common-lisp:nil :type
    (common-lisp:or |__integerMin32000Max384000| common-lisp:null))
   (channels common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2| common-lisp:null))
   (sample-rate common-lisp:nil :type
    (common-lisp:or |__integerMin32000Max48000| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'mp2settings 'make-mp2settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input mp2settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input mp2settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bitrate))
      (common-lisp:list
       (common-lisp:cons "Bitrate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channels))
      (common-lisp:list
       (common-lisp:cons "Channels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sample-rate))
      (common-lisp:list
       (common-lisp:cons "SampleRate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input mp2settings))
   common-lisp:nil))
(common-lisp:deftype mp3rate-control-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (mp3settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-mp3settings-"))
   (bitrate common-lisp:nil :type
    (common-lisp:or |__integerMin16000Max320000| common-lisp:null))
   (channels common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2| common-lisp:null))
   (rate-control-mode common-lisp:nil :type
    (common-lisp:or mp3rate-control-mode common-lisp:null))
   (sample-rate common-lisp:nil :type
    (common-lisp:or |__integerMin22050Max48000| common-lisp:null))
   (vbr-quality common-lisp:nil :type
    (common-lisp:or |__integerMin0Max9| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'mp3settings 'make-mp3settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input mp3settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input mp3settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bitrate))
      (common-lisp:list
       (common-lisp:cons "Bitrate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channels))
      (common-lisp:list
       (common-lisp:cons "Channels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rate-control-mode))
      (common-lisp:list
       (common-lisp:cons "RateControlMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sample-rate))
      (common-lisp:list
       (common-lisp:cons "SampleRate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vbr-quality))
      (common-lisp:list
       (common-lisp:cons "VbrQuality"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input mp3settings))
   common-lisp:nil))
(common-lisp:deftype mp4cslg-atom () 'common-lisp:string)
(common-lisp:deftype mp4free-space-box () 'common-lisp:string)
(common-lisp:deftype mp4moov-placement () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (mp4settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-mp4settings-"))
   (audio-duration common-lisp:nil :type
    (common-lisp:or cmfc-audio-duration common-lisp:null))
   (cslg-atom common-lisp:nil :type
    (common-lisp:or mp4cslg-atom common-lisp:null))
   (ctts-version common-lisp:nil :type
    (common-lisp:or |__integerMin0Max1| common-lisp:null))
   (free-space-box common-lisp:nil :type
    (common-lisp:or mp4free-space-box common-lisp:null))
   (moov-placement common-lisp:nil :type
    (common-lisp:or mp4moov-placement common-lisp:null))
   (mp4major-brand common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'mp4settings 'make-mp4settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input mp4settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input mp4settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audio-duration))
      (common-lisp:list
       (common-lisp:cons "AudioDuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cslg-atom))
      (common-lisp:list
       (common-lisp:cons "CslgAtom"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ctts-version))
      (common-lisp:list
       (common-lisp:cons "CttsVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'free-space-box))
      (common-lisp:list
       (common-lisp:cons "FreeSpaceBox"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'moov-placement))
      (common-lisp:list
       (common-lisp:cons "MoovPlacement"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mp4major-brand))
      (common-lisp:list
       (common-lisp:cons "Mp4MajorBrand"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input mp4settings))
   common-lisp:nil))
(common-lisp:deftype mpd-accessibility-caption-hints () 'common-lisp:string)
(common-lisp:deftype mpd-audio-duration () 'common-lisp:string)
(common-lisp:deftype mpd-caption-container-type () 'common-lisp:string)
(common-lisp:deftype mpd-klv-metadata () 'common-lisp:string)
(common-lisp:deftype mpd-manifest-metadata-signaling () 'common-lisp:string)
(common-lisp:deftype mpd-scte35esam () 'common-lisp:string)
(common-lisp:deftype mpd-scte35source () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (mpd-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-mpd-settings-"))
   (accessibility-caption-hints common-lisp:nil :type
    (common-lisp:or mpd-accessibility-caption-hints common-lisp:null))
   (audio-duration common-lisp:nil :type
    (common-lisp:or mpd-audio-duration common-lisp:null))
   (caption-container-type common-lisp:nil :type
    (common-lisp:or mpd-caption-container-type common-lisp:null))
   (klv-metadata common-lisp:nil :type
    (common-lisp:or mpd-klv-metadata common-lisp:null))
   (manifest-metadata-signaling common-lisp:nil :type
    (common-lisp:or mpd-manifest-metadata-signaling common-lisp:null))
   (scte35esam common-lisp:nil :type
    (common-lisp:or mpd-scte35esam common-lisp:null))
   (scte35source common-lisp:nil :type
    (common-lisp:or mpd-scte35source common-lisp:null))
   (timed-metadata common-lisp:nil :type
    (common-lisp:or mpd-timed-metadata common-lisp:null))
   (timed-metadata-box-version common-lisp:nil :type
    (common-lisp:or mpd-timed-metadata-box-version common-lisp:null))
   (timed-metadata-scheme-id-uri common-lisp:nil :type
    (common-lisp:or |__stringMax1000| common-lisp:null))
   (timed-metadata-value common-lisp:nil :type
    (common-lisp:or |__stringMax1000| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'mpd-settings 'make-mpd-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input mpd-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input mpd-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'accessibility-caption-hints))
      (common-lisp:list
       (common-lisp:cons "AccessibilityCaptionHints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audio-duration))
      (common-lisp:list
       (common-lisp:cons "AudioDuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'caption-container-type))
      (common-lisp:list
       (common-lisp:cons "CaptionContainerType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'klv-metadata))
      (common-lisp:list
       (common-lisp:cons "KlvMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'manifest-metadata-signaling))
      (common-lisp:list
       (common-lisp:cons "ManifestMetadataSignaling"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scte35esam))
      (common-lisp:list
       (common-lisp:cons "Scte35Esam"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scte35source))
      (common-lisp:list
       (common-lisp:cons "Scte35Source"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timed-metadata))
      (common-lisp:list
       (common-lisp:cons "TimedMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'timed-metadata-box-version))
      (common-lisp:list
       (common-lisp:cons "TimedMetadataBoxVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'timed-metadata-scheme-id-uri))
      (common-lisp:list
       (common-lisp:cons "TimedMetadataSchemeIdUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'timed-metadata-value))
      (common-lisp:list
       (common-lisp:cons "TimedMetadataValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input mpd-settings))
   common-lisp:nil))
(common-lisp:deftype mpd-timed-metadata () 'common-lisp:string)
(common-lisp:deftype mpd-timed-metadata-box-version () 'common-lisp:string)
(common-lisp:deftype mpeg2adaptive-quantization () 'common-lisp:string)
(common-lisp:deftype mpeg2codec-level () 'common-lisp:string)
(common-lisp:deftype mpeg2codec-profile () 'common-lisp:string)
(common-lisp:deftype mpeg2dynamic-sub-gop () 'common-lisp:string)
(common-lisp:deftype mpeg2framerate-control () 'common-lisp:string)
(common-lisp:deftype mpeg2framerate-conversion-algorithm () 'common-lisp:string)
(common-lisp:deftype mpeg2gop-size-units () 'common-lisp:string)
(common-lisp:deftype mpeg2interlace-mode () 'common-lisp:string)
(common-lisp:deftype mpeg2intra-dc-precision () 'common-lisp:string)
(common-lisp:deftype mpeg2par-control () 'common-lisp:string)
(common-lisp:deftype mpeg2quality-tuning-level () 'common-lisp:string)
(common-lisp:deftype mpeg2rate-control-mode () 'common-lisp:string)
(common-lisp:deftype mpeg2scan-type-conversion-mode () 'common-lisp:string)
(common-lisp:deftype mpeg2scene-change-detect () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (mpeg2settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-mpeg2settings-"))
   (adaptive-quantization common-lisp:nil :type
    (common-lisp:or mpeg2adaptive-quantization common-lisp:null))
   (bitrate common-lisp:nil :type
    (common-lisp:or |__integerMin1000Max288000000| common-lisp:null))
   (codec-level common-lisp:nil :type
    (common-lisp:or mpeg2codec-level common-lisp:null))
   (codec-profile common-lisp:nil :type
    (common-lisp:or mpeg2codec-profile common-lisp:null))
   (dynamic-sub-gop common-lisp:nil :type
    (common-lisp:or mpeg2dynamic-sub-gop common-lisp:null))
   (framerate-control common-lisp:nil :type
    (common-lisp:or mpeg2framerate-control common-lisp:null))
   (framerate-conversion-algorithm common-lisp:nil :type
    (common-lisp:or mpeg2framerate-conversion-algorithm common-lisp:null))
   (framerate-denominator common-lisp:nil :type
    (common-lisp:or |__integerMin1Max1001| common-lisp:null))
   (framerate-numerator common-lisp:nil :type
    (common-lisp:or |__integerMin24Max60000| common-lisp:null))
   (gop-closed-cadence common-lisp:nil :type
    (common-lisp:or |__integerMin0Max2147483647| common-lisp:null))
   (gop-size common-lisp:nil :type
    (common-lisp:or |__doubleMin0| common-lisp:null))
   (gop-size-units common-lisp:nil :type
    (common-lisp:or mpeg2gop-size-units common-lisp:null))
   (hrd-buffer-final-fill-percentage common-lisp:nil :type
    (common-lisp:or |__integerMin0Max100| common-lisp:null))
   (hrd-buffer-initial-fill-percentage common-lisp:nil :type
    (common-lisp:or |__integerMin0Max100| common-lisp:null))
   (hrd-buffer-size common-lisp:nil :type
    (common-lisp:or |__integerMin0Max47185920| common-lisp:null))
   (interlace-mode common-lisp:nil :type
    (common-lisp:or mpeg2interlace-mode common-lisp:null))
   (intra-dc-precision common-lisp:nil :type
    (common-lisp:or mpeg2intra-dc-precision common-lisp:null))
   (max-bitrate common-lisp:nil :type
    (common-lisp:or |__integerMin1000Max300000000| common-lisp:null))
   (min-iinterval common-lisp:nil :type
    (common-lisp:or |__integerMin0Max30| common-lisp:null))
   (number-bframes-between-reference-frames common-lisp:nil :type
    (common-lisp:or |__integerMin0Max7| common-lisp:null))
   (par-control common-lisp:nil :type
    (common-lisp:or mpeg2par-control common-lisp:null))
   (par-denominator common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2147483647| common-lisp:null))
   (par-numerator common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2147483647| common-lisp:null))
   (quality-tuning-level common-lisp:nil :type
    (common-lisp:or mpeg2quality-tuning-level common-lisp:null))
   (rate-control-mode common-lisp:nil :type
    (common-lisp:or mpeg2rate-control-mode common-lisp:null))
   (scan-type-conversion-mode common-lisp:nil :type
    (common-lisp:or mpeg2scan-type-conversion-mode common-lisp:null))
   (scene-change-detect common-lisp:nil :type
    (common-lisp:or mpeg2scene-change-detect common-lisp:null))
   (slow-pal common-lisp:nil :type
    (common-lisp:or mpeg2slow-pal common-lisp:null))
   (softness common-lisp:nil :type
    (common-lisp:or |__integerMin0Max128| common-lisp:null))
   (spatial-adaptive-quantization common-lisp:nil :type
    (common-lisp:or mpeg2spatial-adaptive-quantization common-lisp:null))
   (syntax common-lisp:nil :type (common-lisp:or mpeg2syntax common-lisp:null))
   (telecine common-lisp:nil :type
    (common-lisp:or mpeg2telecine common-lisp:null))
   (temporal-adaptive-quantization common-lisp:nil :type
    (common-lisp:or mpeg2temporal-adaptive-quantization common-lisp:null)))
 (common-lisp:export (common-lisp:list 'mpeg2settings 'make-mpeg2settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input mpeg2settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input mpeg2settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'adaptive-quantization))
      (common-lisp:list
       (common-lisp:cons "AdaptiveQuantization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bitrate))
      (common-lisp:list
       (common-lisp:cons "Bitrate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'codec-level))
      (common-lisp:list
       (common-lisp:cons "CodecLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'codec-profile))
      (common-lisp:list
       (common-lisp:cons "CodecProfile"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dynamic-sub-gop))
      (common-lisp:list
       (common-lisp:cons "DynamicSubGop"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'framerate-control))
      (common-lisp:list
       (common-lisp:cons "FramerateControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'framerate-conversion-algorithm))
      (common-lisp:list
       (common-lisp:cons "FramerateConversionAlgorithm"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'framerate-denominator))
      (common-lisp:list
       (common-lisp:cons "FramerateDenominator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'framerate-numerator))
      (common-lisp:list
       (common-lisp:cons "FramerateNumerator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gop-closed-cadence))
      (common-lisp:list
       (common-lisp:cons "GopClosedCadence"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gop-size))
      (common-lisp:list
       (common-lisp:cons "GopSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gop-size-units))
      (common-lisp:list
       (common-lisp:cons "GopSizeUnits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'hrd-buffer-final-fill-percentage))
      (common-lisp:list
       (common-lisp:cons "HrdBufferFinalFillPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'hrd-buffer-initial-fill-percentage))
      (common-lisp:list
       (common-lisp:cons "HrdBufferInitialFillPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hrd-buffer-size))
      (common-lisp:list
       (common-lisp:cons "HrdBufferSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'interlace-mode))
      (common-lisp:list
       (common-lisp:cons "InterlaceMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'intra-dc-precision))
      (common-lisp:list
       (common-lisp:cons "IntraDcPrecision"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-bitrate))
      (common-lisp:list
       (common-lisp:cons "MaxBitrate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'min-iinterval))
      (common-lisp:list
       (common-lisp:cons "MinIInterval"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-bframes-between-reference-frames))
      (common-lisp:list
       (common-lisp:cons "NumberBFramesBetweenReferenceFrames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'par-control))
      (common-lisp:list
       (common-lisp:cons "ParControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'par-denominator))
      (common-lisp:list
       (common-lisp:cons "ParDenominator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'par-numerator))
      (common-lisp:list
       (common-lisp:cons "ParNumerator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'quality-tuning-level))
      (common-lisp:list
       (common-lisp:cons "QualityTuningLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rate-control-mode))
      (common-lisp:list
       (common-lisp:cons "RateControlMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'scan-type-conversion-mode))
      (common-lisp:list
       (common-lisp:cons "ScanTypeConversionMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scene-change-detect))
      (common-lisp:list
       (common-lisp:cons "SceneChangeDetect"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slow-pal))
      (common-lisp:list
       (common-lisp:cons "SlowPal"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'softness))
      (common-lisp:list
       (common-lisp:cons "Softness"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'spatial-adaptive-quantization))
      (common-lisp:list
       (common-lisp:cons "SpatialAdaptiveQuantization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'syntax))
      (common-lisp:list
       (common-lisp:cons "Syntax"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'telecine))
      (common-lisp:list
       (common-lisp:cons "Telecine"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'temporal-adaptive-quantization))
      (common-lisp:list
       (common-lisp:cons "TemporalAdaptiveQuantization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input mpeg2settings))
   common-lisp:nil))
(common-lisp:deftype mpeg2slow-pal () 'common-lisp:string)
(common-lisp:deftype mpeg2spatial-adaptive-quantization () 'common-lisp:string)
(common-lisp:deftype mpeg2syntax () 'common-lisp:string)
(common-lisp:deftype mpeg2telecine () 'common-lisp:string)
(common-lisp:deftype mpeg2temporal-adaptive-quantization () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (ms-smooth-additional-manifest (:copier common-lisp:nil)
      (:conc-name "struct-shape-ms-smooth-additional-manifest-"))
   (manifest-name-modifier common-lisp:nil :type
    (common-lisp:or |__stringMin1| common-lisp:null))
   (selected-outputs common-lisp:nil :type
    (common-lisp:or |__listOf__stringMin1| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'ms-smooth-additional-manifest
                    'make-ms-smooth-additional-manifest))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ms-smooth-additional-manifest))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ms-smooth-additional-manifest))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'manifest-name-modifier))
      (common-lisp:list
       (common-lisp:cons "ManifestNameModifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'selected-outputs))
      (common-lisp:list
       (common-lisp:cons "SelectedOutputs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ms-smooth-additional-manifest))
   common-lisp:nil))
(common-lisp:deftype ms-smooth-audio-deduplication () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (ms-smooth-encryption-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-ms-smooth-encryption-settings-"))
   (speke-key-provider common-lisp:nil :type
    (common-lisp:or speke-key-provider common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'ms-smooth-encryption-settings
                    'make-ms-smooth-encryption-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ms-smooth-encryption-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ms-smooth-encryption-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'speke-key-provider))
      (common-lisp:list
       (common-lisp:cons "SpekeKeyProvider"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ms-smooth-encryption-settings))
   common-lisp:nil))
(common-lisp:deftype ms-smooth-fragment-length-control () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (ms-smooth-group-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-ms-smooth-group-settings-"))
   (additional-manifests common-lisp:nil :type
    (common-lisp:or |__listOfMsSmoothAdditionalManifest| common-lisp:null))
   (audio-deduplication common-lisp:nil :type
    (common-lisp:or ms-smooth-audio-deduplication common-lisp:null))
   (destination common-lisp:nil :type
    (common-lisp:or |__stringPatternS3| common-lisp:null))
   (destination-settings common-lisp:nil :type
    (common-lisp:or destination-settings common-lisp:null))
   (encryption common-lisp:nil :type
    (common-lisp:or ms-smooth-encryption-settings common-lisp:null))
   (fragment-length common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2147483647| common-lisp:null))
   (fragment-length-control common-lisp:nil :type
    (common-lisp:or ms-smooth-fragment-length-control common-lisp:null))
   (manifest-encoding common-lisp:nil :type
    (common-lisp:or ms-smooth-manifest-encoding common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'ms-smooth-group-settings 'make-ms-smooth-group-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ms-smooth-group-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ms-smooth-group-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-manifests))
      (common-lisp:list
       (common-lisp:cons "AdditionalManifests"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audio-deduplication))
      (common-lisp:list
       (common-lisp:cons "AudioDeduplication"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination))
      (common-lisp:list
       (common-lisp:cons "Destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'destination-settings))
      (common-lisp:list
       (common-lisp:cons "DestinationSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption))
      (common-lisp:list
       (common-lisp:cons "Encryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fragment-length))
      (common-lisp:list
       (common-lisp:cons "FragmentLength"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'fragment-length-control))
      (common-lisp:list
       (common-lisp:cons "FragmentLengthControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'manifest-encoding))
      (common-lisp:list
       (common-lisp:cons "ManifestEncoding"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ms-smooth-group-settings))
   common-lisp:nil))
(common-lisp:deftype ms-smooth-manifest-encoding () 'common-lisp:string)
(common-lisp:deftype mxf-afd-signaling () 'common-lisp:string)
(common-lisp:deftype mxf-profile () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (mxf-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-mxf-settings-"))
   (afd-signaling common-lisp:nil :type
    (common-lisp:or mxf-afd-signaling common-lisp:null))
   (profile common-lisp:nil :type
    (common-lisp:or mxf-profile common-lisp:null))
   (xavc-profile-settings common-lisp:nil :type
    (common-lisp:or mxf-xavc-profile-settings common-lisp:null)))
 (common-lisp:export (common-lisp:list 'mxf-settings 'make-mxf-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input mxf-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input mxf-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'afd-signaling))
      (common-lisp:list
       (common-lisp:cons "AfdSignaling"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'profile))
      (common-lisp:list
       (common-lisp:cons "Profile"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'xavc-profile-settings))
      (common-lisp:list
       (common-lisp:cons "XavcProfileSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input mxf-settings))
   common-lisp:nil))
(common-lisp:deftype mxf-xavc-duration-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (mxf-xavc-profile-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-mxf-xavc-profile-settings-"))
   (duration-mode common-lisp:nil :type
    (common-lisp:or mxf-xavc-duration-mode common-lisp:null))
   (max-anc-data-size common-lisp:nil :type
    (common-lisp:or |__integerMin0Max2147483647| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'mxf-xavc-profile-settings
                    'make-mxf-xavc-profile-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          mxf-xavc-profile-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          mxf-xavc-profile-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'duration-mode))
      (common-lisp:list
       (common-lisp:cons "DurationMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-anc-data-size))
      (common-lisp:list
       (common-lisp:cons "MaxAncDataSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          mxf-xavc-profile-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (nex-guard-file-marker-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-nex-guard-file-marker-settings-"))
   (license common-lisp:nil :type
    (common-lisp:or |__stringMin1Max100000| common-lisp:null))
   (payload common-lisp:nil :type
    (common-lisp:or |__integerMin0Max4194303| common-lisp:null))
   (preset common-lisp:nil :type
    (common-lisp:or |__stringMin1Max256| common-lisp:null))
   (strength common-lisp:nil :type
    (common-lisp:or watermarking-strength common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'nex-guard-file-marker-settings
                    'make-nex-guard-file-marker-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          nex-guard-file-marker-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          nex-guard-file-marker-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'license))
      (common-lisp:list
       (common-lisp:cons "License"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'payload))
      (common-lisp:list
       (common-lisp:cons "Payload"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'preset))
      (common-lisp:list
       (common-lisp:cons "Preset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'strength))
      (common-lisp:list
       (common-lisp:cons "Strength"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          nex-guard-file-marker-settings))
   common-lisp:nil))
(common-lisp:deftype nielsen-active-watermark-process-type ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (nielsen-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-nielsen-configuration-"))
   (breakout-code common-lisp:nil :type
    (common-lisp:or |__integerMin0Max0| common-lisp:null))
   (distributor-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'nielsen-configuration 'make-nielsen-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          nielsen-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          nielsen-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'breakout-code))
      (common-lisp:list
       (common-lisp:cons "BreakoutCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'distributor-id))
      (common-lisp:list
       (common-lisp:cons "DistributorId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          nielsen-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (nielsen-non-linear-watermark-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-nielsen-non-linear-watermark-settings-"))
   (active-watermark-process common-lisp:nil :type
    (common-lisp:or nielsen-active-watermark-process-type common-lisp:null))
   (adi-filename common-lisp:nil :type
    (common-lisp:or |__stringPatternS3| common-lisp:null))
   (asset-id common-lisp:nil :type
    (common-lisp:or |__stringMin1Max20| common-lisp:null))
   (asset-name common-lisp:nil :type
    (common-lisp:or |__stringMin1Max50| common-lisp:null))
   (cbet-source-id common-lisp:nil :type
    (common-lisp:or |__stringPattern0xAFaF0908190908| common-lisp:null))
   (episode-id common-lisp:nil :type
    (common-lisp:or |__stringMin1Max20| common-lisp:null))
   (metadata-destination common-lisp:nil :type
    (common-lisp:or |__stringPatternS3| common-lisp:null))
   (source-id common-lisp:nil :type
    (common-lisp:or |__integerMin0Max65534| common-lisp:null))
   (source-watermark-status common-lisp:nil :type
    (common-lisp:or nielsen-source-watermark-status-type common-lisp:null))
   (tic-server-url common-lisp:nil :type
    (common-lisp:or |__stringPatternHttps| common-lisp:null))
   (unique-tic-per-audio-track common-lisp:nil :type
    (common-lisp:or nielsen-unique-tic-per-audio-track-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'nielsen-non-linear-watermark-settings
                    'make-nielsen-non-linear-watermark-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          nielsen-non-linear-watermark-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          nielsen-non-linear-watermark-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'active-watermark-process))
      (common-lisp:list
       (common-lisp:cons "ActiveWatermarkProcess"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'adi-filename))
      (common-lisp:list
       (common-lisp:cons "AdiFilename"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'asset-id))
      (common-lisp:list
       (common-lisp:cons "AssetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'asset-name))
      (common-lisp:list
       (common-lisp:cons "AssetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cbet-source-id))
      (common-lisp:list
       (common-lisp:cons "CbetSourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'episode-id))
      (common-lisp:list
       (common-lisp:cons "EpisodeId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'metadata-destination))
      (common-lisp:list
       (common-lisp:cons "MetadataDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-id))
      (common-lisp:list
       (common-lisp:cons "SourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-watermark-status))
      (common-lisp:list
       (common-lisp:cons "SourceWatermarkStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tic-server-url))
      (common-lisp:list
       (common-lisp:cons "TicServerUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'unique-tic-per-audio-track))
      (common-lisp:list
       (common-lisp:cons "UniqueTicPerAudioTrack"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          nielsen-non-linear-watermark-settings))
   common-lisp:nil))
(common-lisp:deftype nielsen-source-watermark-status-type ()
  'common-lisp:string)
(common-lisp:deftype nielsen-unique-tic-per-audio-track-type ()
  'common-lisp:string)
(common-lisp:deftype noise-filter-post-temporal-sharpening ()
  'common-lisp:string)
(common-lisp:deftype noise-filter-post-temporal-sharpening-strength ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (noise-reducer (:copier common-lisp:nil)
      (:conc-name "struct-shape-noise-reducer-"))
   (filter common-lisp:nil :type
    (common-lisp:or noise-reducer-filter common-lisp:null))
   (filter-settings common-lisp:nil :type
    (common-lisp:or noise-reducer-filter-settings common-lisp:null))
   (spatial-filter-settings common-lisp:nil :type
    (common-lisp:or noise-reducer-spatial-filter-settings common-lisp:null))
   (temporal-filter-settings common-lisp:nil :type
    (common-lisp:or noise-reducer-temporal-filter-settings common-lisp:null)))
 (common-lisp:export (common-lisp:list 'noise-reducer 'make-noise-reducer))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input noise-reducer))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input noise-reducer))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter-settings))
      (common-lisp:list
       (common-lisp:cons "FilterSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'spatial-filter-settings))
      (common-lisp:list
       (common-lisp:cons "SpatialFilterSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'temporal-filter-settings))
      (common-lisp:list
       (common-lisp:cons "TemporalFilterSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input noise-reducer))
   common-lisp:nil))
(common-lisp:deftype noise-reducer-filter () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (noise-reducer-filter-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-noise-reducer-filter-settings-"))
   (strength common-lisp:nil :type
    (common-lisp:or |__integerMin0Max3| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'noise-reducer-filter-settings
                    'make-noise-reducer-filter-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          noise-reducer-filter-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          noise-reducer-filter-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'strength))
      (common-lisp:list
       (common-lisp:cons "Strength"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          noise-reducer-filter-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (noise-reducer-spatial-filter-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-noise-reducer-spatial-filter-settings-"))
   (post-filter-sharpen-strength common-lisp:nil :type
    (common-lisp:or |__integerMin0Max3| common-lisp:null))
   (speed common-lisp:nil :type
    (common-lisp:or |__integerMinNegative2Max3| common-lisp:null))
   (strength common-lisp:nil :type
    (common-lisp:or |__integerMin0Max16| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'noise-reducer-spatial-filter-settings
                    'make-noise-reducer-spatial-filter-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          noise-reducer-spatial-filter-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          noise-reducer-spatial-filter-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'post-filter-sharpen-strength))
      (common-lisp:list
       (common-lisp:cons "PostFilterSharpenStrength"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'speed))
      (common-lisp:list
       (common-lisp:cons "Speed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'strength))
      (common-lisp:list
       (common-lisp:cons "Strength"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          noise-reducer-spatial-filter-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (noise-reducer-temporal-filter-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-noise-reducer-temporal-filter-settings-"))
   (aggressive-mode common-lisp:nil :type
    (common-lisp:or |__integerMin0Max4| common-lisp:null))
   (post-temporal-sharpening common-lisp:nil :type
    (common-lisp:or noise-filter-post-temporal-sharpening common-lisp:null))
   (post-temporal-sharpening-strength common-lisp:nil :type
    (common-lisp:or noise-filter-post-temporal-sharpening-strength
                    common-lisp:null))
   (speed common-lisp:nil :type
    (common-lisp:or |__integerMinNegative1Max3| common-lisp:null))
   (strength common-lisp:nil :type
    (common-lisp:or |__integerMin0Max16| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'noise-reducer-temporal-filter-settings
                    'make-noise-reducer-temporal-filter-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          noise-reducer-temporal-filter-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          noise-reducer-temporal-filter-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aggressive-mode))
      (common-lisp:list
       (common-lisp:cons "AggressiveMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'post-temporal-sharpening))
      (common-lisp:list
       (common-lisp:cons "PostTemporalSharpening"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'post-temporal-sharpening-strength))
      (common-lisp:list
       (common-lisp:cons "PostTemporalSharpeningStrength"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'speed))
      (common-lisp:list
       (common-lisp:cons "Speed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'strength))
      (common-lisp:list
       (common-lisp:cons "Strength"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          noise-reducer-temporal-filter-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition not-found-exception
     (mediaconvert-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'not-found-exception 'not-found-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (opus-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-opus-settings-"))
   (bitrate common-lisp:nil :type
    (common-lisp:or |__integerMin32000Max192000| common-lisp:null))
   (channels common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2| common-lisp:null))
   (sample-rate common-lisp:nil :type
    (common-lisp:or |__integerMin16000Max48000| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'opus-settings 'make-opus-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input opus-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input opus-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bitrate))
      (common-lisp:list
       (common-lisp:cons "Bitrate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channels))
      (common-lisp:list
       (common-lisp:cons "Channels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sample-rate))
      (common-lisp:list
       (common-lisp:cons "SampleRate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input opus-settings))
   common-lisp:nil))
(common-lisp:deftype order () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (output (:copier common-lisp:nil) (:conc-name "struct-shape-output-"))
   (audio-descriptions common-lisp:nil :type
    (common-lisp:or |__listOfAudioDescription| common-lisp:null))
   (caption-descriptions common-lisp:nil :type
    (common-lisp:or |__listOfCaptionDescription| common-lisp:null))
   (container-settings common-lisp:nil :type
    (common-lisp:or container-settings common-lisp:null))
   (extension common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (name-modifier common-lisp:nil :type
    (common-lisp:or |__stringMin1| common-lisp:null))
   (output-settings common-lisp:nil :type
    (common-lisp:or output-settings common-lisp:null))
   (preset common-lisp:nil :type
    (common-lisp:or |__stringMin0| common-lisp:null))
   (video-description common-lisp:nil :type
    (common-lisp:or video-description common-lisp:null)))
 (common-lisp:export (common-lisp:list 'output 'make-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audio-descriptions))
      (common-lisp:list
       (common-lisp:cons "AudioDescriptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'caption-descriptions))
      (common-lisp:list
       (common-lisp:cons "CaptionDescriptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-settings))
      (common-lisp:list
       (common-lisp:cons "ContainerSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'extension))
      (common-lisp:list
       (common-lisp:cons "Extension"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name-modifier))
      (common-lisp:list
       (common-lisp:cons "NameModifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-settings))
      (common-lisp:list
       (common-lisp:cons "OutputSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'preset))
      (common-lisp:list
       (common-lisp:cons "Preset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'video-description))
      (common-lisp:list
       (common-lisp:cons "VideoDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (output-channel-mapping (:copier common-lisp:nil)
      (:conc-name "struct-shape-output-channel-mapping-"))
   (input-channels common-lisp:nil :type
    (common-lisp:or |__listOf__integerMinNegative60Max6| common-lisp:null))
   (input-channels-fine-tune common-lisp:nil :type
    (common-lisp:or |__listOf__doubleMinNegative60Max6| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'output-channel-mapping 'make-output-channel-mapping))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          output-channel-mapping))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          output-channel-mapping))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-channels))
      (common-lisp:list
       (common-lisp:cons "InputChannels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'input-channels-fine-tune))
      (common-lisp:list
       (common-lisp:cons "InputChannelsFineTune"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          output-channel-mapping))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (output-detail (:copier common-lisp:nil)
      (:conc-name "struct-shape-output-detail-"))
   (duration-in-ms common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (video-details common-lisp:nil :type
    (common-lisp:or video-detail common-lisp:null)))
 (common-lisp:export (common-lisp:list 'output-detail 'make-output-detail))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input output-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input output-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'duration-in-ms))
      (common-lisp:list
       (common-lisp:cons "DurationInMs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'video-details))
      (common-lisp:list
       (common-lisp:cons "VideoDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input output-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (output-group (:copier common-lisp:nil)
      (:conc-name "struct-shape-output-group-"))
   (automated-encoding-settings common-lisp:nil :type
    (common-lisp:or automated-encoding-settings common-lisp:null))
   (custom-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (output-group-settings common-lisp:nil :type
    (common-lisp:or output-group-settings common-lisp:null))
   (outputs common-lisp:nil :type
    (common-lisp:or |__listOfOutput| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'output-group 'make-output-group))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input output-group))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input output-group))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'automated-encoding-settings))
      (common-lisp:list
       (common-lisp:cons "AutomatedEncodingSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'custom-name))
      (common-lisp:list
       (common-lisp:cons "CustomName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'output-group-settings))
      (common-lisp:list
       (common-lisp:cons "OutputGroupSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'outputs))
      (common-lisp:list
       (common-lisp:cons "Outputs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input output-group))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (output-group-detail (:copier common-lisp:nil)
      (:conc-name "struct-shape-output-group-detail-"))
   (output-details common-lisp:nil :type
    (common-lisp:or |__listOfOutputDetail| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'output-group-detail 'make-output-group-detail))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input output-group-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input output-group-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-details))
      (common-lisp:list
       (common-lisp:cons "OutputDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input output-group-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (output-group-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-output-group-settings-"))
   (cmaf-group-settings common-lisp:nil :type
    (common-lisp:or cmaf-group-settings common-lisp:null))
   (dash-iso-group-settings common-lisp:nil :type
    (common-lisp:or dash-iso-group-settings common-lisp:null))
   (file-group-settings common-lisp:nil :type
    (common-lisp:or file-group-settings common-lisp:null))
   (hls-group-settings common-lisp:nil :type
    (common-lisp:or hls-group-settings common-lisp:null))
   (ms-smooth-group-settings common-lisp:nil :type
    (common-lisp:or ms-smooth-group-settings common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or output-group-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'output-group-settings 'make-output-group-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          output-group-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          output-group-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cmaf-group-settings))
      (common-lisp:list
       (common-lisp:cons "CmafGroupSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dash-iso-group-settings))
      (common-lisp:list
       (common-lisp:cons "DashIsoGroupSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-group-settings))
      (common-lisp:list
       (common-lisp:cons "FileGroupSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hls-group-settings))
      (common-lisp:list
       (common-lisp:cons "HlsGroupSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ms-smooth-group-settings))
      (common-lisp:list
       (common-lisp:cons "MsSmoothGroupSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          output-group-settings))
   common-lisp:nil))
(common-lisp:deftype output-group-type () 'common-lisp:string)
(common-lisp:deftype output-sdt () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (output-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-output-settings-"))
   (hls-settings common-lisp:nil :type
    (common-lisp:or hls-settings common-lisp:null)))
 (common-lisp:export (common-lisp:list 'output-settings 'make-output-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input output-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input output-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hls-settings))
      (common-lisp:list
       (common-lisp:cons "HlsSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input output-settings))
   common-lisp:nil))
(common-lisp:deftype pad-video () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (partner-watermarking (:copier common-lisp:nil)
      (:conc-name "struct-shape-partner-watermarking-"))
   (nexguard-file-marker-settings common-lisp:nil :type
    (common-lisp:or nex-guard-file-marker-settings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'partner-watermarking 'make-partner-watermarking))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input partner-watermarking))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input partner-watermarking))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'nexguard-file-marker-settings))
      (common-lisp:list
       (common-lisp:cons "NexguardFileMarkerSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input partner-watermarking))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (policy (:copier common-lisp:nil) (:conc-name "struct-shape-policy-"))
   (http-inputs common-lisp:nil :type
    (common-lisp:or input-policy common-lisp:null))
   (https-inputs common-lisp:nil :type
    (common-lisp:or input-policy common-lisp:null))
   (s3inputs common-lisp:nil :type
    (common-lisp:or input-policy common-lisp:null)))
 (common-lisp:export (common-lisp:list 'policy 'make-policy))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input policy))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input policy))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'http-inputs))
      (common-lisp:list
       (common-lisp:cons "HttpInputs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'https-inputs))
      (common-lisp:list
       (common-lisp:cons "HttpsInputs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3inputs))
      (common-lisp:list
       (common-lisp:cons "S3Inputs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input policy))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (preset (:copier common-lisp:nil) (:conc-name "struct-shape-preset-"))
   (arn common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (category common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (last-updated common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (settings (common-lisp:error ":settings is required") :type
    (common-lisp:or preset-settings common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'preset 'make-preset))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input preset))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input preset))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'category))
      (common-lisp:list
       (common-lisp:cons "Category"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated))
      (common-lisp:list
       (common-lisp:cons "LastUpdated"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'settings))
      (common-lisp:list
       (common-lisp:cons "Settings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input preset))
   common-lisp:nil))
(common-lisp:deftype preset-list-by () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (preset-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-preset-settings-"))
   (audio-descriptions common-lisp:nil :type
    (common-lisp:or |__listOfAudioDescription| common-lisp:null))
   (caption-descriptions common-lisp:nil :type
    (common-lisp:or |__listOfCaptionDescriptionPreset| common-lisp:null))
   (container-settings common-lisp:nil :type
    (common-lisp:or container-settings common-lisp:null))
   (video-description common-lisp:nil :type
    (common-lisp:or video-description common-lisp:null)))
 (common-lisp:export (common-lisp:list 'preset-settings 'make-preset-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input preset-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input preset-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audio-descriptions))
      (common-lisp:list
       (common-lisp:cons "AudioDescriptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'caption-descriptions))
      (common-lisp:list
       (common-lisp:cons "CaptionDescriptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-settings))
      (common-lisp:list
       (common-lisp:cons "ContainerSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'video-description))
      (common-lisp:list
       (common-lisp:cons "VideoDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input preset-settings))
   common-lisp:nil))
(common-lisp:deftype pricing-plan () 'common-lisp:string)
(common-lisp:deftype prores-chroma-sampling () 'common-lisp:string)
(common-lisp:deftype prores-codec-profile () 'common-lisp:string)
(common-lisp:deftype prores-framerate-control () 'common-lisp:string)
(common-lisp:deftype prores-framerate-conversion-algorithm ()
  'common-lisp:string)
(common-lisp:deftype prores-interlace-mode () 'common-lisp:string)
(common-lisp:deftype prores-par-control () 'common-lisp:string)
(common-lisp:deftype prores-scan-type-conversion-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (prores-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-prores-settings-"))
   (chroma-sampling common-lisp:nil :type
    (common-lisp:or prores-chroma-sampling common-lisp:null))
   (codec-profile common-lisp:nil :type
    (common-lisp:or prores-codec-profile common-lisp:null))
   (framerate-control common-lisp:nil :type
    (common-lisp:or prores-framerate-control common-lisp:null))
   (framerate-conversion-algorithm common-lisp:nil :type
    (common-lisp:or prores-framerate-conversion-algorithm common-lisp:null))
   (framerate-denominator common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2147483647| common-lisp:null))
   (framerate-numerator common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2147483647| common-lisp:null))
   (interlace-mode common-lisp:nil :type
    (common-lisp:or prores-interlace-mode common-lisp:null))
   (par-control common-lisp:nil :type
    (common-lisp:or prores-par-control common-lisp:null))
   (par-denominator common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2147483647| common-lisp:null))
   (par-numerator common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2147483647| common-lisp:null))
   (scan-type-conversion-mode common-lisp:nil :type
    (common-lisp:or prores-scan-type-conversion-mode common-lisp:null))
   (slow-pal common-lisp:nil :type
    (common-lisp:or prores-slow-pal common-lisp:null))
   (telecine common-lisp:nil :type
    (common-lisp:or prores-telecine common-lisp:null)))
 (common-lisp:export (common-lisp:list 'prores-settings 'make-prores-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input prores-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input prores-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chroma-sampling))
      (common-lisp:list
       (common-lisp:cons "ChromaSampling"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'codec-profile))
      (common-lisp:list
       (common-lisp:cons "CodecProfile"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'framerate-control))
      (common-lisp:list
       (common-lisp:cons "FramerateControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'framerate-conversion-algorithm))
      (common-lisp:list
       (common-lisp:cons "FramerateConversionAlgorithm"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'framerate-denominator))
      (common-lisp:list
       (common-lisp:cons "FramerateDenominator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'framerate-numerator))
      (common-lisp:list
       (common-lisp:cons "FramerateNumerator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'interlace-mode))
      (common-lisp:list
       (common-lisp:cons "InterlaceMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'par-control))
      (common-lisp:list
       (common-lisp:cons "ParControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'par-denominator))
      (common-lisp:list
       (common-lisp:cons "ParDenominator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'par-numerator))
      (common-lisp:list
       (common-lisp:cons "ParNumerator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'scan-type-conversion-mode))
      (common-lisp:list
       (common-lisp:cons "ScanTypeConversionMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slow-pal))
      (common-lisp:list
       (common-lisp:cons "SlowPal"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'telecine))
      (common-lisp:list
       (common-lisp:cons "Telecine"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input prores-settings))
   common-lisp:nil))
(common-lisp:deftype prores-slow-pal () 'common-lisp:string)
(common-lisp:deftype prores-telecine () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (put-policy-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-policy-request-"))
   (policy (common-lisp:error ":policy is required") :type
    (common-lisp:or policy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-policy-request 'make-put-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input put-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input put-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "Policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input put-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-policy-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-policy-response-"))
   (policy common-lisp:nil :type (common-lisp:or policy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-policy-response 'make-put-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input put-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input put-policy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "Policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input put-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (queue (:copier common-lisp:nil) (:conc-name "struct-shape-queue-"))
   (arn common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (last-updated common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (pricing-plan common-lisp:nil :type
    (common-lisp:or pricing-plan common-lisp:null))
   (progressing-jobs-count common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (reservation-plan common-lisp:nil :type
    (common-lisp:or reservation-plan common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or queue-status common-lisp:null))
   (submitted-jobs-count common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'queue 'make-queue))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input queue))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input queue))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated))
      (common-lisp:list
       (common-lisp:cons "LastUpdated"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pricing-plan))
      (common-lisp:list
       (common-lisp:cons "PricingPlan"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'progressing-jobs-count))
      (common-lisp:list
       (common-lisp:cons "ProgressingJobsCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reservation-plan))
      (common-lisp:list
       (common-lisp:cons "ReservationPlan"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'submitted-jobs-count))
      (common-lisp:list
       (common-lisp:cons "SubmittedJobsCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input queue))
   common-lisp:nil))
(common-lisp:deftype queue-list-by () 'common-lisp:string)
(common-lisp:deftype queue-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (queue-transition (:copier common-lisp:nil)
      (:conc-name "struct-shape-queue-transition-"))
   (destination-queue common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (source-queue common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (timestamp common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'queue-transition 'make-queue-transition))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input queue-transition))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input queue-transition))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination-queue))
      (common-lisp:list
       (common-lisp:cons "DestinationQueue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-queue))
      (common-lisp:list
       (common-lisp:cons "SourceQueue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timestamp))
      (common-lisp:list
       (common-lisp:cons "Timestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input queue-transition))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (rectangle (:copier common-lisp:nil)
      (:conc-name "struct-shape-rectangle-"))
   (height common-lisp:nil :type
    (common-lisp:or |__integerMin2Max2147483647| common-lisp:null))
   (width common-lisp:nil :type
    (common-lisp:or |__integerMin2Max2147483647| common-lisp:null))
   (x common-lisp:nil :type
    (common-lisp:or |__integerMin0Max2147483647| common-lisp:null))
   (y common-lisp:nil :type
    (common-lisp:or |__integerMin0Max2147483647| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'rectangle 'make-rectangle))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input rectangle))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input rectangle))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'height))
      (common-lisp:list
       (common-lisp:cons "Height"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'width))
      (common-lisp:list
       (common-lisp:cons "Width"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'x))
      (common-lisp:list
       (common-lisp:cons "X"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'y))
      (common-lisp:list
       (common-lisp:cons "Y"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input rectangle))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (remix-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-remix-settings-"))
   (channel-mapping common-lisp:nil :type
    (common-lisp:or channel-mapping common-lisp:null))
   (channels-in common-lisp:nil :type
    (common-lisp:or |__integerMin1Max64| common-lisp:null))
   (channels-out common-lisp:nil :type
    (common-lisp:or |__integerMin1Max64| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'remix-settings 'make-remix-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input remix-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input remix-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-mapping))
      (common-lisp:list
       (common-lisp:cons "ChannelMapping"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channels-in))
      (common-lisp:list
       (common-lisp:cons "ChannelsIn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channels-out))
      (common-lisp:list
       (common-lisp:cons "ChannelsOut"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input remix-settings))
   common-lisp:nil))
(common-lisp:deftype renewal-type () 'common-lisp:string)
(common-lisp:deftype required-flag () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (reservation-plan (:copier common-lisp:nil)
      (:conc-name "struct-shape-reservation-plan-"))
   (commitment common-lisp:nil :type
    (common-lisp:or commitment common-lisp:null))
   (expires-at common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (purchased-at common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (renewal-type common-lisp:nil :type
    (common-lisp:or renewal-type common-lisp:null))
   (reserved-slots common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or reservation-plan-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'reservation-plan 'make-reservation-plan))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input reservation-plan))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input reservation-plan))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'commitment))
      (common-lisp:list
       (common-lisp:cons "Commitment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expires-at))
      (common-lisp:list
       (common-lisp:cons "ExpiresAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'purchased-at))
      (common-lisp:list
       (common-lisp:cons "PurchasedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'renewal-type))
      (common-lisp:list
       (common-lisp:cons "RenewalType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reserved-slots))
      (common-lisp:list
       (common-lisp:cons "ReservedSlots"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input reservation-plan))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (reservation-plan-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-reservation-plan-settings-"))
   (commitment (common-lisp:error ":commitment is required") :type
    (common-lisp:or commitment common-lisp:null))
   (renewal-type (common-lisp:error ":renewal-type is required") :type
    (common-lisp:or renewal-type common-lisp:null))
   (reserved-slots (common-lisp:error ":reserved-slots is required") :type
    (common-lisp:or |__integer| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'reservation-plan-settings
                    'make-reservation-plan-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          reservation-plan-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          reservation-plan-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'commitment))
      (common-lisp:list
       (common-lisp:cons "Commitment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'renewal-type))
      (common-lisp:list
       (common-lisp:cons "RenewalType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reserved-slots))
      (common-lisp:list
       (common-lisp:cons "ReservedSlots"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          reservation-plan-settings))
   common-lisp:nil))
(common-lisp:deftype reservation-plan-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (resource-tags (:copier common-lisp:nil)
      (:conc-name "struct-shape-resource-tags-"))
   (arn common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or |__mapOf__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'resource-tags 'make-resource-tags))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input resource-tags))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input resource-tags))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input resource-tags))
   common-lisp:nil))
(common-lisp:deftype respond-to-afd () 'common-lisp:string)
(common-lisp:deftype rule-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (s3destination-access-control (:copier common-lisp:nil)
      (:conc-name "struct-shape-s3destination-access-control-"))
   (canned-acl common-lisp:nil :type
    (common-lisp:or s3object-canned-acl common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 's3destination-access-control
                    'make-s3destination-access-control))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          s3destination-access-control))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          s3destination-access-control))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'canned-acl))
      (common-lisp:list
       (common-lisp:cons "CannedAcl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          s3destination-access-control))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (s3destination-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-s3destination-settings-"))
   (access-control common-lisp:nil :type
    (common-lisp:or s3destination-access-control common-lisp:null))
   (encryption common-lisp:nil :type
    (common-lisp:or s3encryption-settings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 's3destination-settings 'make-s3destination-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          s3destination-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          s3destination-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-control))
      (common-lisp:list
       (common-lisp:cons "AccessControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption))
      (common-lisp:list
       (common-lisp:cons "Encryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          s3destination-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (s3encryption-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-s3encryption-settings-"))
   (encryption-type common-lisp:nil :type
    (common-lisp:or s3server-side-encryption-type common-lisp:null))
   (kms-encryption-context common-lisp:nil :type
    (common-lisp:or |__stringPatternAZaZ0902| common-lisp:null))
   (kms-key-arn common-lisp:nil :type
    (common-lisp:or
     |__stringPatternArnAwsUsGovCnKmsAZ26EastWestCentralNorthSouthEastWest1912D12KeyAFAF098AFAF094AFAF094AFAF094AFAF0912MrkAFAF0932|
     common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 's3encryption-settings 'make-s3encryption-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          s3encryption-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          s3encryption-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption-type))
      (common-lisp:list
       (common-lisp:cons "EncryptionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'kms-encryption-context))
      (common-lisp:list
       (common-lisp:cons "KmsEncryptionContext"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key-arn))
      (common-lisp:list
       (common-lisp:cons "KmsKeyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          s3encryption-settings))
   common-lisp:nil))
(common-lisp:deftype s3object-canned-acl () 'common-lisp:string)
(common-lisp:deftype s3server-side-encryption-type () 'common-lisp:string)
(common-lisp:deftype sample-range-conversion () 'common-lisp:string)
(common-lisp:deftype scaling-behavior () 'common-lisp:string)
(common-lisp:deftype scc-destination-framerate () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (scc-destination-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-scc-destination-settings-"))
   (framerate common-lisp:nil :type
    (common-lisp:or scc-destination-framerate common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'scc-destination-settings 'make-scc-destination-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          scc-destination-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          scc-destination-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'framerate))
      (common-lisp:list
       (common-lisp:cons "Framerate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          scc-destination-settings))
   common-lisp:nil))
(common-lisp:deftype simulate-reserved-queue () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (speke-key-provider (:copier common-lisp:nil)
      (:conc-name "struct-shape-speke-key-provider-"))
   (certificate-arn common-lisp:nil :type
    (common-lisp:or |__stringPatternArnAwsUsGovAcm| common-lisp:null))
   (resource-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (system-ids common-lisp:nil :type
    (common-lisp:or
     |__listOf__stringPattern09aFAF809aFAF409aFAF409aFAF409aFAF12|
     common-lisp:null))
   (url common-lisp:nil :type
    (common-lisp:or |__stringPatternHttps| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'speke-key-provider 'make-speke-key-provider))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input speke-key-provider))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input speke-key-provider))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate-arn))
      (common-lisp:list
       (common-lisp:cons "CertificateArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-id))
      (common-lisp:list
       (common-lisp:cons "ResourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'system-ids))
      (common-lisp:list
       (common-lisp:cons "SystemIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'url))
      (common-lisp:list
       (common-lisp:cons "Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input speke-key-provider))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (speke-key-provider-cmaf (:copier common-lisp:nil)
      (:conc-name "struct-shape-speke-key-provider-cmaf-"))
   (certificate-arn common-lisp:nil :type
    (common-lisp:or |__stringPatternArnAwsUsGovAcm| common-lisp:null))
   (dash-signaled-system-ids common-lisp:nil :type
    (common-lisp:or
     |__listOf__stringMin36Max36Pattern09aFAF809aFAF409aFAF409aFAF409aFAF12|
     common-lisp:null))
   (hls-signaled-system-ids common-lisp:nil :type
    (common-lisp:or
     |__listOf__stringMin36Max36Pattern09aFAF809aFAF409aFAF409aFAF409aFAF12|
     common-lisp:null))
   (resource-id common-lisp:nil :type
    (common-lisp:or |__stringPatternW| common-lisp:null))
   (url common-lisp:nil :type
    (common-lisp:or |__stringPatternHttps| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'speke-key-provider-cmaf 'make-speke-key-provider-cmaf))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          speke-key-provider-cmaf))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          speke-key-provider-cmaf))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate-arn))
      (common-lisp:list
       (common-lisp:cons "CertificateArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dash-signaled-system-ids))
      (common-lisp:list
       (common-lisp:cons "DashSignaledSystemIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'hls-signaled-system-ids))
      (common-lisp:list
       (common-lisp:cons "HlsSignaledSystemIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-id))
      (common-lisp:list
       (common-lisp:cons "ResourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'url))
      (common-lisp:list
       (common-lisp:cons "Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          speke-key-provider-cmaf))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (srt-destination-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-srt-destination-settings-"))
   (style-passthrough common-lisp:nil :type
    (common-lisp:or srt-style-passthrough common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'srt-destination-settings 'make-srt-destination-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          srt-destination-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          srt-destination-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'style-passthrough))
      (common-lisp:list
       (common-lisp:cons "StylePassthrough"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          srt-destination-settings))
   common-lisp:nil))
(common-lisp:deftype srt-style-passthrough () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (static-key-provider (:copier common-lisp:nil)
      (:conc-name "struct-shape-static-key-provider-"))
   (key-format common-lisp:nil :type
    (common-lisp:or |__stringPatternIdentityAZaZ26AZaZ09163| common-lisp:null))
   (key-format-versions common-lisp:nil :type
    (common-lisp:or |__stringPatternDD| common-lisp:null))
   (static-key-value common-lisp:nil :type
    (common-lisp:or |__stringPatternAZaZ0932| common-lisp:null))
   (url common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'static-key-provider 'make-static-key-provider))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input static-key-provider))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input static-key-provider))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-format))
      (common-lisp:list
       (common-lisp:cons "KeyFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-format-versions))
      (common-lisp:list
       (common-lisp:cons "KeyFormatVersions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'static-key-value))
      (common-lisp:list
       (common-lisp:cons "StaticKeyValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'url))
      (common-lisp:list
       (common-lisp:cons "Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input static-key-provider))
   common-lisp:nil))
(common-lisp:deftype status-update-interval () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-request-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (tags (common-lisp:error ":tags is required") :type
    (common-lisp:or |__mapOf__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (teletext-destination-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-teletext-destination-settings-"))
   (page-number common-lisp:nil :type
    (common-lisp:or |__stringMin3Max3Pattern1809aFAF09aEAE| common-lisp:null))
   (page-types common-lisp:nil :type
    (common-lisp:or |__listOfTeletextPageType| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'teletext-destination-settings
                    'make-teletext-destination-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          teletext-destination-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          teletext-destination-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'page-number))
      (common-lisp:list
       (common-lisp:cons "PageNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'page-types))
      (common-lisp:list
       (common-lisp:cons "PageTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          teletext-destination-settings))
   common-lisp:nil))
(common-lisp:deftype teletext-page-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (teletext-source-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-teletext-source-settings-"))
   (page-number common-lisp:nil :type
    (common-lisp:or |__stringMin3Max3Pattern1809aFAF09aEAE| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'teletext-source-settings 'make-teletext-source-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          teletext-source-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          teletext-source-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'page-number))
      (common-lisp:list
       (common-lisp:cons "PageNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          teletext-source-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (timecode-burnin (:copier common-lisp:nil)
      (:conc-name "struct-shape-timecode-burnin-"))
   (font-size common-lisp:nil :type
    (common-lisp:or |__integerMin10Max48| common-lisp:null))
   (position common-lisp:nil :type
    (common-lisp:or timecode-burnin-position common-lisp:null))
   (prefix common-lisp:nil :type
    (common-lisp:or |__stringPattern| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'timecode-burnin 'make-timecode-burnin))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input timecode-burnin))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input timecode-burnin))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'font-size))
      (common-lisp:list
       (common-lisp:cons "FontSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "Position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'prefix))
      (common-lisp:list
       (common-lisp:cons "Prefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input timecode-burnin))
   common-lisp:nil))
(common-lisp:deftype timecode-burnin-position () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (timecode-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-timecode-config-"))
   (anchor common-lisp:nil :type
    (common-lisp:or |__stringPattern010920405090509092| common-lisp:null))
   (source common-lisp:nil :type
    (common-lisp:or timecode-source common-lisp:null))
   (start common-lisp:nil :type
    (common-lisp:or |__stringPattern010920405090509092| common-lisp:null))
   (timestamp-offset common-lisp:nil :type
    (common-lisp:or |__stringPattern0940191020191209301| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'timecode-config 'make-timecode-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input timecode-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input timecode-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'anchor))
      (common-lisp:list
       (common-lisp:cons "Anchor"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source))
      (common-lisp:list
       (common-lisp:cons "Source"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start))
      (common-lisp:list
       (common-lisp:cons "Start"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timestamp-offset))
      (common-lisp:list
       (common-lisp:cons "TimestampOffset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input timecode-config))
   common-lisp:nil))
(common-lisp:deftype timecode-source () 'common-lisp:string)
(common-lisp:deftype timed-metadata () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (timed-metadata-insertion (:copier common-lisp:nil)
      (:conc-name "struct-shape-timed-metadata-insertion-"))
   (id3insertions common-lisp:nil :type
    (common-lisp:or |__listOfId3Insertion| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'timed-metadata-insertion 'make-timed-metadata-insertion))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          timed-metadata-insertion))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          timed-metadata-insertion))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id3insertions))
      (common-lisp:list
       (common-lisp:cons "Id3Insertions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          timed-metadata-insertion))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (timing (:copier common-lisp:nil) (:conc-name "struct-shape-timing-"))
   (finish-time common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (start-time common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null))
   (submit-time common-lisp:nil :type
    (common-lisp:or |__timestampUnix| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'timing 'make-timing))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input timing))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input timing))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'finish-time))
      (common-lisp:list
       (common-lisp:cons "FinishTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time))
      (common-lisp:list
       (common-lisp:cons "SubmitTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input timing))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition too-many-requests-exception
     (mediaconvert-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       too-many-requests-exception-message)))
 (common-lisp:export
  (common-lisp:list 'too-many-requests-exception
                    'too-many-requests-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (track-source-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-track-source-settings-"))
   (track-number common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2147483647| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'track-source-settings 'make-track-source-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          track-source-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          track-source-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'track-number))
      (common-lisp:list
       (common-lisp:cons "TrackNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          track-source-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (ttml-destination-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-ttml-destination-settings-"))
   (style-passthrough common-lisp:nil :type
    (common-lisp:or ttml-style-passthrough common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'ttml-destination-settings
                    'make-ttml-destination-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ttml-destination-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ttml-destination-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'style-passthrough))
      (common-lisp:list
       (common-lisp:cons "StylePassthrough"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ttml-destination-settings))
   common-lisp:nil))
(common-lisp:deftype ttml-style-passthrough () 'common-lisp:string)
(common-lisp:deftype type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-request-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (tag-keys common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-keys))
      (common-lisp:list
       (common-lisp:cons "TagKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-job-template-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-job-template-request-"))
   (acceleration-settings common-lisp:nil :type
    (common-lisp:or acceleration-settings common-lisp:null))
   (category common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (hop-destinations common-lisp:nil :type
    (common-lisp:or |__listOfHopDestination| common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (priority common-lisp:nil :type
    (common-lisp:or |__integerMinNegative50Max50| common-lisp:null))
   (queue common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (settings common-lisp:nil :type
    (common-lisp:or job-template-settings common-lisp:null))
   (status-update-interval common-lisp:nil :type
    (common-lisp:or status-update-interval common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-job-template-request
                    'make-update-job-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-job-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-job-template-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'acceleration-settings))
      (common-lisp:list
       (common-lisp:cons "AccelerationSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'category))
      (common-lisp:list
       (common-lisp:cons "Category"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hop-destinations))
      (common-lisp:list
       (common-lisp:cons "HopDestinations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'priority))
      (common-lisp:list
       (common-lisp:cons "Priority"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'queue))
      (common-lisp:list
       (common-lisp:cons "Queue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'settings))
      (common-lisp:list
       (common-lisp:cons "Settings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'status-update-interval))
      (common-lisp:list
       (common-lisp:cons "StatusUpdateInterval"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-job-template-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-job-template-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-job-template-response-"))
   (job-template common-lisp:nil :type
    (common-lisp:or job-template common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-job-template-response
                    'make-update-job-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-job-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-job-template-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-template))
      (common-lisp:list
       (common-lisp:cons "JobTemplate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-job-template-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-preset-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-preset-request-"))
   (category common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (settings common-lisp:nil :type
    (common-lisp:or preset-settings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-preset-request 'make-update-preset-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-preset-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-preset-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'category))
      (common-lisp:list
       (common-lisp:cons "Category"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'settings))
      (common-lisp:list
       (common-lisp:cons "Settings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-preset-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-preset-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-preset-response-"))
   (preset common-lisp:nil :type (common-lisp:or preset common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-preset-response 'make-update-preset-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-preset-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-preset-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'preset))
      (common-lisp:list
       (common-lisp:cons "Preset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-preset-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-queue-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-queue-request-"))
   (description common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (reservation-plan-settings common-lisp:nil :type
    (common-lisp:or reservation-plan-settings common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or queue-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-queue-request 'make-update-queue-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-queue-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-queue-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'reservation-plan-settings))
      (common-lisp:list
       (common-lisp:cons "ReservationPlanSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-queue-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-queue-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-queue-response-"))
   (queue common-lisp:nil :type (common-lisp:or queue common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-queue-response 'make-update-queue-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-queue-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-queue-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'queue))
      (common-lisp:list
       (common-lisp:cons "Queue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-queue-response))
   common-lisp:nil))
(common-lisp:deftype vc3class () 'common-lisp:string)
(common-lisp:deftype vc3framerate-control () 'common-lisp:string)
(common-lisp:deftype vc3framerate-conversion-algorithm () 'common-lisp:string)
(common-lisp:deftype vc3interlace-mode () 'common-lisp:string)
(common-lisp:deftype vc3scan-type-conversion-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (vc3settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-vc3settings-"))
   (framerate-control common-lisp:nil :type
    (common-lisp:or vc3framerate-control common-lisp:null))
   (framerate-conversion-algorithm common-lisp:nil :type
    (common-lisp:or vc3framerate-conversion-algorithm common-lisp:null))
   (framerate-denominator common-lisp:nil :type
    (common-lisp:or |__integerMin1Max1001| common-lisp:null))
   (framerate-numerator common-lisp:nil :type
    (common-lisp:or |__integerMin24Max60000| common-lisp:null))
   (interlace-mode common-lisp:nil :type
    (common-lisp:or vc3interlace-mode common-lisp:null))
   (scan-type-conversion-mode common-lisp:nil :type
    (common-lisp:or vc3scan-type-conversion-mode common-lisp:null))
   (slow-pal common-lisp:nil :type
    (common-lisp:or vc3slow-pal common-lisp:null))
   (telecine common-lisp:nil :type
    (common-lisp:or vc3telecine common-lisp:null))
   (vc3class common-lisp:nil :type (common-lisp:or vc3class common-lisp:null)))
 (common-lisp:export (common-lisp:list 'vc3settings 'make-vc3settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input vc3settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input vc3settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'framerate-control))
      (common-lisp:list
       (common-lisp:cons "FramerateControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'framerate-conversion-algorithm))
      (common-lisp:list
       (common-lisp:cons "FramerateConversionAlgorithm"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'framerate-denominator))
      (common-lisp:list
       (common-lisp:cons "FramerateDenominator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'framerate-numerator))
      (common-lisp:list
       (common-lisp:cons "FramerateNumerator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'interlace-mode))
      (common-lisp:list
       (common-lisp:cons "InterlaceMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'scan-type-conversion-mode))
      (common-lisp:list
       (common-lisp:cons "ScanTypeConversionMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slow-pal))
      (common-lisp:list
       (common-lisp:cons "SlowPal"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'telecine))
      (common-lisp:list
       (common-lisp:cons "Telecine"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vc3class))
      (common-lisp:list
       (common-lisp:cons "Vc3Class"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input vc3settings))
   common-lisp:nil))
(common-lisp:deftype vc3slow-pal () 'common-lisp:string)
(common-lisp:deftype vc3telecine () 'common-lisp:string)
(common-lisp:deftype vchip-action () 'common-lisp:string)
(common-lisp:deftype video-codec () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (video-codec-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-video-codec-settings-"))
   (av1settings common-lisp:nil :type
    (common-lisp:or av1settings common-lisp:null))
   (avc-intra-settings common-lisp:nil :type
    (common-lisp:or avc-intra-settings common-lisp:null))
   (codec common-lisp:nil :type (common-lisp:or video-codec common-lisp:null))
   (frame-capture-settings common-lisp:nil :type
    (common-lisp:or frame-capture-settings common-lisp:null))
   (h264settings common-lisp:nil :type
    (common-lisp:or h264settings common-lisp:null))
   (h265settings common-lisp:nil :type
    (common-lisp:or h265settings common-lisp:null))
   (mpeg2settings common-lisp:nil :type
    (common-lisp:or mpeg2settings common-lisp:null))
   (prores-settings common-lisp:nil :type
    (common-lisp:or prores-settings common-lisp:null))
   (vc3settings common-lisp:nil :type
    (common-lisp:or vc3settings common-lisp:null))
   (vp8settings common-lisp:nil :type
    (common-lisp:or vp8settings common-lisp:null))
   (vp9settings common-lisp:nil :type
    (common-lisp:or vp9settings common-lisp:null))
   (xavc-settings common-lisp:nil :type
    (common-lisp:or xavc-settings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'video-codec-settings 'make-video-codec-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input video-codec-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input video-codec-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'av1settings))
      (common-lisp:list
       (common-lisp:cons "Av1Settings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'avc-intra-settings))
      (common-lisp:list
       (common-lisp:cons "AvcIntraSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'codec))
      (common-lisp:list
       (common-lisp:cons "Codec"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'frame-capture-settings))
      (common-lisp:list
       (common-lisp:cons "FrameCaptureSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'h264settings))
      (common-lisp:list
       (common-lisp:cons "H264Settings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'h265settings))
      (common-lisp:list
       (common-lisp:cons "H265Settings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mpeg2settings))
      (common-lisp:list
       (common-lisp:cons "Mpeg2Settings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'prores-settings))
      (common-lisp:list
       (common-lisp:cons "ProresSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vc3settings))
      (common-lisp:list
       (common-lisp:cons "Vc3Settings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vp8settings))
      (common-lisp:list
       (common-lisp:cons "Vp8Settings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vp9settings))
      (common-lisp:list
       (common-lisp:cons "Vp9Settings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'xavc-settings))
      (common-lisp:list
       (common-lisp:cons "XavcSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input video-codec-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (video-description (:copier common-lisp:nil)
      (:conc-name "struct-shape-video-description-"))
   (afd-signaling common-lisp:nil :type
    (common-lisp:or afd-signaling common-lisp:null))
   (anti-alias common-lisp:nil :type
    (common-lisp:or anti-alias common-lisp:null))
   (codec-settings common-lisp:nil :type
    (common-lisp:or video-codec-settings common-lisp:null))
   (color-metadata common-lisp:nil :type
    (common-lisp:or color-metadata common-lisp:null))
   (crop common-lisp:nil :type (common-lisp:or rectangle common-lisp:null))
   (drop-frame-timecode common-lisp:nil :type
    (common-lisp:or drop-frame-timecode common-lisp:null))
   (fixed-afd common-lisp:nil :type
    (common-lisp:or |__integerMin0Max15| common-lisp:null))
   (height common-lisp:nil :type
    (common-lisp:or |__integerMin32Max8192| common-lisp:null))
   (position common-lisp:nil :type (common-lisp:or rectangle common-lisp:null))
   (respond-to-afd common-lisp:nil :type
    (common-lisp:or respond-to-afd common-lisp:null))
   (scaling-behavior common-lisp:nil :type
    (common-lisp:or scaling-behavior common-lisp:null))
   (sharpness common-lisp:nil :type
    (common-lisp:or |__integerMin0Max100| common-lisp:null))
   (timecode-insertion common-lisp:nil :type
    (common-lisp:or video-timecode-insertion common-lisp:null))
   (video-preprocessors common-lisp:nil :type
    (common-lisp:or video-preprocessor common-lisp:null))
   (width common-lisp:nil :type
    (common-lisp:or |__integerMin32Max8192| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'video-description 'make-video-description))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input video-description))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input video-description))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'afd-signaling))
      (common-lisp:list
       (common-lisp:cons "AfdSignaling"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'anti-alias))
      (common-lisp:list
       (common-lisp:cons "AntiAlias"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'codec-settings))
      (common-lisp:list
       (common-lisp:cons "CodecSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'color-metadata))
      (common-lisp:list
       (common-lisp:cons "ColorMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'crop))
      (common-lisp:list
       (common-lisp:cons "Crop"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'drop-frame-timecode))
      (common-lisp:list
       (common-lisp:cons "DropFrameTimecode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fixed-afd))
      (common-lisp:list
       (common-lisp:cons "FixedAfd"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'height))
      (common-lisp:list
       (common-lisp:cons "Height"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "Position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'respond-to-afd))
      (common-lisp:list
       (common-lisp:cons "RespondToAfd"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scaling-behavior))
      (common-lisp:list
       (common-lisp:cons "ScalingBehavior"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sharpness))
      (common-lisp:list
       (common-lisp:cons "Sharpness"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timecode-insertion))
      (common-lisp:list
       (common-lisp:cons "TimecodeInsertion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'video-preprocessors))
      (common-lisp:list
       (common-lisp:cons "VideoPreprocessors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'width))
      (common-lisp:list
       (common-lisp:cons "Width"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input video-description))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (video-detail (:copier common-lisp:nil)
      (:conc-name "struct-shape-video-detail-"))
   (height-in-px common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (width-in-px common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'video-detail 'make-video-detail))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input video-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input video-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'height-in-px))
      (common-lisp:list
       (common-lisp:cons "HeightInPx"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'width-in-px))
      (common-lisp:list
       (common-lisp:cons "WidthInPx"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input video-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (video-preprocessor (:copier common-lisp:nil)
      (:conc-name "struct-shape-video-preprocessor-"))
   (color-corrector common-lisp:nil :type
    (common-lisp:or color-corrector common-lisp:null))
   (deinterlacer common-lisp:nil :type
    (common-lisp:or deinterlacer common-lisp:null))
   (dolby-vision common-lisp:nil :type
    (common-lisp:or dolby-vision common-lisp:null))
   (hdr10plus common-lisp:nil :type
    (common-lisp:or hdr10plus common-lisp:null))
   (image-inserter common-lisp:nil :type
    (common-lisp:or image-inserter common-lisp:null))
   (noise-reducer common-lisp:nil :type
    (common-lisp:or noise-reducer common-lisp:null))
   (partner-watermarking common-lisp:nil :type
    (common-lisp:or partner-watermarking common-lisp:null))
   (timecode-burnin common-lisp:nil :type
    (common-lisp:or timecode-burnin common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'video-preprocessor 'make-video-preprocessor))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input video-preprocessor))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input video-preprocessor))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'color-corrector))
      (common-lisp:list
       (common-lisp:cons "ColorCorrector"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deinterlacer))
      (common-lisp:list
       (common-lisp:cons "Deinterlacer"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dolby-vision))
      (common-lisp:list
       (common-lisp:cons "DolbyVision"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hdr10plus))
      (common-lisp:list
       (common-lisp:cons "Hdr10Plus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'image-inserter))
      (common-lisp:list
       (common-lisp:cons "ImageInserter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'noise-reducer))
      (common-lisp:list
       (common-lisp:cons "NoiseReducer"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'partner-watermarking))
      (common-lisp:list
       (common-lisp:cons "PartnerWatermarking"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timecode-burnin))
      (common-lisp:list
       (common-lisp:cons "TimecodeBurnin"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input video-preprocessor))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (video-selector (:copier common-lisp:nil)
      (:conc-name "struct-shape-video-selector-"))
   (alpha-behavior common-lisp:nil :type
    (common-lisp:or alpha-behavior common-lisp:null))
   (color-space common-lisp:nil :type
    (common-lisp:or color-space common-lisp:null))
   (color-space-usage common-lisp:nil :type
    (common-lisp:or color-space-usage common-lisp:null))
   (embedded-timecode-override common-lisp:nil :type
    (common-lisp:or embedded-timecode-override common-lisp:null))
   (hdr10metadata common-lisp:nil :type
    (common-lisp:or hdr10metadata common-lisp:null))
   (pad-video common-lisp:nil :type
    (common-lisp:or pad-video common-lisp:null))
   (pid common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2147483647| common-lisp:null))
   (program-number common-lisp:nil :type
    (common-lisp:or |__integerMinNegative2147483648Max2147483647|
                    common-lisp:null))
   (rotate common-lisp:nil :type
    (common-lisp:or input-rotate common-lisp:null))
   (sample-range common-lisp:nil :type
    (common-lisp:or input-sample-range common-lisp:null)))
 (common-lisp:export (common-lisp:list 'video-selector 'make-video-selector))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input video-selector))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input video-selector))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alpha-behavior))
      (common-lisp:list
       (common-lisp:cons "AlphaBehavior"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'color-space))
      (common-lisp:list
       (common-lisp:cons "ColorSpace"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'color-space-usage))
      (common-lisp:list
       (common-lisp:cons "ColorSpaceUsage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'embedded-timecode-override))
      (common-lisp:list
       (common-lisp:cons "EmbeddedTimecodeOverride"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hdr10metadata))
      (common-lisp:list
       (common-lisp:cons "Hdr10Metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pad-video))
      (common-lisp:list
       (common-lisp:cons "PadVideo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pid))
      (common-lisp:list
       (common-lisp:cons "Pid"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'program-number))
      (common-lisp:list
       (common-lisp:cons "ProgramNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rotate))
      (common-lisp:list
       (common-lisp:cons "Rotate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sample-range))
      (common-lisp:list
       (common-lisp:cons "SampleRange"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input video-selector))
   common-lisp:nil))
(common-lisp:deftype video-timecode-insertion () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (vorbis-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-vorbis-settings-"))
   (channels common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2| common-lisp:null))
   (sample-rate common-lisp:nil :type
    (common-lisp:or |__integerMin22050Max48000| common-lisp:null))
   (vbr-quality common-lisp:nil :type
    (common-lisp:or |__integerMinNegative1Max10| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'vorbis-settings 'make-vorbis-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input vorbis-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input vorbis-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channels))
      (common-lisp:list
       (common-lisp:cons "Channels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sample-rate))
      (common-lisp:list
       (common-lisp:cons "SampleRate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vbr-quality))
      (common-lisp:list
       (common-lisp:cons "VbrQuality"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input vorbis-settings))
   common-lisp:nil))
(common-lisp:deftype vp8framerate-control () 'common-lisp:string)
(common-lisp:deftype vp8framerate-conversion-algorithm () 'common-lisp:string)
(common-lisp:deftype vp8par-control () 'common-lisp:string)
(common-lisp:deftype vp8quality-tuning-level () 'common-lisp:string)
(common-lisp:deftype vp8rate-control-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (vp8settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-vp8settings-"))
   (bitrate common-lisp:nil :type
    (common-lisp:or |__integerMin1000Max1152000000| common-lisp:null))
   (framerate-control common-lisp:nil :type
    (common-lisp:or vp8framerate-control common-lisp:null))
   (framerate-conversion-algorithm common-lisp:nil :type
    (common-lisp:or vp8framerate-conversion-algorithm common-lisp:null))
   (framerate-denominator common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2147483647| common-lisp:null))
   (framerate-numerator common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2147483647| common-lisp:null))
   (gop-size common-lisp:nil :type
    (common-lisp:or |__doubleMin0| common-lisp:null))
   (hrd-buffer-size common-lisp:nil :type
    (common-lisp:or |__integerMin0Max47185920| common-lisp:null))
   (max-bitrate common-lisp:nil :type
    (common-lisp:or |__integerMin1000Max1152000000| common-lisp:null))
   (par-control common-lisp:nil :type
    (common-lisp:or vp8par-control common-lisp:null))
   (par-denominator common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2147483647| common-lisp:null))
   (par-numerator common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2147483647| common-lisp:null))
   (quality-tuning-level common-lisp:nil :type
    (common-lisp:or vp8quality-tuning-level common-lisp:null))
   (rate-control-mode common-lisp:nil :type
    (common-lisp:or vp8rate-control-mode common-lisp:null)))
 (common-lisp:export (common-lisp:list 'vp8settings 'make-vp8settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input vp8settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input vp8settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bitrate))
      (common-lisp:list
       (common-lisp:cons "Bitrate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'framerate-control))
      (common-lisp:list
       (common-lisp:cons "FramerateControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'framerate-conversion-algorithm))
      (common-lisp:list
       (common-lisp:cons "FramerateConversionAlgorithm"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'framerate-denominator))
      (common-lisp:list
       (common-lisp:cons "FramerateDenominator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'framerate-numerator))
      (common-lisp:list
       (common-lisp:cons "FramerateNumerator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gop-size))
      (common-lisp:list
       (common-lisp:cons "GopSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hrd-buffer-size))
      (common-lisp:list
       (common-lisp:cons "HrdBufferSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-bitrate))
      (common-lisp:list
       (common-lisp:cons "MaxBitrate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'par-control))
      (common-lisp:list
       (common-lisp:cons "ParControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'par-denominator))
      (common-lisp:list
       (common-lisp:cons "ParDenominator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'par-numerator))
      (common-lisp:list
       (common-lisp:cons "ParNumerator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'quality-tuning-level))
      (common-lisp:list
       (common-lisp:cons "QualityTuningLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rate-control-mode))
      (common-lisp:list
       (common-lisp:cons "RateControlMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input vp8settings))
   common-lisp:nil))
(common-lisp:deftype vp9framerate-control () 'common-lisp:string)
(common-lisp:deftype vp9framerate-conversion-algorithm () 'common-lisp:string)
(common-lisp:deftype vp9par-control () 'common-lisp:string)
(common-lisp:deftype vp9quality-tuning-level () 'common-lisp:string)
(common-lisp:deftype vp9rate-control-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (vp9settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-vp9settings-"))
   (bitrate common-lisp:nil :type
    (common-lisp:or |__integerMin1000Max480000000| common-lisp:null))
   (framerate-control common-lisp:nil :type
    (common-lisp:or vp9framerate-control common-lisp:null))
   (framerate-conversion-algorithm common-lisp:nil :type
    (common-lisp:or vp9framerate-conversion-algorithm common-lisp:null))
   (framerate-denominator common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2147483647| common-lisp:null))
   (framerate-numerator common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2147483647| common-lisp:null))
   (gop-size common-lisp:nil :type
    (common-lisp:or |__doubleMin0| common-lisp:null))
   (hrd-buffer-size common-lisp:nil :type
    (common-lisp:or |__integerMin0Max47185920| common-lisp:null))
   (max-bitrate common-lisp:nil :type
    (common-lisp:or |__integerMin1000Max480000000| common-lisp:null))
   (par-control common-lisp:nil :type
    (common-lisp:or vp9par-control common-lisp:null))
   (par-denominator common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2147483647| common-lisp:null))
   (par-numerator common-lisp:nil :type
    (common-lisp:or |__integerMin1Max2147483647| common-lisp:null))
   (quality-tuning-level common-lisp:nil :type
    (common-lisp:or vp9quality-tuning-level common-lisp:null))
   (rate-control-mode common-lisp:nil :type
    (common-lisp:or vp9rate-control-mode common-lisp:null)))
 (common-lisp:export (common-lisp:list 'vp9settings 'make-vp9settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input vp9settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input vp9settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bitrate))
      (common-lisp:list
       (common-lisp:cons "Bitrate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'framerate-control))
      (common-lisp:list
       (common-lisp:cons "FramerateControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'framerate-conversion-algorithm))
      (common-lisp:list
       (common-lisp:cons "FramerateConversionAlgorithm"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'framerate-denominator))
      (common-lisp:list
       (common-lisp:cons "FramerateDenominator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'framerate-numerator))
      (common-lisp:list
       (common-lisp:cons "FramerateNumerator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gop-size))
      (common-lisp:list
       (common-lisp:cons "GopSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hrd-buffer-size))
      (common-lisp:list
       (common-lisp:cons "HrdBufferSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-bitrate))
      (common-lisp:list
       (common-lisp:cons "MaxBitrate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'par-control))
      (common-lisp:list
       (common-lisp:cons "ParControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'par-denominator))
      (common-lisp:list
       (common-lisp:cons "ParDenominator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'par-numerator))
      (common-lisp:list
       (common-lisp:cons "ParNumerator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'quality-tuning-level))
      (common-lisp:list
       (common-lisp:cons "QualityTuningLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rate-control-mode))
      (common-lisp:list
       (common-lisp:cons "RateControlMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input vp9settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (warning-group (:copier common-lisp:nil)
      (:conc-name "struct-shape-warning-group-"))
   (code (common-lisp:error ":code is required") :type
    (common-lisp:or |__integer| common-lisp:null))
   (count (common-lisp:error ":count is required") :type
    (common-lisp:or |__integer| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'warning-group 'make-warning-group))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input warning-group))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input warning-group))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'code))
      (common-lisp:list
       (common-lisp:cons "Code"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'count))
      (common-lisp:list
       (common-lisp:cons "Count"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input warning-group))
   common-lisp:nil))
(common-lisp:deftype watermarking-strength () 'common-lisp:string)
(common-lisp:deftype wav-format () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (wav-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-wav-settings-"))
   (bit-depth common-lisp:nil :type
    (common-lisp:or |__integerMin16Max24| common-lisp:null))
   (channels common-lisp:nil :type
    (common-lisp:or |__integerMin1Max64| common-lisp:null))
   (format common-lisp:nil :type (common-lisp:or wav-format common-lisp:null))
   (sample-rate common-lisp:nil :type
    (common-lisp:or |__integerMin8000Max192000| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'wav-settings 'make-wav-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input wav-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input wav-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bit-depth))
      (common-lisp:list
       (common-lisp:cons "BitDepth"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channels))
      (common-lisp:list
       (common-lisp:cons "Channels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'format))
      (common-lisp:list
       (common-lisp:cons "Format"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sample-rate))
      (common-lisp:list
       (common-lisp:cons "SampleRate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input wav-settings))
   common-lisp:nil))
(common-lisp:deftype webvtt-accessibility-subs () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (webvtt-destination-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-webvtt-destination-settings-"))
   (accessibility common-lisp:nil :type
    (common-lisp:or webvtt-accessibility-subs common-lisp:null))
   (style-passthrough common-lisp:nil :type
    (common-lisp:or webvtt-style-passthrough common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'webvtt-destination-settings
                    'make-webvtt-destination-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          webvtt-destination-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          webvtt-destination-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'accessibility))
      (common-lisp:list
       (common-lisp:cons "Accessibility"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'style-passthrough))
      (common-lisp:list
       (common-lisp:cons "StylePassthrough"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          webvtt-destination-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (webvtt-hls-source-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-webvtt-hls-source-settings-"))
   (rendition-group-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (rendition-language-code common-lisp:nil :type
    (common-lisp:or language-code common-lisp:null))
   (rendition-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'webvtt-hls-source-settings
                    'make-webvtt-hls-source-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          webvtt-hls-source-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          webvtt-hls-source-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rendition-group-id))
      (common-lisp:list
       (common-lisp:cons "RenditionGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'rendition-language-code))
      (common-lisp:list
       (common-lisp:cons "RenditionLanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rendition-name))
      (common-lisp:list
       (common-lisp:cons "RenditionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          webvtt-hls-source-settings))
   common-lisp:nil))
(common-lisp:deftype webvtt-style-passthrough () 'common-lisp:string)
(common-lisp:deftype xavc4k-intra-cbg-profile-class () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (xavc4k-intra-cbg-profile-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-xavc4k-intra-cbg-profile-settings-"))
   (xavc-class common-lisp:nil :type
    (common-lisp:or xavc4k-intra-cbg-profile-class common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'xavc4k-intra-cbg-profile-settings
                    'make-xavc4k-intra-cbg-profile-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          xavc4k-intra-cbg-profile-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          xavc4k-intra-cbg-profile-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'xavc-class))
      (common-lisp:list
       (common-lisp:cons "XavcClass"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          xavc4k-intra-cbg-profile-settings))
   common-lisp:nil))
(common-lisp:deftype xavc4k-intra-vbr-profile-class () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (xavc4k-intra-vbr-profile-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-xavc4k-intra-vbr-profile-settings-"))
   (xavc-class common-lisp:nil :type
    (common-lisp:or xavc4k-intra-vbr-profile-class common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'xavc4k-intra-vbr-profile-settings
                    'make-xavc4k-intra-vbr-profile-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          xavc4k-intra-vbr-profile-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          xavc4k-intra-vbr-profile-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'xavc-class))
      (common-lisp:list
       (common-lisp:cons "XavcClass"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          xavc4k-intra-vbr-profile-settings))
   common-lisp:nil))
(common-lisp:deftype xavc4k-profile-bitrate-class () 'common-lisp:string)
(common-lisp:deftype xavc4k-profile-codec-profile () 'common-lisp:string)
(common-lisp:deftype xavc4k-profile-quality-tuning-level () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (xavc4k-profile-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-xavc4k-profile-settings-"))
   (bitrate-class common-lisp:nil :type
    (common-lisp:or xavc4k-profile-bitrate-class common-lisp:null))
   (codec-profile common-lisp:nil :type
    (common-lisp:or xavc4k-profile-codec-profile common-lisp:null))
   (flicker-adaptive-quantization common-lisp:nil :type
    (common-lisp:or xavc-flicker-adaptive-quantization common-lisp:null))
   (gop-breference common-lisp:nil :type
    (common-lisp:or xavc-gop-breference common-lisp:null))
   (gop-closed-cadence common-lisp:nil :type
    (common-lisp:or |__integerMin0Max2147483647| common-lisp:null))
   (hrd-buffer-size common-lisp:nil :type
    (common-lisp:or |__integerMin0Max1152000000| common-lisp:null))
   (quality-tuning-level common-lisp:nil :type
    (common-lisp:or xavc4k-profile-quality-tuning-level common-lisp:null))
   (slices common-lisp:nil :type
    (common-lisp:or |__integerMin8Max12| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'xavc4k-profile-settings 'make-xavc4k-profile-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          xavc4k-profile-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          xavc4k-profile-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bitrate-class))
      (common-lisp:list
       (common-lisp:cons "BitrateClass"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'codec-profile))
      (common-lisp:list
       (common-lisp:cons "CodecProfile"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'flicker-adaptive-quantization))
      (common-lisp:list
       (common-lisp:cons "FlickerAdaptiveQuantization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gop-breference))
      (common-lisp:list
       (common-lisp:cons "GopBReference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gop-closed-cadence))
      (common-lisp:list
       (common-lisp:cons "GopClosedCadence"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hrd-buffer-size))
      (common-lisp:list
       (common-lisp:cons "HrdBufferSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'quality-tuning-level))
      (common-lisp:list
       (common-lisp:cons "QualityTuningLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slices))
      (common-lisp:list
       (common-lisp:cons "Slices"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          xavc4k-profile-settings))
   common-lisp:nil))
(common-lisp:deftype xavc-adaptive-quantization () 'common-lisp:string)
(common-lisp:deftype xavc-entropy-encoding () 'common-lisp:string)
(common-lisp:deftype xavc-flicker-adaptive-quantization () 'common-lisp:string)
(common-lisp:deftype xavc-framerate-control () 'common-lisp:string)
(common-lisp:deftype xavc-framerate-conversion-algorithm () 'common-lisp:string)
(common-lisp:deftype xavc-gop-breference () 'common-lisp:string)
(common-lisp:deftype xavc-hd-intra-cbg-profile-class () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (xavc-hd-intra-cbg-profile-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-xavc-hd-intra-cbg-profile-settings-"))
   (xavc-class common-lisp:nil :type
    (common-lisp:or xavc-hd-intra-cbg-profile-class common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'xavc-hd-intra-cbg-profile-settings
                    'make-xavc-hd-intra-cbg-profile-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          xavc-hd-intra-cbg-profile-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          xavc-hd-intra-cbg-profile-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'xavc-class))
      (common-lisp:list
       (common-lisp:cons "XavcClass"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          xavc-hd-intra-cbg-profile-settings))
   common-lisp:nil))
(common-lisp:deftype xavc-hd-profile-bitrate-class () 'common-lisp:string)
(common-lisp:deftype xavc-hd-profile-quality-tuning-level ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (xavc-hd-profile-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-xavc-hd-profile-settings-"))
   (bitrate-class common-lisp:nil :type
    (common-lisp:or xavc-hd-profile-bitrate-class common-lisp:null))
   (flicker-adaptive-quantization common-lisp:nil :type
    (common-lisp:or xavc-flicker-adaptive-quantization common-lisp:null))
   (gop-breference common-lisp:nil :type
    (common-lisp:or xavc-gop-breference common-lisp:null))
   (gop-closed-cadence common-lisp:nil :type
    (common-lisp:or |__integerMin0Max2147483647| common-lisp:null))
   (hrd-buffer-size common-lisp:nil :type
    (common-lisp:or |__integerMin0Max1152000000| common-lisp:null))
   (interlace-mode common-lisp:nil :type
    (common-lisp:or xavc-interlace-mode common-lisp:null))
   (quality-tuning-level common-lisp:nil :type
    (common-lisp:or xavc-hd-profile-quality-tuning-level common-lisp:null))
   (slices common-lisp:nil :type
    (common-lisp:or |__integerMin4Max12| common-lisp:null))
   (telecine common-lisp:nil :type
    (common-lisp:or xavc-hd-profile-telecine common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'xavc-hd-profile-settings 'make-xavc-hd-profile-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          xavc-hd-profile-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          xavc-hd-profile-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bitrate-class))
      (common-lisp:list
       (common-lisp:cons "BitrateClass"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'flicker-adaptive-quantization))
      (common-lisp:list
       (common-lisp:cons "FlickerAdaptiveQuantization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gop-breference))
      (common-lisp:list
       (common-lisp:cons "GopBReference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gop-closed-cadence))
      (common-lisp:list
       (common-lisp:cons "GopClosedCadence"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hrd-buffer-size))
      (common-lisp:list
       (common-lisp:cons "HrdBufferSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'interlace-mode))
      (common-lisp:list
       (common-lisp:cons "InterlaceMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'quality-tuning-level))
      (common-lisp:list
       (common-lisp:cons "QualityTuningLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slices))
      (common-lisp:list
       (common-lisp:cons "Slices"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'telecine))
      (common-lisp:list
       (common-lisp:cons "Telecine"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          xavc-hd-profile-settings))
   common-lisp:nil))
(common-lisp:deftype xavc-hd-profile-telecine () 'common-lisp:string)
(common-lisp:deftype xavc-interlace-mode () 'common-lisp:string)
(common-lisp:deftype xavc-profile () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (xavc-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-xavc-settings-"))
   (adaptive-quantization common-lisp:nil :type
    (common-lisp:or xavc-adaptive-quantization common-lisp:null))
   (entropy-encoding common-lisp:nil :type
    (common-lisp:or xavc-entropy-encoding common-lisp:null))
   (framerate-control common-lisp:nil :type
    (common-lisp:or xavc-framerate-control common-lisp:null))
   (framerate-conversion-algorithm common-lisp:nil :type
    (common-lisp:or xavc-framerate-conversion-algorithm common-lisp:null))
   (framerate-denominator common-lisp:nil :type
    (common-lisp:or |__integerMin1Max1001| common-lisp:null))
   (framerate-numerator common-lisp:nil :type
    (common-lisp:or |__integerMin24Max60000| common-lisp:null))
   (profile common-lisp:nil :type
    (common-lisp:or xavc-profile common-lisp:null))
   (slow-pal common-lisp:nil :type
    (common-lisp:or xavc-slow-pal common-lisp:null))
   (softness common-lisp:nil :type
    (common-lisp:or |__integerMin0Max128| common-lisp:null))
   (spatial-adaptive-quantization common-lisp:nil :type
    (common-lisp:or xavc-spatial-adaptive-quantization common-lisp:null))
   (temporal-adaptive-quantization common-lisp:nil :type
    (common-lisp:or xavc-temporal-adaptive-quantization common-lisp:null))
   (xavc4k-intra-cbg-profile-settings common-lisp:nil :type
    (common-lisp:or xavc4k-intra-cbg-profile-settings common-lisp:null))
   (xavc4k-intra-vbr-profile-settings common-lisp:nil :type
    (common-lisp:or xavc4k-intra-vbr-profile-settings common-lisp:null))
   (xavc4k-profile-settings common-lisp:nil :type
    (common-lisp:or xavc4k-profile-settings common-lisp:null))
   (xavc-hd-intra-cbg-profile-settings common-lisp:nil :type
    (common-lisp:or xavc-hd-intra-cbg-profile-settings common-lisp:null))
   (xavc-hd-profile-settings common-lisp:nil :type
    (common-lisp:or xavc-hd-profile-settings common-lisp:null)))
 (common-lisp:export (common-lisp:list 'xavc-settings 'make-xavc-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input xavc-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input xavc-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'adaptive-quantization))
      (common-lisp:list
       (common-lisp:cons "AdaptiveQuantization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entropy-encoding))
      (common-lisp:list
       (common-lisp:cons "EntropyEncoding"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'framerate-control))
      (common-lisp:list
       (common-lisp:cons "FramerateControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'framerate-conversion-algorithm))
      (common-lisp:list
       (common-lisp:cons "FramerateConversionAlgorithm"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'framerate-denominator))
      (common-lisp:list
       (common-lisp:cons "FramerateDenominator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'framerate-numerator))
      (common-lisp:list
       (common-lisp:cons "FramerateNumerator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'profile))
      (common-lisp:list
       (common-lisp:cons "Profile"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slow-pal))
      (common-lisp:list
       (common-lisp:cons "SlowPal"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'softness))
      (common-lisp:list
       (common-lisp:cons "Softness"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'spatial-adaptive-quantization))
      (common-lisp:list
       (common-lisp:cons "SpatialAdaptiveQuantization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'temporal-adaptive-quantization))
      (common-lisp:list
       (common-lisp:cons "TemporalAdaptiveQuantization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'xavc4k-intra-cbg-profile-settings))
      (common-lisp:list
       (common-lisp:cons "Xavc4kIntraCbgProfileSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'xavc4k-intra-vbr-profile-settings))
      (common-lisp:list
       (common-lisp:cons "Xavc4kIntraVbrProfileSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'xavc4k-profile-settings))
      (common-lisp:list
       (common-lisp:cons "Xavc4kProfileSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'xavc-hd-intra-cbg-profile-settings))
      (common-lisp:list
       (common-lisp:cons "XavcHdIntraCbgProfileSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'xavc-hd-profile-settings))
      (common-lisp:list
       (common-lisp:cons "XavcHdProfileSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input xavc-settings))
   common-lisp:nil))
(common-lisp:deftype xavc-slow-pal () 'common-lisp:string)
(common-lisp:deftype xavc-spatial-adaptive-quantization () 'common-lisp:string)
(common-lisp:deftype xavc-temporal-adaptive-quantization () 'common-lisp:string)
(common-lisp:deftype |__boolean| () 'common-lisp:boolean)
(common-lisp:deftype |__double| () 'common-lisp:double-float)
(common-lisp:deftype |__doubleMin0| () 'common-lisp:double-float)
(common-lisp:deftype |__doubleMin0Max1| () 'common-lisp:double-float)
(common-lisp:deftype |__doubleMin0Max2147483647| () 'common-lisp:double-float)
(common-lisp:deftype |__doubleMinNegative59Max0| () 'common-lisp:double-float)
(common-lisp:deftype |__doubleMinNegative60Max3| () 'common-lisp:double-float)
(common-lisp:deftype |__doubleMinNegative60Max6| () 'common-lisp:double-float)
(common-lisp:deftype |__doubleMinNegative60MaxNegative1| ()
  'common-lisp:double-float)
(common-lisp:deftype |__doubleMinNegative6Max3| () 'common-lisp:double-float)
(common-lisp:deftype |__doubleMinNegative8Max0| () 'common-lisp:double-float)
(common-lisp:deftype |__integer| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin0Max0| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin0Max1| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin0Max10| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin0Max100| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin0Max1000| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin0Max10000| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin0Max1152000000| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin0Max128| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin0Max1466400000| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin0Max15| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin0Max16| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin0Max2147483647| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin0Max255| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin0Max3| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin0Max30| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin0Max30000| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin0Max3600| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin0Max4| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin0Max4000| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin0Max4194303| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin0Max47185920| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin0Max5| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin0Max500| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin0Max50000| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin0Max65534| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin0Max65535| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin0Max7| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin0Max8| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin0Max9| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin0Max96| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin0Max99| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin100000Max100000000| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin1000Max1152000000| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin1000Max1466400000| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin1000Max288000000| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin1000Max30000| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin1000Max300000000| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin1000Max480000000| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin100Max1000| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin10Max48| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin16000Max320000| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin16000Max48000| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin16Max24| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin1Max1| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin1Max10| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin1Max100| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin1Max10000000| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin1Max1001| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin1Max17895697| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin1Max2| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin1Max20| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin1Max2048| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin1Max2147483640| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin1Max2147483647| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin1Max31| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin1Max32| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin1Max4| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin1Max4096| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin1Max512| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin1Max6| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin1Max60000| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin1Max64| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin22050Max48000| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin24Max60000| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin25Max10000| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin25Max2000| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin2Max2147483647| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin2Max4096| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin32000Max192000| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin32000Max3024000| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin32000Max384000| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin32000Max48000| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin32Max8182| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin32Max8192| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin384000Max1024000| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin3Max15| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin48000Max48000| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin4Max12| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin50Max86400000| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin6000Max1024000| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin64000Max640000| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin8000Max192000| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin8000Max96000| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin8Max12| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin8Max4096| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin90Max105| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin920Max1023| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin96Max600| () 'common-lisp:integer)
(common-lisp:deftype |__integerMinNegative1000Max1000| () 'common-lisp:integer)
(common-lisp:deftype |__integerMinNegative180Max180| () 'common-lisp:integer)
(common-lisp:deftype |__integerMinNegative1Max10| () 'common-lisp:integer)
(common-lisp:deftype |__integerMinNegative1Max3| () 'common-lisp:integer)
(common-lisp:deftype |__integerMinNegative2147483648Max2147483647| ()
  'common-lisp:integer)
(common-lisp:deftype |__integerMinNegative2Max3| () 'common-lisp:integer)
(common-lisp:deftype |__integerMinNegative50Max50| () 'common-lisp:integer)
(common-lisp:deftype |__integerMinNegative5Max10| () 'common-lisp:integer)
(common-lisp:deftype |__integerMinNegative60Max6| () 'common-lisp:integer)
(common-lisp:deftype |__integerMinNegative70Max0| () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype |__listOfAllowedRenditionSize| ()
   '(trivial-types:proper-list allowed-rendition-size))
 (common-lisp:defun |make-__listofallowedrenditionsize|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list allowed-rendition-size))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfAudioDescription| ()
   '(trivial-types:proper-list audio-description))
 (common-lisp:defun |make-__listofaudiodescription|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list audio-description))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfAutomatedAbrRule| ()
   '(trivial-types:proper-list automated-abr-rule))
 (common-lisp:defun |make-__listofautomatedabrrule|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list automated-abr-rule))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfCaptionDescription| ()
   '(trivial-types:proper-list caption-description))
 (common-lisp:defun |make-__listofcaptiondescription|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list caption-description))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfCaptionDescriptionPreset| ()
   '(trivial-types:proper-list caption-description-preset))
 (common-lisp:defun |make-__listofcaptiondescriptionpreset|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            caption-description-preset))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfCmafAdditionalManifest| ()
   '(trivial-types:proper-list cmaf-additional-manifest))
 (common-lisp:defun |make-__listofcmafadditionalmanifest|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            cmaf-additional-manifest))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfDashAdditionalManifest| ()
   '(trivial-types:proper-list dash-additional-manifest))
 (common-lisp:defun |make-__listofdashadditionalmanifest|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            dash-additional-manifest))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfEndpoint| ()
   '(trivial-types:proper-list endpoint))
 (common-lisp:defun |make-__listofendpoint|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list endpoint))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfForceIncludeRenditionSize| ()
   '(trivial-types:proper-list force-include-rendition-size))
 (common-lisp:defun |make-__listofforceincluderenditionsize|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            force-include-rendition-size))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfHlsAdMarkers| ()
   '(trivial-types:proper-list hls-ad-markers))
 (common-lisp:defun |make-__listofhlsadmarkers|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list hls-ad-markers))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfHlsAdditionalManifest| ()
   '(trivial-types:proper-list hls-additional-manifest))
 (common-lisp:defun |make-__listofhlsadditionalmanifest|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list hls-additional-manifest))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfHlsCaptionLanguageMapping| ()
   '(trivial-types:proper-list hls-caption-language-mapping))
 (common-lisp:defun |make-__listofhlscaptionlanguagemapping|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            hls-caption-language-mapping))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfHopDestination| ()
   '(trivial-types:proper-list hop-destination))
 (common-lisp:defun |make-__listofhopdestination|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list hop-destination))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfId3Insertion| ()
   '(trivial-types:proper-list id3insertion))
 (common-lisp:defun |make-__listofid3insertion|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list id3insertion))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfInput| () '(trivial-types:proper-list input))
 (common-lisp:defun |make-__listofinput|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list input))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfInputClipping| ()
   '(trivial-types:proper-list input-clipping))
 (common-lisp:defun |make-__listofinputclipping|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list input-clipping))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfInputTemplate| ()
   '(trivial-types:proper-list input-template))
 (common-lisp:defun |make-__listofinputtemplate|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list input-template))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfInsertableImage| ()
   '(trivial-types:proper-list insertable-image))
 (common-lisp:defun |make-__listofinsertableimage|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list insertable-image))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfJob| () '(trivial-types:proper-list job))
 (common-lisp:defun |make-__listofjob|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list job))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfJobTemplate| ()
   '(trivial-types:proper-list job-template))
 (common-lisp:defun |make-__listofjobtemplate|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list job-template))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfMsSmoothAdditionalManifest| ()
   '(trivial-types:proper-list ms-smooth-additional-manifest))
 (common-lisp:defun |make-__listofmssmoothadditionalmanifest|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            ms-smooth-additional-manifest))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfOutput| () '(trivial-types:proper-list output))
 (common-lisp:defun |make-__listofoutput|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list output))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfOutputChannelMapping| ()
   '(trivial-types:proper-list output-channel-mapping))
 (common-lisp:defun |make-__listofoutputchannelmapping|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list output-channel-mapping))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfOutputDetail| ()
   '(trivial-types:proper-list output-detail))
 (common-lisp:defun |make-__listofoutputdetail|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list output-detail))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfOutputGroup| ()
   '(trivial-types:proper-list output-group))
 (common-lisp:defun |make-__listofoutputgroup|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list output-group))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfOutputGroupDetail| ()
   '(trivial-types:proper-list output-group-detail))
 (common-lisp:defun |make-__listofoutputgroupdetail|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list output-group-detail))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfPreset| () '(trivial-types:proper-list preset))
 (common-lisp:defun |make-__listofpreset|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list preset))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfQueue| () '(trivial-types:proper-list queue))
 (common-lisp:defun |make-__listofqueue|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list queue))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfQueueTransition| ()
   '(trivial-types:proper-list queue-transition))
 (common-lisp:defun |make-__listofqueuetransition|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list queue-transition))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfTeletextPageType| ()
   '(trivial-types:proper-list teletext-page-type))
 (common-lisp:defun |make-__listofteletextpagetype|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list teletext-page-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfWarningGroup| ()
   '(trivial-types:proper-list warning-group))
 (common-lisp:defun |make-__listofwarninggroup|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list warning-group))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOf__doubleMinNegative60Max6| ()
   '(trivial-types:proper-list |__doubleMinNegative60Max6|))
 (common-lisp:defun |make-__listof__doubleminnegative60max6|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            |__doubleMinNegative60Max6|))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOf__integerMin1Max2147483647| ()
   '(trivial-types:proper-list |__integerMin1Max2147483647|))
 (common-lisp:defun |make-__listof__integermin1max2147483647|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            |__integerMin1Max2147483647|))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOf__integerMin32Max8182| ()
   '(trivial-types:proper-list |__integerMin32Max8182|))
 (common-lisp:defun |make-__listof__integermin32max8182|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |__integerMin32Max8182|))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOf__integerMinNegative60Max6| ()
   '(trivial-types:proper-list |__integerMinNegative60Max6|))
 (common-lisp:defun |make-__listof__integerminnegative60max6|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            |__integerMinNegative60Max6|))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOf__string| ()
   '(trivial-types:proper-list |__string|))
 (common-lisp:defun |make-__listof__string|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |__string|))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOf__stringMin1| ()
   '(trivial-types:proper-list |__stringMin1|))
 (common-lisp:defun |make-__listof__stringmin1|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |__stringMin1|))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOf__stringMin36Max36Pattern09aFAF809aFAF409aFAF409aFAF409aFAF12|
                      ()
   '(trivial-types:proper-list
     |__stringMin36Max36Pattern09aFAF809aFAF409aFAF409aFAF409aFAF12|))
 (common-lisp:defun |make-__listof__stringmin36max36pattern09afaf809afaf409afaf409afaf409afaf12|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            |__stringMin36Max36Pattern09aFAF809aFAF409aFAF409aFAF409aFAF12|))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOf__stringPattern09aFAF809aFAF409aFAF409aFAF409aFAF12|
                      ()
   '(trivial-types:proper-list
     |__stringPattern09aFAF809aFAF409aFAF409aFAF409aFAF12|))
 (common-lisp:defun |make-__listof__stringpattern09afaf809afaf409afaf409afaf409afaf12|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            |__stringPattern09aFAF809aFAF409aFAF409aFAF409aFAF12|))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOf__stringPatternS3ASSETMAPXml| ()
   '(trivial-types:proper-list |__stringPatternS3ASSETMAPXml|))
 (common-lisp:defun |make-__listof__stringpatterns3assetmapxml|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            |__stringPatternS3ASSETMAPXml|))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__mapOfAudioSelector| () 'common-lisp:hash-table)
 (common-lisp:defun |make-__mapofaudioselector|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype |__mapOfAudioSelectorGroup| () 'common-lisp:hash-table)
 (common-lisp:defun |make-__mapofaudioselectorgroup|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype |__mapOfCaptionSelector| () 'common-lisp:hash-table)
 (common-lisp:defun |make-__mapofcaptionselector|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype |__mapOf__string| () 'common-lisp:hash-table)
 (common-lisp:defun |make-__mapof__string|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype |__string| () 'common-lisp:string)
(common-lisp:deftype |__stringMax1000| () 'common-lisp:string)
(common-lisp:deftype |__stringMin0| () 'common-lisp:string)
(common-lisp:deftype |__stringMin1| () 'common-lisp:string)
(common-lisp:deftype |__stringMin11Max11Pattern01D20305D205D| ()
  'common-lisp:string)
(common-lisp:deftype |__stringMin14PatternS3BmpBMPPngPNGHttpsBmpBMPPngPNG| ()
  'common-lisp:string)
(common-lisp:deftype |__stringMin14PatternS3BmpBMPPngPNGTgaTGAHttpsBmpBMPPngPNGTgaTGA|
                     ()
  'common-lisp:string)
(common-lisp:deftype |__stringMin14PatternS3Mov09PngHttpsMov09Png| ()
  'common-lisp:string)
(common-lisp:deftype |__stringMin14PatternS3SccSCCTtmlTTMLDfxpDFXPStlSTLSrtSRTXmlXMLSmiSMIVttVTTWebvttWEBVTTHttpsSccSCCTtmlTTMLDfxpDFXPStlSTLSrtSRTXmlXMLSmiSMIVttVTTWebvttWEBVTT|
                     ()
  'common-lisp:string)
(common-lisp:deftype |__stringMin14PatternS3XmlXMLHttpsXmlXML| ()
  'common-lisp:string)
(common-lisp:deftype |__stringMin16Max24PatternAZaZ0922AZaZ0916| ()
  'common-lisp:string)
(common-lisp:deftype |__stringMin1Max100000| () 'common-lisp:string)
(common-lisp:deftype |__stringMin1Max20| () 'common-lisp:string)
(common-lisp:deftype |__stringMin1Max256| () 'common-lisp:string)
(common-lisp:deftype |__stringMin1Max50| () 'common-lisp:string)
(common-lisp:deftype |__stringMin1Max50PatternAZAZ09| () 'common-lisp:string)
(common-lisp:deftype |__stringMin1Max512PatternAZAZ09| () 'common-lisp:string)
(common-lisp:deftype |__stringMin24Max512PatternAZaZ0902| ()
  'common-lisp:string)
(common-lisp:deftype |__stringMin32Max32Pattern09aFAF32| () 'common-lisp:string)
(common-lisp:deftype |__stringMin36Max36Pattern09aFAF809aFAF409aFAF409aFAF409aFAF12|
                     ()
  'common-lisp:string)
(common-lisp:deftype |__stringMin3Max3Pattern1809aFAF09aEAE| ()
  'common-lisp:string)
(common-lisp:deftype |__stringMin3Max3PatternAZaZ3| () 'common-lisp:string)
(common-lisp:deftype |__stringMin6Max8Pattern09aFAF609aFAF2| ()
  'common-lisp:string)
(common-lisp:deftype |__stringMin9Max19PatternAZ26EastWestCentralNorthSouthEastWest1912|
                     ()
  'common-lisp:string)
(common-lisp:deftype |__stringPattern| () 'common-lisp:string)
(common-lisp:deftype |__stringPattern010920405090509092| () 'common-lisp:string)
(common-lisp:deftype |__stringPattern01D20305D205D| () 'common-lisp:string)
(common-lisp:deftype |__stringPattern0940191020191209301| ()
  'common-lisp:string)
(common-lisp:deftype |__stringPattern09aFAF809aFAF409aFAF409aFAF409aFAF12| ()
  'common-lisp:string)
(common-lisp:deftype |__stringPattern0xAFaF0908190908| () 'common-lisp:string)
(common-lisp:deftype |__stringPatternAZaZ0902| () 'common-lisp:string)
(common-lisp:deftype |__stringPatternAZaZ0932| () 'common-lisp:string)
(common-lisp:deftype |__stringPatternAZaZ23AZaZ| () 'common-lisp:string)
(common-lisp:deftype |__stringPatternArnAwsUsGovAcm| () 'common-lisp:string)
(common-lisp:deftype |__stringPatternArnAwsUsGovCnKmsAZ26EastWestCentralNorthSouthEastWest1912D12KeyAFAF098AFAF094AFAF094AFAF094AFAF0912MrkAFAF0932|
                     ()
  'common-lisp:string)
(common-lisp:deftype |__stringPatternDD| () 'common-lisp:string)
(common-lisp:deftype |__stringPatternHttps| () 'common-lisp:string)
(common-lisp:deftype |__stringPatternHttpsKantarmediaComFr| ()
  'common-lisp:string)
(common-lisp:deftype |__stringPatternIdentityAZaZ26AZaZ09163| ()
  'common-lisp:string)
(common-lisp:deftype |__stringPatternS3| () 'common-lisp:string)
(common-lisp:deftype |__stringPatternS3ASSETMAPXml| () 'common-lisp:string)
(common-lisp:deftype |__stringPatternS3Https| () 'common-lisp:string)
(common-lisp:deftype |__stringPatternSNManifestConfirmConditionNotificationNS|
                     ()
  'common-lisp:string)
(common-lisp:deftype |__stringPatternSNSignalProcessingNotificationNS| ()
  'common-lisp:string)
(common-lisp:deftype |__stringPatternW| () 'common-lisp:string)
(common-lisp:deftype |__stringPatternWS| () 'common-lisp:string)
(common-lisp:deftype |__timestampIso8601| () 'common-lisp:string)
(common-lisp:deftype |__timestampUnix| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun associate-certificate
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-associate-certificate-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconvert-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/2017-08-29/certificates"
                                                        "AssociateCertificate"
                                                        "2017-08-29"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'associate-certificate))
(common-lisp:progn
 (common-lisp:defun cancel-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-cancel-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconvert-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/2017-08-29/jobs/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "CancelJob"
                                                        "2017-08-29"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'cancel-job))
(common-lisp:progn
 (common-lisp:defun create-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key acceleration-settings billing-tags-source
                     client-request-token hop-destinations job-template
                     priority queue role settings simulate-reserved-queue
                     status-update-interval tags user-metadata)
   (common-lisp:declare
    (common-lisp:ignorable acceleration-settings billing-tags-source
     client-request-token hop-destinations job-template priority queue role
     settings simulate-reserved-queue status-update-interval tags
     user-metadata))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconvert-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/2017-08-29/jobs"
                                                        "CreateJob"
                                                        "2017-08-29"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-job))
(common-lisp:progn
 (common-lisp:defun create-job-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key acceleration-settings category
                     description hop-destinations name priority queue settings
                     status-update-interval tags)
   (common-lisp:declare
    (common-lisp:ignorable acceleration-settings category description
     hop-destinations name priority queue settings status-update-interval
     tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-job-template-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconvert-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/2017-08-29/jobTemplates"
                                                        "CreateJobTemplate"
                                                        "2017-08-29"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-job-template))
(common-lisp:progn
 (common-lisp:defun create-preset
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key category description name settings tags)
   (common-lisp:declare
    (common-lisp:ignorable category description name settings tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-preset-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconvert-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/2017-08-29/presets"
                                                        "CreatePreset"
                                                        "2017-08-29"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-preset))
(common-lisp:progn
 (common-lisp:defun create-queue
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key description name pricing-plan
                     reservation-plan-settings status tags)
   (common-lisp:declare
    (common-lisp:ignorable description name pricing-plan
     reservation-plan-settings status tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-queue-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconvert-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/2017-08-29/queues"
                                                        "CreateQueue"
                                                        "2017-08-29"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-queue))
(common-lisp:progn
 (common-lisp:defun delete-job-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-job-template-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconvert-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/2017-08-29/jobTemplates/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "DeleteJobTemplate"
                                                        "2017-08-29"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-job-template))
(common-lisp:progn
 (common-lisp:defun delete-policy ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'mediaconvert-request :method "DELETE" :path
                                "/2017-08-29/policy" :protocol :rest-json
                                :operation "DeletePolicy" :params
                                `(("Action" ,@"DeletePolicy")
                                  ("Version" ,@"2017-08-29"))))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'delete-policy))
(common-lisp:progn
 (common-lisp:defun delete-preset
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-preset-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconvert-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/2017-08-29/presets/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "DeletePreset"
                                                        "2017-08-29"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-preset))
(common-lisp:progn
 (common-lisp:defun delete-queue
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-queue-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconvert-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/2017-08-29/queues/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "DeleteQueue"
                                                        "2017-08-29"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-queue))
(common-lisp:progn
 (common-lisp:defun describe-endpoints
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results mode next-token)
   (common-lisp:declare (common-lisp:ignorable max-results mode next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-endpoints-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconvert-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/2017-08-29/endpoints"
                                                        "DescribeEndpoints"
                                                        "2017-08-29"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-endpoints))
(common-lisp:progn
 (common-lisp:defun disassociate-certificate
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-disassociate-certificate-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconvert-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/2017-08-29/certificates/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'arn))))
                                                        "DisassociateCertificate"
                                                        "2017-08-29"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'disassociate-certificate))
(common-lisp:progn
 (common-lisp:defun get-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconvert-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/2017-08-29/jobs/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "GetJob" "2017-08-29"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-job))
(common-lisp:progn
 (common-lisp:defun get-job-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-job-template-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconvert-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/2017-08-29/jobTemplates/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "GetJobTemplate"
                                                        "2017-08-29"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-job-template))
(common-lisp:progn
 (common-lisp:defun get-policy ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'mediaconvert-request :method "GET" :path
                                "/2017-08-29/policy" :protocol :rest-json
                                :operation "GetPolicy" :params
                                `(("Action" ,@"GetPolicy")
                                  ("Version" ,@"2017-08-29"))))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-policy))
(common-lisp:progn
 (common-lisp:defun get-preset
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-preset-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconvert-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/2017-08-29/presets/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "GetPreset"
                                                        "2017-08-29"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-preset))
(common-lisp:progn
 (common-lisp:defun get-queue
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-queue-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconvert-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/2017-08-29/queues/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "GetQueue"
                                                        "2017-08-29"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-queue))
(common-lisp:progn
 (common-lisp:defun list-job-templates
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key category list-by max-results next-token
                     order)
   (common-lisp:declare
    (common-lisp:ignorable category list-by max-results next-token order))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-job-templates-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconvert-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/2017-08-29/jobTemplates"
                                                        "ListJobTemplates"
                                                        "2017-08-29"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-job-templates))
(common-lisp:progn
 (common-lisp:defun list-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token order queue
                     status)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token order queue status))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-jobs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconvert-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/2017-08-29/jobs"
                                                        "ListJobs"
                                                        "2017-08-29"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-jobs))
(common-lisp:progn
 (common-lisp:defun list-presets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key category list-by max-results next-token
                     order)
   (common-lisp:declare
    (common-lisp:ignorable category list-by max-results next-token order))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-presets-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconvert-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/2017-08-29/presets"
                                                        "ListPresets"
                                                        "2017-08-29"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-presets))
(common-lisp:progn
 (common-lisp:defun list-queues
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key list-by max-results next-token order)
   (common-lisp:declare
    (common-lisp:ignorable list-by max-results next-token order))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-queues-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconvert-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/2017-08-29/queues"
                                                        "ListQueues"
                                                        "2017-08-29"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-queues))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconvert-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/2017-08-29/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'arn))))
                                                        "ListTagsForResource"
                                                        "2017-08-29"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun put-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key policy)
   (common-lisp:declare (common-lisp:ignorable policy))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconvert-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        "/2017-08-29/policy"
                                                        "PutPolicy"
                                                        "2017-08-29"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-policy))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn tags)
   (common-lisp:declare (common-lisp:ignorable arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconvert-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/2017-08-29/tags"
                                                        "TagResource"
                                                        "2017-08-29"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconvert-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/2017-08-29/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'arn))))
                                                        "UntagResource"
                                                        "2017-08-29"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-job-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key acceleration-settings category
                     description hop-destinations name priority queue settings
                     status-update-interval)
   (common-lisp:declare
    (common-lisp:ignorable acceleration-settings category description
     hop-destinations name priority queue settings status-update-interval))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-job-template-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconvert-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/2017-08-29/jobTemplates/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "UpdateJobTemplate"
                                                        "2017-08-29"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-job-template))
(common-lisp:progn
 (common-lisp:defun update-preset
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key category description name settings)
   (common-lisp:declare
    (common-lisp:ignorable category description name settings))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-preset-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconvert-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/2017-08-29/presets/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "UpdatePreset"
                                                        "2017-08-29"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-preset))
(common-lisp:progn
 (common-lisp:defun update-queue
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key description name
                     reservation-plan-settings status)
   (common-lisp:declare
    (common-lisp:ignorable description name reservation-plan-settings status))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-queue-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconvert-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/2017-08-29/queues/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "UpdateQueue"
                                                        "2017-08-29"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-queue))
