;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/mediaconnect/api
  (:use)
  (:nicknames #:aws/mediaconnect)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/mediaconnect/api)
(common-lisp:progn
 (common-lisp:defclass mediaconnect-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "mediaconnect"))
 (common-lisp:export 'mediaconnect-request))
(common-lisp:progn
 (common-lisp:define-condition mediaconnect-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'mediaconnect-error))
(common-lisp:defvar *error-map*
  '(("AddFlowOutputs420Exception" . add-flow-outputs420exception)
    ("BadRequestException" . bad-request-exception)
    ("CreateFlow420Exception" . create-flow420exception)
    ("ForbiddenException" . forbidden-exception)
    ("GrantFlowEntitlements420Exception" . grant-flow-entitlements420exception)
    ("InternalServerErrorException" . internal-server-error-exception)
    ("NotFoundException" . not-found-exception)
    ("ServiceUnavailableException" . service-unavailable-exception)
    ("TooManyRequestsException" . too-many-requests-exception)))
(common-lisp:progn
 (common-lisp:defstruct
     (add-flow-media-streams-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-add-flow-media-streams-request-"))
   (flow-arn (common-lisp:error ":flow-arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (media-streams (common-lisp:error ":media-streams is required") :type
    (common-lisp:or |__listOfAddMediaStreamRequest| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-flow-media-streams-request
                    'make-add-flow-media-streams-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          add-flow-media-streams-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          add-flow-media-streams-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'media-streams))
      (common-lisp:list
       (common-lisp:cons "MediaStreams"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          add-flow-media-streams-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (add-flow-media-streams-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-add-flow-media-streams-response-"))
   (flow-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (media-streams common-lisp:nil :type
    (common-lisp:or |__listOfMediaStream| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-flow-media-streams-response
                    'make-add-flow-media-streams-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          add-flow-media-streams-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          add-flow-media-streams-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flow-arn))
      (common-lisp:list
       (common-lisp:cons "FlowArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'media-streams))
      (common-lisp:list
       (common-lisp:cons "MediaStreams"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          add-flow-media-streams-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition add-flow-outputs420exception
     (mediaconnect-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       add-flow-outputs420exception-message)))
 (common-lisp:export
  (common-lisp:list 'add-flow-outputs420exception
                    'add-flow-outputs420exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (add-flow-outputs-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-add-flow-outputs-request-"))
   (flow-arn (common-lisp:error ":flow-arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (outputs (common-lisp:error ":outputs is required") :type
    (common-lisp:or |__listOfAddOutputRequest| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-flow-outputs-request 'make-add-flow-outputs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          add-flow-outputs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          add-flow-outputs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'outputs))
      (common-lisp:list
       (common-lisp:cons "Outputs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          add-flow-outputs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (add-flow-outputs-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-add-flow-outputs-response-"))
   (flow-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (outputs common-lisp:nil :type
    (common-lisp:or |__listOfOutput| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-flow-outputs-response
                    'make-add-flow-outputs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          add-flow-outputs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          add-flow-outputs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flow-arn))
      (common-lisp:list
       (common-lisp:cons "FlowArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'outputs))
      (common-lisp:list
       (common-lisp:cons "Outputs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          add-flow-outputs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (add-flow-sources-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-add-flow-sources-request-"))
   (flow-arn (common-lisp:error ":flow-arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (sources (common-lisp:error ":sources is required") :type
    (common-lisp:or |__listOfSetSourceRequest| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-flow-sources-request 'make-add-flow-sources-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          add-flow-sources-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          add-flow-sources-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sources))
      (common-lisp:list
       (common-lisp:cons "Sources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          add-flow-sources-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (add-flow-sources-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-add-flow-sources-response-"))
   (flow-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (sources common-lisp:nil :type
    (common-lisp:or |__listOfSource| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-flow-sources-response
                    'make-add-flow-sources-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          add-flow-sources-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          add-flow-sources-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flow-arn))
      (common-lisp:list
       (common-lisp:cons "FlowArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sources))
      (common-lisp:list
       (common-lisp:cons "Sources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          add-flow-sources-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (add-flow-vpc-interfaces-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-add-flow-vpc-interfaces-request-"))
   (flow-arn (common-lisp:error ":flow-arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (vpc-interfaces (common-lisp:error ":vpc-interfaces is required") :type
    (common-lisp:or |__listOfVpcInterfaceRequest| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-flow-vpc-interfaces-request
                    'make-add-flow-vpc-interfaces-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          add-flow-vpc-interfaces-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          add-flow-vpc-interfaces-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-interfaces))
      (common-lisp:list
       (common-lisp:cons "VpcInterfaces"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          add-flow-vpc-interfaces-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (add-flow-vpc-interfaces-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-add-flow-vpc-interfaces-response-"))
   (flow-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (vpc-interfaces common-lisp:nil :type
    (common-lisp:or |__listOfVpcInterface| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-flow-vpc-interfaces-response
                    'make-add-flow-vpc-interfaces-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          add-flow-vpc-interfaces-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          add-flow-vpc-interfaces-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flow-arn))
      (common-lisp:list
       (common-lisp:cons "FlowArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-interfaces))
      (common-lisp:list
       (common-lisp:cons "VpcInterfaces"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          add-flow-vpc-interfaces-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (add-maintenance (:copier common-lisp:nil)
      (:conc-name "struct-shape-add-maintenance-"))
   (maintenance-day (common-lisp:error ":maintenance-day is required") :type
    (common-lisp:or maintenance-day common-lisp:null))
   (maintenance-start-hour
    (common-lisp:error ":maintenance-start-hour is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'add-maintenance 'make-add-maintenance))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input add-maintenance))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input add-maintenance))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'maintenance-day))
      (common-lisp:list
       (common-lisp:cons "MaintenanceDay"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'maintenance-start-hour))
      (common-lisp:list
       (common-lisp:cons "MaintenanceStartHour"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input add-maintenance))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (add-media-stream-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-add-media-stream-request-"))
   (attributes common-lisp:nil :type
    (common-lisp:or media-stream-attributes-request common-lisp:null))
   (clock-rate common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (media-stream-id (common-lisp:error ":media-stream-id is required") :type
    (common-lisp:or |__integer| common-lisp:null))
   (media-stream-name (common-lisp:error ":media-stream-name is required")
    :type (common-lisp:or |__string| common-lisp:null))
   (media-stream-type (common-lisp:error ":media-stream-type is required")
    :type (common-lisp:or media-stream-type common-lisp:null))
   (video-format common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-media-stream-request 'make-add-media-stream-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          add-media-stream-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          add-media-stream-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'clock-rate))
      (common-lisp:list
       (common-lisp:cons "ClockRate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'media-stream-id))
      (common-lisp:list
       (common-lisp:cons "MediaStreamId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'media-stream-name))
      (common-lisp:list
       (common-lisp:cons "MediaStreamName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'media-stream-type))
      (common-lisp:list
       (common-lisp:cons "MediaStreamType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'video-format))
      (common-lisp:list
       (common-lisp:cons "VideoFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          add-media-stream-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (add-output-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-add-output-request-"))
   (cidr-allow-list common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (destination common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (encryption common-lisp:nil :type
    (common-lisp:or encryption common-lisp:null))
   (max-latency common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (media-stream-output-configurations common-lisp:nil :type
    (common-lisp:or |__listOfMediaStreamOutputConfigurationRequest|
                    common-lisp:null))
   (min-latency common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (port common-lisp:nil :type (common-lisp:or |__integer| common-lisp:null))
   (protocol (common-lisp:error ":protocol is required") :type
    (common-lisp:or protocol common-lisp:null))
   (remote-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (sender-control-port common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (smoothing-latency common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (stream-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (vpc-interface-attachment common-lisp:nil :type
    (common-lisp:or vpc-interface-attachment common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-output-request 'make-add-output-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input add-output-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input add-output-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cidr-allow-list))
      (common-lisp:list
       (common-lisp:cons "CidrAllowList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination))
      (common-lisp:list
       (common-lisp:cons "Destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption))
      (common-lisp:list
       (common-lisp:cons "Encryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-latency))
      (common-lisp:list
       (common-lisp:cons "MaxLatency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'media-stream-output-configurations))
      (common-lisp:list
       (common-lisp:cons "MediaStreamOutputConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'min-latency))
      (common-lisp:list
       (common-lisp:cons "MinLatency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'port))
      (common-lisp:list
       (common-lisp:cons "Port"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol))
      (common-lisp:list
       (common-lisp:cons "Protocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'remote-id))
      (common-lisp:list
       (common-lisp:cons "RemoteId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sender-control-port))
      (common-lisp:list
       (common-lisp:cons "SenderControlPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'smoothing-latency))
      (common-lisp:list
       (common-lisp:cons "SmoothingLatency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-id))
      (common-lisp:list
       (common-lisp:cons "StreamId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'vpc-interface-attachment))
      (common-lisp:list
       (common-lisp:cons "VpcInterfaceAttachment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input add-output-request))
   common-lisp:nil))
(common-lisp:deftype algorithm () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition bad-request-exception
     (mediaconnect-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       bad-request-exception-message)))
 (common-lisp:export
  (common-lisp:list 'bad-request-exception 'bad-request-exception-message)))
(common-lisp:deftype colorimetry () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition create-flow420exception
     (mediaconnect-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       create-flow420exception-message)))
 (common-lisp:export
  (common-lisp:list 'create-flow420exception 'create-flow420exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (create-flow-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-flow-request-"))
   (availability-zone common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (entitlements common-lisp:nil :type
    (common-lisp:or |__listOfGrantEntitlementRequest| common-lisp:null))
   (media-streams common-lisp:nil :type
    (common-lisp:or |__listOfAddMediaStreamRequest| common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (outputs common-lisp:nil :type
    (common-lisp:or |__listOfAddOutputRequest| common-lisp:null))
   (source common-lisp:nil :type
    (common-lisp:or set-source-request common-lisp:null))
   (source-failover-config common-lisp:nil :type
    (common-lisp:or failover-config common-lisp:null))
   (sources common-lisp:nil :type
    (common-lisp:or |__listOfSetSourceRequest| common-lisp:null))
   (vpc-interfaces common-lisp:nil :type
    (common-lisp:or |__listOfVpcInterfaceRequest| common-lisp:null))
   (maintenance common-lisp:nil :type
    (common-lisp:or add-maintenance common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-flow-request 'make-create-flow-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-flow-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-flow-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'availability-zone))
      (common-lisp:list
       (common-lisp:cons "AvailabilityZone"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entitlements))
      (common-lisp:list
       (common-lisp:cons "Entitlements"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'media-streams))
      (common-lisp:list
       (common-lisp:cons "MediaStreams"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'outputs))
      (common-lisp:list
       (common-lisp:cons "Outputs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source))
      (common-lisp:list
       (common-lisp:cons "Source"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-failover-config))
      (common-lisp:list
       (common-lisp:cons "SourceFailoverConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sources))
      (common-lisp:list
       (common-lisp:cons "Sources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-interfaces))
      (common-lisp:list
       (common-lisp:cons "VpcInterfaces"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'maintenance))
      (common-lisp:list
       (common-lisp:cons "Maintenance"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-flow-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-flow-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-flow-response-"))
   (flow common-lisp:nil :type (common-lisp:or flow common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-flow-response 'make-create-flow-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-flow-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-flow-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flow))
      (common-lisp:list
       (common-lisp:cons "Flow"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-flow-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-flow-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-flow-request-"))
   (flow-arn (common-lisp:error ":flow-arn is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-flow-request 'make-delete-flow-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-flow-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-flow-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-flow-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-flow-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-flow-response-"))
   (flow-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-flow-response 'make-delete-flow-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-flow-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-flow-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flow-arn))
      (common-lisp:list
       (common-lisp:cons "FlowArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-flow-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-flow-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-flow-request-"))
   (flow-arn (common-lisp:error ":flow-arn is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-flow-request 'make-describe-flow-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-flow-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-flow-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-flow-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-flow-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-flow-response-"))
   (flow common-lisp:nil :type (common-lisp:or flow common-lisp:null))
   (messages common-lisp:nil :type (common-lisp:or messages common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-flow-response 'make-describe-flow-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-flow-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-flow-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flow))
      (common-lisp:list
       (common-lisp:cons "Flow"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'messages))
      (common-lisp:list
       (common-lisp:cons "Messages"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-flow-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-offering-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-offering-request-"))
   (offering-arn (common-lisp:error ":offering-arn is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-offering-request
                    'make-describe-offering-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-offering-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-offering-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-offering-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-offering-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-offering-response-"))
   (offering common-lisp:nil :type (common-lisp:or offering common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-offering-response
                    'make-describe-offering-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-offering-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-offering-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'offering))
      (common-lisp:list
       (common-lisp:cons "Offering"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-offering-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-reservation-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-reservation-request-"))
   (reservation-arn (common-lisp:error ":reservation-arn is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-reservation-request
                    'make-describe-reservation-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-reservation-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-reservation-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-reservation-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-reservation-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-reservation-response-"))
   (reservation common-lisp:nil :type
    (common-lisp:or reservation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-reservation-response
                    'make-describe-reservation-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-reservation-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-reservation-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reservation))
      (common-lisp:list
       (common-lisp:cons "Reservation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-reservation-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (destination-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-destination-configuration-"))
   (destination-ip (common-lisp:error ":destination-ip is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (destination-port (common-lisp:error ":destination-port is required") :type
    (common-lisp:or |__integer| common-lisp:null))
   (interface (common-lisp:error ":interface is required") :type
    (common-lisp:or interface common-lisp:null))
   (outbound-ip (common-lisp:error ":outbound-ip is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'destination-configuration
                    'make-destination-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          destination-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          destination-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination-ip))
      (common-lisp:list
       (common-lisp:cons "DestinationIp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination-port))
      (common-lisp:list
       (common-lisp:cons "DestinationPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'interface))
      (common-lisp:list
       (common-lisp:cons "Interface"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'outbound-ip))
      (common-lisp:list
       (common-lisp:cons "OutboundIp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          destination-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (destination-configuration-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-destination-configuration-request-"))
   (destination-ip (common-lisp:error ":destination-ip is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (destination-port (common-lisp:error ":destination-port is required") :type
    (common-lisp:or |__integer| common-lisp:null))
   (interface (common-lisp:error ":interface is required") :type
    (common-lisp:or interface-request common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'destination-configuration-request
                    'make-destination-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          destination-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          destination-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination-ip))
      (common-lisp:list
       (common-lisp:cons "DestinationIp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination-port))
      (common-lisp:list
       (common-lisp:cons "DestinationPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'interface))
      (common-lisp:list
       (common-lisp:cons "Interface"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          destination-configuration-request))
   common-lisp:nil))
(common-lisp:deftype duration-units () 'common-lisp:string)
(common-lisp:deftype encoder-profile () 'common-lisp:string)
(common-lisp:deftype encoding-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (encoding-parameters (:copier common-lisp:nil)
      (:conc-name "struct-shape-encoding-parameters-"))
   (compression-factor (common-lisp:error ":compression-factor is required")
    :type (common-lisp:or |__double| common-lisp:null))
   (encoder-profile (common-lisp:error ":encoder-profile is required") :type
    (common-lisp:or encoder-profile common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'encoding-parameters 'make-encoding-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input encoding-parameters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input encoding-parameters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'compression-factor))
      (common-lisp:list
       (common-lisp:cons "CompressionFactor"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encoder-profile))
      (common-lisp:list
       (common-lisp:cons "EncoderProfile"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input encoding-parameters))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (encoding-parameters-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-encoding-parameters-request-"))
   (compression-factor (common-lisp:error ":compression-factor is required")
    :type (common-lisp:or |__double| common-lisp:null))
   (encoder-profile (common-lisp:error ":encoder-profile is required") :type
    (common-lisp:or encoder-profile common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'encoding-parameters-request
                    'make-encoding-parameters-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          encoding-parameters-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          encoding-parameters-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'compression-factor))
      (common-lisp:list
       (common-lisp:cons "CompressionFactor"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encoder-profile))
      (common-lisp:list
       (common-lisp:cons "EncoderProfile"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          encoding-parameters-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (encryption (:copier common-lisp:nil)
      (:conc-name "struct-shape-encryption-"))
   (algorithm common-lisp:nil :type
    (common-lisp:or algorithm common-lisp:null))
   (constant-initialization-vector common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (device-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (key-type common-lisp:nil :type (common-lisp:or key-type common-lisp:null))
   (region common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (resource-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (role-arn (common-lisp:error ":role-arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (secret-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (url common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'encryption 'make-encryption))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input encryption))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input encryption))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'algorithm))
      (common-lisp:list
       (common-lisp:cons "Algorithm"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'constant-initialization-vector))
      (common-lisp:list
       (common-lisp:cons "ConstantInitializationVector"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-id))
      (common-lisp:list
       (common-lisp:cons "DeviceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-type))
      (common-lisp:list
       (common-lisp:cons "KeyType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'region))
      (common-lisp:list
       (common-lisp:cons "Region"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-id))
      (common-lisp:list
       (common-lisp:cons "ResourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'secret-arn))
      (common-lisp:list
       (common-lisp:cons "SecretArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'url))
      (common-lisp:list
       (common-lisp:cons "Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input encryption))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (entitlement (:copier common-lisp:nil)
      (:conc-name "struct-shape-entitlement-"))
   (data-transfer-subscriber-fee-percent common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (encryption common-lisp:nil :type
    (common-lisp:or encryption common-lisp:null))
   (entitlement-arn (common-lisp:error ":entitlement-arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (entitlement-status common-lisp:nil :type
    (common-lisp:or entitlement-status common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (subscribers (common-lisp:error ":subscribers is required") :type
    (common-lisp:or |__listOf__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'entitlement 'make-entitlement))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input entitlement))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input entitlement))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-transfer-subscriber-fee-percent))
      (common-lisp:list
       (common-lisp:cons "DataTransferSubscriberFeePercent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption))
      (common-lisp:list
       (common-lisp:cons "Encryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entitlement-arn))
      (common-lisp:list
       (common-lisp:cons "EntitlementArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entitlement-status))
      (common-lisp:list
       (common-lisp:cons "EntitlementStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscribers))
      (common-lisp:list
       (common-lisp:cons "Subscribers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input entitlement))
   common-lisp:nil))
(common-lisp:deftype entitlement-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (failover-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-failover-config-"))
   (failover-mode common-lisp:nil :type
    (common-lisp:or failover-mode common-lisp:null))
   (recovery-window common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (source-priority common-lisp:nil :type
    (common-lisp:or source-priority common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or state common-lisp:null)))
 (common-lisp:export (common-lisp:list 'failover-config 'make-failover-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input failover-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input failover-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failover-mode))
      (common-lisp:list
       (common-lisp:cons "FailoverMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recovery-window))
      (common-lisp:list
       (common-lisp:cons "RecoveryWindow"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-priority))
      (common-lisp:list
       (common-lisp:cons "SourcePriority"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input failover-config))
   common-lisp:nil))
(common-lisp:deftype failover-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (flow (:copier common-lisp:nil) (:conc-name "struct-shape-flow-"))
   (availability-zone (common-lisp:error ":availability-zone is required")
    :type (common-lisp:or |__string| common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (egress-ip common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (entitlements (common-lisp:error ":entitlements is required") :type
    (common-lisp:or |__listOfEntitlement| common-lisp:null))
   (flow-arn (common-lisp:error ":flow-arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (media-streams common-lisp:nil :type
    (common-lisp:or |__listOfMediaStream| common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (outputs (common-lisp:error ":outputs is required") :type
    (common-lisp:or |__listOfOutput| common-lisp:null))
   (source (common-lisp:error ":source is required") :type
    (common-lisp:or source common-lisp:null))
   (source-failover-config common-lisp:nil :type
    (common-lisp:or failover-config common-lisp:null))
   (sources common-lisp:nil :type
    (common-lisp:or |__listOfSource| common-lisp:null))
   (status (common-lisp:error ":status is required") :type
    (common-lisp:or status common-lisp:null))
   (vpc-interfaces common-lisp:nil :type
    (common-lisp:or |__listOfVpcInterface| common-lisp:null))
   (maintenance common-lisp:nil :type
    (common-lisp:or maintenance common-lisp:null)))
 (common-lisp:export (common-lisp:list 'flow 'make-flow))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input flow))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input flow))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'availability-zone))
      (common-lisp:list
       (common-lisp:cons "AvailabilityZone"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'egress-ip))
      (common-lisp:list
       (common-lisp:cons "EgressIp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entitlements))
      (common-lisp:list
       (common-lisp:cons "Entitlements"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flow-arn))
      (common-lisp:list
       (common-lisp:cons "FlowArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'media-streams))
      (common-lisp:list
       (common-lisp:cons "MediaStreams"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'outputs))
      (common-lisp:list
       (common-lisp:cons "Outputs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source))
      (common-lisp:list
       (common-lisp:cons "Source"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-failover-config))
      (common-lisp:list
       (common-lisp:cons "SourceFailoverConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sources))
      (common-lisp:list
       (common-lisp:cons "Sources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-interfaces))
      (common-lisp:list
       (common-lisp:cons "VpcInterfaces"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'maintenance))
      (common-lisp:list
       (common-lisp:cons "Maintenance"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input flow))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (fmtp (:copier common-lisp:nil) (:conc-name "struct-shape-fmtp-"))
   (channel-order common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (colorimetry common-lisp:nil :type
    (common-lisp:or colorimetry common-lisp:null))
   (exact-framerate common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (par common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (range common-lisp:nil :type (common-lisp:or range common-lisp:null))
   (scan-mode common-lisp:nil :type
    (common-lisp:or scan-mode common-lisp:null))
   (tcs common-lisp:nil :type (common-lisp:or tcs common-lisp:null)))
 (common-lisp:export (common-lisp:list 'fmtp 'make-fmtp))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input fmtp))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input fmtp))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-order))
      (common-lisp:list
       (common-lisp:cons "ChannelOrder"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'colorimetry))
      (common-lisp:list
       (common-lisp:cons "Colorimetry"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'exact-framerate))
      (common-lisp:list
       (common-lisp:cons "ExactFramerate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'par))
      (common-lisp:list
       (common-lisp:cons "Par"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'range))
      (common-lisp:list
       (common-lisp:cons "Range"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scan-mode))
      (common-lisp:list
       (common-lisp:cons "ScanMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tcs))
      (common-lisp:list
       (common-lisp:cons "Tcs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input fmtp))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (fmtp-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-fmtp-request-"))
   (channel-order common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (colorimetry common-lisp:nil :type
    (common-lisp:or colorimetry common-lisp:null))
   (exact-framerate common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (par common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (range common-lisp:nil :type (common-lisp:or range common-lisp:null))
   (scan-mode common-lisp:nil :type
    (common-lisp:or scan-mode common-lisp:null))
   (tcs common-lisp:nil :type (common-lisp:or tcs common-lisp:null)))
 (common-lisp:export (common-lisp:list 'fmtp-request 'make-fmtp-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input fmtp-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input fmtp-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-order))
      (common-lisp:list
       (common-lisp:cons "ChannelOrder"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'colorimetry))
      (common-lisp:list
       (common-lisp:cons "Colorimetry"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'exact-framerate))
      (common-lisp:list
       (common-lisp:cons "ExactFramerate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'par))
      (common-lisp:list
       (common-lisp:cons "Par"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'range))
      (common-lisp:list
       (common-lisp:cons "Range"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scan-mode))
      (common-lisp:list
       (common-lisp:cons "ScanMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tcs))
      (common-lisp:list
       (common-lisp:cons "Tcs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input fmtp-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition forbidden-exception
     (mediaconnect-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       forbidden-exception-message)))
 (common-lisp:export
  (common-lisp:list 'forbidden-exception 'forbidden-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (grant-entitlement-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-grant-entitlement-request-"))
   (data-transfer-subscriber-fee-percent common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (encryption common-lisp:nil :type
    (common-lisp:or encryption common-lisp:null))
   (entitlement-status common-lisp:nil :type
    (common-lisp:or entitlement-status common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (subscribers (common-lisp:error ":subscribers is required") :type
    (common-lisp:or |__listOf__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'grant-entitlement-request
                    'make-grant-entitlement-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          grant-entitlement-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          grant-entitlement-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-transfer-subscriber-fee-percent))
      (common-lisp:list
       (common-lisp:cons "DataTransferSubscriberFeePercent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption))
      (common-lisp:list
       (common-lisp:cons "Encryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entitlement-status))
      (common-lisp:list
       (common-lisp:cons "EntitlementStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscribers))
      (common-lisp:list
       (common-lisp:cons "Subscribers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          grant-entitlement-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition grant-flow-entitlements420exception
     (mediaconnect-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       grant-flow-entitlements420exception-message)))
 (common-lisp:export
  (common-lisp:list 'grant-flow-entitlements420exception
                    'grant-flow-entitlements420exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (grant-flow-entitlements-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-grant-flow-entitlements-request-"))
   (entitlements (common-lisp:error ":entitlements is required") :type
    (common-lisp:or |__listOfGrantEntitlementRequest| common-lisp:null))
   (flow-arn (common-lisp:error ":flow-arn is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'grant-flow-entitlements-request
                    'make-grant-flow-entitlements-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          grant-flow-entitlements-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          grant-flow-entitlements-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entitlements))
      (common-lisp:list
       (common-lisp:cons "Entitlements"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          grant-flow-entitlements-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (grant-flow-entitlements-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-grant-flow-entitlements-response-"))
   (entitlements common-lisp:nil :type
    (common-lisp:or |__listOfEntitlement| common-lisp:null))
   (flow-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'grant-flow-entitlements-response
                    'make-grant-flow-entitlements-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          grant-flow-entitlements-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          grant-flow-entitlements-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entitlements))
      (common-lisp:list
       (common-lisp:cons "Entitlements"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flow-arn))
      (common-lisp:list
       (common-lisp:cons "FlowArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          grant-flow-entitlements-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (input-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-input-configuration-"))
   (input-ip (common-lisp:error ":input-ip is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (input-port (common-lisp:error ":input-port is required") :type
    (common-lisp:or |__integer| common-lisp:null))
   (interface (common-lisp:error ":interface is required") :type
    (common-lisp:or interface common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'input-configuration 'make-input-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input input-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input input-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-ip))
      (common-lisp:list
       (common-lisp:cons "InputIp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-port))
      (common-lisp:list
       (common-lisp:cons "InputPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'interface))
      (common-lisp:list
       (common-lisp:cons "Interface"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input input-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (input-configuration-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-input-configuration-request-"))
   (input-port (common-lisp:error ":input-port is required") :type
    (common-lisp:or |__integer| common-lisp:null))
   (interface (common-lisp:error ":interface is required") :type
    (common-lisp:or interface-request common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'input-configuration-request
                    'make-input-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          input-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          input-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-port))
      (common-lisp:list
       (common-lisp:cons "InputPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'interface))
      (common-lisp:list
       (common-lisp:cons "Interface"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          input-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (interface (:copier common-lisp:nil)
      (:conc-name "struct-shape-interface-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'interface 'make-interface))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input interface))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input interface))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input interface))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (interface-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-interface-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'interface-request 'make-interface-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input interface-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input interface-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input interface-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition internal-server-error-exception
     (mediaconnect-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-error-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-error-exception
                    'internal-server-error-exception-message)))
(common-lisp:deftype key-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (list-entitlements-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-entitlements-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-entitlements-request
                    'make-list-entitlements-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-entitlements-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-entitlements-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-entitlements-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-entitlements-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-entitlements-response-"))
   (entitlements common-lisp:nil :type
    (common-lisp:or |__listOfListedEntitlement| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-entitlements-response
                    'make-list-entitlements-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-entitlements-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-entitlements-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entitlements))
      (common-lisp:list
       (common-lisp:cons "Entitlements"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-entitlements-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-flows-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-flows-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-flows-request 'make-list-flows-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-flows-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-flows-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-flows-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-flows-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-flows-response-"))
   (flows common-lisp:nil :type
    (common-lisp:or |__listOfListedFlow| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-flows-response 'make-list-flows-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-flows-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-flows-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flows))
      (common-lisp:list
       (common-lisp:cons "Flows"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-flows-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-offerings-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-offerings-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-offerings-request 'make-list-offerings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-offerings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-offerings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-offerings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-offerings-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-offerings-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (offerings common-lisp:nil :type
    (common-lisp:or |__listOfOffering| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-offerings-response 'make-list-offerings-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-offerings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-offerings-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'offerings))
      (common-lisp:list
       (common-lisp:cons "Offerings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-offerings-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-reservations-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-reservations-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-reservations-request
                    'make-list-reservations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-reservations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-reservations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-reservations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-reservations-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-reservations-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (reservations common-lisp:nil :type
    (common-lisp:or |__listOfReservation| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-reservations-response
                    'make-list-reservations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-reservations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-reservations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reservations))
      (common-lisp:list
       (common-lisp:cons "Reservations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-reservations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-response-"))
   (tags common-lisp:nil :type
    (common-lisp:or |__mapOf__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (listed-entitlement (:copier common-lisp:nil)
      (:conc-name "struct-shape-listed-entitlement-"))
   (data-transfer-subscriber-fee-percent common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (entitlement-arn (common-lisp:error ":entitlement-arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (entitlement-name (common-lisp:error ":entitlement-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'listed-entitlement 'make-listed-entitlement))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input listed-entitlement))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input listed-entitlement))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-transfer-subscriber-fee-percent))
      (common-lisp:list
       (common-lisp:cons "DataTransferSubscriberFeePercent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entitlement-arn))
      (common-lisp:list
       (common-lisp:cons "EntitlementArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entitlement-name))
      (common-lisp:list
       (common-lisp:cons "EntitlementName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input listed-entitlement))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (listed-flow (:copier common-lisp:nil)
      (:conc-name "struct-shape-listed-flow-"))
   (availability-zone (common-lisp:error ":availability-zone is required")
    :type (common-lisp:or |__string| common-lisp:null))
   (description (common-lisp:error ":description is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (flow-arn (common-lisp:error ":flow-arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (source-type (common-lisp:error ":source-type is required") :type
    (common-lisp:or source-type common-lisp:null))
   (status (common-lisp:error ":status is required") :type
    (common-lisp:or status common-lisp:null))
   (maintenance common-lisp:nil :type
    (common-lisp:or maintenance common-lisp:null)))
 (common-lisp:export (common-lisp:list 'listed-flow 'make-listed-flow))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input listed-flow))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input listed-flow))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'availability-zone))
      (common-lisp:list
       (common-lisp:cons "AvailabilityZone"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flow-arn))
      (common-lisp:list
       (common-lisp:cons "FlowArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-type))
      (common-lisp:list
       (common-lisp:cons "SourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'maintenance))
      (common-lisp:list
       (common-lisp:cons "Maintenance"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input listed-flow))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (maintenance (:copier common-lisp:nil)
      (:conc-name "struct-shape-maintenance-"))
   (maintenance-day common-lisp:nil :type
    (common-lisp:or maintenance-day common-lisp:null))
   (maintenance-deadline common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (maintenance-scheduled-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (maintenance-start-hour common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'maintenance 'make-maintenance))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input maintenance))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input maintenance))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'maintenance-day))
      (common-lisp:list
       (common-lisp:cons "MaintenanceDay"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'maintenance-deadline))
      (common-lisp:list
       (common-lisp:cons "MaintenanceDeadline"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'maintenance-scheduled-date))
      (common-lisp:list
       (common-lisp:cons "MaintenanceScheduledDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'maintenance-start-hour))
      (common-lisp:list
       (common-lisp:cons "MaintenanceStartHour"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input maintenance))
   common-lisp:nil))
(common-lisp:deftype maintenance-day () 'common-lisp:string)
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (media-stream (:copier common-lisp:nil)
      (:conc-name "struct-shape-media-stream-"))
   (attributes common-lisp:nil :type
    (common-lisp:or media-stream-attributes common-lisp:null))
   (clock-rate common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (fmt (common-lisp:error ":fmt is required") :type
    (common-lisp:or |__integer| common-lisp:null))
   (media-stream-id (common-lisp:error ":media-stream-id is required") :type
    (common-lisp:or |__integer| common-lisp:null))
   (media-stream-name (common-lisp:error ":media-stream-name is required")
    :type (common-lisp:or |__string| common-lisp:null))
   (media-stream-type (common-lisp:error ":media-stream-type is required")
    :type (common-lisp:or media-stream-type common-lisp:null))
   (video-format common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'media-stream 'make-media-stream))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input media-stream))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input media-stream))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'clock-rate))
      (common-lisp:list
       (common-lisp:cons "ClockRate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fmt))
      (common-lisp:list
       (common-lisp:cons "Fmt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'media-stream-id))
      (common-lisp:list
       (common-lisp:cons "MediaStreamId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'media-stream-name))
      (common-lisp:list
       (common-lisp:cons "MediaStreamName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'media-stream-type))
      (common-lisp:list
       (common-lisp:cons "MediaStreamType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'video-format))
      (common-lisp:list
       (common-lisp:cons "VideoFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input media-stream))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (media-stream-attributes (:copier common-lisp:nil)
      (:conc-name "struct-shape-media-stream-attributes-"))
   (fmtp (common-lisp:error ":fmtp is required") :type
    (common-lisp:or fmtp common-lisp:null))
   (lang common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'media-stream-attributes 'make-media-stream-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          media-stream-attributes))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          media-stream-attributes))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fmtp))
      (common-lisp:list
       (common-lisp:cons "Fmtp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lang))
      (common-lisp:list
       (common-lisp:cons "Lang"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          media-stream-attributes))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (media-stream-attributes-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-media-stream-attributes-request-"))
   (fmtp common-lisp:nil :type (common-lisp:or fmtp-request common-lisp:null))
   (lang common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'media-stream-attributes-request
                    'make-media-stream-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          media-stream-attributes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          media-stream-attributes-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fmtp))
      (common-lisp:list
       (common-lisp:cons "Fmtp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lang))
      (common-lisp:list
       (common-lisp:cons "Lang"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          media-stream-attributes-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (media-stream-output-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-media-stream-output-configuration-"))
   (destination-configurations common-lisp:nil :type
    (common-lisp:or |__listOfDestinationConfiguration| common-lisp:null))
   (encoding-name (common-lisp:error ":encoding-name is required") :type
    (common-lisp:or encoding-name common-lisp:null))
   (encoding-parameters common-lisp:nil :type
    (common-lisp:or encoding-parameters common-lisp:null))
   (media-stream-name (common-lisp:error ":media-stream-name is required")
    :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'media-stream-output-configuration
                    'make-media-stream-output-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          media-stream-output-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          media-stream-output-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'destination-configurations))
      (common-lisp:list
       (common-lisp:cons "DestinationConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encoding-name))
      (common-lisp:list
       (common-lisp:cons "EncodingName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encoding-parameters))
      (common-lisp:list
       (common-lisp:cons "EncodingParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'media-stream-name))
      (common-lisp:list
       (common-lisp:cons "MediaStreamName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          media-stream-output-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (media-stream-output-configuration-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-media-stream-output-configuration-request-"))
   (destination-configurations common-lisp:nil :type
    (common-lisp:or |__listOfDestinationConfigurationRequest|
                    common-lisp:null))
   (encoding-name (common-lisp:error ":encoding-name is required") :type
    (common-lisp:or encoding-name common-lisp:null))
   (encoding-parameters common-lisp:nil :type
    (common-lisp:or encoding-parameters-request common-lisp:null))
   (media-stream-name (common-lisp:error ":media-stream-name is required")
    :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'media-stream-output-configuration-request
                    'make-media-stream-output-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          media-stream-output-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          media-stream-output-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'destination-configurations))
      (common-lisp:list
       (common-lisp:cons "DestinationConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encoding-name))
      (common-lisp:list
       (common-lisp:cons "EncodingName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encoding-parameters))
      (common-lisp:list
       (common-lisp:cons "EncodingParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'media-stream-name))
      (common-lisp:list
       (common-lisp:cons "MediaStreamName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          media-stream-output-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (media-stream-source-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-media-stream-source-configuration-"))
   (encoding-name (common-lisp:error ":encoding-name is required") :type
    (common-lisp:or encoding-name common-lisp:null))
   (input-configurations common-lisp:nil :type
    (common-lisp:or |__listOfInputConfiguration| common-lisp:null))
   (media-stream-name (common-lisp:error ":media-stream-name is required")
    :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'media-stream-source-configuration
                    'make-media-stream-source-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          media-stream-source-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          media-stream-source-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encoding-name))
      (common-lisp:list
       (common-lisp:cons "EncodingName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'input-configurations))
      (common-lisp:list
       (common-lisp:cons "InputConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'media-stream-name))
      (common-lisp:list
       (common-lisp:cons "MediaStreamName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          media-stream-source-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (media-stream-source-configuration-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-media-stream-source-configuration-request-"))
   (encoding-name (common-lisp:error ":encoding-name is required") :type
    (common-lisp:or encoding-name common-lisp:null))
   (input-configurations common-lisp:nil :type
    (common-lisp:or |__listOfInputConfigurationRequest| common-lisp:null))
   (media-stream-name (common-lisp:error ":media-stream-name is required")
    :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'media-stream-source-configuration-request
                    'make-media-stream-source-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          media-stream-source-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          media-stream-source-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encoding-name))
      (common-lisp:list
       (common-lisp:cons "EncodingName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'input-configurations))
      (common-lisp:list
       (common-lisp:cons "InputConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'media-stream-name))
      (common-lisp:list
       (common-lisp:cons "MediaStreamName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          media-stream-source-configuration-request))
   common-lisp:nil))
(common-lisp:deftype media-stream-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (messages (:copier common-lisp:nil) (:conc-name "struct-shape-messages-"))
   (errors (common-lisp:error ":errors is required") :type
    (common-lisp:or |__listOf__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'messages 'make-messages))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input messages))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input messages))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'errors))
      (common-lisp:list
       (common-lisp:cons "Errors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input messages))
   common-lisp:nil))
(common-lisp:deftype network-interface-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition not-found-exception
     (mediaconnect-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'not-found-exception 'not-found-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (offering (:copier common-lisp:nil) (:conc-name "struct-shape-offering-"))
   (currency-code (common-lisp:error ":currency-code is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (duration (common-lisp:error ":duration is required") :type
    (common-lisp:or |__integer| common-lisp:null))
   (duration-units (common-lisp:error ":duration-units is required") :type
    (common-lisp:or duration-units common-lisp:null))
   (offering-arn (common-lisp:error ":offering-arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (offering-description
    (common-lisp:error ":offering-description is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (price-per-unit (common-lisp:error ":price-per-unit is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (price-units (common-lisp:error ":price-units is required") :type
    (common-lisp:or price-units common-lisp:null))
   (resource-specification
    (common-lisp:error ":resource-specification is required") :type
    (common-lisp:or resource-specification common-lisp:null)))
 (common-lisp:export (common-lisp:list 'offering 'make-offering))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input offering))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input offering))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'currency-code))
      (common-lisp:list
       (common-lisp:cons "CurrencyCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'duration))
      (common-lisp:list
       (common-lisp:cons "Duration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'duration-units))
      (common-lisp:list
       (common-lisp:cons "DurationUnits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'offering-arn))
      (common-lisp:list
       (common-lisp:cons "OfferingArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'offering-description))
      (common-lisp:list
       (common-lisp:cons "OfferingDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'price-per-unit))
      (common-lisp:list
       (common-lisp:cons "PricePerUnit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'price-units))
      (common-lisp:list
       (common-lisp:cons "PriceUnits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resource-specification))
      (common-lisp:list
       (common-lisp:cons "ResourceSpecification"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input offering))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (output (:copier common-lisp:nil) (:conc-name "struct-shape-output-"))
   (data-transfer-subscriber-fee-percent common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (destination common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (encryption common-lisp:nil :type
    (common-lisp:or encryption common-lisp:null))
   (entitlement-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (listener-address common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (media-live-input-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (media-stream-output-configurations common-lisp:nil :type
    (common-lisp:or |__listOfMediaStreamOutputConfiguration| common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (output-arn (common-lisp:error ":output-arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (port common-lisp:nil :type (common-lisp:or |__integer| common-lisp:null))
   (transport common-lisp:nil :type
    (common-lisp:or transport common-lisp:null))
   (vpc-interface-attachment common-lisp:nil :type
    (common-lisp:or vpc-interface-attachment common-lisp:null)))
 (common-lisp:export (common-lisp:list 'output 'make-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-transfer-subscriber-fee-percent))
      (common-lisp:list
       (common-lisp:cons "DataTransferSubscriberFeePercent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination))
      (common-lisp:list
       (common-lisp:cons "Destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption))
      (common-lisp:list
       (common-lisp:cons "Encryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entitlement-arn))
      (common-lisp:list
       (common-lisp:cons "EntitlementArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'listener-address))
      (common-lisp:list
       (common-lisp:cons "ListenerAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'media-live-input-arn))
      (common-lisp:list
       (common-lisp:cons "MediaLiveInputArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'media-stream-output-configurations))
      (common-lisp:list
       (common-lisp:cons "MediaStreamOutputConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-arn))
      (common-lisp:list
       (common-lisp:cons "OutputArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'port))
      (common-lisp:list
       (common-lisp:cons "Port"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'transport))
      (common-lisp:list
       (common-lisp:cons "Transport"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'vpc-interface-attachment))
      (common-lisp:list
       (common-lisp:cons "VpcInterfaceAttachment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input output))
   common-lisp:nil))
(common-lisp:deftype price-units () 'common-lisp:string)
(common-lisp:deftype protocol () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (purchase-offering-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-purchase-offering-request-"))
   (offering-arn (common-lisp:error ":offering-arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (reservation-name (common-lisp:error ":reservation-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (start (common-lisp:error ":start is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'purchase-offering-request
                    'make-purchase-offering-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          purchase-offering-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          purchase-offering-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reservation-name))
      (common-lisp:list
       (common-lisp:cons "ReservationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start))
      (common-lisp:list
       (common-lisp:cons "Start"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          purchase-offering-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (purchase-offering-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-purchase-offering-response-"))
   (reservation common-lisp:nil :type
    (common-lisp:or reservation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'purchase-offering-response
                    'make-purchase-offering-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          purchase-offering-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          purchase-offering-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reservation))
      (common-lisp:list
       (common-lisp:cons "Reservation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          purchase-offering-response))
   common-lisp:nil))
(common-lisp:deftype range () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (remove-flow-media-stream-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-remove-flow-media-stream-request-"))
   (flow-arn (common-lisp:error ":flow-arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (media-stream-name (common-lisp:error ":media-stream-name is required")
    :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-flow-media-stream-request
                    'make-remove-flow-media-stream-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          remove-flow-media-stream-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          remove-flow-media-stream-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          remove-flow-media-stream-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (remove-flow-media-stream-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-remove-flow-media-stream-response-"))
   (flow-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (media-stream-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-flow-media-stream-response
                    'make-remove-flow-media-stream-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          remove-flow-media-stream-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          remove-flow-media-stream-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flow-arn))
      (common-lisp:list
       (common-lisp:cons "FlowArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'media-stream-name))
      (common-lisp:list
       (common-lisp:cons "MediaStreamName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          remove-flow-media-stream-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (remove-flow-output-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-remove-flow-output-request-"))
   (flow-arn (common-lisp:error ":flow-arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (output-arn (common-lisp:error ":output-arn is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-flow-output-request
                    'make-remove-flow-output-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          remove-flow-output-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          remove-flow-output-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          remove-flow-output-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (remove-flow-output-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-remove-flow-output-response-"))
   (flow-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (output-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-flow-output-response
                    'make-remove-flow-output-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          remove-flow-output-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          remove-flow-output-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flow-arn))
      (common-lisp:list
       (common-lisp:cons "FlowArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-arn))
      (common-lisp:list
       (common-lisp:cons "OutputArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          remove-flow-output-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (remove-flow-source-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-remove-flow-source-request-"))
   (flow-arn (common-lisp:error ":flow-arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (source-arn (common-lisp:error ":source-arn is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-flow-source-request
                    'make-remove-flow-source-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          remove-flow-source-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          remove-flow-source-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          remove-flow-source-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (remove-flow-source-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-remove-flow-source-response-"))
   (flow-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (source-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-flow-source-response
                    'make-remove-flow-source-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          remove-flow-source-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          remove-flow-source-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flow-arn))
      (common-lisp:list
       (common-lisp:cons "FlowArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-arn))
      (common-lisp:list
       (common-lisp:cons "SourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          remove-flow-source-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (remove-flow-vpc-interface-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-remove-flow-vpc-interface-request-"))
   (flow-arn (common-lisp:error ":flow-arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (vpc-interface-name (common-lisp:error ":vpc-interface-name is required")
    :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-flow-vpc-interface-request
                    'make-remove-flow-vpc-interface-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          remove-flow-vpc-interface-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          remove-flow-vpc-interface-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          remove-flow-vpc-interface-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (remove-flow-vpc-interface-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-remove-flow-vpc-interface-response-"))
   (flow-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (non-deleted-network-interface-ids common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (vpc-interface-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-flow-vpc-interface-response
                    'make-remove-flow-vpc-interface-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          remove-flow-vpc-interface-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          remove-flow-vpc-interface-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flow-arn))
      (common-lisp:list
       (common-lisp:cons "FlowArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'non-deleted-network-interface-ids))
      (common-lisp:list
       (common-lisp:cons "NonDeletedNetworkInterfaceIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-interface-name))
      (common-lisp:list
       (common-lisp:cons "VpcInterfaceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          remove-flow-vpc-interface-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (reservation (:copier common-lisp:nil)
      (:conc-name "struct-shape-reservation-"))
   (currency-code (common-lisp:error ":currency-code is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (duration (common-lisp:error ":duration is required") :type
    (common-lisp:or |__integer| common-lisp:null))
   (duration-units (common-lisp:error ":duration-units is required") :type
    (common-lisp:or duration-units common-lisp:null))
   (end (common-lisp:error ":end is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (offering-arn (common-lisp:error ":offering-arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (offering-description
    (common-lisp:error ":offering-description is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (price-per-unit (common-lisp:error ":price-per-unit is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (price-units (common-lisp:error ":price-units is required") :type
    (common-lisp:or price-units common-lisp:null))
   (reservation-arn (common-lisp:error ":reservation-arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (reservation-name (common-lisp:error ":reservation-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (reservation-state (common-lisp:error ":reservation-state is required")
    :type (common-lisp:or reservation-state common-lisp:null))
   (resource-specification
    (common-lisp:error ":resource-specification is required") :type
    (common-lisp:or resource-specification common-lisp:null))
   (start (common-lisp:error ":start is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'reservation 'make-reservation))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input reservation))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input reservation))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'currency-code))
      (common-lisp:list
       (common-lisp:cons "CurrencyCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'duration))
      (common-lisp:list
       (common-lisp:cons "Duration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'duration-units))
      (common-lisp:list
       (common-lisp:cons "DurationUnits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end))
      (common-lisp:list
       (common-lisp:cons "End"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'offering-arn))
      (common-lisp:list
       (common-lisp:cons "OfferingArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'offering-description))
      (common-lisp:list
       (common-lisp:cons "OfferingDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'price-per-unit))
      (common-lisp:list
       (common-lisp:cons "PricePerUnit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'price-units))
      (common-lisp:list
       (common-lisp:cons "PriceUnits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reservation-arn))
      (common-lisp:list
       (common-lisp:cons "ReservationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reservation-name))
      (common-lisp:list
       (common-lisp:cons "ReservationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reservation-state))
      (common-lisp:list
       (common-lisp:cons "ReservationState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resource-specification))
      (common-lisp:list
       (common-lisp:cons "ResourceSpecification"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start))
      (common-lisp:list
       (common-lisp:cons "Start"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input reservation))
   common-lisp:nil))
(common-lisp:deftype reservation-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (resource-specification (:copier common-lisp:nil)
      (:conc-name "struct-shape-resource-specification-"))
   (reserved-bitrate common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (resource-type (common-lisp:error ":resource-type is required") :type
    (common-lisp:or resource-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-specification 'make-resource-specification))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          resource-specification))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          resource-specification))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reserved-bitrate))
      (common-lisp:list
       (common-lisp:cons "ReservedBitrate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "ResourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          resource-specification))
   common-lisp:nil))
(common-lisp:deftype resource-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (response-error (:copier common-lisp:nil)
      (:conc-name "struct-shape-response-error-"))
   (message (common-lisp:error ":message is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'response-error 'make-response-error))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input response-error))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input response-error))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input response-error))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (revoke-flow-entitlement-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-revoke-flow-entitlement-request-"))
   (entitlement-arn (common-lisp:error ":entitlement-arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (flow-arn (common-lisp:error ":flow-arn is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'revoke-flow-entitlement-request
                    'make-revoke-flow-entitlement-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          revoke-flow-entitlement-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          revoke-flow-entitlement-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          revoke-flow-entitlement-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (revoke-flow-entitlement-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-revoke-flow-entitlement-response-"))
   (entitlement-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (flow-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'revoke-flow-entitlement-response
                    'make-revoke-flow-entitlement-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          revoke-flow-entitlement-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          revoke-flow-entitlement-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entitlement-arn))
      (common-lisp:list
       (common-lisp:cons "EntitlementArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flow-arn))
      (common-lisp:list
       (common-lisp:cons "FlowArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          revoke-flow-entitlement-response))
   common-lisp:nil))
(common-lisp:deftype scan-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition service-unavailable-exception
     (mediaconnect-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-unavailable-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-unavailable-exception
                    'service-unavailable-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (set-source-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-set-source-request-"))
   (decryption common-lisp:nil :type
    (common-lisp:or encryption common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (entitlement-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (ingest-port common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (max-bitrate common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (max-latency common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (max-sync-buffer common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (media-stream-source-configurations common-lisp:nil :type
    (common-lisp:or |__listOfMediaStreamSourceConfigurationRequest|
                    common-lisp:null))
   (min-latency common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (protocol common-lisp:nil :type (common-lisp:or protocol common-lisp:null))
   (sender-control-port common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (sender-ip-address common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (source-listener-address common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (source-listener-port common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (stream-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (vpc-interface-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (whitelist-cidr common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-source-request 'make-set-source-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input set-source-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input set-source-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'decryption))
      (common-lisp:list
       (common-lisp:cons "Decryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entitlement-arn))
      (common-lisp:list
       (common-lisp:cons "EntitlementArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ingest-port))
      (common-lisp:list
       (common-lisp:cons "IngestPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-bitrate))
      (common-lisp:list
       (common-lisp:cons "MaxBitrate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-latency))
      (common-lisp:list
       (common-lisp:cons "MaxLatency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-sync-buffer))
      (common-lisp:list
       (common-lisp:cons "MaxSyncBuffer"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'media-stream-source-configurations))
      (common-lisp:list
       (common-lisp:cons "MediaStreamSourceConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'min-latency))
      (common-lisp:list
       (common-lisp:cons "MinLatency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol))
      (common-lisp:list
       (common-lisp:cons "Protocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sender-control-port))
      (common-lisp:list
       (common-lisp:cons "SenderControlPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sender-ip-address))
      (common-lisp:list
       (common-lisp:cons "SenderIpAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-listener-address))
      (common-lisp:list
       (common-lisp:cons "SourceListenerAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-listener-port))
      (common-lisp:list
       (common-lisp:cons "SourceListenerPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-id))
      (common-lisp:list
       (common-lisp:cons "StreamId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-interface-name))
      (common-lisp:list
       (common-lisp:cons "VpcInterfaceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'whitelist-cidr))
      (common-lisp:list
       (common-lisp:cons "WhitelistCidr"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input set-source-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (source (:copier common-lisp:nil) (:conc-name "struct-shape-source-"))
   (data-transfer-subscriber-fee-percent common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (decryption common-lisp:nil :type
    (common-lisp:or encryption common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (entitlement-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (ingest-ip common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (ingest-port common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (media-stream-source-configurations common-lisp:nil :type
    (common-lisp:or |__listOfMediaStreamSourceConfiguration| common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (sender-control-port common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (sender-ip-address common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (source-arn (common-lisp:error ":source-arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (transport common-lisp:nil :type
    (common-lisp:or transport common-lisp:null))
   (vpc-interface-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (whitelist-cidr common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'source 'make-source))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input source))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input source))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-transfer-subscriber-fee-percent))
      (common-lisp:list
       (common-lisp:cons "DataTransferSubscriberFeePercent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'decryption))
      (common-lisp:list
       (common-lisp:cons "Decryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entitlement-arn))
      (common-lisp:list
       (common-lisp:cons "EntitlementArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ingest-ip))
      (common-lisp:list
       (common-lisp:cons "IngestIp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ingest-port))
      (common-lisp:list
       (common-lisp:cons "IngestPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'media-stream-source-configurations))
      (common-lisp:list
       (common-lisp:cons "MediaStreamSourceConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sender-control-port))
      (common-lisp:list
       (common-lisp:cons "SenderControlPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sender-ip-address))
      (common-lisp:list
       (common-lisp:cons "SenderIpAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-arn))
      (common-lisp:list
       (common-lisp:cons "SourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'transport))
      (common-lisp:list
       (common-lisp:cons "Transport"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-interface-name))
      (common-lisp:list
       (common-lisp:cons "VpcInterfaceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'whitelist-cidr))
      (common-lisp:list
       (common-lisp:cons "WhitelistCidr"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input source))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (source-priority (:copier common-lisp:nil)
      (:conc-name "struct-shape-source-priority-"))
   (primary-source common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'source-priority 'make-source-priority))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input source-priority))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input source-priority))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'primary-source))
      (common-lisp:list
       (common-lisp:cons "PrimarySource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input source-priority))
   common-lisp:nil))
(common-lisp:deftype source-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (start-flow-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-flow-request-"))
   (flow-arn (common-lisp:error ":flow-arn is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-flow-request 'make-start-flow-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input start-flow-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input start-flow-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input start-flow-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-flow-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-flow-response-"))
   (flow-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-flow-response 'make-start-flow-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input start-flow-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input start-flow-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flow-arn))
      (common-lisp:list
       (common-lisp:cons "FlowArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input start-flow-response))
   common-lisp:nil))
(common-lisp:deftype state () 'common-lisp:string)
(common-lisp:deftype status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (stop-flow-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-stop-flow-request-"))
   (flow-arn (common-lisp:error ":flow-arn is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-flow-request 'make-stop-flow-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stop-flow-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stop-flow-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stop-flow-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-flow-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-stop-flow-response-"))
   (flow-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-flow-response 'make-stop-flow-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stop-flow-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stop-flow-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flow-arn))
      (common-lisp:list
       (common-lisp:cons "FlowArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stop-flow-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (tags (common-lisp:error ":tags is required") :type
    (common-lisp:or |__mapOf__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:deftype tcs () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition too-many-requests-exception
     (mediaconnect-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       too-many-requests-exception-message)))
 (common-lisp:export
  (common-lisp:list 'too-many-requests-exception
                    'too-many-requests-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (transport (:copier common-lisp:nil)
      (:conc-name "struct-shape-transport-"))
   (cidr-allow-list common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (max-bitrate common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (max-latency common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (max-sync-buffer common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (min-latency common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (protocol (common-lisp:error ":protocol is required") :type
    (common-lisp:or protocol common-lisp:null))
   (remote-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (sender-control-port common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (sender-ip-address common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (smoothing-latency common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (source-listener-address common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (source-listener-port common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (stream-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'transport 'make-transport))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input transport))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input transport))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cidr-allow-list))
      (common-lisp:list
       (common-lisp:cons "CidrAllowList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-bitrate))
      (common-lisp:list
       (common-lisp:cons "MaxBitrate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-latency))
      (common-lisp:list
       (common-lisp:cons "MaxLatency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-sync-buffer))
      (common-lisp:list
       (common-lisp:cons "MaxSyncBuffer"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'min-latency))
      (common-lisp:list
       (common-lisp:cons "MinLatency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol))
      (common-lisp:list
       (common-lisp:cons "Protocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'remote-id))
      (common-lisp:list
       (common-lisp:cons "RemoteId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sender-control-port))
      (common-lisp:list
       (common-lisp:cons "SenderControlPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sender-ip-address))
      (common-lisp:list
       (common-lisp:cons "SenderIpAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'smoothing-latency))
      (common-lisp:list
       (common-lisp:cons "SmoothingLatency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-listener-address))
      (common-lisp:list
       (common-lisp:cons "SourceListenerAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-listener-port))
      (common-lisp:list
       (common-lisp:cons "SourceListenerPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-id))
      (common-lisp:list
       (common-lisp:cons "StreamId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input transport))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (tag-keys (common-lisp:error ":tag-keys is required") :type
    (common-lisp:or |__listOf__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-encryption (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-encryption-"))
   (algorithm common-lisp:nil :type
    (common-lisp:or algorithm common-lisp:null))
   (constant-initialization-vector common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (device-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (key-type common-lisp:nil :type (common-lisp:or key-type common-lisp:null))
   (region common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (resource-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (role-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (secret-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (url common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-encryption 'make-update-encryption))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-encryption))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-encryption))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'algorithm))
      (common-lisp:list
       (common-lisp:cons "Algorithm"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'constant-initialization-vector))
      (common-lisp:list
       (common-lisp:cons "ConstantInitializationVector"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-id))
      (common-lisp:list
       (common-lisp:cons "DeviceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-type))
      (common-lisp:list
       (common-lisp:cons "KeyType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'region))
      (common-lisp:list
       (common-lisp:cons "Region"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-id))
      (common-lisp:list
       (common-lisp:cons "ResourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'secret-arn))
      (common-lisp:list
       (common-lisp:cons "SecretArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'url))
      (common-lisp:list
       (common-lisp:cons "Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-encryption))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-failover-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-failover-config-"))
   (failover-mode common-lisp:nil :type
    (common-lisp:or failover-mode common-lisp:null))
   (recovery-window common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (source-priority common-lisp:nil :type
    (common-lisp:or source-priority common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or state common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-failover-config 'make-update-failover-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-failover-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-failover-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failover-mode))
      (common-lisp:list
       (common-lisp:cons "FailoverMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recovery-window))
      (common-lisp:list
       (common-lisp:cons "RecoveryWindow"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-priority))
      (common-lisp:list
       (common-lisp:cons "SourcePriority"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-failover-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-flow-entitlement-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-flow-entitlement-request-"))
   (description common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (encryption common-lisp:nil :type
    (common-lisp:or update-encryption common-lisp:null))
   (entitlement-arn (common-lisp:error ":entitlement-arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (entitlement-status common-lisp:nil :type
    (common-lisp:or entitlement-status common-lisp:null))
   (flow-arn (common-lisp:error ":flow-arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (subscribers common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-flow-entitlement-request
                    'make-update-flow-entitlement-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-flow-entitlement-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-flow-entitlement-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption))
      (common-lisp:list
       (common-lisp:cons "Encryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entitlement-status))
      (common-lisp:list
       (common-lisp:cons "EntitlementStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscribers))
      (common-lisp:list
       (common-lisp:cons "Subscribers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-flow-entitlement-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-flow-entitlement-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-flow-entitlement-response-"))
   (entitlement common-lisp:nil :type
    (common-lisp:or entitlement common-lisp:null))
   (flow-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-flow-entitlement-response
                    'make-update-flow-entitlement-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-flow-entitlement-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-flow-entitlement-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entitlement))
      (common-lisp:list
       (common-lisp:cons "Entitlement"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flow-arn))
      (common-lisp:list
       (common-lisp:cons "FlowArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-flow-entitlement-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-flow-media-stream-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-flow-media-stream-request-"))
   (attributes common-lisp:nil :type
    (common-lisp:or media-stream-attributes-request common-lisp:null))
   (clock-rate common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (flow-arn (common-lisp:error ":flow-arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (media-stream-name (common-lisp:error ":media-stream-name is required")
    :type (common-lisp:or |__string| common-lisp:null))
   (media-stream-type common-lisp:nil :type
    (common-lisp:or media-stream-type common-lisp:null))
   (video-format common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-flow-media-stream-request
                    'make-update-flow-media-stream-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-flow-media-stream-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-flow-media-stream-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'clock-rate))
      (common-lisp:list
       (common-lisp:cons "ClockRate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'media-stream-type))
      (common-lisp:list
       (common-lisp:cons "MediaStreamType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'video-format))
      (common-lisp:list
       (common-lisp:cons "VideoFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-flow-media-stream-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-flow-media-stream-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-flow-media-stream-response-"))
   (flow-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (media-stream common-lisp:nil :type
    (common-lisp:or media-stream common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-flow-media-stream-response
                    'make-update-flow-media-stream-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-flow-media-stream-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-flow-media-stream-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flow-arn))
      (common-lisp:list
       (common-lisp:cons "FlowArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'media-stream))
      (common-lisp:list
       (common-lisp:cons "MediaStream"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-flow-media-stream-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-flow-output-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-flow-output-request-"))
   (cidr-allow-list common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (destination common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (encryption common-lisp:nil :type
    (common-lisp:or update-encryption common-lisp:null))
   (flow-arn (common-lisp:error ":flow-arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (max-latency common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (media-stream-output-configurations common-lisp:nil :type
    (common-lisp:or |__listOfMediaStreamOutputConfigurationRequest|
                    common-lisp:null))
   (min-latency common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (output-arn (common-lisp:error ":output-arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (port common-lisp:nil :type (common-lisp:or |__integer| common-lisp:null))
   (protocol common-lisp:nil :type (common-lisp:or protocol common-lisp:null))
   (remote-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (sender-control-port common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (sender-ip-address common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (smoothing-latency common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (stream-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (vpc-interface-attachment common-lisp:nil :type
    (common-lisp:or vpc-interface-attachment common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-flow-output-request
                    'make-update-flow-output-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-flow-output-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-flow-output-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cidr-allow-list))
      (common-lisp:list
       (common-lisp:cons "CidrAllowList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination))
      (common-lisp:list
       (common-lisp:cons "Destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption))
      (common-lisp:list
       (common-lisp:cons "Encryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-latency))
      (common-lisp:list
       (common-lisp:cons "MaxLatency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'media-stream-output-configurations))
      (common-lisp:list
       (common-lisp:cons "MediaStreamOutputConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'min-latency))
      (common-lisp:list
       (common-lisp:cons "MinLatency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'port))
      (common-lisp:list
       (common-lisp:cons "Port"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol))
      (common-lisp:list
       (common-lisp:cons "Protocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'remote-id))
      (common-lisp:list
       (common-lisp:cons "RemoteId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sender-control-port))
      (common-lisp:list
       (common-lisp:cons "SenderControlPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sender-ip-address))
      (common-lisp:list
       (common-lisp:cons "SenderIpAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'smoothing-latency))
      (common-lisp:list
       (common-lisp:cons "SmoothingLatency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-id))
      (common-lisp:list
       (common-lisp:cons "StreamId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'vpc-interface-attachment))
      (common-lisp:list
       (common-lisp:cons "VpcInterfaceAttachment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-flow-output-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-flow-output-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-flow-output-response-"))
   (flow-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (output common-lisp:nil :type (common-lisp:or output common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-flow-output-response
                    'make-update-flow-output-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-flow-output-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-flow-output-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flow-arn))
      (common-lisp:list
       (common-lisp:cons "FlowArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output))
      (common-lisp:list
       (common-lisp:cons "Output"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-flow-output-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-flow-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-flow-request-"))
   (flow-arn (common-lisp:error ":flow-arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (source-failover-config common-lisp:nil :type
    (common-lisp:or update-failover-config common-lisp:null))
   (maintenance common-lisp:nil :type
    (common-lisp:or update-maintenance common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-flow-request 'make-update-flow-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-flow-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-flow-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-failover-config))
      (common-lisp:list
       (common-lisp:cons "SourceFailoverConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'maintenance))
      (common-lisp:list
       (common-lisp:cons "Maintenance"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-flow-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-flow-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-flow-response-"))
   (flow common-lisp:nil :type (common-lisp:or flow common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-flow-response 'make-update-flow-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-flow-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-flow-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flow))
      (common-lisp:list
       (common-lisp:cons "Flow"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-flow-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-flow-source-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-flow-source-request-"))
   (decryption common-lisp:nil :type
    (common-lisp:or update-encryption common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (entitlement-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (flow-arn (common-lisp:error ":flow-arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (ingest-port common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (max-bitrate common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (max-latency common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (max-sync-buffer common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (media-stream-source-configurations common-lisp:nil :type
    (common-lisp:or |__listOfMediaStreamSourceConfigurationRequest|
                    common-lisp:null))
   (min-latency common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (protocol common-lisp:nil :type (common-lisp:or protocol common-lisp:null))
   (sender-control-port common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (sender-ip-address common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (source-arn (common-lisp:error ":source-arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (source-listener-address common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (source-listener-port common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (stream-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (vpc-interface-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (whitelist-cidr common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-flow-source-request
                    'make-update-flow-source-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-flow-source-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-flow-source-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'decryption))
      (common-lisp:list
       (common-lisp:cons "Decryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entitlement-arn))
      (common-lisp:list
       (common-lisp:cons "EntitlementArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ingest-port))
      (common-lisp:list
       (common-lisp:cons "IngestPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-bitrate))
      (common-lisp:list
       (common-lisp:cons "MaxBitrate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-latency))
      (common-lisp:list
       (common-lisp:cons "MaxLatency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-sync-buffer))
      (common-lisp:list
       (common-lisp:cons "MaxSyncBuffer"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'media-stream-source-configurations))
      (common-lisp:list
       (common-lisp:cons "MediaStreamSourceConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'min-latency))
      (common-lisp:list
       (common-lisp:cons "MinLatency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol))
      (common-lisp:list
       (common-lisp:cons "Protocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sender-control-port))
      (common-lisp:list
       (common-lisp:cons "SenderControlPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sender-ip-address))
      (common-lisp:list
       (common-lisp:cons "SenderIpAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-listener-address))
      (common-lisp:list
       (common-lisp:cons "SourceListenerAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-listener-port))
      (common-lisp:list
       (common-lisp:cons "SourceListenerPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-id))
      (common-lisp:list
       (common-lisp:cons "StreamId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-interface-name))
      (common-lisp:list
       (common-lisp:cons "VpcInterfaceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'whitelist-cidr))
      (common-lisp:list
       (common-lisp:cons "WhitelistCidr"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-flow-source-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-flow-source-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-flow-source-response-"))
   (flow-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (source common-lisp:nil :type (common-lisp:or source common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-flow-source-response
                    'make-update-flow-source-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-flow-source-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-flow-source-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flow-arn))
      (common-lisp:list
       (common-lisp:cons "FlowArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source))
      (common-lisp:list
       (common-lisp:cons "Source"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-flow-source-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-maintenance (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-maintenance-"))
   (maintenance-day common-lisp:nil :type
    (common-lisp:or maintenance-day common-lisp:null))
   (maintenance-scheduled-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (maintenance-start-hour common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-maintenance 'make-update-maintenance))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-maintenance))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-maintenance))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'maintenance-day))
      (common-lisp:list
       (common-lisp:cons "MaintenanceDay"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'maintenance-scheduled-date))
      (common-lisp:list
       (common-lisp:cons "MaintenanceScheduledDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'maintenance-start-hour))
      (common-lisp:list
       (common-lisp:cons "MaintenanceStartHour"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-maintenance))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (vpc-interface (:copier common-lisp:nil)
      (:conc-name "struct-shape-vpc-interface-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (network-interface-ids
    (common-lisp:error ":network-interface-ids is required") :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (network-interface-type
    (common-lisp:error ":network-interface-type is required") :type
    (common-lisp:or network-interface-type common-lisp:null))
   (role-arn (common-lisp:error ":role-arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (security-group-ids (common-lisp:error ":security-group-ids is required")
    :type (common-lisp:or |__listOf__string| common-lisp:null))
   (subnet-id (common-lisp:error ":subnet-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'vpc-interface 'make-vpc-interface))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input vpc-interface))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input vpc-interface))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'network-interface-ids))
      (common-lisp:list
       (common-lisp:cons "NetworkInterfaceIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'network-interface-type))
      (common-lisp:list
       (common-lisp:cons "NetworkInterfaceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-ids))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-id))
      (common-lisp:list
       (common-lisp:cons "SubnetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input vpc-interface))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (vpc-interface-attachment (:copier common-lisp:nil)
      (:conc-name "struct-shape-vpc-interface-attachment-"))
   (vpc-interface-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'vpc-interface-attachment 'make-vpc-interface-attachment))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          vpc-interface-attachment))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          vpc-interface-attachment))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-interface-name))
      (common-lisp:list
       (common-lisp:cons "VpcInterfaceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          vpc-interface-attachment))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (vpc-interface-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-vpc-interface-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (network-interface-type common-lisp:nil :type
    (common-lisp:or network-interface-type common-lisp:null))
   (role-arn (common-lisp:error ":role-arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (security-group-ids (common-lisp:error ":security-group-ids is required")
    :type (common-lisp:or |__listOf__string| common-lisp:null))
   (subnet-id (common-lisp:error ":subnet-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'vpc-interface-request 'make-vpc-interface-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          vpc-interface-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          vpc-interface-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'network-interface-type))
      (common-lisp:list
       (common-lisp:cons "NetworkInterfaceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-ids))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-id))
      (common-lisp:list
       (common-lisp:cons "SubnetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          vpc-interface-request))
   common-lisp:nil))
(common-lisp:deftype |__boolean| () 'common-lisp:boolean)
(common-lisp:deftype |__double| () 'common-lisp:double-float)
(common-lisp:deftype |__integer| () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype |__listOfAddMediaStreamRequest| ()
   '(trivial-types:proper-list add-media-stream-request))
 (common-lisp:defun |make-__listofaddmediastreamrequest|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            add-media-stream-request))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfAddOutputRequest| ()
   '(trivial-types:proper-list add-output-request))
 (common-lisp:defun |make-__listofaddoutputrequest|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list add-output-request))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfDestinationConfiguration| ()
   '(trivial-types:proper-list destination-configuration))
 (common-lisp:defun |make-__listofdestinationconfiguration|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            destination-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfDestinationConfigurationRequest| ()
   '(trivial-types:proper-list destination-configuration-request))
 (common-lisp:defun |make-__listofdestinationconfigurationrequest|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            destination-configuration-request))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfEntitlement| ()
   '(trivial-types:proper-list entitlement))
 (common-lisp:defun |make-__listofentitlement|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list entitlement))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfGrantEntitlementRequest| ()
   '(trivial-types:proper-list grant-entitlement-request))
 (common-lisp:defun |make-__listofgrantentitlementrequest|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            grant-entitlement-request))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfInputConfiguration| ()
   '(trivial-types:proper-list input-configuration))
 (common-lisp:defun |make-__listofinputconfiguration|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list input-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfInputConfigurationRequest| ()
   '(trivial-types:proper-list input-configuration-request))
 (common-lisp:defun |make-__listofinputconfigurationrequest|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            input-configuration-request))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfListedEntitlement| ()
   '(trivial-types:proper-list listed-entitlement))
 (common-lisp:defun |make-__listoflistedentitlement|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list listed-entitlement))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfListedFlow| ()
   '(trivial-types:proper-list listed-flow))
 (common-lisp:defun |make-__listoflistedflow|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list listed-flow))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfMediaStream| ()
   '(trivial-types:proper-list media-stream))
 (common-lisp:defun |make-__listofmediastream|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list media-stream))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfMediaStreamOutputConfiguration| ()
   '(trivial-types:proper-list media-stream-output-configuration))
 (common-lisp:defun |make-__listofmediastreamoutputconfiguration|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            media-stream-output-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfMediaStreamOutputConfigurationRequest| ()
   '(trivial-types:proper-list media-stream-output-configuration-request))
 (common-lisp:defun |make-__listofmediastreamoutputconfigurationrequest|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            media-stream-output-configuration-request))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfMediaStreamSourceConfiguration| ()
   '(trivial-types:proper-list media-stream-source-configuration))
 (common-lisp:defun |make-__listofmediastreamsourceconfiguration|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            media-stream-source-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfMediaStreamSourceConfigurationRequest| ()
   '(trivial-types:proper-list media-stream-source-configuration-request))
 (common-lisp:defun |make-__listofmediastreamsourceconfigurationrequest|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            media-stream-source-configuration-request))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfOffering| ()
   '(trivial-types:proper-list offering))
 (common-lisp:defun |make-__listofoffering|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list offering))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfOutput| () '(trivial-types:proper-list output))
 (common-lisp:defun |make-__listofoutput|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list output))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfReservation| ()
   '(trivial-types:proper-list reservation))
 (common-lisp:defun |make-__listofreservation|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list reservation))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfSetSourceRequest| ()
   '(trivial-types:proper-list set-source-request))
 (common-lisp:defun |make-__listofsetsourcerequest|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list set-source-request))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfSource| () '(trivial-types:proper-list source))
 (common-lisp:defun |make-__listofsource|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list source))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfVpcInterface| ()
   '(trivial-types:proper-list vpc-interface))
 (common-lisp:defun |make-__listofvpcinterface|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list vpc-interface))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfVpcInterfaceRequest| ()
   '(trivial-types:proper-list vpc-interface-request))
 (common-lisp:defun |make-__listofvpcinterfacerequest|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list vpc-interface-request))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOf__integer| ()
   '(trivial-types:proper-list |__integer|))
 (common-lisp:defun |make-__listof__integer|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |__integer|))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOf__string| ()
   '(trivial-types:proper-list |__string|))
 (common-lisp:defun |make-__listof__string|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |__string|))
   aws-sdk/generator/shape::members))
(common-lisp:deftype |__long| () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype |__mapOf__string| () 'common-lisp:hash-table)
 (common-lisp:defun |make-__mapof__string|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype |__string| () 'common-lisp:string)
(common-lisp:deftype |__timestampIso8601| () 'common-lisp:string)
(common-lisp:deftype |__timestampUnix| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun add-flow-media-streams
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key flow-arn media-streams)
   (common-lisp:declare (common-lisp:ignorable flow-arn media-streams))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-add-flow-media-streams-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconnect-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/flows/~A/mediaStreams"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'flow-arn))))
                                                        "AddFlowMediaStreams"
                                                        "2018-11-14"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'add-flow-media-streams))
(common-lisp:progn
 (common-lisp:defun add-flow-outputs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key flow-arn outputs)
   (common-lisp:declare (common-lisp:ignorable flow-arn outputs))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-add-flow-outputs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconnect-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/flows/~A/outputs"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'flow-arn))))
                                                        "AddFlowOutputs"
                                                        "2018-11-14"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'add-flow-outputs))
(common-lisp:progn
 (common-lisp:defun add-flow-sources
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key flow-arn sources)
   (common-lisp:declare (common-lisp:ignorable flow-arn sources))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-add-flow-sources-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconnect-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/flows/~A/source"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'flow-arn))))
                                                        "AddFlowSources"
                                                        "2018-11-14"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'add-flow-sources))
(common-lisp:progn
 (common-lisp:defun add-flow-vpc-interfaces
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key flow-arn vpc-interfaces)
   (common-lisp:declare (common-lisp:ignorable flow-arn vpc-interfaces))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-add-flow-vpc-interfaces-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconnect-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/flows/~A/vpcInterfaces"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'flow-arn))))
                                                        "AddFlowVpcInterfaces"
                                                        "2018-11-14"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'add-flow-vpc-interfaces))
(common-lisp:progn
 (common-lisp:defun create-flow
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key availability-zone entitlements
                     media-streams name outputs source source-failover-config
                     sources vpc-interfaces maintenance)
   (common-lisp:declare
    (common-lisp:ignorable availability-zone entitlements media-streams name
     outputs source source-failover-config sources vpc-interfaces maintenance))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-flow-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconnect-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/v1/flows"
                                                        "CreateFlow"
                                                        "2018-11-14"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-flow))
(common-lisp:progn
 (common-lisp:defun delete-flow
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key flow-arn)
   (common-lisp:declare (common-lisp:ignorable flow-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-flow-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconnect-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/flows/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'flow-arn))))
                                                        "DeleteFlow"
                                                        "2018-11-14"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-flow))
(common-lisp:progn
 (common-lisp:defun describe-flow
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key flow-arn)
   (common-lisp:declare (common-lisp:ignorable flow-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-flow-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconnect-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/flows/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'flow-arn))))
                                                        "DescribeFlow"
                                                        "2018-11-14"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-flow))
(common-lisp:progn
 (common-lisp:defun describe-offering
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key offering-arn)
   (common-lisp:declare (common-lisp:ignorable offering-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-offering-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconnect-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/offerings/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'offering-arn))))
                                                        "DescribeOffering"
                                                        "2018-11-14"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-offering))
(common-lisp:progn
 (common-lisp:defun describe-reservation
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key reservation-arn)
   (common-lisp:declare (common-lisp:ignorable reservation-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-reservation-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconnect-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/reservations/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'reservation-arn))))
                                                        "DescribeReservation"
                                                        "2018-11-14"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-reservation))
(common-lisp:progn
 (common-lisp:defun grant-flow-entitlements
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key entitlements flow-arn)
   (common-lisp:declare (common-lisp:ignorable entitlements flow-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-grant-flow-entitlements-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconnect-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/flows/~A/entitlements"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'flow-arn))))
                                                        "GrantFlowEntitlements"
                                                        "2018-11-14"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'grant-flow-entitlements))
(common-lisp:progn
 (common-lisp:defun list-entitlements
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-entitlements-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconnect-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/v1/entitlements"
                                                        "ListEntitlements"
                                                        "2018-11-14"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-entitlements))
(common-lisp:progn
 (common-lisp:defun list-flows
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-flows-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconnect-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/v1/flows"
                                                        "ListFlows"
                                                        "2018-11-14"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-flows))
(common-lisp:progn
 (common-lisp:defun list-offerings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-offerings-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconnect-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/v1/offerings"
                                                        "ListOfferings"
                                                        "2018-11-14"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-offerings))
(common-lisp:progn
 (common-lisp:defun list-reservations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-reservations-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconnect-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/v1/reservations"
                                                        "ListReservations"
                                                        "2018-11-14"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-reservations))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconnect-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "ListTagsForResource"
                                                        "2018-11-14"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun purchase-offering
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key offering-arn reservation-name start)
   (common-lisp:declare
    (common-lisp:ignorable offering-arn reservation-name start))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-purchase-offering-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconnect-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/offerings/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'offering-arn))))
                                                        "PurchaseOffering"
                                                        "2018-11-14"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'purchase-offering))
(common-lisp:progn
 (common-lisp:defun remove-flow-media-stream
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key flow-arn media-stream-name)
   (common-lisp:declare (common-lisp:ignorable flow-arn media-stream-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-remove-flow-media-stream-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconnect-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/flows/~A/mediaStreams/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'flow-arn))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'media-stream-name))))
                                                        "RemoveFlowMediaStream"
                                                        "2018-11-14"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'remove-flow-media-stream))
(common-lisp:progn
 (common-lisp:defun remove-flow-output
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key flow-arn output-arn)
   (common-lisp:declare (common-lisp:ignorable flow-arn output-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-remove-flow-output-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconnect-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/flows/~A/outputs/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'flow-arn))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'output-arn))))
                                                        "RemoveFlowOutput"
                                                        "2018-11-14"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'remove-flow-output))
(common-lisp:progn
 (common-lisp:defun remove-flow-source
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key flow-arn source-arn)
   (common-lisp:declare (common-lisp:ignorable flow-arn source-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-remove-flow-source-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconnect-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/flows/~A/source/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'flow-arn))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'source-arn))))
                                                        "RemoveFlowSource"
                                                        "2018-11-14"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'remove-flow-source))
(common-lisp:progn
 (common-lisp:defun remove-flow-vpc-interface
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key flow-arn vpc-interface-name)
   (common-lisp:declare (common-lisp:ignorable flow-arn vpc-interface-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-remove-flow-vpc-interface-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconnect-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/flows/~A/vpcInterfaces/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'flow-arn))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vpc-interface-name))))
                                                        "RemoveFlowVpcInterface"
                                                        "2018-11-14"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'remove-flow-vpc-interface))
(common-lisp:progn
 (common-lisp:defun revoke-flow-entitlement
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key entitlement-arn flow-arn)
   (common-lisp:declare (common-lisp:ignorable entitlement-arn flow-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-revoke-flow-entitlement-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconnect-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/flows/~A/entitlements/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'flow-arn))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'entitlement-arn))))
                                                        "RevokeFlowEntitlement"
                                                        "2018-11-14"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'revoke-flow-entitlement))
(common-lisp:progn
 (common-lisp:defun start-flow
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key flow-arn)
   (common-lisp:declare (common-lisp:ignorable flow-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-flow-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconnect-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/flows/start/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'flow-arn))))
                                                        "StartFlow"
                                                        "2018-11-14"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-flow))
(common-lisp:progn
 (common-lisp:defun stop-flow
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key flow-arn)
   (common-lisp:declare (common-lisp:ignorable flow-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-stop-flow-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconnect-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/flows/stop/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'flow-arn))))
                                                        "StopFlow"
                                                        "2018-11-14"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'stop-flow))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconnect-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "TagResource"
                                                        "2018-11-14"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconnect-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "UntagResource"
                                                        "2018-11-14"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-flow
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key flow-arn source-failover-config
                     maintenance)
   (common-lisp:declare
    (common-lisp:ignorable flow-arn source-failover-config maintenance))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-flow-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconnect-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/flows/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'flow-arn))))
                                                        "UpdateFlow"
                                                        "2018-11-14"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-flow))
(common-lisp:progn
 (common-lisp:defun update-flow-entitlement
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key description encryption entitlement-arn
                     entitlement-status flow-arn subscribers)
   (common-lisp:declare
    (common-lisp:ignorable description encryption entitlement-arn
     entitlement-status flow-arn subscribers))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-flow-entitlement-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconnect-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/flows/~A/entitlements/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'flow-arn))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'entitlement-arn))))
                                                        "UpdateFlowEntitlement"
                                                        "2018-11-14"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-flow-entitlement))
(common-lisp:progn
 (common-lisp:defun update-flow-media-stream
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key attributes clock-rate description
                     flow-arn media-stream-name media-stream-type video-format)
   (common-lisp:declare
    (common-lisp:ignorable attributes clock-rate description flow-arn
     media-stream-name media-stream-type video-format))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-flow-media-stream-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconnect-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/flows/~A/mediaStreams/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'flow-arn))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'media-stream-name))))
                                                        "UpdateFlowMediaStream"
                                                        "2018-11-14"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-flow-media-stream))
(common-lisp:progn
 (common-lisp:defun update-flow-output
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cidr-allow-list description destination
                     encryption flow-arn max-latency
                     media-stream-output-configurations min-latency output-arn
                     port protocol remote-id sender-control-port
                     sender-ip-address smoothing-latency stream-id
                     vpc-interface-attachment)
   (common-lisp:declare
    (common-lisp:ignorable cidr-allow-list description destination encryption
     flow-arn max-latency media-stream-output-configurations min-latency
     output-arn port protocol remote-id sender-control-port sender-ip-address
     smoothing-latency stream-id vpc-interface-attachment))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-flow-output-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconnect-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/flows/~A/outputs/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'flow-arn))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'output-arn))))
                                                        "UpdateFlowOutput"
                                                        "2018-11-14"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-flow-output))
(common-lisp:progn
 (common-lisp:defun update-flow-source
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key decryption description entitlement-arn
                     flow-arn ingest-port max-bitrate max-latency
                     max-sync-buffer media-stream-source-configurations
                     min-latency protocol sender-control-port sender-ip-address
                     source-arn source-listener-address source-listener-port
                     stream-id vpc-interface-name whitelist-cidr)
   (common-lisp:declare
    (common-lisp:ignorable decryption description entitlement-arn flow-arn
     ingest-port max-bitrate max-latency max-sync-buffer
     media-stream-source-configurations min-latency protocol
     sender-control-port sender-ip-address source-arn source-listener-address
     source-listener-port stream-id vpc-interface-name whitelist-cidr))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-flow-source-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediaconnect-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/flows/~A/source/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'flow-arn))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'source-arn))))
                                                        "UpdateFlowSource"
                                                        "2018-11-14"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-flow-source))
