;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/marketplacecommerceanalytics/api
  (:use)
  (:nicknames #:aws/marketplacecommerceanalytics)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/json-request)
  (:import-from #:aws-sdk/rest-json-request)
  (:import-from #:aws-sdk/rest-xml-request)
  (:import-from #:aws-sdk/query-request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/marketplacecommerceanalytics/api)
(common-lisp:progn
 (common-lisp:define-condition marketplacecommerceanalytics-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'marketplacecommerceanalytics-error))
(common-lisp:progn
 (common-lisp:defclass marketplacecommerceanalytics-request
                       (aws-sdk/json-request:json-request) common-lisp:nil
                       (:default-initargs :service
                        "marketplacecommerceanalytics" :api-version
                        "2015-07-01" :host-prefix
                        "marketplacecommerceanalytics" :signing-name
                        "marketplacecommerceanalytics" :global-host
                        common-lisp:nil :target-prefix
                        "MarketplaceCommerceAnalytics20150701" :json-version
                        "1.1"))
 (common-lisp:export 'marketplacecommerceanalytics-request))
(common-lisp:defvar *error-map*
  '(("MarketplaceCommerceAnalyticsException"
     . marketplace-commerce-analytics-exception)))
(common-lisp:progn
 (common-lisp:deftype customer-defined-values () 'common-lisp:hash-table)
 (common-lisp:defun make-customer-defined-values
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype data-set-publication-date () 'common-lisp:string)
(common-lisp:deftype data-set-request-id () 'common-lisp:string)
(common-lisp:deftype data-set-type () 'common-lisp:string)
(common-lisp:deftype destination-s3bucket-name () 'common-lisp:string)
(common-lisp:deftype destination-s3prefix () 'common-lisp:string)
(common-lisp:deftype exception-message () 'common-lisp:string)
(common-lisp:deftype from-date () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (generate-data-set-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-generate-data-set-request-"))
   (data-set-type (common-lisp:error ":datasettype is required") :type
    (common-lisp:or data-set-type common-lisp:null))
   (data-set-publication-date
    (common-lisp:error ":datasetpublicationdate is required") :type
    (common-lisp:or data-set-publication-date common-lisp:null))
   (role-name-arn (common-lisp:error ":rolenamearn is required") :type
    (common-lisp:or role-name-arn common-lisp:null))
   (destination-s3bucket-name
    (common-lisp:error ":destinations3bucketname is required") :type
    (common-lisp:or destination-s3bucket-name common-lisp:null))
   (destination-s3prefix common-lisp:nil :type
    (common-lisp:or destination-s3prefix common-lisp:null))
   (sns-topic-arn (common-lisp:error ":snstopicarn is required") :type
    (common-lisp:or sns-topic-arn common-lisp:null))
   (customer-defined-values common-lisp:nil :type
    (common-lisp:or customer-defined-values common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'generate-data-set-request
                    'make-generate-data-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          generate-data-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          generate-data-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-set-type))
      (common-lisp:list
       (common-lisp:cons "dataSetType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-set-publication-date))
      (common-lisp:list
       (common-lisp:cons "dataSetPublicationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-name-arn))
      (common-lisp:list
       (common-lisp:cons "roleNameArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'destination-s3bucket-name))
      (common-lisp:list
       (common-lisp:cons "destinationS3BucketName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'destination-s3prefix))
      (common-lisp:list
       (common-lisp:cons "destinationS3Prefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sns-topic-arn))
      (common-lisp:list
       (common-lisp:cons "snsTopicArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'customer-defined-values))
      (common-lisp:list
       (common-lisp:cons "customerDefinedValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          generate-data-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (generate-data-set-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-generate-data-set-result-"))
   (data-set-request-id common-lisp:nil :type
    (common-lisp:or data-set-request-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'generate-data-set-result 'make-generate-data-set-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          generate-data-set-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          generate-data-set-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-set-request-id))
      (common-lisp:list
       (common-lisp:cons "dataSetRequestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          generate-data-set-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition marketplace-commerce-analytics-exception
     (marketplacecommerceanalytics-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       marketplace-commerce-analytics-exception-message)))
 (common-lisp:export
  (common-lisp:list 'marketplace-commerce-analytics-exception
                    'marketplace-commerce-analytics-exception-message)))
(common-lisp:deftype optional-key () 'common-lisp:string)
(common-lisp:deftype optional-value () 'common-lisp:string)
(common-lisp:deftype role-name-arn () 'common-lisp:string)
(common-lisp:deftype sns-topic-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (start-support-data-export-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-support-data-export-request-"))
   (data-set-type (common-lisp:error ":datasettype is required") :type
    (common-lisp:or support-data-set-type common-lisp:null))
   (from-date (common-lisp:error ":fromdate is required") :type
    (common-lisp:or from-date common-lisp:null))
   (role-name-arn (common-lisp:error ":rolenamearn is required") :type
    (common-lisp:or role-name-arn common-lisp:null))
   (destination-s3bucket-name
    (common-lisp:error ":destinations3bucketname is required") :type
    (common-lisp:or destination-s3bucket-name common-lisp:null))
   (destination-s3prefix common-lisp:nil :type
    (common-lisp:or destination-s3prefix common-lisp:null))
   (sns-topic-arn (common-lisp:error ":snstopicarn is required") :type
    (common-lisp:or sns-topic-arn common-lisp:null))
   (customer-defined-values common-lisp:nil :type
    (common-lisp:or customer-defined-values common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-support-data-export-request
                    'make-start-support-data-export-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-support-data-export-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-support-data-export-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-set-type))
      (common-lisp:list
       (common-lisp:cons "dataSetType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from-date))
      (common-lisp:list
       (common-lisp:cons "fromDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-name-arn))
      (common-lisp:list
       (common-lisp:cons "roleNameArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'destination-s3bucket-name))
      (common-lisp:list
       (common-lisp:cons "destinationS3BucketName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'destination-s3prefix))
      (common-lisp:list
       (common-lisp:cons "destinationS3Prefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sns-topic-arn))
      (common-lisp:list
       (common-lisp:cons "snsTopicArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'customer-defined-values))
      (common-lisp:list
       (common-lisp:cons "customerDefinedValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-support-data-export-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-support-data-export-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-support-data-export-result-"))
   (data-set-request-id common-lisp:nil :type
    (common-lisp:or data-set-request-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-support-data-export-result
                    'make-start-support-data-export-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-support-data-export-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-support-data-export-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-set-request-id))
      (common-lisp:list
       (common-lisp:cons "dataSetRequestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-support-data-export-result))
   common-lisp:nil))
(common-lisp:deftype support-data-set-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun generate-data-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key data-set-type data-set-publication-date
                     role-name-arn destination-s3bucket-name
                     destination-s3prefix sns-topic-arn
                     customer-defined-values)
   (common-lisp:declare
    (common-lisp:ignorable data-set-type data-set-publication-date
     role-name-arn destination-s3bucket-name destination-s3prefix sns-topic-arn
     customer-defined-values))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-generate-data-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'marketplacecommerceanalytics-request
        aws-sdk/generator/operation::input "POST" "/" "GenerateDataSet"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'generate-data-set))
(common-lisp:progn
 (common-lisp:defun start-support-data-export
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key data-set-type from-date role-name-arn
                     destination-s3bucket-name destination-s3prefix
                     sns-topic-arn customer-defined-values)
   (common-lisp:declare
    (common-lisp:ignorable data-set-type from-date role-name-arn
     destination-s3bucket-name destination-s3prefix sns-topic-arn
     customer-defined-values))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-support-data-export-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'marketplacecommerceanalytics-request
        aws-sdk/generator/operation::input "POST" "/"
        "StartSupportDataExport"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-support-data-export))
