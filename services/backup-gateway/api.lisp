;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/backup-gateway/api
  (:use)
  (:nicknames #:aws/backup-gateway)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/backup-gateway/api)
(common-lisp:progn
 (common-lisp:defclass backup-gateway-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "backup-gateway" :protocol
                        :json))
 (common-lisp:export 'backup-gateway-request))
(common-lisp:progn
 (common-lisp:define-condition backup-gateway-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'backup-gateway-error))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("ConflictException" . conflict-exception)
    ("InternalServerException" . internal-server-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ThrottlingException" . throttling-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (backup-gateway-error)
     ((error-code :initarg :error-code :initform common-lisp:nil :reader
       access-denied-exception-error-code)
      (message :initarg :message :initform common-lisp:nil :reader
       access-denied-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception
                    'access-denied-exception-error-code
                    'access-denied-exception-message)))
(common-lisp:deftype activation-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (associate-gateway-to-server-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-associate-gateway-to-server-input-"))
   (gateway-arn (common-lisp:error ":gateway-arn is required") :type
    (common-lisp:or gateway-arn common-lisp:null))
   (server-arn (common-lisp:error ":server-arn is required") :type
    (common-lisp:or server-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'associate-gateway-to-server-input
                    'make-associate-gateway-to-server-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-gateway-to-server-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-gateway-to-server-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'server-arn))
      (common-lisp:list
       (common-lisp:cons "ServerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-gateway-to-server-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-gateway-to-server-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-associate-gateway-to-server-output-"))
   (gateway-arn common-lisp:nil :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'associate-gateway-to-server-output
                    'make-associate-gateway-to-server-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-gateway-to-server-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-gateway-to-server-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-gateway-to-server-output))
   common-lisp:nil))
(common-lisp:deftype average-upload-rate-limit () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (bandwidth-rate-limit-interval (:copier common-lisp:nil)
      (:conc-name "struct-shape-bandwidth-rate-limit-interval-"))
   (average-upload-rate-limit-in-bits-per-sec common-lisp:nil :type
    (common-lisp:or average-upload-rate-limit common-lisp:null))
   (days-of-week (common-lisp:error ":days-of-week is required") :type
    (common-lisp:or days-of-week common-lisp:null))
   (end-hour-of-day (common-lisp:error ":end-hour-of-day is required") :type
    (common-lisp:or hour-of-day common-lisp:null))
   (end-minute-of-hour (common-lisp:error ":end-minute-of-hour is required")
    :type (common-lisp:or minute-of-hour common-lisp:null))
   (start-hour-of-day (common-lisp:error ":start-hour-of-day is required")
    :type (common-lisp:or hour-of-day common-lisp:null))
   (start-minute-of-hour
    (common-lisp:error ":start-minute-of-hour is required") :type
    (common-lisp:or minute-of-hour common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'bandwidth-rate-limit-interval
                    'make-bandwidth-rate-limit-interval))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          bandwidth-rate-limit-interval))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          bandwidth-rate-limit-interval))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'average-upload-rate-limit-in-bits-per-sec))
      (common-lisp:list
       (common-lisp:cons "AverageUploadRateLimitInBitsPerSec"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'days-of-week))
      (common-lisp:list
       (common-lisp:cons "DaysOfWeek"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-hour-of-day))
      (common-lisp:list
       (common-lisp:cons "EndHourOfDay"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-minute-of-hour))
      (common-lisp:list
       (common-lisp:cons "EndMinuteOfHour"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-hour-of-day))
      (common-lisp:list
       (common-lisp:cons "StartHourOfDay"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'start-minute-of-hour))
      (common-lisp:list
       (common-lisp:cons "StartMinuteOfHour"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          bandwidth-rate-limit-interval))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype bandwidth-rate-limit-intervals ()
   '(trivial-types:proper-list bandwidth-rate-limit-interval))
 (common-lisp:defun |make-bandwidth-rate-limit-intervals|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            bandwidth-rate-limit-interval))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (backup-gateway-error)
     ((error-code :initarg :error-code :initform common-lisp:nil :reader
       conflict-exception-error-code)
      (message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-error-code
                    'conflict-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (create-gateway-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-gateway-input-"))
   (activation-key (common-lisp:error ":activation-key is required") :type
    (common-lisp:or activation-key common-lisp:null))
   (gateway-display-name
    (common-lisp:error ":gateway-display-name is required") :type
    (common-lisp:or name common-lisp:null))
   (gateway-type (common-lisp:error ":gateway-type is required") :type
    (common-lisp:or gateway-type common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-gateway-input 'make-create-gateway-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-gateway-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-gateway-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'activation-key))
      (common-lisp:list
       (common-lisp:cons "ActivationKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'gateway-display-name))
      (common-lisp:list
       (common-lisp:cons "GatewayDisplayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-type))
      (common-lisp:list
       (common-lisp:cons "GatewayType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-gateway-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-gateway-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-gateway-output-"))
   (gateway-arn common-lisp:nil :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-gateway-output 'make-create-gateway-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-gateway-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-gateway-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-gateway-output))
   common-lisp:nil))
(common-lisp:deftype day-of-month () 'common-lisp:integer)
(common-lisp:deftype day-of-week () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype days-of-week () '(trivial-types:proper-list day-of-week))
 (common-lisp:defun |make-days-of-week|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list day-of-week))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-gateway-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-gateway-input-"))
   (gateway-arn (common-lisp:error ":gateway-arn is required") :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-gateway-input 'make-delete-gateway-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-gateway-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-gateway-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-gateway-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-gateway-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-gateway-output-"))
   (gateway-arn common-lisp:nil :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-gateway-output 'make-delete-gateway-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-gateway-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-gateway-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-gateway-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-hypervisor-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-hypervisor-input-"))
   (hypervisor-arn (common-lisp:error ":hypervisor-arn is required") :type
    (common-lisp:or server-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-hypervisor-input 'make-delete-hypervisor-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-hypervisor-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-hypervisor-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hypervisor-arn))
      (common-lisp:list
       (common-lisp:cons "HypervisorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-hypervisor-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-hypervisor-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-hypervisor-output-"))
   (hypervisor-arn common-lisp:nil :type
    (common-lisp:or server-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-hypervisor-output 'make-delete-hypervisor-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-hypervisor-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-hypervisor-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hypervisor-arn))
      (common-lisp:list
       (common-lisp:cons "HypervisorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-hypervisor-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-gateway-from-server-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-disassociate-gateway-from-server-input-"))
   (gateway-arn (common-lisp:error ":gateway-arn is required") :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disassociate-gateway-from-server-input
                    'make-disassociate-gateway-from-server-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-gateway-from-server-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-gateway-from-server-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-gateway-from-server-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-gateway-from-server-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-disassociate-gateway-from-server-output-"))
   (gateway-arn common-lisp:nil :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disassociate-gateway-from-server-output
                    'make-disassociate-gateway-from-server-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-gateway-from-server-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-gateway-from-server-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-gateway-from-server-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (gateway (:copier common-lisp:nil) (:conc-name "struct-shape-gateway-"))
   (gateway-arn common-lisp:nil :type
    (common-lisp:or gateway-arn common-lisp:null))
   (gateway-display-name common-lisp:nil :type
    (common-lisp:or name common-lisp:null))
   (gateway-type common-lisp:nil :type
    (common-lisp:or gateway-type common-lisp:null))
   (hypervisor-id common-lisp:nil :type
    (common-lisp:or hypervisor-id common-lisp:null))
   (last-seen-time common-lisp:nil :type
    (common-lisp:or time common-lisp:null)))
 (common-lisp:export (common-lisp:list 'gateway 'make-gateway))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input gateway))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input gateway))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'gateway-display-name))
      (common-lisp:list
       (common-lisp:cons "GatewayDisplayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-type))
      (common-lisp:list
       (common-lisp:cons "GatewayType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hypervisor-id))
      (common-lisp:list
       (common-lisp:cons "HypervisorId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-seen-time))
      (common-lisp:list
       (common-lisp:cons "LastSeenTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input gateway))
   common-lisp:nil))
(common-lisp:deftype gateway-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (gateway-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-gateway-details-"))
   (gateway-arn common-lisp:nil :type
    (common-lisp:or gateway-arn common-lisp:null))
   (gateway-display-name common-lisp:nil :type
    (common-lisp:or name common-lisp:null))
   (gateway-type common-lisp:nil :type
    (common-lisp:or gateway-type common-lisp:null))
   (hypervisor-id common-lisp:nil :type
    (common-lisp:or hypervisor-id common-lisp:null))
   (last-seen-time common-lisp:nil :type
    (common-lisp:or time common-lisp:null))
   (maintenance-start-time common-lisp:nil :type
    (common-lisp:or maintenance-start-time common-lisp:null))
   (next-update-availability-time common-lisp:nil :type
    (common-lisp:or time common-lisp:null))
   (vpc-endpoint common-lisp:nil :type
    (common-lisp:or vpc-endpoint common-lisp:null)))
 (common-lisp:export (common-lisp:list 'gateway-details 'make-gateway-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input gateway-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input gateway-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'gateway-display-name))
      (common-lisp:list
       (common-lisp:cons "GatewayDisplayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-type))
      (common-lisp:list
       (common-lisp:cons "GatewayType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hypervisor-id))
      (common-lisp:list
       (common-lisp:cons "HypervisorId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-seen-time))
      (common-lisp:list
       (common-lisp:cons "LastSeenTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'maintenance-start-time))
      (common-lisp:list
       (common-lisp:cons "MaintenanceStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'next-update-availability-time))
      (common-lisp:list
       (common-lisp:cons "NextUpdateAvailabilityTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-endpoint))
      (common-lisp:list
       (common-lisp:cons "VpcEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input gateway-details))
   common-lisp:nil))
(common-lisp:deftype gateway-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype gateways () '(trivial-types:proper-list gateway))
 (common-lisp:defun |make-gateways|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list gateway))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (get-bandwidth-rate-limit-schedule-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-bandwidth-rate-limit-schedule-input-"))
   (gateway-arn (common-lisp:error ":gateway-arn is required") :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bandwidth-rate-limit-schedule-input
                    'make-get-bandwidth-rate-limit-schedule-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-bandwidth-rate-limit-schedule-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-bandwidth-rate-limit-schedule-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-bandwidth-rate-limit-schedule-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-bandwidth-rate-limit-schedule-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-bandwidth-rate-limit-schedule-output-"))
   (bandwidth-rate-limit-intervals common-lisp:nil :type
    (common-lisp:or bandwidth-rate-limit-intervals common-lisp:null))
   (gateway-arn common-lisp:nil :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bandwidth-rate-limit-schedule-output
                    'make-get-bandwidth-rate-limit-schedule-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-bandwidth-rate-limit-schedule-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-bandwidth-rate-limit-schedule-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'bandwidth-rate-limit-intervals))
      (common-lisp:list
       (common-lisp:cons "BandwidthRateLimitIntervals"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-bandwidth-rate-limit-schedule-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-gateway-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-gateway-input-"))
   (gateway-arn (common-lisp:error ":gateway-arn is required") :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-gateway-input 'make-get-gateway-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-gateway-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-gateway-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-gateway-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-gateway-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-gateway-output-"))
   (gateway common-lisp:nil :type
    (common-lisp:or gateway-details common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-gateway-output 'make-get-gateway-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-gateway-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-gateway-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway))
      (common-lisp:list
       (common-lisp:cons "Gateway"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-gateway-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-hypervisor-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-hypervisor-input-"))
   (hypervisor-arn (common-lisp:error ":hypervisor-arn is required") :type
    (common-lisp:or server-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-hypervisor-input 'make-get-hypervisor-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-hypervisor-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-hypervisor-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hypervisor-arn))
      (common-lisp:list
       (common-lisp:cons "HypervisorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-hypervisor-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-hypervisor-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-hypervisor-output-"))
   (hypervisor common-lisp:nil :type
    (common-lisp:or hypervisor-details common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-hypervisor-output 'make-get-hypervisor-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-hypervisor-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-hypervisor-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hypervisor))
      (common-lisp:list
       (common-lisp:cons "Hypervisor"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-hypervisor-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-hypervisor-property-mappings-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-hypervisor-property-mappings-input-"))
   (hypervisor-arn (common-lisp:error ":hypervisor-arn is required") :type
    (common-lisp:or server-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-hypervisor-property-mappings-input
                    'make-get-hypervisor-property-mappings-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-hypervisor-property-mappings-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-hypervisor-property-mappings-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hypervisor-arn))
      (common-lisp:list
       (common-lisp:cons "HypervisorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-hypervisor-property-mappings-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-hypervisor-property-mappings-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-hypervisor-property-mappings-output-"))
   (hypervisor-arn common-lisp:nil :type
    (common-lisp:or server-arn common-lisp:null))
   (iam-role-arn common-lisp:nil :type
    (common-lisp:or iam-role-arn common-lisp:null))
   (vmware-to-aws-tag-mappings common-lisp:nil :type
    (common-lisp:or vmware-to-aws-tag-mappings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-hypervisor-property-mappings-output
                    'make-get-hypervisor-property-mappings-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-hypervisor-property-mappings-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-hypervisor-property-mappings-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hypervisor-arn))
      (common-lisp:list
       (common-lisp:cons "HypervisorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iam-role-arn))
      (common-lisp:list
       (common-lisp:cons "IamRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'vmware-to-aws-tag-mappings))
      (common-lisp:list
       (common-lisp:cons "VmwareToAwsTagMappings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-hypervisor-property-mappings-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-virtual-machine-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-virtual-machine-input-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or resource-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-virtual-machine-input
                    'make-get-virtual-machine-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-virtual-machine-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-virtual-machine-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-virtual-machine-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-virtual-machine-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-virtual-machine-output-"))
   (virtual-machine common-lisp:nil :type
    (common-lisp:or virtual-machine-details common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-virtual-machine-output
                    'make-get-virtual-machine-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-virtual-machine-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-virtual-machine-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'virtual-machine))
      (common-lisp:list
       (common-lisp:cons "VirtualMachine"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-virtual-machine-output))
   common-lisp:nil))
(common-lisp:deftype host () 'common-lisp:string)
(common-lisp:deftype hour-of-day () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (hypervisor (:copier common-lisp:nil)
      (:conc-name "struct-shape-hypervisor-"))
   (host common-lisp:nil :type (common-lisp:or host common-lisp:null))
   (hypervisor-arn common-lisp:nil :type
    (common-lisp:or server-arn common-lisp:null))
   (kms-key-arn common-lisp:nil :type
    (common-lisp:or kms-key-arn common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (state common-lisp:nil :type
    (common-lisp:or hypervisor-state common-lisp:null)))
 (common-lisp:export (common-lisp:list 'hypervisor 'make-hypervisor))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input hypervisor))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input hypervisor))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host))
      (common-lisp:list
       (common-lisp:cons "Host"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hypervisor-arn))
      (common-lisp:list
       (common-lisp:cons "HypervisorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key-arn))
      (common-lisp:list
       (common-lisp:cons "KmsKeyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input hypervisor))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (hypervisor-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-hypervisor-details-"))
   (host common-lisp:nil :type (common-lisp:or host common-lisp:null))
   (hypervisor-arn common-lisp:nil :type
    (common-lisp:or server-arn common-lisp:null))
   (kms-key-arn common-lisp:nil :type
    (common-lisp:or kms-key-arn common-lisp:null))
   (last-successful-metadata-sync-time common-lisp:nil :type
    (common-lisp:or time common-lisp:null))
   (latest-metadata-sync-status common-lisp:nil :type
    (common-lisp:or sync-metadata-status common-lisp:null))
   (latest-metadata-sync-status-message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (log-group-arn common-lisp:nil :type
    (common-lisp:or log-group-arn common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (state common-lisp:nil :type
    (common-lisp:or hypervisor-state common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'hypervisor-details 'make-hypervisor-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input hypervisor-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input hypervisor-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host))
      (common-lisp:list
       (common-lisp:cons "Host"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hypervisor-arn))
      (common-lisp:list
       (common-lisp:cons "HypervisorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key-arn))
      (common-lisp:list
       (common-lisp:cons "KmsKeyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-successful-metadata-sync-time))
      (common-lisp:list
       (common-lisp:cons "LastSuccessfulMetadataSyncTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'latest-metadata-sync-status))
      (common-lisp:list
       (common-lisp:cons "LatestMetadataSyncStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'latest-metadata-sync-status-message))
      (common-lisp:list
       (common-lisp:cons "LatestMetadataSyncStatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-group-arn))
      (common-lisp:list
       (common-lisp:cons "LogGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input hypervisor-details))
   common-lisp:nil))
(common-lisp:deftype hypervisor-id () 'common-lisp:string)
(common-lisp:deftype hypervisor-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype hypervisors () '(trivial-types:proper-list hypervisor))
 (common-lisp:defun |make-hypervisors|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list hypervisor))
   aws-sdk/generator/shape::members))
(common-lisp:deftype iam-role-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (import-hypervisor-configuration-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-import-hypervisor-configuration-input-"))
   (host (common-lisp:error ":host is required") :type
    (common-lisp:or host common-lisp:null))
   (kms-key-arn common-lisp:nil :type
    (common-lisp:or kms-key-arn common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or name common-lisp:null))
   (password common-lisp:nil :type (common-lisp:or password common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null))
   (username common-lisp:nil :type (common-lisp:or username common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-hypervisor-configuration-input
                    'make-import-hypervisor-configuration-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          import-hypervisor-configuration-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          import-hypervisor-configuration-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host))
      (common-lisp:list
       (common-lisp:cons "Host"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key-arn))
      (common-lisp:list
       (common-lisp:cons "KmsKeyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'password))
      (common-lisp:list
       (common-lisp:cons "Password"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          import-hypervisor-configuration-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (import-hypervisor-configuration-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-import-hypervisor-configuration-output-"))
   (hypervisor-arn common-lisp:nil :type
    (common-lisp:or server-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-hypervisor-configuration-output
                    'make-import-hypervisor-configuration-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          import-hypervisor-configuration-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          import-hypervisor-configuration-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hypervisor-arn))
      (common-lisp:list
       (common-lisp:cons "HypervisorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          import-hypervisor-configuration-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (backup-gateway-error)
     ((error-code :initarg :error-code :initform common-lisp:nil :reader
       internal-server-exception-error-code)
      (message :initarg :message :initform common-lisp:nil :reader
       internal-server-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-error-code
                    'internal-server-exception-message)))
(common-lisp:deftype kms-key-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (list-gateways-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-gateways-input-"))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-gateways-input 'make-list-gateways-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-gateways-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-gateways-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-gateways-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-gateways-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-gateways-output-"))
   (gateways common-lisp:nil :type (common-lisp:or gateways common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-gateways-output 'make-list-gateways-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-gateways-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-gateways-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateways))
      (common-lisp:list
       (common-lisp:cons "Gateways"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-gateways-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-hypervisors-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-hypervisors-input-"))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-hypervisors-input 'make-list-hypervisors-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-hypervisors-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-hypervisors-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-hypervisors-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-hypervisors-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-hypervisors-output-"))
   (hypervisors common-lisp:nil :type
    (common-lisp:or hypervisors common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-hypervisors-output 'make-list-hypervisors-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-hypervisors-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-hypervisors-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hypervisors))
      (common-lisp:list
       (common-lisp:cons "Hypervisors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-hypervisors-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-input-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or resource-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-input
                    'make-list-tags-for-resource-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-output-"))
   (resource-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-output
                    'make-list-tags-for-resource-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-virtual-machines-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-virtual-machines-input-"))
   (hypervisor-arn common-lisp:nil :type
    (common-lisp:or server-arn common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-virtual-machines-input
                    'make-list-virtual-machines-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-virtual-machines-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-virtual-machines-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hypervisor-arn))
      (common-lisp:list
       (common-lisp:cons "HypervisorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-virtual-machines-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-virtual-machines-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-virtual-machines-output-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (virtual-machines common-lisp:nil :type
    (common-lisp:or virtual-machines common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-virtual-machines-output
                    'make-list-virtual-machines-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-virtual-machines-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-virtual-machines-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'virtual-machines))
      (common-lisp:list
       (common-lisp:cons "VirtualMachines"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-virtual-machines-output))
   common-lisp:nil))
(common-lisp:deftype log-group-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (maintenance-start-time (:copier common-lisp:nil)
      (:conc-name "struct-shape-maintenance-start-time-"))
   (day-of-month common-lisp:nil :type
    (common-lisp:or day-of-month common-lisp:null))
   (day-of-week common-lisp:nil :type
    (common-lisp:or day-of-week common-lisp:null))
   (hour-of-day (common-lisp:error ":hour-of-day is required") :type
    (common-lisp:or hour-of-day common-lisp:null))
   (minute-of-hour (common-lisp:error ":minute-of-hour is required") :type
    (common-lisp:or minute-of-hour common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'maintenance-start-time 'make-maintenance-start-time))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          maintenance-start-time))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          maintenance-start-time))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'day-of-month))
      (common-lisp:list
       (common-lisp:cons "DayOfMonth"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'day-of-week))
      (common-lisp:list
       (common-lisp:cons "DayOfWeek"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hour-of-day))
      (common-lisp:list
       (common-lisp:cons "HourOfDay"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'minute-of-hour))
      (common-lisp:list
       (common-lisp:cons "MinuteOfHour"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          maintenance-start-time))
   common-lisp:nil))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype minute-of-hour () 'common-lisp:integer)
(common-lisp:deftype name () 'common-lisp:string)
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:deftype password () 'common-lisp:string)
(common-lisp:deftype path () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (put-bandwidth-rate-limit-schedule-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-bandwidth-rate-limit-schedule-input-"))
   (bandwidth-rate-limit-intervals
    (common-lisp:error ":bandwidth-rate-limit-intervals is required") :type
    (common-lisp:or bandwidth-rate-limit-intervals common-lisp:null))
   (gateway-arn (common-lisp:error ":gateway-arn is required") :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-bandwidth-rate-limit-schedule-input
                    'make-put-bandwidth-rate-limit-schedule-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-bandwidth-rate-limit-schedule-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-bandwidth-rate-limit-schedule-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'bandwidth-rate-limit-intervals))
      (common-lisp:list
       (common-lisp:cons "BandwidthRateLimitIntervals"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-bandwidth-rate-limit-schedule-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-bandwidth-rate-limit-schedule-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-bandwidth-rate-limit-schedule-output-"))
   (gateway-arn common-lisp:nil :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-bandwidth-rate-limit-schedule-output
                    'make-put-bandwidth-rate-limit-schedule-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-bandwidth-rate-limit-schedule-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-bandwidth-rate-limit-schedule-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-bandwidth-rate-limit-schedule-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-hypervisor-property-mappings-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-hypervisor-property-mappings-input-"))
   (hypervisor-arn (common-lisp:error ":hypervisor-arn is required") :type
    (common-lisp:or server-arn common-lisp:null))
   (iam-role-arn (common-lisp:error ":iam-role-arn is required") :type
    (common-lisp:or iam-role-arn common-lisp:null))
   (vmware-to-aws-tag-mappings
    (common-lisp:error ":vmware-to-aws-tag-mappings is required") :type
    (common-lisp:or vmware-to-aws-tag-mappings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-hypervisor-property-mappings-input
                    'make-put-hypervisor-property-mappings-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-hypervisor-property-mappings-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-hypervisor-property-mappings-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hypervisor-arn))
      (common-lisp:list
       (common-lisp:cons "HypervisorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iam-role-arn))
      (common-lisp:list
       (common-lisp:cons "IamRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'vmware-to-aws-tag-mappings))
      (common-lisp:list
       (common-lisp:cons "VmwareToAwsTagMappings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-hypervisor-property-mappings-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-hypervisor-property-mappings-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-hypervisor-property-mappings-output-"))
   (hypervisor-arn common-lisp:nil :type
    (common-lisp:or server-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-hypervisor-property-mappings-output
                    'make-put-hypervisor-property-mappings-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-hypervisor-property-mappings-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-hypervisor-property-mappings-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hypervisor-arn))
      (common-lisp:list
       (common-lisp:cons "HypervisorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-hypervisor-property-mappings-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-maintenance-start-time-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-maintenance-start-time-input-"))
   (day-of-month common-lisp:nil :type
    (common-lisp:or day-of-month common-lisp:null))
   (day-of-week common-lisp:nil :type
    (common-lisp:or day-of-week common-lisp:null))
   (gateway-arn (common-lisp:error ":gateway-arn is required") :type
    (common-lisp:or gateway-arn common-lisp:null))
   (hour-of-day (common-lisp:error ":hour-of-day is required") :type
    (common-lisp:or hour-of-day common-lisp:null))
   (minute-of-hour (common-lisp:error ":minute-of-hour is required") :type
    (common-lisp:or minute-of-hour common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-maintenance-start-time-input
                    'make-put-maintenance-start-time-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-maintenance-start-time-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-maintenance-start-time-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'day-of-month))
      (common-lisp:list
       (common-lisp:cons "DayOfMonth"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'day-of-week))
      (common-lisp:list
       (common-lisp:cons "DayOfWeek"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hour-of-day))
      (common-lisp:list
       (common-lisp:cons "HourOfDay"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'minute-of-hour))
      (common-lisp:list
       (common-lisp:cons "MinuteOfHour"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-maintenance-start-time-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-maintenance-start-time-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-maintenance-start-time-output-"))
   (gateway-arn common-lisp:nil :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-maintenance-start-time-output
                    'make-put-maintenance-start-time-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-maintenance-start-time-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-maintenance-start-time-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-maintenance-start-time-output))
   common-lisp:nil))
(common-lisp:deftype resource-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (backup-gateway-error)
     ((error-code :initarg :error-code :initform common-lisp:nil :reader
       resource-not-found-exception-error-code)
      (message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-error-code
                    'resource-not-found-exception-message)))
(common-lisp:deftype server-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (start-virtual-machines-metadata-sync-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-virtual-machines-metadata-sync-input-"))
   (hypervisor-arn (common-lisp:error ":hypervisor-arn is required") :type
    (common-lisp:or server-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-virtual-machines-metadata-sync-input
                    'make-start-virtual-machines-metadata-sync-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-virtual-machines-metadata-sync-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-virtual-machines-metadata-sync-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hypervisor-arn))
      (common-lisp:list
       (common-lisp:cons "HypervisorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-virtual-machines-metadata-sync-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-virtual-machines-metadata-sync-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-virtual-machines-metadata-sync-output-"))
   (hypervisor-arn common-lisp:nil :type
    (common-lisp:or server-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-virtual-machines-metadata-sync-output
                    'make-start-virtual-machines-metadata-sync-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-virtual-machines-metadata-sync-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-virtual-machines-metadata-sync-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hypervisor-arn))
      (common-lisp:list
       (common-lisp:cons "HypervisorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-virtual-machines-metadata-sync-output))
   common-lisp:nil))
(common-lisp:deftype sync-metadata-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (tag (:copier common-lisp:nil) (:conc-name "struct-shape-tag-"))
   (key (common-lisp:error ":key is required") :type
    (common-lisp:or tag-key common-lisp:null))
   (value (common-lisp:error ":value is required") :type
    (common-lisp:or tag-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag))
   common-lisp:nil))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-keys () '(trivial-types:proper-list tag-key))
 (common-lisp:defun |make-tag-keys|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-input-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or resource-arn common-lisp:null))
   (tags (common-lisp:error ":tags is required") :type
    (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-resource-input 'make-tag-resource-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-output-"))
   (resource-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-resource-output 'make-tag-resource-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-output))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tags () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-tags|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (test-hypervisor-configuration-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-test-hypervisor-configuration-input-"))
   (gateway-arn (common-lisp:error ":gateway-arn is required") :type
    (common-lisp:or gateway-arn common-lisp:null))
   (host (common-lisp:error ":host is required") :type
    (common-lisp:or host common-lisp:null))
   (password common-lisp:nil :type (common-lisp:or password common-lisp:null))
   (username common-lisp:nil :type (common-lisp:or username common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'test-hypervisor-configuration-input
                    'make-test-hypervisor-configuration-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          test-hypervisor-configuration-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          test-hypervisor-configuration-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host))
      (common-lisp:list
       (common-lisp:cons "Host"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'password))
      (common-lisp:list
       (common-lisp:cons "Password"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          test-hypervisor-configuration-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (test-hypervisor-configuration-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-test-hypervisor-configuration-output-")))
 (common-lisp:export
  (common-lisp:list 'test-hypervisor-configuration-output
                    'make-test-hypervisor-configuration-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          test-hypervisor-configuration-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          test-hypervisor-configuration-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          test-hypervisor-configuration-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (backup-gateway-error)
     ((error-code :initarg :error-code :initform common-lisp:nil :reader
       throttling-exception-error-code)
      (message :initarg :message :initform common-lisp:nil :reader
       throttling-exception-message)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-error-code
                    'throttling-exception-message)))
(common-lisp:deftype time () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-input-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or resource-arn common-lisp:null))
   (tag-keys (common-lisp:error ":tag-keys is required") :type
    (common-lisp:or tag-keys common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'untag-resource-input 'make-untag-resource-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input untag-resource-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input untag-resource-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-keys))
      (common-lisp:list
       (common-lisp:cons "TagKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input untag-resource-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-output-"))
   (resource-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'untag-resource-output 'make-untag-resource-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-gateway-information-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-gateway-information-input-"))
   (gateway-arn (common-lisp:error ":gateway-arn is required") :type
    (common-lisp:or gateway-arn common-lisp:null))
   (gateway-display-name common-lisp:nil :type
    (common-lisp:or name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-gateway-information-input
                    'make-update-gateway-information-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-information-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-information-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'gateway-display-name))
      (common-lisp:list
       (common-lisp:cons "GatewayDisplayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-information-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-gateway-information-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-gateway-information-output-"))
   (gateway-arn common-lisp:nil :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-gateway-information-output
                    'make-update-gateway-information-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-information-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-information-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-information-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-gateway-software-now-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-gateway-software-now-input-"))
   (gateway-arn (common-lisp:error ":gateway-arn is required") :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-gateway-software-now-input
                    'make-update-gateway-software-now-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-software-now-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-software-now-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-software-now-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-gateway-software-now-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-gateway-software-now-output-"))
   (gateway-arn common-lisp:nil :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-gateway-software-now-output
                    'make-update-gateway-software-now-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-software-now-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-software-now-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-software-now-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-hypervisor-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-hypervisor-input-"))
   (host common-lisp:nil :type (common-lisp:or host common-lisp:null))
   (hypervisor-arn (common-lisp:error ":hypervisor-arn is required") :type
    (common-lisp:or server-arn common-lisp:null))
   (log-group-arn common-lisp:nil :type
    (common-lisp:or log-group-arn common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (password common-lisp:nil :type (common-lisp:or password common-lisp:null))
   (username common-lisp:nil :type (common-lisp:or username common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-hypervisor-input 'make-update-hypervisor-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-hypervisor-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-hypervisor-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host))
      (common-lisp:list
       (common-lisp:cons "Host"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hypervisor-arn))
      (common-lisp:list
       (common-lisp:cons "HypervisorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-group-arn))
      (common-lisp:list
       (common-lisp:cons "LogGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'password))
      (common-lisp:list
       (common-lisp:cons "Password"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-hypervisor-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-hypervisor-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-hypervisor-output-"))
   (hypervisor-arn common-lisp:nil :type
    (common-lisp:or server-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-hypervisor-output 'make-update-hypervisor-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-hypervisor-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-hypervisor-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hypervisor-arn))
      (common-lisp:list
       (common-lisp:cons "HypervisorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-hypervisor-output))
   common-lisp:nil))
(common-lisp:deftype username () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (backup-gateway-error)
     ((error-code :initarg :error-code :initform common-lisp:nil :reader
       validation-exception-error-code)
      (message :initarg :message :initform common-lisp:nil :reader
       validation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-error-code
                    'validation-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (virtual-machine (:copier common-lisp:nil)
      (:conc-name "struct-shape-virtual-machine-"))
   (host-name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (hypervisor-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (last-backup-date common-lisp:nil :type
    (common-lisp:or time common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (path common-lisp:nil :type (common-lisp:or path common-lisp:null))
   (resource-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null)))
 (common-lisp:export (common-lisp:list 'virtual-machine 'make-virtual-machine))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input virtual-machine))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input virtual-machine))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host-name))
      (common-lisp:list
       (common-lisp:cons "HostName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hypervisor-id))
      (common-lisp:list
       (common-lisp:cons "HypervisorId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-backup-date))
      (common-lisp:list
       (common-lisp:cons "LastBackupDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'path))
      (common-lisp:list
       (common-lisp:cons "Path"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input virtual-machine))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (virtual-machine-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-virtual-machine-details-"))
   (host-name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (hypervisor-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (last-backup-date common-lisp:nil :type
    (common-lisp:or time common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (path common-lisp:nil :type (common-lisp:or path common-lisp:null))
   (resource-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (vmware-tags common-lisp:nil :type
    (common-lisp:or vmware-tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'virtual-machine-details 'make-virtual-machine-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          virtual-machine-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          virtual-machine-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host-name))
      (common-lisp:list
       (common-lisp:cons "HostName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hypervisor-id))
      (common-lisp:list
       (common-lisp:cons "HypervisorId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-backup-date))
      (common-lisp:list
       (common-lisp:cons "LastBackupDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'path))
      (common-lisp:list
       (common-lisp:cons "Path"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vmware-tags))
      (common-lisp:list
       (common-lisp:cons "VmwareTags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          virtual-machine-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype virtual-machines ()
   '(trivial-types:proper-list virtual-machine))
 (common-lisp:defun |make-virtual-machines|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list virtual-machine))
   aws-sdk/generator/shape::members))
(common-lisp:deftype vmware-category () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (vmware-tag (:copier common-lisp:nil)
      (:conc-name "struct-shape-vmware-tag-"))
   (vmware-category common-lisp:nil :type
    (common-lisp:or vmware-category common-lisp:null))
   (vmware-tag-description common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (vmware-tag-name common-lisp:nil :type
    (common-lisp:or vmware-tag-name common-lisp:null)))
 (common-lisp:export (common-lisp:list 'vmware-tag 'make-vmware-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input vmware-tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input vmware-tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vmware-category))
      (common-lisp:list
       (common-lisp:cons "VmwareCategory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'vmware-tag-description))
      (common-lisp:list
       (common-lisp:cons "VmwareTagDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vmware-tag-name))
      (common-lisp:list
       (common-lisp:cons "VmwareTagName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input vmware-tag))
   common-lisp:nil))
(common-lisp:deftype vmware-tag-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype vmware-tags () '(trivial-types:proper-list vmware-tag))
 (common-lisp:defun |make-vmware-tags|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list vmware-tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (vmware-to-aws-tag-mapping (:copier common-lisp:nil)
      (:conc-name "struct-shape-vmware-to-aws-tag-mapping-"))
   (aws-tag-key (common-lisp:error ":aws-tag-key is required") :type
    (common-lisp:or tag-key common-lisp:null))
   (aws-tag-value (common-lisp:error ":aws-tag-value is required") :type
    (common-lisp:or tag-value common-lisp:null))
   (vmware-category (common-lisp:error ":vmware-category is required") :type
    (common-lisp:or vmware-category common-lisp:null))
   (vmware-tag-name (common-lisp:error ":vmware-tag-name is required") :type
    (common-lisp:or vmware-tag-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'vmware-to-aws-tag-mapping
                    'make-vmware-to-aws-tag-mapping))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          vmware-to-aws-tag-mapping))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          vmware-to-aws-tag-mapping))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aws-tag-key))
      (common-lisp:list
       (common-lisp:cons "AwsTagKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aws-tag-value))
      (common-lisp:list
       (common-lisp:cons "AwsTagValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vmware-category))
      (common-lisp:list
       (common-lisp:cons "VmwareCategory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vmware-tag-name))
      (common-lisp:list
       (common-lisp:cons "VmwareTagName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          vmware-to-aws-tag-mapping))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype vmware-to-aws-tag-mappings ()
   '(trivial-types:proper-list vmware-to-aws-tag-mapping))
 (common-lisp:defun |make-vmware-to-aws-tag-mappings|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            vmware-to-aws-tag-mapping))
   aws-sdk/generator/shape::members))
(common-lisp:deftype vpc-endpoint () 'common-lisp:string)
common-lisp:nil
(common-lisp:progn
 (common-lisp:defun associate-gateway-to-server
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn server-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn server-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-associate-gateway-to-server-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "AssociateGatewayToServer"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'associate-gateway-to-server))
(common-lisp:progn
 (common-lisp:defun create-gateway
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key activation-key gateway-display-name
                     gateway-type tags)
   (common-lisp:declare
    (common-lisp:ignorable activation-key gateway-display-name gateway-type
     tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-gateway-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "CreateGateway"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-gateway))
(common-lisp:progn
 (common-lisp:defun delete-gateway
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-gateway-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DeleteGateway"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-gateway))
(common-lisp:progn
 (common-lisp:defun delete-hypervisor
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hypervisor-arn)
   (common-lisp:declare (common-lisp:ignorable hypervisor-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-hypervisor-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DeleteHypervisor"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-hypervisor))
(common-lisp:progn
 (common-lisp:defun disassociate-gateway-from-server
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-disassociate-gateway-from-server-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DisassociateGatewayFromServer"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'disassociate-gateway-from-server))
(common-lisp:progn
 (common-lisp:defun get-bandwidth-rate-limit-schedule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-bandwidth-rate-limit-schedule-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "GetBandwidthRateLimitSchedule"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-bandwidth-rate-limit-schedule))
(common-lisp:progn
 (common-lisp:defun get-gateway
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-gateway-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "GetGateway"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-gateway))
(common-lisp:progn
 (common-lisp:defun get-hypervisor
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hypervisor-arn)
   (common-lisp:declare (common-lisp:ignorable hypervisor-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-hypervisor-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "GetHypervisor"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-hypervisor))
(common-lisp:progn
 (common-lisp:defun get-hypervisor-property-mappings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hypervisor-arn)
   (common-lisp:declare (common-lisp:ignorable hypervisor-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-hypervisor-property-mappings-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "GetHypervisorPropertyMappings"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-hypervisor-property-mappings))
(common-lisp:progn
 (common-lisp:defun get-virtual-machine
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-virtual-machine-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "GetVirtualMachine"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-virtual-machine))
(common-lisp:progn
 (common-lisp:defun import-hypervisor-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key host kms-key-arn name password tags
                     username)
   (common-lisp:declare
    (common-lisp:ignorable host kms-key-arn name password tags username))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-import-hypervisor-configuration-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ImportHypervisorConfiguration"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'import-hypervisor-configuration))
(common-lisp:progn
 (common-lisp:defun list-gateways
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-gateways-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListGateways"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-gateways))
(common-lisp:progn
 (common-lisp:defun list-hypervisors
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-hypervisors-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListHypervisors"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-hypervisors))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListTagsForResource"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun list-virtual-machines
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hypervisor-arn max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable hypervisor-arn max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-virtual-machines-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListVirtualMachines"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-virtual-machines))
(common-lisp:progn
 (common-lisp:defun put-bandwidth-rate-limit-schedule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bandwidth-rate-limit-intervals
                     gateway-arn)
   (common-lisp:declare
    (common-lisp:ignorable bandwidth-rate-limit-intervals gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-bandwidth-rate-limit-schedule-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "PutBandwidthRateLimitSchedule"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-bandwidth-rate-limit-schedule))
(common-lisp:progn
 (common-lisp:defun put-hypervisor-property-mappings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hypervisor-arn iam-role-arn
                     vmware-to-aws-tag-mappings)
   (common-lisp:declare
    (common-lisp:ignorable hypervisor-arn iam-role-arn
     vmware-to-aws-tag-mappings))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-hypervisor-property-mappings-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "PutHypervisorPropertyMappings"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-hypervisor-property-mappings))
(common-lisp:progn
 (common-lisp:defun put-maintenance-start-time
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key day-of-month day-of-week gateway-arn
                     hour-of-day minute-of-hour)
   (common-lisp:declare
    (common-lisp:ignorable day-of-month day-of-week gateway-arn hour-of-day
     minute-of-hour))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-maintenance-start-time-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "PutMaintenanceStartTime"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-maintenance-start-time))
(common-lisp:progn
 (common-lisp:defun start-virtual-machines-metadata-sync
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hypervisor-arn)
   (common-lisp:declare (common-lisp:ignorable hypervisor-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-virtual-machines-metadata-sync-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "StartVirtualMachinesMetadataSync"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-virtual-machines-metadata-sync))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "TagResource"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun test-hypervisor-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn host password username)
   (common-lisp:declare
    (common-lisp:ignorable gateway-arn host password username))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-test-hypervisor-configuration-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "TestHypervisorConfiguration"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'test-hypervisor-configuration))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "UntagResource"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-gateway-information
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn gateway-display-name)
   (common-lisp:declare
    (common-lisp:ignorable gateway-arn gateway-display-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-gateway-information-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "UpdateGatewayInformation"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-gateway-information))
(common-lisp:progn
 (common-lisp:defun update-gateway-software-now
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-gateway-software-now-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "UpdateGatewaySoftwareNow"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-gateway-software-now))
(common-lisp:progn
 (common-lisp:defun update-hypervisor
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key host hypervisor-arn log-group-arn name
                     password username)
   (common-lisp:declare
    (common-lisp:ignorable host hypervisor-arn log-group-arn name password
     username))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-hypervisor-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "UpdateHypervisor"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-hypervisor))
