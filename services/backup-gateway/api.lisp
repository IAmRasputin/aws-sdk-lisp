;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/backup-gateway/api
  (:use)
  (:nicknames #:aws/backup-gateway)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/backup-gateway/api)
(common-lisp:progn
 (common-lisp:defclass backup-gateway-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "backup-gateway" :protocol
                        :json))
 (common-lisp:export 'backup-gateway-request))
(common-lisp:progn
 (common-lisp:define-condition backup-gateway-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'backup-gateway-error))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("ConflictException" . conflict-exception)
    ("InternalServerException" . internal-server-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ThrottlingException" . throttling-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (backup-gateway-error)
     ((error-code :initarg :error-code :initform common-lisp:nil :reader
       access-denied-exception-error-code)
      (message :initarg :message :initform common-lisp:nil :reader
       access-denied-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception
                    'access-denied-exception-error-code
                    'access-denied-exception-message)))
(common-lisp:deftype activation-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass associate-gateway-to-server-input common-lisp:nil
                       ((server-arn :initarg :server-arn :type
                         (common-lisp:or server-arn common-lisp:null) :accessor
                         %associate-gateway-to-server-input-server-arn
                         :initform
                         (common-lisp:error ":server-arn is required"))
                        (gateway-arn :initarg :gateway-arn :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         %associate-gateway-to-server-input-gateway-arn
                         :initform
                         (common-lisp:error ":gateway-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'associate-gateway-to-server-input
                    'make-associate-gateway-to-server-input))
 (common-lisp:defun make-associate-gateway-to-server-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key server-arn gateway-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'associate-gateway-to-server-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-gateway-to-server-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-gateway-to-server-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'server-arn))
      (common-lisp:list
       (common-lisp:cons "ServerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-gateway-to-server-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass associate-gateway-to-server-output common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         %associate-gateway-to-server-output-gateway-arn
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'associate-gateway-to-server-output
                    'make-associate-gateway-to-server-output))
 (common-lisp:defun make-associate-gateway-to-server-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key gateway-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'associate-gateway-to-server-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-gateway-to-server-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-gateway-to-server-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-gateway-to-server-output))
   common-lisp:nil))
(common-lisp:deftype average-upload-rate-limit () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass bandwidth-rate-limit-interval common-lisp:nil
                       ((start-minute-of-hour :initarg :start-minute-of-hour
                         :type (common-lisp:or minute-of-hour common-lisp:null)
                         :accessor
                         %bandwidth-rate-limit-interval-start-minute-of-hour
                         :initform
                         (common-lisp:error
                          ":start-minute-of-hour is required"))
                        (start-hour-of-day :initarg :start-hour-of-day :type
                         (common-lisp:or hour-of-day common-lisp:null)
                         :accessor
                         %bandwidth-rate-limit-interval-start-hour-of-day
                         :initform
                         (common-lisp:error ":start-hour-of-day is required"))
                        (end-minute-of-hour :initarg :end-minute-of-hour :type
                         (common-lisp:or minute-of-hour common-lisp:null)
                         :accessor
                         %bandwidth-rate-limit-interval-end-minute-of-hour
                         :initform
                         (common-lisp:error ":end-minute-of-hour is required"))
                        (end-hour-of-day :initarg :end-hour-of-day :type
                         (common-lisp:or hour-of-day common-lisp:null)
                         :accessor
                         %bandwidth-rate-limit-interval-end-hour-of-day
                         :initform
                         (common-lisp:error ":end-hour-of-day is required"))
                        (days-of-week :initarg :days-of-week :type
                         (common-lisp:or days-of-week common-lisp:null)
                         :accessor %bandwidth-rate-limit-interval-days-of-week
                         :initform
                         (common-lisp:error ":days-of-week is required"))
                        (average-upload-rate-limit-in-bits-per-sec :initarg
                         :average-upload-rate-limit-in-bits-per-sec :type
                         (common-lisp:or average-upload-rate-limit
                                         common-lisp:null)
                         :accessor
                         %bandwidth-rate-limit-interval-average-upload-rate-limit-in-bits-per-sec
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'bandwidth-rate-limit-interval
                    'make-bandwidth-rate-limit-interval))
 (common-lisp:defun make-bandwidth-rate-limit-interval
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key start-minute-of-hour start-hour-of-day
                     end-minute-of-hour end-hour-of-day days-of-week
                     average-upload-rate-limit-in-bits-per-sec)
   (common-lisp:apply #'common-lisp:make-instance
                      'bandwidth-rate-limit-interval
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          bandwidth-rate-limit-interval))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          bandwidth-rate-limit-interval))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'average-upload-rate-limit-in-bits-per-sec))
      (common-lisp:list
       (common-lisp:cons "AverageUploadRateLimitInBitsPerSec"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'days-of-week))
      (common-lisp:list
       (common-lisp:cons "DaysOfWeek"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-hour-of-day))
      (common-lisp:list
       (common-lisp:cons "EndHourOfDay"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-minute-of-hour))
      (common-lisp:list
       (common-lisp:cons "EndMinuteOfHour"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-hour-of-day))
      (common-lisp:list
       (common-lisp:cons "StartHourOfDay"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'start-minute-of-hour))
      (common-lisp:list
       (common-lisp:cons "StartMinuteOfHour"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          bandwidth-rate-limit-interval))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype bandwidth-rate-limit-intervals ()
   '(trivial-types:proper-list bandwidth-rate-limit-interval))
 (common-lisp:defun |make-bandwidth-rate-limit-intervals|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            bandwidth-rate-limit-interval))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (backup-gateway-error)
     ((error-code :initarg :error-code :initform common-lisp:nil :reader
       conflict-exception-error-code)
      (message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-error-code
                    'conflict-exception-message)))
(common-lisp:progn
 (common-lisp:defclass create-gateway-input common-lisp:nil
                       ((tags :initarg :tags :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         %create-gateway-input-tags :initform common-lisp:nil)
                        (gateway-type :initarg :gateway-type :type
                         (common-lisp:or gateway-type common-lisp:null)
                         :accessor %create-gateway-input-gateway-type :initform
                         (common-lisp:error ":gateway-type is required"))
                        (gateway-display-name :initarg :gateway-display-name
                         :type (common-lisp:or name common-lisp:null) :accessor
                         %create-gateway-input-gateway-display-name :initform
                         (common-lisp:error
                          ":gateway-display-name is required"))
                        (activation-key :initarg :activation-key :type
                         (common-lisp:or activation-key common-lisp:null)
                         :accessor %create-gateway-input-activation-key
                         :initform
                         (common-lisp:error ":activation-key is required"))))
 (common-lisp:export
  (common-lisp:list 'create-gateway-input 'make-create-gateway-input))
 (common-lisp:defun make-create-gateway-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags gateway-type gateway-display-name
                     activation-key)
   (common-lisp:apply #'common-lisp:make-instance 'create-gateway-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-gateway-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-gateway-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'activation-key))
      (common-lisp:list
       (common-lisp:cons "ActivationKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'gateway-display-name))
      (common-lisp:list
       (common-lisp:cons "GatewayDisplayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-type))
      (common-lisp:list
       (common-lisp:cons "GatewayType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-gateway-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-gateway-output common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor %create-gateway-output-gateway-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-gateway-output 'make-create-gateway-output))
 (common-lisp:defun make-create-gateway-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key gateway-arn)
   (common-lisp:apply #'common-lisp:make-instance 'create-gateway-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-gateway-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-gateway-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-gateway-output))
   common-lisp:nil))
(common-lisp:deftype day-of-month () 'common-lisp:integer)
(common-lisp:deftype day-of-week () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype days-of-week () '(trivial-types:proper-list day-of-week))
 (common-lisp:defun |make-days-of-week|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list day-of-week))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass delete-gateway-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor %delete-gateway-input-gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-gateway-input 'make-delete-gateway-input))
 (common-lisp:defun make-delete-gateway-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key gateway-arn)
   (common-lisp:apply #'common-lisp:make-instance 'delete-gateway-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-gateway-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-gateway-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-gateway-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-gateway-output common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor %delete-gateway-output-gateway-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-gateway-output 'make-delete-gateway-output))
 (common-lisp:defun make-delete-gateway-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key gateway-arn)
   (common-lisp:apply #'common-lisp:make-instance 'delete-gateway-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-gateway-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-gateway-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-gateway-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-hypervisor-input common-lisp:nil
                       ((hypervisor-arn :initarg :hypervisor-arn :type
                         (common-lisp:or server-arn common-lisp:null) :accessor
                         %delete-hypervisor-input-hypervisor-arn :initform
                         (common-lisp:error ":hypervisor-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-hypervisor-input 'make-delete-hypervisor-input))
 (common-lisp:defun make-delete-hypervisor-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key hypervisor-arn)
   (common-lisp:apply #'common-lisp:make-instance 'delete-hypervisor-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-hypervisor-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-hypervisor-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hypervisor-arn))
      (common-lisp:list
       (common-lisp:cons "HypervisorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-hypervisor-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-hypervisor-output common-lisp:nil
                       ((hypervisor-arn :initarg :hypervisor-arn :type
                         (common-lisp:or server-arn common-lisp:null) :accessor
                         %delete-hypervisor-output-hypervisor-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-hypervisor-output 'make-delete-hypervisor-output))
 (common-lisp:defun make-delete-hypervisor-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key hypervisor-arn)
   (common-lisp:apply #'common-lisp:make-instance 'delete-hypervisor-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-hypervisor-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-hypervisor-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hypervisor-arn))
      (common-lisp:list
       (common-lisp:cons "HypervisorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-hypervisor-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disassociate-gateway-from-server-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         %disassociate-gateway-from-server-input-gateway-arn
                         :initform
                         (common-lisp:error ":gateway-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'disassociate-gateway-from-server-input
                    'make-disassociate-gateway-from-server-input))
 (common-lisp:defun make-disassociate-gateway-from-server-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key gateway-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'disassociate-gateway-from-server-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-gateway-from-server-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-gateway-from-server-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-gateway-from-server-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disassociate-gateway-from-server-output common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         %disassociate-gateway-from-server-output-gateway-arn
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'disassociate-gateway-from-server-output
                    'make-disassociate-gateway-from-server-output))
 (common-lisp:defun make-disassociate-gateway-from-server-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key gateway-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'disassociate-gateway-from-server-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-gateway-from-server-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-gateway-from-server-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-gateway-from-server-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass gateway common-lisp:nil
                       ((last-seen-time :initarg :last-seen-time :type
                         (common-lisp:or time common-lisp:null) :accessor
                         %gateway-last-seen-time :initform common-lisp:nil)
                        (hypervisor-id :initarg :hypervisor-id :type
                         (common-lisp:or hypervisor-id common-lisp:null)
                         :accessor %gateway-hypervisor-id :initform
                         common-lisp:nil)
                        (gateway-type :initarg :gateway-type :type
                         (common-lisp:or gateway-type common-lisp:null)
                         :accessor %gateway-gateway-type :initform
                         common-lisp:nil)
                        (gateway-display-name :initarg :gateway-display-name
                         :type (common-lisp:or name common-lisp:null) :accessor
                         %gateway-gateway-display-name :initform
                         common-lisp:nil)
                        (gateway-arn :initarg :gateway-arn :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor %gateway-gateway-arn :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'gateway 'make-gateway))
 (common-lisp:defun make-gateway
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key last-seen-time hypervisor-id gateway-type
                     gateway-display-name gateway-arn)
   (common-lisp:apply #'common-lisp:make-instance 'gateway
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input gateway))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input gateway))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'gateway-display-name))
      (common-lisp:list
       (common-lisp:cons "GatewayDisplayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-type))
      (common-lisp:list
       (common-lisp:cons "GatewayType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hypervisor-id))
      (common-lisp:list
       (common-lisp:cons "HypervisorId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-seen-time))
      (common-lisp:list
       (common-lisp:cons "LastSeenTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input gateway))
   common-lisp:nil))
(common-lisp:deftype gateway-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass gateway-details common-lisp:nil
                       ((vpc-endpoint :initarg :vpc-endpoint :type
                         (common-lisp:or vpc-endpoint common-lisp:null)
                         :accessor %gateway-details-vpc-endpoint :initform
                         common-lisp:nil)
                        (next-update-availability-time :initarg
                         :next-update-availability-time :type
                         (common-lisp:or time common-lisp:null) :accessor
                         %gateway-details-next-update-availability-time
                         :initform common-lisp:nil)
                        (maintenance-start-time :initarg
                         :maintenance-start-time :type
                         (common-lisp:or maintenance-start-time
                                         common-lisp:null)
                         :accessor %gateway-details-maintenance-start-time
                         :initform common-lisp:nil)
                        (last-seen-time :initarg :last-seen-time :type
                         (common-lisp:or time common-lisp:null) :accessor
                         %gateway-details-last-seen-time :initform
                         common-lisp:nil)
                        (hypervisor-id :initarg :hypervisor-id :type
                         (common-lisp:or hypervisor-id common-lisp:null)
                         :accessor %gateway-details-hypervisor-id :initform
                         common-lisp:nil)
                        (gateway-type :initarg :gateway-type :type
                         (common-lisp:or gateway-type common-lisp:null)
                         :accessor %gateway-details-gateway-type :initform
                         common-lisp:nil)
                        (gateway-display-name :initarg :gateway-display-name
                         :type (common-lisp:or name common-lisp:null) :accessor
                         %gateway-details-gateway-display-name :initform
                         common-lisp:nil)
                        (gateway-arn :initarg :gateway-arn :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor %gateway-details-gateway-arn :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'gateway-details 'make-gateway-details))
 (common-lisp:defun make-gateway-details
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key vpc-endpoint
                     next-update-availability-time maintenance-start-time
                     last-seen-time hypervisor-id gateway-type
                     gateway-display-name gateway-arn)
   (common-lisp:apply #'common-lisp:make-instance 'gateway-details
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input gateway-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input gateway-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'gateway-display-name))
      (common-lisp:list
       (common-lisp:cons "GatewayDisplayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-type))
      (common-lisp:list
       (common-lisp:cons "GatewayType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hypervisor-id))
      (common-lisp:list
       (common-lisp:cons "HypervisorId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-seen-time))
      (common-lisp:list
       (common-lisp:cons "LastSeenTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'maintenance-start-time))
      (common-lisp:list
       (common-lisp:cons "MaintenanceStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'next-update-availability-time))
      (common-lisp:list
       (common-lisp:cons "NextUpdateAvailabilityTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-endpoint))
      (common-lisp:list
       (common-lisp:cons "VpcEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input gateway-details))
   common-lisp:nil))
(common-lisp:deftype gateway-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype gateways () '(trivial-types:proper-list gateway))
 (common-lisp:defun |make-gateways|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list gateway))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass get-bandwidth-rate-limit-schedule-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         %get-bandwidth-rate-limit-schedule-input-gateway-arn
                         :initform
                         (common-lisp:error ":gateway-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'get-bandwidth-rate-limit-schedule-input
                    'make-get-bandwidth-rate-limit-schedule-input))
 (common-lisp:defun make-get-bandwidth-rate-limit-schedule-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key gateway-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-bandwidth-rate-limit-schedule-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-bandwidth-rate-limit-schedule-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-bandwidth-rate-limit-schedule-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-bandwidth-rate-limit-schedule-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-bandwidth-rate-limit-schedule-output common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         %get-bandwidth-rate-limit-schedule-output-gateway-arn
                         :initform common-lisp:nil)
                        (bandwidth-rate-limit-intervals :initarg
                         :bandwidth-rate-limit-intervals :type
                         (common-lisp:or bandwidth-rate-limit-intervals
                                         common-lisp:null)
                         :accessor
                         %get-bandwidth-rate-limit-schedule-output-bandwidth-rate-limit-intervals
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-bandwidth-rate-limit-schedule-output
                    'make-get-bandwidth-rate-limit-schedule-output))
 (common-lisp:defun make-get-bandwidth-rate-limit-schedule-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key gateway-arn
                     bandwidth-rate-limit-intervals)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-bandwidth-rate-limit-schedule-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-bandwidth-rate-limit-schedule-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-bandwidth-rate-limit-schedule-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'bandwidth-rate-limit-intervals))
      (common-lisp:list
       (common-lisp:cons "BandwidthRateLimitIntervals"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-bandwidth-rate-limit-schedule-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-gateway-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor %get-gateway-input-gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'get-gateway-input 'make-get-gateway-input))
 (common-lisp:defun make-get-gateway-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key gateway-arn)
   (common-lisp:apply #'common-lisp:make-instance 'get-gateway-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-gateway-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-gateway-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-gateway-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-gateway-output common-lisp:nil
                       ((gateway :initarg :gateway :type
                         (common-lisp:or gateway-details common-lisp:null)
                         :accessor %get-gateway-output-gateway :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-gateway-output 'make-get-gateway-output))
 (common-lisp:defun make-get-gateway-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key gateway)
   (common-lisp:apply #'common-lisp:make-instance 'get-gateway-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-gateway-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-gateway-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway))
      (common-lisp:list
       (common-lisp:cons "Gateway"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-gateway-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-hypervisor-input common-lisp:nil
                       ((hypervisor-arn :initarg :hypervisor-arn :type
                         (common-lisp:or server-arn common-lisp:null) :accessor
                         %get-hypervisor-input-hypervisor-arn :initform
                         (common-lisp:error ":hypervisor-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'get-hypervisor-input 'make-get-hypervisor-input))
 (common-lisp:defun make-get-hypervisor-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key hypervisor-arn)
   (common-lisp:apply #'common-lisp:make-instance 'get-hypervisor-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-hypervisor-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-hypervisor-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hypervisor-arn))
      (common-lisp:list
       (common-lisp:cons "HypervisorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-hypervisor-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-hypervisor-output common-lisp:nil
                       ((hypervisor :initarg :hypervisor :type
                         (common-lisp:or hypervisor-details common-lisp:null)
                         :accessor %get-hypervisor-output-hypervisor :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-hypervisor-output 'make-get-hypervisor-output))
 (common-lisp:defun make-get-hypervisor-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key hypervisor)
   (common-lisp:apply #'common-lisp:make-instance 'get-hypervisor-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-hypervisor-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-hypervisor-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hypervisor))
      (common-lisp:list
       (common-lisp:cons "Hypervisor"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-hypervisor-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-hypervisor-property-mappings-input common-lisp:nil
                       ((hypervisor-arn :initarg :hypervisor-arn :type
                         (common-lisp:or server-arn common-lisp:null) :accessor
                         %get-hypervisor-property-mappings-input-hypervisor-arn
                         :initform
                         (common-lisp:error ":hypervisor-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'get-hypervisor-property-mappings-input
                    'make-get-hypervisor-property-mappings-input))
 (common-lisp:defun make-get-hypervisor-property-mappings-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key hypervisor-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-hypervisor-property-mappings-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-hypervisor-property-mappings-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-hypervisor-property-mappings-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hypervisor-arn))
      (common-lisp:list
       (common-lisp:cons "HypervisorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-hypervisor-property-mappings-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-hypervisor-property-mappings-output common-lisp:nil
                       ((vmware-to-aws-tag-mappings :initarg
                         :vmware-to-aws-tag-mappings :type
                         (common-lisp:or vmware-to-aws-tag-mappings
                                         common-lisp:null)
                         :accessor
                         %get-hypervisor-property-mappings-output-vmware-to-aws-tag-mappings
                         :initform common-lisp:nil)
                        (iam-role-arn :initarg :iam-role-arn :type
                         (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor
                         %get-hypervisor-property-mappings-output-iam-role-arn
                         :initform common-lisp:nil)
                        (hypervisor-arn :initarg :hypervisor-arn :type
                         (common-lisp:or server-arn common-lisp:null) :accessor
                         %get-hypervisor-property-mappings-output-hypervisor-arn
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-hypervisor-property-mappings-output
                    'make-get-hypervisor-property-mappings-output))
 (common-lisp:defun make-get-hypervisor-property-mappings-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key vmware-to-aws-tag-mappings iam-role-arn
                     hypervisor-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-hypervisor-property-mappings-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-hypervisor-property-mappings-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-hypervisor-property-mappings-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hypervisor-arn))
      (common-lisp:list
       (common-lisp:cons "HypervisorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iam-role-arn))
      (common-lisp:list
       (common-lisp:cons "IamRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'vmware-to-aws-tag-mappings))
      (common-lisp:list
       (common-lisp:cons "VmwareToAwsTagMappings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-hypervisor-property-mappings-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-virtual-machine-input common-lisp:nil
                       ((resource-arn :initarg :resource-arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %get-virtual-machine-input-resource-arn
                         :initform
                         (common-lisp:error ":resource-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'get-virtual-machine-input
                    'make-get-virtual-machine-input))
 (common-lisp:defun make-get-virtual-machine-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-arn)
   (common-lisp:apply #'common-lisp:make-instance 'get-virtual-machine-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-virtual-machine-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-virtual-machine-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-virtual-machine-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-virtual-machine-output common-lisp:nil
                       ((virtual-machine :initarg :virtual-machine :type
                         (common-lisp:or virtual-machine-details
                                         common-lisp:null)
                         :accessor %get-virtual-machine-output-virtual-machine
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-virtual-machine-output
                    'make-get-virtual-machine-output))
 (common-lisp:defun make-get-virtual-machine-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key virtual-machine)
   (common-lisp:apply #'common-lisp:make-instance 'get-virtual-machine-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-virtual-machine-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-virtual-machine-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'virtual-machine))
      (common-lisp:list
       (common-lisp:cons "VirtualMachine"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-virtual-machine-output))
   common-lisp:nil))
(common-lisp:deftype host () 'common-lisp:string)
(common-lisp:deftype hour-of-day () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass hypervisor common-lisp:nil
                       ((state :initarg :state :type
                         (common-lisp:or hypervisor-state common-lisp:null)
                         :accessor %hypervisor-state :initform common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or name common-lisp:null) :accessor
                         %hypervisor-name :initform common-lisp:nil)
                        (kms-key-arn :initarg :kms-key-arn :type
                         (common-lisp:or kms-key-arn common-lisp:null)
                         :accessor %hypervisor-kms-key-arn :initform
                         common-lisp:nil)
                        (hypervisor-arn :initarg :hypervisor-arn :type
                         (common-lisp:or server-arn common-lisp:null) :accessor
                         %hypervisor-hypervisor-arn :initform common-lisp:nil)
                        (host :initarg :host :type
                         (common-lisp:or host common-lisp:null) :accessor
                         %hypervisor-host :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'hypervisor 'make-hypervisor))
 (common-lisp:defun make-hypervisor
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key state name kms-key-arn hypervisor-arn
                     host)
   (common-lisp:apply #'common-lisp:make-instance 'hypervisor
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input hypervisor))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input hypervisor))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host))
      (common-lisp:list
       (common-lisp:cons "Host"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hypervisor-arn))
      (common-lisp:list
       (common-lisp:cons "HypervisorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key-arn))
      (common-lisp:list
       (common-lisp:cons "KmsKeyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input hypervisor))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass hypervisor-details common-lisp:nil
                       ((state :initarg :state :type
                         (common-lisp:or hypervisor-state common-lisp:null)
                         :accessor %hypervisor-details-state :initform
                         common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or name common-lisp:null) :accessor
                         %hypervisor-details-name :initform common-lisp:nil)
                        (log-group-arn :initarg :log-group-arn :type
                         (common-lisp:or log-group-arn common-lisp:null)
                         :accessor %hypervisor-details-log-group-arn :initform
                         common-lisp:nil)
                        (latest-metadata-sync-status-message :initarg
                         :latest-metadata-sync-status-message :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor
                         %hypervisor-details-latest-metadata-sync-status-message
                         :initform common-lisp:nil)
                        (latest-metadata-sync-status :initarg
                         :latest-metadata-sync-status :type
                         (common-lisp:or sync-metadata-status common-lisp:null)
                         :accessor
                         %hypervisor-details-latest-metadata-sync-status
                         :initform common-lisp:nil)
                        (last-successful-metadata-sync-time :initarg
                         :last-successful-metadata-sync-time :type
                         (common-lisp:or time common-lisp:null) :accessor
                         %hypervisor-details-last-successful-metadata-sync-time
                         :initform common-lisp:nil)
                        (kms-key-arn :initarg :kms-key-arn :type
                         (common-lisp:or kms-key-arn common-lisp:null)
                         :accessor %hypervisor-details-kms-key-arn :initform
                         common-lisp:nil)
                        (hypervisor-arn :initarg :hypervisor-arn :type
                         (common-lisp:or server-arn common-lisp:null) :accessor
                         %hypervisor-details-hypervisor-arn :initform
                         common-lisp:nil)
                        (host :initarg :host :type
                         (common-lisp:or host common-lisp:null) :accessor
                         %hypervisor-details-host :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'hypervisor-details 'make-hypervisor-details))
 (common-lisp:defun make-hypervisor-details
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key state name log-group-arn
                     latest-metadata-sync-status-message
                     latest-metadata-sync-status
                     last-successful-metadata-sync-time kms-key-arn
                     hypervisor-arn host)
   (common-lisp:apply #'common-lisp:make-instance 'hypervisor-details
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input hypervisor-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input hypervisor-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host))
      (common-lisp:list
       (common-lisp:cons "Host"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hypervisor-arn))
      (common-lisp:list
       (common-lisp:cons "HypervisorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key-arn))
      (common-lisp:list
       (common-lisp:cons "KmsKeyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-successful-metadata-sync-time))
      (common-lisp:list
       (common-lisp:cons "LastSuccessfulMetadataSyncTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'latest-metadata-sync-status))
      (common-lisp:list
       (common-lisp:cons "LatestMetadataSyncStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'latest-metadata-sync-status-message))
      (common-lisp:list
       (common-lisp:cons "LatestMetadataSyncStatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-group-arn))
      (common-lisp:list
       (common-lisp:cons "LogGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input hypervisor-details))
   common-lisp:nil))
(common-lisp:deftype hypervisor-id () 'common-lisp:string)
(common-lisp:deftype hypervisor-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype hypervisors () '(trivial-types:proper-list hypervisor))
 (common-lisp:defun |make-hypervisors|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list hypervisor))
   aws-sdk/generator/shape::members))
(common-lisp:deftype iam-role-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass import-hypervisor-configuration-input common-lisp:nil
                       ((username :initarg :username :type
                         (common-lisp:or username common-lisp:null) :accessor
                         %import-hypervisor-configuration-input-username
                         :initform common-lisp:nil)
                        (tags :initarg :tags :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         %import-hypervisor-configuration-input-tags :initform
                         common-lisp:nil)
                        (password :initarg :password :type
                         (common-lisp:or password common-lisp:null) :accessor
                         %import-hypervisor-configuration-input-password
                         :initform common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or name common-lisp:null) :accessor
                         %import-hypervisor-configuration-input-name :initform
                         (common-lisp:error ":name is required"))
                        (kms-key-arn :initarg :kms-key-arn :type
                         (common-lisp:or kms-key-arn common-lisp:null)
                         :accessor
                         %import-hypervisor-configuration-input-kms-key-arn
                         :initform common-lisp:nil)
                        (host :initarg :host :type
                         (common-lisp:or host common-lisp:null) :accessor
                         %import-hypervisor-configuration-input-host :initform
                         (common-lisp:error ":host is required"))))
 (common-lisp:export
  (common-lisp:list 'import-hypervisor-configuration-input
                    'make-import-hypervisor-configuration-input))
 (common-lisp:defun make-import-hypervisor-configuration-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key username tags password name kms-key-arn
                     host)
   (common-lisp:apply #'common-lisp:make-instance
                      'import-hypervisor-configuration-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          import-hypervisor-configuration-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          import-hypervisor-configuration-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host))
      (common-lisp:list
       (common-lisp:cons "Host"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key-arn))
      (common-lisp:list
       (common-lisp:cons "KmsKeyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'password))
      (common-lisp:list
       (common-lisp:cons "Password"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          import-hypervisor-configuration-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass import-hypervisor-configuration-output common-lisp:nil
                       ((hypervisor-arn :initarg :hypervisor-arn :type
                         (common-lisp:or server-arn common-lisp:null) :accessor
                         %import-hypervisor-configuration-output-hypervisor-arn
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'import-hypervisor-configuration-output
                    'make-import-hypervisor-configuration-output))
 (common-lisp:defun make-import-hypervisor-configuration-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key hypervisor-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'import-hypervisor-configuration-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          import-hypervisor-configuration-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          import-hypervisor-configuration-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hypervisor-arn))
      (common-lisp:list
       (common-lisp:cons "HypervisorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          import-hypervisor-configuration-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (backup-gateway-error)
     ((error-code :initarg :error-code :initform common-lisp:nil :reader
       internal-server-exception-error-code)
      (message :initarg :message :initform common-lisp:nil :reader
       internal-server-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-error-code
                    'internal-server-exception-message)))
(common-lisp:deftype kms-key-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass list-gateways-input common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-gateways-input-next-token :initform
                         common-lisp:nil)
                        (max-results :initarg :max-results :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor %list-gateways-input-max-results :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-gateways-input 'make-list-gateways-input))
 (common-lisp:defun make-list-gateways-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token max-results)
   (common-lisp:apply #'common-lisp:make-instance 'list-gateways-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-gateways-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-gateways-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-gateways-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-gateways-output common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-gateways-output-next-token :initform
                         common-lisp:nil)
                        (gateways :initarg :gateways :type
                         (common-lisp:or gateways common-lisp:null) :accessor
                         %list-gateways-output-gateways :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-gateways-output 'make-list-gateways-output))
 (common-lisp:defun make-list-gateways-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token gateways)
   (common-lisp:apply #'common-lisp:make-instance 'list-gateways-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-gateways-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-gateways-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateways))
      (common-lisp:list
       (common-lisp:cons "Gateways"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-gateways-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-hypervisors-input common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-hypervisors-input-next-token :initform
                         common-lisp:nil)
                        (max-results :initarg :max-results :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor %list-hypervisors-input-max-results
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-hypervisors-input 'make-list-hypervisors-input))
 (common-lisp:defun make-list-hypervisors-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token max-results)
   (common-lisp:apply #'common-lisp:make-instance 'list-hypervisors-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-hypervisors-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-hypervisors-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-hypervisors-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-hypervisors-output common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-hypervisors-output-next-token :initform
                         common-lisp:nil)
                        (hypervisors :initarg :hypervisors :type
                         (common-lisp:or hypervisors common-lisp:null)
                         :accessor %list-hypervisors-output-hypervisors
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-hypervisors-output 'make-list-hypervisors-output))
 (common-lisp:defun make-list-hypervisors-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token hypervisors)
   (common-lisp:apply #'common-lisp:make-instance 'list-hypervisors-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-hypervisors-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-hypervisors-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hypervisors))
      (common-lisp:list
       (common-lisp:cons "Hypervisors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-hypervisors-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-input common-lisp:nil
                       ((resource-arn :initarg :resource-arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %list-tags-for-resource-input-resource-arn
                         :initform
                         (common-lisp:error ":resource-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-input
                    'make-list-tags-for-resource-input))
 (common-lisp:defun make-list-tags-for-resource-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-arn)
   (common-lisp:apply #'common-lisp:make-instance 'list-tags-for-resource-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-output common-lisp:nil
                       ((tags :initarg :tags :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         %list-tags-for-resource-output-tags :initform
                         common-lisp:nil)
                        (resource-arn :initarg :resource-arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %list-tags-for-resource-output-resource-arn
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-output
                    'make-list-tags-for-resource-output))
 (common-lisp:defun make-list-tags-for-resource-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags resource-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-virtual-machines-input common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-virtual-machines-input-next-token :initform
                         common-lisp:nil)
                        (max-results :initarg :max-results :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor %list-virtual-machines-input-max-results
                         :initform common-lisp:nil)
                        (hypervisor-arn :initarg :hypervisor-arn :type
                         (common-lisp:or server-arn common-lisp:null) :accessor
                         %list-virtual-machines-input-hypervisor-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-virtual-machines-input
                    'make-list-virtual-machines-input))
 (common-lisp:defun make-list-virtual-machines-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token max-results hypervisor-arn)
   (common-lisp:apply #'common-lisp:make-instance 'list-virtual-machines-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-virtual-machines-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-virtual-machines-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hypervisor-arn))
      (common-lisp:list
       (common-lisp:cons "HypervisorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-virtual-machines-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-virtual-machines-output common-lisp:nil
                       ((virtual-machines :initarg :virtual-machines :type
                         (common-lisp:or virtual-machines common-lisp:null)
                         :accessor
                         %list-virtual-machines-output-virtual-machines
                         :initform common-lisp:nil)
                        (next-token :initarg :next-token :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-virtual-machines-output-next-token :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-virtual-machines-output
                    'make-list-virtual-machines-output))
 (common-lisp:defun make-list-virtual-machines-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key virtual-machines next-token)
   (common-lisp:apply #'common-lisp:make-instance 'list-virtual-machines-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-virtual-machines-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-virtual-machines-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'virtual-machines))
      (common-lisp:list
       (common-lisp:cons "VirtualMachines"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-virtual-machines-output))
   common-lisp:nil))
(common-lisp:deftype log-group-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass maintenance-start-time common-lisp:nil
                       ((minute-of-hour :initarg :minute-of-hour :type
                         (common-lisp:or minute-of-hour common-lisp:null)
                         :accessor %maintenance-start-time-minute-of-hour
                         :initform
                         (common-lisp:error ":minute-of-hour is required"))
                        (hour-of-day :initarg :hour-of-day :type
                         (common-lisp:or hour-of-day common-lisp:null)
                         :accessor %maintenance-start-time-hour-of-day
                         :initform
                         (common-lisp:error ":hour-of-day is required"))
                        (day-of-week :initarg :day-of-week :type
                         (common-lisp:or day-of-week common-lisp:null)
                         :accessor %maintenance-start-time-day-of-week
                         :initform common-lisp:nil)
                        (day-of-month :initarg :day-of-month :type
                         (common-lisp:or day-of-month common-lisp:null)
                         :accessor %maintenance-start-time-day-of-month
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'maintenance-start-time 'make-maintenance-start-time))
 (common-lisp:defun make-maintenance-start-time
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key minute-of-hour hour-of-day day-of-week
                     day-of-month)
   (common-lisp:apply #'common-lisp:make-instance 'maintenance-start-time
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          maintenance-start-time))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          maintenance-start-time))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'day-of-month))
      (common-lisp:list
       (common-lisp:cons "DayOfMonth"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'day-of-week))
      (common-lisp:list
       (common-lisp:cons "DayOfWeek"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hour-of-day))
      (common-lisp:list
       (common-lisp:cons "HourOfDay"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'minute-of-hour))
      (common-lisp:list
       (common-lisp:cons "MinuteOfHour"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          maintenance-start-time))
   common-lisp:nil))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype minute-of-hour () 'common-lisp:integer)
(common-lisp:deftype name () 'common-lisp:string)
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:deftype password () 'common-lisp:string)
(common-lisp:deftype path () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass put-bandwidth-rate-limit-schedule-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         %put-bandwidth-rate-limit-schedule-input-gateway-arn
                         :initform
                         (common-lisp:error ":gateway-arn is required"))
                        (bandwidth-rate-limit-intervals :initarg
                         :bandwidth-rate-limit-intervals :type
                         (common-lisp:or bandwidth-rate-limit-intervals
                                         common-lisp:null)
                         :accessor
                         %put-bandwidth-rate-limit-schedule-input-bandwidth-rate-limit-intervals
                         :initform
                         (common-lisp:error
                          ":bandwidth-rate-limit-intervals is required"))))
 (common-lisp:export
  (common-lisp:list 'put-bandwidth-rate-limit-schedule-input
                    'make-put-bandwidth-rate-limit-schedule-input))
 (common-lisp:defun make-put-bandwidth-rate-limit-schedule-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key gateway-arn
                     bandwidth-rate-limit-intervals)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-bandwidth-rate-limit-schedule-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-bandwidth-rate-limit-schedule-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-bandwidth-rate-limit-schedule-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'bandwidth-rate-limit-intervals))
      (common-lisp:list
       (common-lisp:cons "BandwidthRateLimitIntervals"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-bandwidth-rate-limit-schedule-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-bandwidth-rate-limit-schedule-output common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         %put-bandwidth-rate-limit-schedule-output-gateway-arn
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'put-bandwidth-rate-limit-schedule-output
                    'make-put-bandwidth-rate-limit-schedule-output))
 (common-lisp:defun make-put-bandwidth-rate-limit-schedule-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key gateway-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-bandwidth-rate-limit-schedule-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-bandwidth-rate-limit-schedule-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-bandwidth-rate-limit-schedule-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-bandwidth-rate-limit-schedule-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-hypervisor-property-mappings-input common-lisp:nil
                       ((vmware-to-aws-tag-mappings :initarg
                         :vmware-to-aws-tag-mappings :type
                         (common-lisp:or vmware-to-aws-tag-mappings
                                         common-lisp:null)
                         :accessor
                         %put-hypervisor-property-mappings-input-vmware-to-aws-tag-mappings
                         :initform
                         (common-lisp:error
                          ":vmware-to-aws-tag-mappings is required"))
                        (iam-role-arn :initarg :iam-role-arn :type
                         (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor
                         %put-hypervisor-property-mappings-input-iam-role-arn
                         :initform
                         (common-lisp:error ":iam-role-arn is required"))
                        (hypervisor-arn :initarg :hypervisor-arn :type
                         (common-lisp:or server-arn common-lisp:null) :accessor
                         %put-hypervisor-property-mappings-input-hypervisor-arn
                         :initform
                         (common-lisp:error ":hypervisor-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'put-hypervisor-property-mappings-input
                    'make-put-hypervisor-property-mappings-input))
 (common-lisp:defun make-put-hypervisor-property-mappings-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key vmware-to-aws-tag-mappings iam-role-arn
                     hypervisor-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-hypervisor-property-mappings-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-hypervisor-property-mappings-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-hypervisor-property-mappings-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hypervisor-arn))
      (common-lisp:list
       (common-lisp:cons "HypervisorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iam-role-arn))
      (common-lisp:list
       (common-lisp:cons "IamRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'vmware-to-aws-tag-mappings))
      (common-lisp:list
       (common-lisp:cons "VmwareToAwsTagMappings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-hypervisor-property-mappings-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-hypervisor-property-mappings-output common-lisp:nil
                       ((hypervisor-arn :initarg :hypervisor-arn :type
                         (common-lisp:or server-arn common-lisp:null) :accessor
                         %put-hypervisor-property-mappings-output-hypervisor-arn
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'put-hypervisor-property-mappings-output
                    'make-put-hypervisor-property-mappings-output))
 (common-lisp:defun make-put-hypervisor-property-mappings-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key hypervisor-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-hypervisor-property-mappings-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-hypervisor-property-mappings-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-hypervisor-property-mappings-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hypervisor-arn))
      (common-lisp:list
       (common-lisp:cons "HypervisorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-hypervisor-property-mappings-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-maintenance-start-time-input common-lisp:nil
                       ((minute-of-hour :initarg :minute-of-hour :type
                         (common-lisp:or minute-of-hour common-lisp:null)
                         :accessor
                         %put-maintenance-start-time-input-minute-of-hour
                         :initform
                         (common-lisp:error ":minute-of-hour is required"))
                        (hour-of-day :initarg :hour-of-day :type
                         (common-lisp:or hour-of-day common-lisp:null)
                         :accessor
                         %put-maintenance-start-time-input-hour-of-day
                         :initform
                         (common-lisp:error ":hour-of-day is required"))
                        (gateway-arn :initarg :gateway-arn :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         %put-maintenance-start-time-input-gateway-arn
                         :initform
                         (common-lisp:error ":gateway-arn is required"))
                        (day-of-week :initarg :day-of-week :type
                         (common-lisp:or day-of-week common-lisp:null)
                         :accessor
                         %put-maintenance-start-time-input-day-of-week
                         :initform common-lisp:nil)
                        (day-of-month :initarg :day-of-month :type
                         (common-lisp:or day-of-month common-lisp:null)
                         :accessor
                         %put-maintenance-start-time-input-day-of-month
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'put-maintenance-start-time-input
                    'make-put-maintenance-start-time-input))
 (common-lisp:defun make-put-maintenance-start-time-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key minute-of-hour hour-of-day gateway-arn
                     day-of-week day-of-month)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-maintenance-start-time-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-maintenance-start-time-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-maintenance-start-time-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'day-of-month))
      (common-lisp:list
       (common-lisp:cons "DayOfMonth"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'day-of-week))
      (common-lisp:list
       (common-lisp:cons "DayOfWeek"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hour-of-day))
      (common-lisp:list
       (common-lisp:cons "HourOfDay"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'minute-of-hour))
      (common-lisp:list
       (common-lisp:cons "MinuteOfHour"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-maintenance-start-time-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-maintenance-start-time-output common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         %put-maintenance-start-time-output-gateway-arn
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'put-maintenance-start-time-output
                    'make-put-maintenance-start-time-output))
 (common-lisp:defun make-put-maintenance-start-time-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key gateway-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-maintenance-start-time-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-maintenance-start-time-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-maintenance-start-time-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-maintenance-start-time-output))
   common-lisp:nil))
(common-lisp:deftype resource-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (backup-gateway-error)
     ((error-code :initarg :error-code :initform common-lisp:nil :reader
       resource-not-found-exception-error-code)
      (message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-error-code
                    'resource-not-found-exception-message)))
(common-lisp:deftype server-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass start-virtual-machines-metadata-sync-input
                       common-lisp:nil
                       ((hypervisor-arn :initarg :hypervisor-arn :type
                         (common-lisp:or server-arn common-lisp:null) :accessor
                         %start-virtual-machines-metadata-sync-input-hypervisor-arn
                         :initform
                         (common-lisp:error ":hypervisor-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'start-virtual-machines-metadata-sync-input
                    'make-start-virtual-machines-metadata-sync-input))
 (common-lisp:defun make-start-virtual-machines-metadata-sync-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key hypervisor-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-virtual-machines-metadata-sync-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-virtual-machines-metadata-sync-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-virtual-machines-metadata-sync-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hypervisor-arn))
      (common-lisp:list
       (common-lisp:cons "HypervisorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-virtual-machines-metadata-sync-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-virtual-machines-metadata-sync-output
                       common-lisp:nil
                       ((hypervisor-arn :initarg :hypervisor-arn :type
                         (common-lisp:or server-arn common-lisp:null) :accessor
                         %start-virtual-machines-metadata-sync-output-hypervisor-arn
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'start-virtual-machines-metadata-sync-output
                    'make-start-virtual-machines-metadata-sync-output))
 (common-lisp:defun make-start-virtual-machines-metadata-sync-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key hypervisor-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-virtual-machines-metadata-sync-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-virtual-machines-metadata-sync-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-virtual-machines-metadata-sync-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hypervisor-arn))
      (common-lisp:list
       (common-lisp:cons "HypervisorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-virtual-machines-metadata-sync-output))
   common-lisp:nil))
(common-lisp:deftype sync-metadata-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass tag common-lisp:nil
                       ((value :initarg :value :type
                         (common-lisp:or tag-value common-lisp:null) :accessor
                         %tag-value :initform
                         (common-lisp:error ":value is required"))
                        (key :initarg :key :type
                         (common-lisp:or tag-key common-lisp:null) :accessor
                         %tag-key :initform
                         (common-lisp:error ":key is required"))))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defun make-tag
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key value key)
   (common-lisp:apply #'common-lisp:make-instance 'tag
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag))
   common-lisp:nil))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-keys () '(trivial-types:proper-list tag-key))
 (common-lisp:defun |make-tag-keys|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass tag-resource-input common-lisp:nil
                       ((tags :initarg :tags :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         %tag-resource-input-tags :initform
                         (common-lisp:error ":tags is required"))
                        (resource-arn :initarg :resource-arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %tag-resource-input-resource-arn :initform
                         (common-lisp:error ":resource-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'tag-resource-input 'make-tag-resource-input))
 (common-lisp:defun make-tag-resource-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags resource-arn)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-resource-output common-lisp:nil
                       ((resource-arn :initarg :resource-arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %tag-resource-output-resource-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'tag-resource-output 'make-tag-resource-output))
 (common-lisp:defun make-tag-resource-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-arn)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-output))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tags () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-tags|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass test-hypervisor-configuration-input common-lisp:nil
                       ((username :initarg :username :type
                         (common-lisp:or username common-lisp:null) :accessor
                         %test-hypervisor-configuration-input-username
                         :initform common-lisp:nil)
                        (password :initarg :password :type
                         (common-lisp:or password common-lisp:null) :accessor
                         %test-hypervisor-configuration-input-password
                         :initform common-lisp:nil)
                        (host :initarg :host :type
                         (common-lisp:or host common-lisp:null) :accessor
                         %test-hypervisor-configuration-input-host :initform
                         (common-lisp:error ":host is required"))
                        (gateway-arn :initarg :gateway-arn :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         %test-hypervisor-configuration-input-gateway-arn
                         :initform
                         (common-lisp:error ":gateway-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'test-hypervisor-configuration-input
                    'make-test-hypervisor-configuration-input))
 (common-lisp:defun make-test-hypervisor-configuration-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key username password host gateway-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'test-hypervisor-configuration-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          test-hypervisor-configuration-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          test-hypervisor-configuration-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host))
      (common-lisp:list
       (common-lisp:cons "Host"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'password))
      (common-lisp:list
       (common-lisp:cons "Password"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          test-hypervisor-configuration-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass test-hypervisor-configuration-output common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'test-hypervisor-configuration-output
                    'make-test-hypervisor-configuration-output))
 (common-lisp:defun make-test-hypervisor-configuration-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'test-hypervisor-configuration-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          test-hypervisor-configuration-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          test-hypervisor-configuration-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          test-hypervisor-configuration-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (backup-gateway-error)
     ((error-code :initarg :error-code :initform common-lisp:nil :reader
       throttling-exception-error-code)
      (message :initarg :message :initform common-lisp:nil :reader
       throttling-exception-message)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-error-code
                    'throttling-exception-message)))
(common-lisp:deftype time () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass untag-resource-input common-lisp:nil
                       ((tag-keys :initarg :tag-keys :type
                         (common-lisp:or tag-keys common-lisp:null) :accessor
                         %untag-resource-input-tag-keys :initform
                         (common-lisp:error ":tag-keys is required"))
                        (resource-arn :initarg :resource-arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %untag-resource-input-resource-arn :initform
                         (common-lisp:error ":resource-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'untag-resource-input 'make-untag-resource-input))
 (common-lisp:defun make-untag-resource-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tag-keys resource-arn)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input untag-resource-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input untag-resource-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-keys))
      (common-lisp:list
       (common-lisp:cons "TagKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input untag-resource-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass untag-resource-output common-lisp:nil
                       ((resource-arn :initarg :resource-arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %untag-resource-output-resource-arn
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'untag-resource-output 'make-untag-resource-output))
 (common-lisp:defun make-untag-resource-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-arn)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-gateway-information-input common-lisp:nil
                       ((gateway-display-name :initarg :gateway-display-name
                         :type (common-lisp:or name common-lisp:null) :accessor
                         %update-gateway-information-input-gateway-display-name
                         :initform common-lisp:nil)
                        (gateway-arn :initarg :gateway-arn :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         %update-gateway-information-input-gateway-arn
                         :initform
                         (common-lisp:error ":gateway-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'update-gateway-information-input
                    'make-update-gateway-information-input))
 (common-lisp:defun make-update-gateway-information-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key gateway-display-name gateway-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-gateway-information-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-information-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-information-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'gateway-display-name))
      (common-lisp:list
       (common-lisp:cons "GatewayDisplayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-information-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-gateway-information-output common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         %update-gateway-information-output-gateway-arn
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-gateway-information-output
                    'make-update-gateway-information-output))
 (common-lisp:defun make-update-gateway-information-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key gateway-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-gateway-information-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-information-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-information-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-information-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-gateway-software-now-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         %update-gateway-software-now-input-gateway-arn
                         :initform
                         (common-lisp:error ":gateway-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'update-gateway-software-now-input
                    'make-update-gateway-software-now-input))
 (common-lisp:defun make-update-gateway-software-now-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key gateway-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-gateway-software-now-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-software-now-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-software-now-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-software-now-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-gateway-software-now-output common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         %update-gateway-software-now-output-gateway-arn
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-gateway-software-now-output
                    'make-update-gateway-software-now-output))
 (common-lisp:defun make-update-gateway-software-now-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key gateway-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-gateway-software-now-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-software-now-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-software-now-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-software-now-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-hypervisor-input common-lisp:nil
                       ((username :initarg :username :type
                         (common-lisp:or username common-lisp:null) :accessor
                         %update-hypervisor-input-username :initform
                         common-lisp:nil)
                        (password :initarg :password :type
                         (common-lisp:or password common-lisp:null) :accessor
                         %update-hypervisor-input-password :initform
                         common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or name common-lisp:null) :accessor
                         %update-hypervisor-input-name :initform
                         common-lisp:nil)
                        (log-group-arn :initarg :log-group-arn :type
                         (common-lisp:or log-group-arn common-lisp:null)
                         :accessor %update-hypervisor-input-log-group-arn
                         :initform common-lisp:nil)
                        (hypervisor-arn :initarg :hypervisor-arn :type
                         (common-lisp:or server-arn common-lisp:null) :accessor
                         %update-hypervisor-input-hypervisor-arn :initform
                         (common-lisp:error ":hypervisor-arn is required"))
                        (host :initarg :host :type
                         (common-lisp:or host common-lisp:null) :accessor
                         %update-hypervisor-input-host :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-hypervisor-input 'make-update-hypervisor-input))
 (common-lisp:defun make-update-hypervisor-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key username password name log-group-arn
                     hypervisor-arn host)
   (common-lisp:apply #'common-lisp:make-instance 'update-hypervisor-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-hypervisor-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-hypervisor-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host))
      (common-lisp:list
       (common-lisp:cons "Host"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hypervisor-arn))
      (common-lisp:list
       (common-lisp:cons "HypervisorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-group-arn))
      (common-lisp:list
       (common-lisp:cons "LogGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'password))
      (common-lisp:list
       (common-lisp:cons "Password"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-hypervisor-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-hypervisor-output common-lisp:nil
                       ((hypervisor-arn :initarg :hypervisor-arn :type
                         (common-lisp:or server-arn common-lisp:null) :accessor
                         %update-hypervisor-output-hypervisor-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-hypervisor-output 'make-update-hypervisor-output))
 (common-lisp:defun make-update-hypervisor-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key hypervisor-arn)
   (common-lisp:apply #'common-lisp:make-instance 'update-hypervisor-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-hypervisor-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-hypervisor-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hypervisor-arn))
      (common-lisp:list
       (common-lisp:cons "HypervisorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-hypervisor-output))
   common-lisp:nil))
(common-lisp:deftype username () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (backup-gateway-error)
     ((error-code :initarg :error-code :initform common-lisp:nil :reader
       validation-exception-error-code)
      (message :initarg :message :initform common-lisp:nil :reader
       validation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-error-code
                    'validation-exception-message)))
(common-lisp:progn
 (common-lisp:defclass virtual-machine common-lisp:nil
                       ((resource-arn :initarg :resource-arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %virtual-machine-resource-arn :initform
                         common-lisp:nil)
                        (path :initarg :path :type
                         (common-lisp:or path common-lisp:null) :accessor
                         %virtual-machine-path :initform common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or name common-lisp:null) :accessor
                         %virtual-machine-name :initform common-lisp:nil)
                        (last-backup-date :initarg :last-backup-date :type
                         (common-lisp:or time common-lisp:null) :accessor
                         %virtual-machine-last-backup-date :initform
                         common-lisp:nil)
                        (hypervisor-id :initarg :hypervisor-id :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %virtual-machine-hypervisor-id :initform
                         common-lisp:nil)
                        (host-name :initarg :host-name :type
                         (common-lisp:or name common-lisp:null) :accessor
                         %virtual-machine-host-name :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'virtual-machine 'make-virtual-machine))
 (common-lisp:defun make-virtual-machine
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-arn path name last-backup-date
                     hypervisor-id host-name)
   (common-lisp:apply #'common-lisp:make-instance 'virtual-machine
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input virtual-machine))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input virtual-machine))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host-name))
      (common-lisp:list
       (common-lisp:cons "HostName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hypervisor-id))
      (common-lisp:list
       (common-lisp:cons "HypervisorId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-backup-date))
      (common-lisp:list
       (common-lisp:cons "LastBackupDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'path))
      (common-lisp:list
       (common-lisp:cons "Path"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input virtual-machine))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass virtual-machine-details common-lisp:nil
                       ((vmware-tags :initarg :vmware-tags :type
                         (common-lisp:or vmware-tags common-lisp:null)
                         :accessor %virtual-machine-details-vmware-tags
                         :initform common-lisp:nil)
                        (resource-arn :initarg :resource-arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %virtual-machine-details-resource-arn
                         :initform common-lisp:nil)
                        (path :initarg :path :type
                         (common-lisp:or path common-lisp:null) :accessor
                         %virtual-machine-details-path :initform
                         common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or name common-lisp:null) :accessor
                         %virtual-machine-details-name :initform
                         common-lisp:nil)
                        (last-backup-date :initarg :last-backup-date :type
                         (common-lisp:or time common-lisp:null) :accessor
                         %virtual-machine-details-last-backup-date :initform
                         common-lisp:nil)
                        (hypervisor-id :initarg :hypervisor-id :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %virtual-machine-details-hypervisor-id
                         :initform common-lisp:nil)
                        (host-name :initarg :host-name :type
                         (common-lisp:or name common-lisp:null) :accessor
                         %virtual-machine-details-host-name :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'virtual-machine-details 'make-virtual-machine-details))
 (common-lisp:defun make-virtual-machine-details
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key vmware-tags resource-arn path name
                     last-backup-date hypervisor-id host-name)
   (common-lisp:apply #'common-lisp:make-instance 'virtual-machine-details
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          virtual-machine-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          virtual-machine-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host-name))
      (common-lisp:list
       (common-lisp:cons "HostName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hypervisor-id))
      (common-lisp:list
       (common-lisp:cons "HypervisorId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-backup-date))
      (common-lisp:list
       (common-lisp:cons "LastBackupDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'path))
      (common-lisp:list
       (common-lisp:cons "Path"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vmware-tags))
      (common-lisp:list
       (common-lisp:cons "VmwareTags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          virtual-machine-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype virtual-machines ()
   '(trivial-types:proper-list virtual-machine))
 (common-lisp:defun |make-virtual-machines|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list virtual-machine))
   aws-sdk/generator/shape::members))
(common-lisp:deftype vmware-category () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass vmware-tag common-lisp:nil
                       ((vmware-tag-name :initarg :vmware-tag-name :type
                         (common-lisp:or vmware-tag-name common-lisp:null)
                         :accessor %vmware-tag-vmware-tag-name :initform
                         common-lisp:nil)
                        (vmware-tag-description :initarg
                         :vmware-tag-description :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %vmware-tag-vmware-tag-description :initform
                         common-lisp:nil)
                        (vmware-category :initarg :vmware-category :type
                         (common-lisp:or vmware-category common-lisp:null)
                         :accessor %vmware-tag-vmware-category :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'vmware-tag 'make-vmware-tag))
 (common-lisp:defun make-vmware-tag
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key vmware-tag-name vmware-tag-description
                     vmware-category)
   (common-lisp:apply #'common-lisp:make-instance 'vmware-tag
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input vmware-tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input vmware-tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vmware-category))
      (common-lisp:list
       (common-lisp:cons "VmwareCategory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'vmware-tag-description))
      (common-lisp:list
       (common-lisp:cons "VmwareTagDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vmware-tag-name))
      (common-lisp:list
       (common-lisp:cons "VmwareTagName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input vmware-tag))
   common-lisp:nil))
(common-lisp:deftype vmware-tag-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype vmware-tags () '(trivial-types:proper-list vmware-tag))
 (common-lisp:defun |make-vmware-tags|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list vmware-tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass vmware-to-aws-tag-mapping common-lisp:nil
                       ((vmware-tag-name :initarg :vmware-tag-name :type
                         (common-lisp:or vmware-tag-name common-lisp:null)
                         :accessor %vmware-to-aws-tag-mapping-vmware-tag-name
                         :initform
                         (common-lisp:error ":vmware-tag-name is required"))
                        (vmware-category :initarg :vmware-category :type
                         (common-lisp:or vmware-category common-lisp:null)
                         :accessor %vmware-to-aws-tag-mapping-vmware-category
                         :initform
                         (common-lisp:error ":vmware-category is required"))
                        (aws-tag-value :initarg :aws-tag-value :type
                         (common-lisp:or tag-value common-lisp:null) :accessor
                         %vmware-to-aws-tag-mapping-aws-tag-value :initform
                         (common-lisp:error ":aws-tag-value is required"))
                        (aws-tag-key :initarg :aws-tag-key :type
                         (common-lisp:or tag-key common-lisp:null) :accessor
                         %vmware-to-aws-tag-mapping-aws-tag-key :initform
                         (common-lisp:error ":aws-tag-key is required"))))
 (common-lisp:export
  (common-lisp:list 'vmware-to-aws-tag-mapping
                    'make-vmware-to-aws-tag-mapping))
 (common-lisp:defun make-vmware-to-aws-tag-mapping
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key vmware-tag-name vmware-category
                     aws-tag-value aws-tag-key)
   (common-lisp:apply #'common-lisp:make-instance 'vmware-to-aws-tag-mapping
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          vmware-to-aws-tag-mapping))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          vmware-to-aws-tag-mapping))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aws-tag-key))
      (common-lisp:list
       (common-lisp:cons "AwsTagKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aws-tag-value))
      (common-lisp:list
       (common-lisp:cons "AwsTagValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vmware-category))
      (common-lisp:list
       (common-lisp:cons "VmwareCategory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vmware-tag-name))
      (common-lisp:list
       (common-lisp:cons "VmwareTagName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          vmware-to-aws-tag-mapping))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype vmware-to-aws-tag-mappings ()
   '(trivial-types:proper-list vmware-to-aws-tag-mapping))
 (common-lisp:defun |make-vmware-to-aws-tag-mappings|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            vmware-to-aws-tag-mapping))
   aws-sdk/generator/shape::members))
(common-lisp:deftype vpc-endpoint () 'common-lisp:string)
common-lisp:nil
(common-lisp:progn
 (common-lisp:defun associate-gateway-to-server
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn server-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn server-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-associate-gateway-to-server-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "AssociateGatewayToServer"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'associate-gateway-to-server))
(common-lisp:progn
 (common-lisp:defun create-gateway
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key activation-key gateway-display-name
                     gateway-type tags)
   (common-lisp:declare
    (common-lisp:ignorable activation-key gateway-display-name gateway-type
     tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-gateway-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "CreateGateway"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-gateway))
(common-lisp:progn
 (common-lisp:defun delete-gateway
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-gateway-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DeleteGateway"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-gateway))
(common-lisp:progn
 (common-lisp:defun delete-hypervisor
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hypervisor-arn)
   (common-lisp:declare (common-lisp:ignorable hypervisor-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-hypervisor-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DeleteHypervisor"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-hypervisor))
(common-lisp:progn
 (common-lisp:defun disassociate-gateway-from-server
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-disassociate-gateway-from-server-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DisassociateGatewayFromServer"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'disassociate-gateway-from-server))
(common-lisp:progn
 (common-lisp:defun get-bandwidth-rate-limit-schedule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-bandwidth-rate-limit-schedule-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "GetBandwidthRateLimitSchedule"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-bandwidth-rate-limit-schedule))
(common-lisp:progn
 (common-lisp:defun get-gateway
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-gateway-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "GetGateway"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-gateway))
(common-lisp:progn
 (common-lisp:defun get-hypervisor
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hypervisor-arn)
   (common-lisp:declare (common-lisp:ignorable hypervisor-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-hypervisor-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "GetHypervisor"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-hypervisor))
(common-lisp:progn
 (common-lisp:defun get-hypervisor-property-mappings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hypervisor-arn)
   (common-lisp:declare (common-lisp:ignorable hypervisor-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-hypervisor-property-mappings-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "GetHypervisorPropertyMappings"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-hypervisor-property-mappings))
(common-lisp:progn
 (common-lisp:defun get-virtual-machine
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-virtual-machine-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "GetVirtualMachine"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-virtual-machine))
(common-lisp:progn
 (common-lisp:defun import-hypervisor-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key host kms-key-arn name password tags
                     username)
   (common-lisp:declare
    (common-lisp:ignorable host kms-key-arn name password tags username))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-import-hypervisor-configuration-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ImportHypervisorConfiguration"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'import-hypervisor-configuration))
(common-lisp:progn
 (common-lisp:defun list-gateways
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-gateways-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListGateways"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-gateways))
(common-lisp:progn
 (common-lisp:defun list-hypervisors
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-hypervisors-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListHypervisors"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-hypervisors))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListTagsForResource"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun list-virtual-machines
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hypervisor-arn max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable hypervisor-arn max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-virtual-machines-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListVirtualMachines"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-virtual-machines))
(common-lisp:progn
 (common-lisp:defun put-bandwidth-rate-limit-schedule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bandwidth-rate-limit-intervals
                     gateway-arn)
   (common-lisp:declare
    (common-lisp:ignorable bandwidth-rate-limit-intervals gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-bandwidth-rate-limit-schedule-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "PutBandwidthRateLimitSchedule"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-bandwidth-rate-limit-schedule))
(common-lisp:progn
 (common-lisp:defun put-hypervisor-property-mappings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hypervisor-arn iam-role-arn
                     vmware-to-aws-tag-mappings)
   (common-lisp:declare
    (common-lisp:ignorable hypervisor-arn iam-role-arn
     vmware-to-aws-tag-mappings))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-hypervisor-property-mappings-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "PutHypervisorPropertyMappings"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-hypervisor-property-mappings))
(common-lisp:progn
 (common-lisp:defun put-maintenance-start-time
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key day-of-month day-of-week gateway-arn
                     hour-of-day minute-of-hour)
   (common-lisp:declare
    (common-lisp:ignorable day-of-month day-of-week gateway-arn hour-of-day
     minute-of-hour))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-maintenance-start-time-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "PutMaintenanceStartTime"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-maintenance-start-time))
(common-lisp:progn
 (common-lisp:defun start-virtual-machines-metadata-sync
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hypervisor-arn)
   (common-lisp:declare (common-lisp:ignorable hypervisor-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-virtual-machines-metadata-sync-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "StartVirtualMachinesMetadataSync"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-virtual-machines-metadata-sync))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "TagResource"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun test-hypervisor-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn host password username)
   (common-lisp:declare
    (common-lisp:ignorable gateway-arn host password username))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-test-hypervisor-configuration-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "TestHypervisorConfiguration"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'test-hypervisor-configuration))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "UntagResource"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-gateway-information
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn gateway-display-name)
   (common-lisp:declare
    (common-lisp:ignorable gateway-arn gateway-display-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-gateway-information-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "UpdateGatewayInformation"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-gateway-information))
(common-lisp:progn
 (common-lisp:defun update-gateway-software-now
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-gateway-software-now-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "UpdateGatewaySoftwareNow"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-gateway-software-now))
(common-lisp:progn
 (common-lisp:defun update-hypervisor
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key host hypervisor-arn log-group-arn name
                     password username)
   (common-lisp:declare
    (common-lisp:ignorable host hypervisor-arn log-group-arn name password
     username))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-hypervisor-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backup-gateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "UpdateHypervisor"
                                                        "2021-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-hypervisor))
