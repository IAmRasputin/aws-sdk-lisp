;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/apigateway/api
  (:use)
  (:nicknames #:aws/apigateway)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/apigateway/api)
(common-lisp:progn
 (common-lisp:defclass apigateway-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "apigateway"))
 (common-lisp:export 'apigateway-request))
(common-lisp:progn
 (common-lisp:define-condition apigateway-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'apigateway-error))
(common-lisp:defvar *error-map*
  '(("BadRequestException" . bad-request-exception)
    ("ConflictException" . conflict-exception)
    ("LimitExceededException" . limit-exceeded-exception)
    ("NotFoundException" . not-found-exception)
    ("ServiceUnavailableException" . service-unavailable-exception)
    ("TooManyRequestsException" . too-many-requests-exception)
    ("UnauthorizedException" . unauthorized-exception)))
(common-lisp:progn
 (common-lisp:defstruct
     (access-log-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-access-log-settings-"))
   (format common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (destination-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'access-log-settings 'make-access-log-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input access-log-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input access-log-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'format))
      (common-lisp:list
       (common-lisp:cons "format"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination-arn))
      (common-lisp:list
       (common-lisp:cons "destinationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input access-log-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (account (:copier common-lisp:nil) (:conc-name "struct-shape-account-"))
   (cloudwatch-role-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (throttle-settings common-lisp:nil :type
    (common-lisp:or throttle-settings common-lisp:null))
   (features common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null))
   (api-key-version common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'account 'make-account))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input account))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input account))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cloudwatch-role-arn))
      (common-lisp:list
       (common-lisp:cons "cloudwatchRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'throttle-settings))
      (common-lisp:list
       (common-lisp:cons "throttleSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'features))
      (common-lisp:list
       (common-lisp:cons "features"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key-version))
      (common-lisp:list
       (common-lisp:cons "apiKeyVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input account))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (api-key (:copier common-lisp:nil) (:conc-name "struct-shape-api-key-"))
   (id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (customer-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (enabled common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (last-updated-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (stage-keys common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'api-key 'make-api-key))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input api-key))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input api-key))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'customer-id))
      (common-lisp:list
       (common-lisp:cons "customerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-date))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-keys))
      (common-lisp:list
       (common-lisp:cons "stageKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input api-key))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (api-key-ids (:copier common-lisp:nil)
      (:conc-name "struct-shape-api-key-ids-"))
   (ids common-lisp:nil :type (common-lisp:or list-of-string common-lisp:null))
   (warnings common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'api-key-ids 'make-api-key-ids))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input api-key-ids))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input api-key-ids))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ids))
      (common-lisp:list
       (common-lisp:cons "ids"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warnings))
      (common-lisp:list
       (common-lisp:cons "warnings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input api-key-ids))
   common-lisp:nil))
(common-lisp:deftype api-key-source-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (api-keys (:copier common-lisp:nil) (:conc-name "struct-shape-api-keys-"))
   (warnings common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or list-of-api-key common-lisp:null)))
 (common-lisp:export (common-lisp:list 'api-keys 'make-api-keys))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input api-keys))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input api-keys))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warnings))
      (common-lisp:list
       (common-lisp:cons "warnings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input api-keys))
   common-lisp:nil))
(common-lisp:deftype api-keys-format () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (api-stage (:copier common-lisp:nil)
      (:conc-name "struct-shape-api-stage-"))
   (api-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (stage common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (throttle common-lisp:nil :type
    (common-lisp:or map-of-api-stage-throttle-settings common-lisp:null)))
 (common-lisp:export (common-lisp:list 'api-stage 'make-api-stage))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input api-stage))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input api-stage))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-id))
      (common-lisp:list
       (common-lisp:cons "apiId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage))
      (common-lisp:list
       (common-lisp:cons "stage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'throttle))
      (common-lisp:list
       (common-lisp:cons "throttle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input api-stage))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (authorizer (:copier common-lisp:nil)
      (:conc-name "struct-shape-authorizer-"))
   (id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or authorizer-type common-lisp:null))
   (provider-arns common-lisp:nil :type
    (common-lisp:or list-of-arns common-lisp:null))
   (auth-type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (authorizer-uri common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (authorizer-credentials common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (identity-source common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (identity-validation-expression common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (authorizer-result-ttl-in-seconds common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'authorizer 'make-authorizer))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input authorizer))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input authorizer))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'provider-arns))
      (common-lisp:list
       (common-lisp:cons "providerARNs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auth-type))
      (common-lisp:list
       (common-lisp:cons "authType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-uri))
      (common-lisp:list
       (common-lisp:cons "authorizerUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-credentials))
      (common-lisp:list
       (common-lisp:cons "authorizerCredentials"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-source))
      (common-lisp:list
       (common-lisp:cons "identitySource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'identity-validation-expression))
      (common-lisp:list
       (common-lisp:cons "identityValidationExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-result-ttl-in-seconds))
      (common-lisp:list
       (common-lisp:cons "authorizerResultTtlInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input authorizer))
   common-lisp:nil))
(common-lisp:deftype authorizer-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (authorizers (:copier common-lisp:nil)
      (:conc-name "struct-shape-authorizers-"))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or list-of-authorizer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'authorizers 'make-authorizers))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input authorizers))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input authorizers))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input authorizers))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition bad-request-exception
     (apigateway-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       bad-request-exception-message)))
 (common-lisp:export
  (common-lisp:list 'bad-request-exception 'bad-request-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (base-path-mapping (:copier common-lisp:nil)
      (:conc-name "struct-shape-base-path-mapping-"))
   (base-path common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (rest-api-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (stage common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'base-path-mapping 'make-base-path-mapping))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input base-path-mapping))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input base-path-mapping))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'base-path))
      (common-lisp:list
       (common-lisp:cons "basePath"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rest-api-id))
      (common-lisp:list
       (common-lisp:cons "restApiId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage))
      (common-lisp:list
       (common-lisp:cons "stage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input base-path-mapping))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (base-path-mappings (:copier common-lisp:nil)
      (:conc-name "struct-shape-base-path-mappings-"))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or list-of-base-path-mapping common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'base-path-mappings 'make-base-path-mappings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input base-path-mappings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input base-path-mappings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input base-path-mappings))
   common-lisp:nil))
(common-lisp:deftype blob ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:deftype cache-cluster-size () 'common-lisp:string)
(common-lisp:deftype cache-cluster-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (canary-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-canary-settings-"))
   (percent-traffic common-lisp:nil :type
    (common-lisp:or double common-lisp:null))
   (deployment-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (stage-variable-overrides common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (use-stage-cache common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'canary-settings 'make-canary-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input canary-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input canary-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'percent-traffic))
      (common-lisp:list
       (common-lisp:cons "percentTraffic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "deploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'stage-variable-overrides))
      (common-lisp:list
       (common-lisp:cons "stageVariableOverrides"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'use-stage-cache))
      (common-lisp:list
       (common-lisp:cons "useStageCache"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input canary-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (client-certificate (:copier common-lisp:nil)
      (:conc-name "struct-shape-client-certificate-"))
   (client-certificate-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (pem-encoded-certificate common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (expiration-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'client-certificate 'make-client-certificate))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input client-certificate))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input client-certificate))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-certificate-id))
      (common-lisp:list
       (common-lisp:cons "clientCertificateId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pem-encoded-certificate))
      (common-lisp:list
       (common-lisp:cons "pemEncodedCertificate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expiration-date))
      (common-lisp:list
       (common-lisp:cons "expirationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input client-certificate))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (client-certificates (:copier common-lisp:nil)
      (:conc-name "struct-shape-client-certificates-"))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or list-of-client-certificate common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'client-certificates 'make-client-certificates))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input client-certificates))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input client-certificates))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input client-certificates))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (apigateway-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message)))
(common-lisp:deftype connection-type () 'common-lisp:string)
(common-lisp:deftype content-handling-strategy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (create-api-key-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-api-key-request-"))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (enabled common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (generate-distinct-id common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (stage-keys common-lisp:nil :type
    (common-lisp:or list-of-stage-keys common-lisp:null))
   (customer-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-api-key-request 'make-create-api-key-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-api-key-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-api-key-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'generate-distinct-id))
      (common-lisp:list
       (common-lisp:cons "generateDistinctId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-keys))
      (common-lisp:list
       (common-lisp:cons "stageKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'customer-id))
      (common-lisp:list
       (common-lisp:cons "customerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-api-key-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-authorizer-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-authorizer-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or string common-lisp:null))
   (type (common-lisp:error ":type is required") :type
    (common-lisp:or authorizer-type common-lisp:null))
   (provider-arns common-lisp:nil :type
    (common-lisp:or list-of-arns common-lisp:null))
   (auth-type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (authorizer-uri common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (authorizer-credentials common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (identity-source common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (identity-validation-expression common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (authorizer-result-ttl-in-seconds common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-authorizer-request
                    'make-create-authorizer-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-authorizer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-authorizer-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'provider-arns))
      (common-lisp:list
       (common-lisp:cons "providerARNs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auth-type))
      (common-lisp:list
       (common-lisp:cons "authType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-uri))
      (common-lisp:list
       (common-lisp:cons "authorizerUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-credentials))
      (common-lisp:list
       (common-lisp:cons "authorizerCredentials"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-source))
      (common-lisp:list
       (common-lisp:cons "identitySource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'identity-validation-expression))
      (common-lisp:list
       (common-lisp:cons "identityValidationExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-result-ttl-in-seconds))
      (common-lisp:list
       (common-lisp:cons "authorizerResultTtlInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-authorizer-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-base-path-mapping-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-base-path-mapping-request-"))
   (domain-name (common-lisp:error ":domainname is required") :type
    (common-lisp:or string common-lisp:null))
   (base-path common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (stage common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-base-path-mapping-request
                    'make-create-base-path-mapping-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-base-path-mapping-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-base-path-mapping-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'base-path))
      (common-lisp:list
       (common-lisp:cons "basePath"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rest-api-id))
      (common-lisp:list
       (common-lisp:cons "restApiId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage))
      (common-lisp:list
       (common-lisp:cons "stage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-base-path-mapping-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-deployment-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-deployment-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (stage-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (stage-description common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (cache-cluster-enabled common-lisp:nil :type
    (common-lisp:or nullable-boolean common-lisp:null))
   (cache-cluster-size common-lisp:nil :type
    (common-lisp:or cache-cluster-size common-lisp:null))
   (variables common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (canary-settings common-lisp:nil :type
    (common-lisp:or deployment-canary-settings common-lisp:null))
   (tracing-enabled common-lisp:nil :type
    (common-lisp:or nullable-boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-deployment-request
                    'make-create-deployment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-deployment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-deployment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-name))
      (common-lisp:list
       (common-lisp:cons "stageName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-description))
      (common-lisp:list
       (common-lisp:cons "stageDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-cluster-enabled))
      (common-lisp:list
       (common-lisp:cons "cacheClusterEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-cluster-size))
      (common-lisp:list
       (common-lisp:cons "cacheClusterSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'variables))
      (common-lisp:list
       (common-lisp:cons "variables"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'canary-settings))
      (common-lisp:list
       (common-lisp:cons "canarySettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tracing-enabled))
      (common-lisp:list
       (common-lisp:cons "tracingEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-deployment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-documentation-part-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-documentation-part-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (location (common-lisp:error ":location is required") :type
    (common-lisp:or documentation-part-location common-lisp:null))
   (properties (common-lisp:error ":properties is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-documentation-part-request
                    'make-create-documentation-part-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-documentation-part-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-documentation-part-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location))
      (common-lisp:list
       (common-lisp:cons "location"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'properties))
      (common-lisp:list
       (common-lisp:cons "properties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-documentation-part-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-documentation-version-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-documentation-version-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (documentation-version
    (common-lisp:error ":documentationversion is required") :type
    (common-lisp:or string common-lisp:null))
   (stage-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-documentation-version-request
                    'make-create-documentation-version-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-documentation-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-documentation-version-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'documentation-version))
      (common-lisp:list
       (common-lisp:cons "documentationVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-name))
      (common-lisp:list
       (common-lisp:cons "stageName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-documentation-version-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-domain-name-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-domain-name-request-"))
   (domain-name (common-lisp:error ":domainname is required") :type
    (common-lisp:or string common-lisp:null))
   (certificate-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (certificate-body common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (certificate-private-key common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (certificate-chain common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (certificate-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (regional-certificate-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (regional-certificate-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (endpoint-configuration common-lisp:nil :type
    (common-lisp:or endpoint-configuration common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (security-policy common-lisp:nil :type
    (common-lisp:or security-policy common-lisp:null))
   (mutual-tls-authentication common-lisp:nil :type
    (common-lisp:or mutual-tls-authentication-input common-lisp:null))
   (ownership-verification-certificate-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-domain-name-request
                    'make-create-domain-name-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-domain-name-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-domain-name-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "domainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate-name))
      (common-lisp:list
       (common-lisp:cons "certificateName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate-body))
      (common-lisp:list
       (common-lisp:cons "certificateBody"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'certificate-private-key))
      (common-lisp:list
       (common-lisp:cons "certificatePrivateKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate-chain))
      (common-lisp:list
       (common-lisp:cons "certificateChain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate-arn))
      (common-lisp:list
       (common-lisp:cons "certificateArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'regional-certificate-name))
      (common-lisp:list
       (common-lisp:cons "regionalCertificateName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'regional-certificate-arn))
      (common-lisp:list
       (common-lisp:cons "regionalCertificateArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'endpoint-configuration))
      (common-lisp:list
       (common-lisp:cons "endpointConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-policy))
      (common-lisp:list
       (common-lisp:cons "securityPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'mutual-tls-authentication))
      (common-lisp:list
       (common-lisp:cons "mutualTlsAuthentication"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ownership-verification-certificate-arn))
      (common-lisp:list
       (common-lisp:cons "ownershipVerificationCertificateArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-domain-name-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-model-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-model-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (schema common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (content-type (common-lisp:error ":contenttype is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-model-request 'make-create-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-model-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schema))
      (common-lisp:list
       (common-lisp:cons "schema"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-type))
      (common-lisp:list
       (common-lisp:cons "contentType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-request-validator-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-request-validator-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (validate-request-body common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (validate-request-parameters common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-request-validator-request
                    'make-create-request-validator-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-request-validator-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-request-validator-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'validate-request-body))
      (common-lisp:list
       (common-lisp:cons "validateRequestBody"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'validate-request-parameters))
      (common-lisp:list
       (common-lisp:cons "validateRequestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-request-validator-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-resource-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (parent-id (common-lisp:error ":parentid is required") :type
    (common-lisp:or string common-lisp:null))
   (path-part (common-lisp:error ":pathpart is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-resource-request 'make-create-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'path-part))
      (common-lisp:list
       (common-lisp:cons "pathPart"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-rest-api-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-rest-api-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (clone-from common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (binary-media-types common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null))
   (minimum-compression-size common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null))
   (api-key-source common-lisp:nil :type
    (common-lisp:or api-key-source-type common-lisp:null))
   (endpoint-configuration common-lisp:nil :type
    (common-lisp:or endpoint-configuration common-lisp:null))
   (policy common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (disable-execute-api-endpoint common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-rest-api-request 'make-create-rest-api-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-rest-api-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-rest-api-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'clone-from))
      (common-lisp:list
       (common-lisp:cons "cloneFrom"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'binary-media-types))
      (common-lisp:list
       (common-lisp:cons "binaryMediaTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'minimum-compression-size))
      (common-lisp:list
       (common-lisp:cons "minimumCompressionSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key-source))
      (common-lisp:list
       (common-lisp:cons "apiKeySource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'endpoint-configuration))
      (common-lisp:list
       (common-lisp:cons "endpointConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-execute-api-endpoint))
      (common-lisp:list
       (common-lisp:cons "disableExecuteApiEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-rest-api-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-stage-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-stage-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (stage-name (common-lisp:error ":stagename is required") :type
    (common-lisp:or string common-lisp:null))
   (deployment-id (common-lisp:error ":deploymentid is required") :type
    (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (cache-cluster-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (cache-cluster-size common-lisp:nil :type
    (common-lisp:or cache-cluster-size common-lisp:null))
   (variables common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (documentation-version common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (canary-settings common-lisp:nil :type
    (common-lisp:or canary-settings common-lisp:null))
   (tracing-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-stage-request 'make-create-stage-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-stage-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-name))
      (common-lisp:list
       (common-lisp:cons "stageName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "deploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-cluster-enabled))
      (common-lisp:list
       (common-lisp:cons "cacheClusterEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-cluster-size))
      (common-lisp:list
       (common-lisp:cons "cacheClusterSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'variables))
      (common-lisp:list
       (common-lisp:cons "variables"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'documentation-version))
      (common-lisp:list
       (common-lisp:cons "documentationVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'canary-settings))
      (common-lisp:list
       (common-lisp:cons "canarySettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tracing-enabled))
      (common-lisp:list
       (common-lisp:cons "tracingEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-stage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-usage-plan-key-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-usage-plan-key-request-"))
   (usage-plan-id (common-lisp:error ":usageplanid is required") :type
    (common-lisp:or string common-lisp:null))
   (key-id (common-lisp:error ":keyid is required") :type
    (common-lisp:or string common-lisp:null))
   (key-type (common-lisp:error ":keytype is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-usage-plan-key-request
                    'make-create-usage-plan-key-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-usage-plan-key-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-usage-plan-key-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-id))
      (common-lisp:list
       (common-lisp:cons "keyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-type))
      (common-lisp:list
       (common-lisp:cons "keyType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-usage-plan-key-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-usage-plan-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-usage-plan-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (api-stages common-lisp:nil :type
    (common-lisp:or list-of-api-stage common-lisp:null))
   (throttle common-lisp:nil :type
    (common-lisp:or throttle-settings common-lisp:null))
   (quota common-lisp:nil :type
    (common-lisp:or quota-settings common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-usage-plan-request
                    'make-create-usage-plan-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-usage-plan-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-usage-plan-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-stages))
      (common-lisp:list
       (common-lisp:cons "apiStages"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'throttle))
      (common-lisp:list
       (common-lisp:cons "throttle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'quota))
      (common-lisp:list
       (common-lisp:cons "quota"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-usage-plan-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-vpc-link-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-vpc-link-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (target-arns (common-lisp:error ":targetarns is required") :type
    (common-lisp:or list-of-string common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-vpc-link-request 'make-create-vpc-link-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-vpc-link-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-vpc-link-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-arns))
      (common-lisp:list
       (common-lisp:cons "targetArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-vpc-link-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-api-key-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-api-key-request-"))
   (api-key (common-lisp:error ":apikey is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-api-key-request 'make-delete-api-key-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-api-key-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-api-key-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-api-key-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-authorizer-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-authorizer-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (authorizer-id (common-lisp:error ":authorizerid is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-authorizer-request
                    'make-delete-authorizer-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-authorizer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-authorizer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-authorizer-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-base-path-mapping-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-base-path-mapping-request-"))
   (domain-name (common-lisp:error ":domainname is required") :type
    (common-lisp:or string common-lisp:null))
   (base-path (common-lisp:error ":basepath is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-base-path-mapping-request
                    'make-delete-base-path-mapping-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-base-path-mapping-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-base-path-mapping-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-base-path-mapping-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-client-certificate-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-client-certificate-request-"))
   (client-certificate-id
    (common-lisp:error ":clientcertificateid is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-client-certificate-request
                    'make-delete-client-certificate-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-client-certificate-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-client-certificate-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-client-certificate-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-deployment-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-deployment-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (deployment-id (common-lisp:error ":deploymentid is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-deployment-request
                    'make-delete-deployment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-deployment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-deployment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-deployment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-documentation-part-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-documentation-part-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (documentation-part-id
    (common-lisp:error ":documentationpartid is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-documentation-part-request
                    'make-delete-documentation-part-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-documentation-part-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-documentation-part-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-documentation-part-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-documentation-version-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-documentation-version-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (documentation-version
    (common-lisp:error ":documentationversion is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-documentation-version-request
                    'make-delete-documentation-version-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-documentation-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-documentation-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-documentation-version-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-domain-name-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-domain-name-request-"))
   (domain-name (common-lisp:error ":domainname is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-domain-name-request
                    'make-delete-domain-name-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-domain-name-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-domain-name-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-domain-name-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-gateway-response-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-gateway-response-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (response-type (common-lisp:error ":responsetype is required") :type
    (common-lisp:or gateway-response-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-gateway-response-request
                    'make-delete-gateway-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-gateway-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-gateway-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-gateway-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-integration-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-integration-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (resource-id (common-lisp:error ":resourceid is required") :type
    (common-lisp:or string common-lisp:null))
   (http-method (common-lisp:error ":httpmethod is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-integration-request
                    'make-delete-integration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-integration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-integration-response-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-integration-response-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (resource-id (common-lisp:error ":resourceid is required") :type
    (common-lisp:or string common-lisp:null))
   (http-method (common-lisp:error ":httpmethod is required") :type
    (common-lisp:or string common-lisp:null))
   (status-code (common-lisp:error ":statuscode is required") :type
    (common-lisp:or status-code common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-integration-response-request
                    'make-delete-integration-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-integration-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-integration-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-integration-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-method-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-method-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (resource-id (common-lisp:error ":resourceid is required") :type
    (common-lisp:or string common-lisp:null))
   (http-method (common-lisp:error ":httpmethod is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-method-request 'make-delete-method-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-method-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-method-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-method-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-method-response-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-method-response-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (resource-id (common-lisp:error ":resourceid is required") :type
    (common-lisp:or string common-lisp:null))
   (http-method (common-lisp:error ":httpmethod is required") :type
    (common-lisp:or string common-lisp:null))
   (status-code (common-lisp:error ":statuscode is required") :type
    (common-lisp:or status-code common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-method-response-request
                    'make-delete-method-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-method-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-method-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-method-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-model-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-model-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (model-name (common-lisp:error ":modelname is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-model-request 'make-delete-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-request-validator-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-request-validator-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (request-validator-id (common-lisp:error ":requestvalidatorid is required")
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-request-validator-request
                    'make-delete-request-validator-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-request-validator-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-request-validator-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-request-validator-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-resource-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (resource-id (common-lisp:error ":resourceid is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-resource-request 'make-delete-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-rest-api-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-rest-api-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-rest-api-request 'make-delete-rest-api-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-rest-api-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-rest-api-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-rest-api-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-stage-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-stage-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (stage-name (common-lisp:error ":stagename is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-stage-request 'make-delete-stage-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-stage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-usage-plan-key-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-usage-plan-key-request-"))
   (usage-plan-id (common-lisp:error ":usageplanid is required") :type
    (common-lisp:or string common-lisp:null))
   (key-id (common-lisp:error ":keyid is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-usage-plan-key-request
                    'make-delete-usage-plan-key-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-usage-plan-key-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-usage-plan-key-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-usage-plan-key-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-usage-plan-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-usage-plan-request-"))
   (usage-plan-id (common-lisp:error ":usageplanid is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-usage-plan-request
                    'make-delete-usage-plan-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-usage-plan-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-usage-plan-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-usage-plan-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-vpc-link-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-vpc-link-request-"))
   (vpc-link-id (common-lisp:error ":vpclinkid is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-vpc-link-request 'make-delete-vpc-link-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-vpc-link-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-vpc-link-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-vpc-link-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (deployment (:copier common-lisp:nil)
      (:conc-name "struct-shape-deployment-"))
   (id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (api-summary common-lisp:nil :type
    (common-lisp:or path-to-map-of-method-snapshot common-lisp:null)))
 (common-lisp:export (common-lisp:list 'deployment 'make-deployment))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input deployment))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input deployment))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-summary))
      (common-lisp:list
       (common-lisp:cons "apiSummary"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input deployment))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (deployment-canary-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-deployment-canary-settings-"))
   (percent-traffic common-lisp:nil :type
    (common-lisp:or double common-lisp:null))
   (stage-variable-overrides common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (use-stage-cache common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'deployment-canary-settings
                    'make-deployment-canary-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          deployment-canary-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          deployment-canary-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'percent-traffic))
      (common-lisp:list
       (common-lisp:cons "percentTraffic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'stage-variable-overrides))
      (common-lisp:list
       (common-lisp:cons "stageVariableOverrides"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'use-stage-cache))
      (common-lisp:list
       (common-lisp:cons "useStageCache"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          deployment-canary-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (deployments (:copier common-lisp:nil)
      (:conc-name "struct-shape-deployments-"))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or list-of-deployment common-lisp:null)))
 (common-lisp:export (common-lisp:list 'deployments 'make-deployments))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input deployments))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input deployments))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input deployments))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (documentation-part (:copier common-lisp:nil)
      (:conc-name "struct-shape-documentation-part-"))
   (id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (location common-lisp:nil :type
    (common-lisp:or documentation-part-location common-lisp:null))
   (properties common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'documentation-part 'make-documentation-part))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input documentation-part))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input documentation-part))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location))
      (common-lisp:list
       (common-lisp:cons "location"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'properties))
      (common-lisp:list
       (common-lisp:cons "properties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input documentation-part))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (documentation-part-ids (:copier common-lisp:nil)
      (:conc-name "struct-shape-documentation-part-ids-"))
   (ids common-lisp:nil :type (common-lisp:or list-of-string common-lisp:null))
   (warnings common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'documentation-part-ids 'make-documentation-part-ids))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          documentation-part-ids))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          documentation-part-ids))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ids))
      (common-lisp:list
       (common-lisp:cons "ids"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warnings))
      (common-lisp:list
       (common-lisp:cons "warnings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          documentation-part-ids))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (documentation-part-location (:copier common-lisp:nil)
      (:conc-name "struct-shape-documentation-part-location-"))
   (type (common-lisp:error ":type is required") :type
    (common-lisp:or documentation-part-type common-lisp:null))
   (path common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (method common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (status-code common-lisp:nil :type
    (common-lisp:or documentation-part-location-status-code common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'documentation-part-location
                    'make-documentation-part-location))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          documentation-part-location))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          documentation-part-location))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'path))
      (common-lisp:list
       (common-lisp:cons "path"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'method))
      (common-lisp:list
       (common-lisp:cons "method"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-code))
      (common-lisp:list
       (common-lisp:cons "statusCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          documentation-part-location))
   common-lisp:nil))
(common-lisp:deftype documentation-part-location-status-code ()
  'common-lisp:string)
(common-lisp:deftype documentation-part-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (documentation-parts (:copier common-lisp:nil)
      (:conc-name "struct-shape-documentation-parts-"))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or list-of-documentation-part common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'documentation-parts 'make-documentation-parts))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input documentation-parts))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input documentation-parts))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input documentation-parts))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (documentation-version (:copier common-lisp:nil)
      (:conc-name "struct-shape-documentation-version-"))
   (version common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'documentation-version 'make-documentation-version))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          documentation-version))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          documentation-version))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          documentation-version))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (documentation-versions (:copier common-lisp:nil)
      (:conc-name "struct-shape-documentation-versions-"))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or list-of-documentation-version common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'documentation-versions 'make-documentation-versions))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          documentation-versions))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          documentation-versions))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          documentation-versions))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (domain-name (:copier common-lisp:nil)
      (:conc-name "struct-shape-domain-name-"))
   (domain-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (certificate-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (certificate-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (certificate-upload-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (regional-domain-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (regional-hosted-zone-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (regional-certificate-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (regional-certificate-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (distribution-domain-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (distribution-hosted-zone-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (endpoint-configuration common-lisp:nil :type
    (common-lisp:or endpoint-configuration common-lisp:null))
   (domain-name-status common-lisp:nil :type
    (common-lisp:or domain-name-status common-lisp:null))
   (domain-name-status-message common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (security-policy common-lisp:nil :type
    (common-lisp:or security-policy common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (mutual-tls-authentication common-lisp:nil :type
    (common-lisp:or mutual-tls-authentication common-lisp:null))
   (ownership-verification-certificate-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'domain-name 'make-domain-name))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input domain-name))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input domain-name))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "domainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate-name))
      (common-lisp:list
       (common-lisp:cons "certificateName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate-arn))
      (common-lisp:list
       (common-lisp:cons "certificateArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'certificate-upload-date))
      (common-lisp:list
       (common-lisp:cons "certificateUploadDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'regional-domain-name))
      (common-lisp:list
       (common-lisp:cons "regionalDomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'regional-hosted-zone-id))
      (common-lisp:list
       (common-lisp:cons "regionalHostedZoneId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'regional-certificate-name))
      (common-lisp:list
       (common-lisp:cons "regionalCertificateName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'regional-certificate-arn))
      (common-lisp:list
       (common-lisp:cons "regionalCertificateArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'distribution-domain-name))
      (common-lisp:list
       (common-lisp:cons "distributionDomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'distribution-hosted-zone-id))
      (common-lisp:list
       (common-lisp:cons "distributionHostedZoneId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'endpoint-configuration))
      (common-lisp:list
       (common-lisp:cons "endpointConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name-status))
      (common-lisp:list
       (common-lisp:cons "domainNameStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'domain-name-status-message))
      (common-lisp:list
       (common-lisp:cons "domainNameStatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-policy))
      (common-lisp:list
       (common-lisp:cons "securityPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'mutual-tls-authentication))
      (common-lisp:list
       (common-lisp:cons "mutualTlsAuthentication"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ownership-verification-certificate-arn))
      (common-lisp:list
       (common-lisp:cons "ownershipVerificationCertificateArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input domain-name))
   common-lisp:nil))
(common-lisp:deftype domain-name-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (domain-names (:copier common-lisp:nil)
      (:conc-name "struct-shape-domain-names-"))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or list-of-domain-name common-lisp:null)))
 (common-lisp:export (common-lisp:list 'domain-names 'make-domain-names))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input domain-names))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input domain-names))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input domain-names))
   common-lisp:nil))
(common-lisp:deftype double () 'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:defstruct
     (endpoint-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-endpoint-configuration-"))
   (types common-lisp:nil :type
    (common-lisp:or list-of-endpoint-type common-lisp:null))
   (vpc-endpoint-ids common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'endpoint-configuration 'make-endpoint-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          endpoint-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          endpoint-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'types))
      (common-lisp:list
       (common-lisp:cons "types"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-endpoint-ids))
      (common-lisp:list
       (common-lisp:cons "vpcEndpointIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          endpoint-configuration))
   common-lisp:nil))
(common-lisp:deftype endpoint-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (export-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-export-response-"))
   (content-type common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (content-disposition common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (body common-lisp:nil :type (common-lisp:or blob common-lisp:null)))
 (common-lisp:export (common-lisp:list 'export-response 'make-export-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input export-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-type))
      (common-lisp:cons "Content-Type" aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-disposition))
      (common-lisp:cons "Content-Disposition"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input export-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input export-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'body)))
(common-lisp:progn
 (common-lisp:defstruct
     (flush-stage-authorizers-cache-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-flush-stage-authorizers-cache-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (stage-name (common-lisp:error ":stagename is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'flush-stage-authorizers-cache-request
                    'make-flush-stage-authorizers-cache-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          flush-stage-authorizers-cache-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          flush-stage-authorizers-cache-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          flush-stage-authorizers-cache-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (flush-stage-cache-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-flush-stage-cache-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (stage-name (common-lisp:error ":stagename is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'flush-stage-cache-request
                    'make-flush-stage-cache-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          flush-stage-cache-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          flush-stage-cache-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          flush-stage-cache-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (gateway-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-gateway-response-"))
   (response-type common-lisp:nil :type
    (common-lisp:or gateway-response-type common-lisp:null))
   (status-code common-lisp:nil :type
    (common-lisp:or status-code common-lisp:null))
   (response-parameters common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (response-templates common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (default-response common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'gateway-response 'make-gateway-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input gateway-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input gateway-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-type))
      (common-lisp:list
       (common-lisp:cons "responseType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-code))
      (common-lisp:list
       (common-lisp:cons "statusCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "responseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-templates))
      (common-lisp:list
       (common-lisp:cons "responseTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'default-response))
      (common-lisp:list
       (common-lisp:cons "defaultResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input gateway-response))
   common-lisp:nil))
(common-lisp:deftype gateway-response-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (gateway-responses (:copier common-lisp:nil)
      (:conc-name "struct-shape-gateway-responses-"))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or list-of-gateway-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'gateway-responses 'make-gateway-responses))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input gateway-responses))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input gateway-responses))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input gateway-responses))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (generate-client-certificate-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-generate-client-certificate-request-"))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'generate-client-certificate-request
                    'make-generate-client-certificate-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          generate-client-certificate-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          generate-client-certificate-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          generate-client-certificate-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-account-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-account-request-")))
 (common-lisp:export
  (common-lisp:list 'get-account-request 'make-get-account-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-account-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-api-key-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-api-key-request-"))
   (api-key (common-lisp:error ":apikey is required") :type
    (common-lisp:or string common-lisp:null))
   (include-value common-lisp:nil :type
    (common-lisp:or nullable-boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-api-key-request 'make-get-api-key-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-api-key-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-api-key-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-api-key-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-api-keys-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-api-keys-request-"))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null))
   (name-query common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (customer-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (include-values common-lisp:nil :type
    (common-lisp:or nullable-boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-api-keys-request 'make-get-api-keys-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-api-keys-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-api-keys-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-api-keys-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-authorizer-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-authorizer-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (authorizer-id (common-lisp:error ":authorizerid is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-authorizer-request 'make-get-authorizer-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-authorizer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-authorizer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-authorizer-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-authorizers-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-authorizers-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-authorizers-request 'make-get-authorizers-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-authorizers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-authorizers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-authorizers-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-base-path-mapping-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-base-path-mapping-request-"))
   (domain-name (common-lisp:error ":domainname is required") :type
    (common-lisp:or string common-lisp:null))
   (base-path (common-lisp:error ":basepath is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-base-path-mapping-request
                    'make-get-base-path-mapping-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-base-path-mapping-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-base-path-mapping-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-base-path-mapping-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-base-path-mappings-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-base-path-mappings-request-"))
   (domain-name (common-lisp:error ":domainname is required") :type
    (common-lisp:or string common-lisp:null))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-base-path-mappings-request
                    'make-get-base-path-mappings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-base-path-mappings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-base-path-mappings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-base-path-mappings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-client-certificate-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-client-certificate-request-"))
   (client-certificate-id
    (common-lisp:error ":clientcertificateid is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-client-certificate-request
                    'make-get-client-certificate-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-client-certificate-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-client-certificate-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-client-certificate-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-client-certificates-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-client-certificates-request-"))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-client-certificates-request
                    'make-get-client-certificates-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-client-certificates-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-client-certificates-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-client-certificates-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-deployment-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-deployment-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (deployment-id (common-lisp:error ":deploymentid is required") :type
    (common-lisp:or string common-lisp:null))
   (embed common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-deployment-request 'make-get-deployment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-deployment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-deployment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-deployment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-deployments-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-deployments-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-deployments-request 'make-get-deployments-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-deployments-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-deployments-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-deployments-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-documentation-part-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-documentation-part-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (documentation-part-id
    (common-lisp:error ":documentationpartid is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-documentation-part-request
                    'make-get-documentation-part-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-documentation-part-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-documentation-part-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-documentation-part-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-documentation-parts-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-documentation-parts-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or documentation-part-type common-lisp:null))
   (name-query common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (path common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null))
   (location-status common-lisp:nil :type
    (common-lisp:or location-status-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-documentation-parts-request
                    'make-get-documentation-parts-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-documentation-parts-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-documentation-parts-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-documentation-parts-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-documentation-version-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-documentation-version-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (documentation-version
    (common-lisp:error ":documentationversion is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-documentation-version-request
                    'make-get-documentation-version-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-documentation-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-documentation-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-documentation-version-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-documentation-versions-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-documentation-versions-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-documentation-versions-request
                    'make-get-documentation-versions-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-documentation-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-documentation-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-documentation-versions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-domain-name-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-domain-name-request-"))
   (domain-name (common-lisp:error ":domainname is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-domain-name-request 'make-get-domain-name-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-name-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-name-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-name-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-domain-names-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-domain-names-request-"))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-domain-names-request 'make-get-domain-names-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-names-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-names-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-names-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-export-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-export-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (stage-name (common-lisp:error ":stagename is required") :type
    (common-lisp:or string common-lisp:null))
   (export-type (common-lisp:error ":exporttype is required") :type
    (common-lisp:or string common-lisp:null))
   (parameters common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (accepts common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-export-request 'make-get-export-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-export-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'accepts))
      (common-lisp:cons "Accept" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-export-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-export-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-gateway-response-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-gateway-response-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (response-type (common-lisp:error ":responsetype is required") :type
    (common-lisp:or gateway-response-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-gateway-response-request
                    'make-get-gateway-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-gateway-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-gateway-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-gateway-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-gateway-responses-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-gateway-responses-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-gateway-responses-request
                    'make-get-gateway-responses-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-gateway-responses-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-gateway-responses-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-gateway-responses-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-integration-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-integration-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (resource-id (common-lisp:error ":resourceid is required") :type
    (common-lisp:or string common-lisp:null))
   (http-method (common-lisp:error ":httpmethod is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-integration-request 'make-get-integration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-integration-response-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-integration-response-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (resource-id (common-lisp:error ":resourceid is required") :type
    (common-lisp:or string common-lisp:null))
   (http-method (common-lisp:error ":httpmethod is required") :type
    (common-lisp:or string common-lisp:null))
   (status-code (common-lisp:error ":statuscode is required") :type
    (common-lisp:or status-code common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-integration-response-request
                    'make-get-integration-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-method-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-method-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (resource-id (common-lisp:error ":resourceid is required") :type
    (common-lisp:or string common-lisp:null))
   (http-method (common-lisp:error ":httpmethod is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-method-request 'make-get-method-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-method-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-method-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-method-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-method-response-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-method-response-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (resource-id (common-lisp:error ":resourceid is required") :type
    (common-lisp:or string common-lisp:null))
   (http-method (common-lisp:error ":httpmethod is required") :type
    (common-lisp:or string common-lisp:null))
   (status-code (common-lisp:error ":statuscode is required") :type
    (common-lisp:or status-code common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-method-response-request
                    'make-get-method-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-method-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-method-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-method-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-model-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-model-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (model-name (common-lisp:error ":modelname is required") :type
    (common-lisp:or string common-lisp:null))
   (flatten common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-model-request 'make-get-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-model-template-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-model-template-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (model-name (common-lisp:error ":modelname is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-model-template-request
                    'make-get-model-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-model-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-model-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-model-template-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-models-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-models-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-models-request 'make-get-models-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-models-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-models-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-models-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-request-validator-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-request-validator-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (request-validator-id (common-lisp:error ":requestvalidatorid is required")
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-request-validator-request
                    'make-get-request-validator-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-request-validator-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-request-validator-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-request-validator-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-request-validators-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-request-validators-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-request-validators-request
                    'make-get-request-validators-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-request-validators-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-request-validators-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-request-validators-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-resource-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (resource-id (common-lisp:error ":resourceid is required") :type
    (common-lisp:or string common-lisp:null))
   (embed common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-resource-request 'make-get-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-resources-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-resources-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null))
   (embed common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-resources-request 'make-get-resources-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-resources-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-resources-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-resources-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-rest-api-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-rest-api-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-rest-api-request 'make-get-rest-api-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-rest-api-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-rest-api-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-rest-api-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-rest-apis-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-rest-apis-request-"))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-rest-apis-request 'make-get-rest-apis-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-rest-apis-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-rest-apis-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-rest-apis-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-sdk-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-sdk-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (stage-name (common-lisp:error ":stagename is required") :type
    (common-lisp:or string common-lisp:null))
   (sdk-type (common-lisp:error ":sdktype is required") :type
    (common-lisp:or string common-lisp:null))
   (parameters common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-sdk-request 'make-get-sdk-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-sdk-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-sdk-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-sdk-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-sdk-type-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-sdk-type-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-sdk-type-request 'make-get-sdk-type-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-sdk-type-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-sdk-type-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-sdk-type-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-sdk-types-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-sdk-types-request-"))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-sdk-types-request 'make-get-sdk-types-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-sdk-types-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-sdk-types-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-sdk-types-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-stage-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-stage-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (stage-name (common-lisp:error ":stagename is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-stage-request 'make-get-stage-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-stage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-stages-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-stages-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (deployment-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-stages-request 'make-get-stages-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-stages-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-stages-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-stages-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-tags-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-tags-request-"))
   (resource-arn (common-lisp:error ":resourcearn is required") :type
    (common-lisp:or string common-lisp:null))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-tags-request 'make-get-tags-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-tags-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-tags-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-tags-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-usage-plan-key-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-usage-plan-key-request-"))
   (usage-plan-id (common-lisp:error ":usageplanid is required") :type
    (common-lisp:or string common-lisp:null))
   (key-id (common-lisp:error ":keyid is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-usage-plan-key-request
                    'make-get-usage-plan-key-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-plan-key-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-plan-key-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-plan-key-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-usage-plan-keys-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-usage-plan-keys-request-"))
   (usage-plan-id (common-lisp:error ":usageplanid is required") :type
    (common-lisp:or string common-lisp:null))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null))
   (name-query common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-usage-plan-keys-request
                    'make-get-usage-plan-keys-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-plan-keys-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-plan-keys-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-plan-keys-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-usage-plan-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-usage-plan-request-"))
   (usage-plan-id (common-lisp:error ":usageplanid is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-usage-plan-request 'make-get-usage-plan-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-plan-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-plan-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-plan-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-usage-plans-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-usage-plans-request-"))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (key-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-usage-plans-request 'make-get-usage-plans-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-plans-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-plans-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-plans-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-usage-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-usage-request-"))
   (usage-plan-id (common-lisp:error ":usageplanid is required") :type
    (common-lisp:or string common-lisp:null))
   (key-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (start-date (common-lisp:error ":startdate is required") :type
    (common-lisp:or string common-lisp:null))
   (end-date (common-lisp:error ":enddate is required") :type
    (common-lisp:or string common-lisp:null))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-usage-request 'make-get-usage-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-usage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-usage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-usage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-vpc-link-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-vpc-link-request-"))
   (vpc-link-id (common-lisp:error ":vpclinkid is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-vpc-link-request 'make-get-vpc-link-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-vpc-link-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-vpc-link-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-vpc-link-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-vpc-links-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-vpc-links-request-"))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-vpc-links-request 'make-get-vpc-links-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-vpc-links-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-vpc-links-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-vpc-links-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (import-api-keys-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-import-api-keys-request-"))
   (body (common-lisp:error ":body is required") :type
    (common-lisp:or blob common-lisp:null))
   (format (common-lisp:error ":format is required") :type
    (common-lisp:or api-keys-format common-lisp:null))
   (fail-on-warnings common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-api-keys-request 'make-import-api-keys-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          import-api-keys-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          import-api-keys-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          import-api-keys-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'body)))
(common-lisp:progn
 (common-lisp:defstruct
     (import-documentation-parts-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-import-documentation-parts-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (mode common-lisp:nil :type (common-lisp:or put-mode common-lisp:null))
   (fail-on-warnings common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (body (common-lisp:error ":body is required") :type
    (common-lisp:or blob common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-documentation-parts-request
                    'make-import-documentation-parts-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          import-documentation-parts-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          import-documentation-parts-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          import-documentation-parts-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'body)))
(common-lisp:progn
 (common-lisp:defstruct
     (import-rest-api-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-import-rest-api-request-"))
   (fail-on-warnings common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (parameters common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (body (common-lisp:error ":body is required") :type
    (common-lisp:or blob common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-rest-api-request 'make-import-rest-api-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          import-rest-api-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          import-rest-api-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          import-rest-api-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'body)))
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (integration (:copier common-lisp:nil)
      (:conc-name "struct-shape-integration-"))
   (type common-lisp:nil :type
    (common-lisp:or integration-type common-lisp:null))
   (http-method common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (uri common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (connection-type common-lisp:nil :type
    (common-lisp:or connection-type common-lisp:null))
   (connection-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (credentials common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (request-parameters common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (request-templates common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (passthrough-behavior common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (content-handling common-lisp:nil :type
    (common-lisp:or content-handling-strategy common-lisp:null))
   (timeout-in-millis common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (cache-namespace common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cache-key-parameters common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null))
   (integration-responses common-lisp:nil :type
    (common-lisp:or map-of-integration-response common-lisp:null))
   (tls-config common-lisp:nil :type
    (common-lisp:or tls-config common-lisp:null)))
 (common-lisp:export (common-lisp:list 'integration 'make-integration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input integration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input integration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'http-method))
      (common-lisp:list
       (common-lisp:cons "httpMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'uri))
      (common-lisp:list
       (common-lisp:cons "uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-type))
      (common-lisp:list
       (common-lisp:cons "connectionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-id))
      (common-lisp:list
       (common-lisp:cons "connectionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'credentials))
      (common-lisp:list
       (common-lisp:cons "credentials"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-parameters))
      (common-lisp:list
       (common-lisp:cons "requestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-templates))
      (common-lisp:list
       (common-lisp:cons "requestTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'passthrough-behavior))
      (common-lisp:list
       (common-lisp:cons "passthroughBehavior"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-handling))
      (common-lisp:list
       (common-lisp:cons "contentHandling"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timeout-in-millis))
      (common-lisp:list
       (common-lisp:cons "timeoutInMillis"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-namespace))
      (common-lisp:list
       (common-lisp:cons "cacheNamespace"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-key-parameters))
      (common-lisp:list
       (common-lisp:cons "cacheKeyParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'integration-responses))
      (common-lisp:list
       (common-lisp:cons "integrationResponses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tls-config))
      (common-lisp:list
       (common-lisp:cons "tlsConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input integration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (integration-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-integration-response-"))
   (status-code common-lisp:nil :type
    (common-lisp:or status-code common-lisp:null))
   (selection-pattern common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (response-parameters common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (response-templates common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (content-handling common-lisp:nil :type
    (common-lisp:or content-handling-strategy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'integration-response 'make-integration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input integration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input integration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-code))
      (common-lisp:list
       (common-lisp:cons "statusCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'selection-pattern))
      (common-lisp:list
       (common-lisp:cons "selectionPattern"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "responseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-templates))
      (common-lisp:list
       (common-lisp:cons "responseTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-handling))
      (common-lisp:list
       (common-lisp:cons "contentHandling"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input integration-response))
   common-lisp:nil))
(common-lisp:deftype integration-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition limit-exceeded-exception
     (apigateway-error)
     ((retry-after-seconds :initarg :retry-after-seconds :initform
       common-lisp:nil :reader limit-exceeded-exception-retry-after-seconds)
      (message :initarg :message :initform common-lisp:nil :reader
       limit-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception
                    'limit-exceeded-exception-retry-after-seconds
                    'limit-exceeded-exception-message)))
(common-lisp:progn
 (common-lisp:deftype list-of-arns ()
   '(trivial-types:proper-list provider-arn))
 (common-lisp:defun |make-list-of-arns|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list provider-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-api-key () '(trivial-types:proper-list api-key))
 (common-lisp:defun |make-list-of-api-key|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list api-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-api-stage ()
   '(trivial-types:proper-list api-stage))
 (common-lisp:defun |make-list-of-api-stage|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list api-stage))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-authorizer ()
   '(trivial-types:proper-list authorizer))
 (common-lisp:defun |make-list-of-authorizer|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list authorizer))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-base-path-mapping ()
   '(trivial-types:proper-list base-path-mapping))
 (common-lisp:defun |make-list-of-base-path-mapping|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list base-path-mapping))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-client-certificate ()
   '(trivial-types:proper-list client-certificate))
 (common-lisp:defun |make-list-of-client-certificate|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list client-certificate))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-deployment ()
   '(trivial-types:proper-list deployment))
 (common-lisp:defun |make-list-of-deployment|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list deployment))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-documentation-part ()
   '(trivial-types:proper-list documentation-part))
 (common-lisp:defun |make-list-of-documentation-part|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list documentation-part))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-documentation-version ()
   '(trivial-types:proper-list documentation-version))
 (common-lisp:defun |make-list-of-documentation-version|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list documentation-version))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-domain-name ()
   '(trivial-types:proper-list domain-name))
 (common-lisp:defun |make-list-of-domain-name|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list domain-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-endpoint-type ()
   '(trivial-types:proper-list endpoint-type))
 (common-lisp:defun |make-list-of-endpoint-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list endpoint-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-gateway-response ()
   '(trivial-types:proper-list gateway-response))
 (common-lisp:defun |make-list-of-gateway-response|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list gateway-response))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-long () '(trivial-types:proper-list long))
 (common-lisp:defun |make-list-of-long|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list long))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-model () '(trivial-types:proper-list model))
 (common-lisp:defun |make-list-of-model|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list model))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-patch-operation ()
   '(trivial-types:proper-list patch-operation))
 (common-lisp:defun |make-list-of-patch-operation|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list patch-operation))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-request-validator ()
   '(trivial-types:proper-list request-validator))
 (common-lisp:defun |make-list-of-request-validator|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list request-validator))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-resource ()
   '(trivial-types:proper-list resource))
 (common-lisp:defun |make-list-of-resource|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-rest-api ()
   '(trivial-types:proper-list rest-api))
 (common-lisp:defun |make-list-of-rest-api|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list rest-api))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-sdk-configuration-property ()
   '(trivial-types:proper-list sdk-configuration-property))
 (common-lisp:defun |make-list-of-sdk-configuration-property|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            sdk-configuration-property))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-sdk-type ()
   '(trivial-types:proper-list sdk-type))
 (common-lisp:defun |make-list-of-sdk-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list sdk-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-stage () '(trivial-types:proper-list stage))
 (common-lisp:defun |make-list-of-stage|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list stage))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-stage-keys ()
   '(trivial-types:proper-list stage-key))
 (common-lisp:defun |make-list-of-stage-keys|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list stage-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-string () '(trivial-types:proper-list string))
 (common-lisp:defun |make-list-of-string|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-usage ()
   '(trivial-types:proper-list list-of-long))
 (common-lisp:defun |make-list-of-usage|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list list-of-long))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-usage-plan ()
   '(trivial-types:proper-list usage-plan))
 (common-lisp:defun |make-list-of-usage-plan|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list usage-plan))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-usage-plan-key ()
   '(trivial-types:proper-list usage-plan-key))
 (common-lisp:defun |make-list-of-usage-plan-key|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list usage-plan-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-vpc-link ()
   '(trivial-types:proper-list vpc-link))
 (common-lisp:defun |make-list-of-vpc-link|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list vpc-link))
   aws-sdk/generator/shape::members))
(common-lisp:deftype location-status-type () 'common-lisp:string)
(common-lisp:deftype long () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype map-of-api-stage-throttle-settings ()
   'common-lisp:hash-table)
 (common-lisp:defun |make-map-of-api-stage-throttle-settings|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-integration-response () 'common-lisp:hash-table)
 (common-lisp:defun |make-map-of-integration-response|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-key-usages () 'common-lisp:hash-table)
 (common-lisp:defun |make-map-of-key-usages|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-method () 'common-lisp:hash-table)
 (common-lisp:defun |make-map-of-method| (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-method-response () 'common-lisp:hash-table)
 (common-lisp:defun |make-map-of-method-response|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-method-settings () 'common-lisp:hash-table)
 (common-lisp:defun |make-map-of-method-settings|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-method-snapshot () 'common-lisp:hash-table)
 (common-lisp:defun |make-map-of-method-snapshot|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-string-to-boolean () 'common-lisp:hash-table)
 (common-lisp:defun |make-map-of-string-to-boolean|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-string-to-list () 'common-lisp:hash-table)
 (common-lisp:defun |make-map-of-string-to-list|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-string-to-string () 'common-lisp:hash-table)
 (common-lisp:defun |make-map-of-string-to-string|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defstruct
     (method (:copier common-lisp:nil) (:conc-name "struct-shape-method-"))
   (http-method common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (authorization-type common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (authorizer-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (api-key-required common-lisp:nil :type
    (common-lisp:or nullable-boolean common-lisp:null))
   (request-validator-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (operation-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (request-parameters common-lisp:nil :type
    (common-lisp:or map-of-string-to-boolean common-lisp:null))
   (request-models common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (method-responses common-lisp:nil :type
    (common-lisp:or map-of-method-response common-lisp:null))
   (method-integration common-lisp:nil :type
    (common-lisp:or integration common-lisp:null))
   (authorization-scopes common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'method 'make-method))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input method))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input method))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'http-method))
      (common-lisp:list
       (common-lisp:cons "httpMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization-type))
      (common-lisp:list
       (common-lisp:cons "authorizationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-id))
      (common-lisp:list
       (common-lisp:cons "authorizerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key-required))
      (common-lisp:list
       (common-lisp:cons "apiKeyRequired"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'request-validator-id))
      (common-lisp:list
       (common-lisp:cons "requestValidatorId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation-name))
      (common-lisp:list
       (common-lisp:cons "operationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-parameters))
      (common-lisp:list
       (common-lisp:cons "requestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-models))
      (common-lisp:list
       (common-lisp:cons "requestModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'method-responses))
      (common-lisp:list
       (common-lisp:cons "methodResponses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'method-integration))
      (common-lisp:list
       (common-lisp:cons "methodIntegration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorization-scopes))
      (common-lisp:list
       (common-lisp:cons "authorizationScopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input method))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (method-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-method-response-"))
   (status-code common-lisp:nil :type
    (common-lisp:or status-code common-lisp:null))
   (response-parameters common-lisp:nil :type
    (common-lisp:or map-of-string-to-boolean common-lisp:null))
   (response-models common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'method-response 'make-method-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input method-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input method-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-code))
      (common-lisp:list
       (common-lisp:cons "statusCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "responseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-models))
      (common-lisp:list
       (common-lisp:cons "responseModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input method-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (method-setting (:copier common-lisp:nil)
      (:conc-name "struct-shape-method-setting-"))
   (metrics-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (logging-level common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (data-trace-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (throttling-burst-limit common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (throttling-rate-limit common-lisp:nil :type
    (common-lisp:or double common-lisp:null))
   (caching-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (cache-ttl-in-seconds common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (cache-data-encrypted common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (require-authorization-for-cache-control common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (unauthorized-cache-control-header-strategy common-lisp:nil :type
    (common-lisp:or unauthorized-cache-control-header-strategy
                    common-lisp:null)))
 (common-lisp:export (common-lisp:list 'method-setting 'make-method-setting))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input method-setting))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input method-setting))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metrics-enabled))
      (common-lisp:list
       (common-lisp:cons "metricsEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'logging-level))
      (common-lisp:list
       (common-lisp:cons "loggingLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-trace-enabled))
      (common-lisp:list
       (common-lisp:cons "dataTraceEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'throttling-burst-limit))
      (common-lisp:list
       (common-lisp:cons "throttlingBurstLimit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'throttling-rate-limit))
      (common-lisp:list
       (common-lisp:cons "throttlingRateLimit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'caching-enabled))
      (common-lisp:list
       (common-lisp:cons "cachingEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-ttl-in-seconds))
      (common-lisp:list
       (common-lisp:cons "cacheTtlInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-data-encrypted))
      (common-lisp:list
       (common-lisp:cons "cacheDataEncrypted"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'require-authorization-for-cache-control))
      (common-lisp:list
       (common-lisp:cons "requireAuthorizationForCacheControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'unauthorized-cache-control-header-strategy))
      (common-lisp:list
       (common-lisp:cons "unauthorizedCacheControlHeaderStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input method-setting))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (method-snapshot (:copier common-lisp:nil)
      (:conc-name "struct-shape-method-snapshot-"))
   (authorization-type common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (api-key-required common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'method-snapshot 'make-method-snapshot))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input method-snapshot))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input method-snapshot))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization-type))
      (common-lisp:list
       (common-lisp:cons "authorizationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key-required))
      (common-lisp:list
       (common-lisp:cons "apiKeyRequired"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input method-snapshot))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (model (:copier common-lisp:nil) (:conc-name "struct-shape-model-"))
   (id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (schema common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (content-type common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'model 'make-model))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input model))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input model))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schema))
      (common-lisp:list
       (common-lisp:cons "schema"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-type))
      (common-lisp:list
       (common-lisp:cons "contentType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input model))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (models (:copier common-lisp:nil) (:conc-name "struct-shape-models-"))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or list-of-model common-lisp:null)))
 (common-lisp:export (common-lisp:list 'models 'make-models))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input models))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input models))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input models))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (mutual-tls-authentication (:copier common-lisp:nil)
      (:conc-name "struct-shape-mutual-tls-authentication-"))
   (truststore-uri common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (truststore-version common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (truststore-warnings common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'mutual-tls-authentication
                    'make-mutual-tls-authentication))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          mutual-tls-authentication))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          mutual-tls-authentication))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'truststore-uri))
      (common-lisp:list
       (common-lisp:cons "truststoreUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'truststore-version))
      (common-lisp:list
       (common-lisp:cons "truststoreVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'truststore-warnings))
      (common-lisp:list
       (common-lisp:cons "truststoreWarnings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          mutual-tls-authentication))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (mutual-tls-authentication-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-mutual-tls-authentication-input-"))
   (truststore-uri common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (truststore-version common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'mutual-tls-authentication-input
                    'make-mutual-tls-authentication-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          mutual-tls-authentication-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          mutual-tls-authentication-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'truststore-uri))
      (common-lisp:list
       (common-lisp:cons "truststoreUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'truststore-version))
      (common-lisp:list
       (common-lisp:cons "truststoreVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          mutual-tls-authentication-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition not-found-exception
     (apigateway-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'not-found-exception 'not-found-exception-message)))
(common-lisp:deftype nullable-boolean () 'common-lisp:boolean)
(common-lisp:deftype nullable-integer () 'common-lisp:integer)
(common-lisp:deftype op () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (patch-operation (:copier common-lisp:nil)
      (:conc-name "struct-shape-patch-operation-"))
   (op common-lisp:nil :type (common-lisp:or op common-lisp:null))
   (path common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (from common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'patch-operation 'make-patch-operation))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input patch-operation))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input patch-operation))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'op))
      (common-lisp:list
       (common-lisp:cons "op"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'path))
      (common-lisp:list
       (common-lisp:cons "path"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from))
      (common-lisp:list
       (common-lisp:cons "from"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input patch-operation))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype path-to-map-of-method-snapshot ()
   'common-lisp:hash-table)
 (common-lisp:defun |make-path-to-map-of-method-snapshot|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype provider-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (put-gateway-response-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-gateway-response-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (response-type (common-lisp:error ":responsetype is required") :type
    (common-lisp:or gateway-response-type common-lisp:null))
   (status-code common-lisp:nil :type
    (common-lisp:or status-code common-lisp:null))
   (response-parameters common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (response-templates common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-gateway-response-request
                    'make-put-gateway-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-gateway-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-gateway-response-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-code))
      (common-lisp:list
       (common-lisp:cons "statusCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "responseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-templates))
      (common-lisp:list
       (common-lisp:cons "responseTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-gateway-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-integration-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-integration-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (resource-id (common-lisp:error ":resourceid is required") :type
    (common-lisp:or string common-lisp:null))
   (http-method (common-lisp:error ":httpmethod is required") :type
    (common-lisp:or string common-lisp:null))
   (type (common-lisp:error ":type is required") :type
    (common-lisp:or integration-type common-lisp:null))
   (integration-http-method common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (uri common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (connection-type common-lisp:nil :type
    (common-lisp:or connection-type common-lisp:null))
   (connection-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (credentials common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (request-parameters common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (request-templates common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (passthrough-behavior common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cache-namespace common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cache-key-parameters common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null))
   (content-handling common-lisp:nil :type
    (common-lisp:or content-handling-strategy common-lisp:null))
   (timeout-in-millis common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null))
   (tls-config common-lisp:nil :type
    (common-lisp:or tls-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-integration-request 'make-put-integration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-integration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'integration-http-method))
      (common-lisp:list
       (common-lisp:cons "integrationHttpMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'uri))
      (common-lisp:list
       (common-lisp:cons "uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-type))
      (common-lisp:list
       (common-lisp:cons "connectionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-id))
      (common-lisp:list
       (common-lisp:cons "connectionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'credentials))
      (common-lisp:list
       (common-lisp:cons "credentials"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-parameters))
      (common-lisp:list
       (common-lisp:cons "requestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-templates))
      (common-lisp:list
       (common-lisp:cons "requestTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'passthrough-behavior))
      (common-lisp:list
       (common-lisp:cons "passthroughBehavior"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-namespace))
      (common-lisp:list
       (common-lisp:cons "cacheNamespace"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-key-parameters))
      (common-lisp:list
       (common-lisp:cons "cacheKeyParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-handling))
      (common-lisp:list
       (common-lisp:cons "contentHandling"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timeout-in-millis))
      (common-lisp:list
       (common-lisp:cons "timeoutInMillis"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tls-config))
      (common-lisp:list
       (common-lisp:cons "tlsConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-integration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-integration-response-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-integration-response-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (resource-id (common-lisp:error ":resourceid is required") :type
    (common-lisp:or string common-lisp:null))
   (http-method (common-lisp:error ":httpmethod is required") :type
    (common-lisp:or string common-lisp:null))
   (status-code (common-lisp:error ":statuscode is required") :type
    (common-lisp:or status-code common-lisp:null))
   (selection-pattern common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (response-parameters common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (response-templates common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (content-handling common-lisp:nil :type
    (common-lisp:or content-handling-strategy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-integration-response-request
                    'make-put-integration-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-integration-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-integration-response-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'selection-pattern))
      (common-lisp:list
       (common-lisp:cons "selectionPattern"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "responseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-templates))
      (common-lisp:list
       (common-lisp:cons "responseTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-handling))
      (common-lisp:list
       (common-lisp:cons "contentHandling"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-integration-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-method-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-method-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (resource-id (common-lisp:error ":resourceid is required") :type
    (common-lisp:or string common-lisp:null))
   (http-method (common-lisp:error ":httpmethod is required") :type
    (common-lisp:or string common-lisp:null))
   (authorization-type (common-lisp:error ":authorizationtype is required")
    :type (common-lisp:or string common-lisp:null))
   (authorizer-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (api-key-required common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (operation-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (request-parameters common-lisp:nil :type
    (common-lisp:or map-of-string-to-boolean common-lisp:null))
   (request-models common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (request-validator-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (authorization-scopes common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-method-request 'make-put-method-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input put-method-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input put-method-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization-type))
      (common-lisp:list
       (common-lisp:cons "authorizationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-id))
      (common-lisp:list
       (common-lisp:cons "authorizerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key-required))
      (common-lisp:list
       (common-lisp:cons "apiKeyRequired"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation-name))
      (common-lisp:list
       (common-lisp:cons "operationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-parameters))
      (common-lisp:list
       (common-lisp:cons "requestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-models))
      (common-lisp:list
       (common-lisp:cons "requestModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'request-validator-id))
      (common-lisp:list
       (common-lisp:cons "requestValidatorId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorization-scopes))
      (common-lisp:list
       (common-lisp:cons "authorizationScopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input put-method-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-method-response-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-method-response-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (resource-id (common-lisp:error ":resourceid is required") :type
    (common-lisp:or string common-lisp:null))
   (http-method (common-lisp:error ":httpmethod is required") :type
    (common-lisp:or string common-lisp:null))
   (status-code (common-lisp:error ":statuscode is required") :type
    (common-lisp:or status-code common-lisp:null))
   (response-parameters common-lisp:nil :type
    (common-lisp:or map-of-string-to-boolean common-lisp:null))
   (response-models common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-method-response-request
                    'make-put-method-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-method-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-method-response-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "responseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-models))
      (common-lisp:list
       (common-lisp:cons "responseModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-method-response-request))
   common-lisp:nil))
(common-lisp:deftype put-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (put-rest-api-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-rest-api-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (mode common-lisp:nil :type (common-lisp:or put-mode common-lisp:null))
   (fail-on-warnings common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (parameters common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (body (common-lisp:error ":body is required") :type
    (common-lisp:or blob common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-rest-api-request 'make-put-rest-api-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input put-rest-api-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input put-rest-api-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input put-rest-api-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'body)))
(common-lisp:deftype quota-period-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (quota-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-quota-settings-"))
   (limit common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (offset common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (period common-lisp:nil :type
    (common-lisp:or quota-period-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'quota-settings 'make-quota-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input quota-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input quota-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit))
      (common-lisp:list
       (common-lisp:cons "limit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'offset))
      (common-lisp:list
       (common-lisp:cons "offset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'period))
      (common-lisp:list
       (common-lisp:cons "period"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input quota-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (request-validator (:copier common-lisp:nil)
      (:conc-name "struct-shape-request-validator-"))
   (id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (validate-request-body common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (validate-request-parameters common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'request-validator 'make-request-validator))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input request-validator))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input request-validator))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'validate-request-body))
      (common-lisp:list
       (common-lisp:cons "validateRequestBody"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'validate-request-parameters))
      (common-lisp:list
       (common-lisp:cons "validateRequestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input request-validator))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (request-validators (:copier common-lisp:nil)
      (:conc-name "struct-shape-request-validators-"))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or list-of-request-validator common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'request-validators 'make-request-validators))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input request-validators))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input request-validators))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input request-validators))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (resource (:copier common-lisp:nil) (:conc-name "struct-shape-resource-"))
   (id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (parent-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (path-part common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (path common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (resource-methods common-lisp:nil :type
    (common-lisp:or map-of-method common-lisp:null)))
 (common-lisp:export (common-lisp:list 'resource 'make-resource))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input resource))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input resource))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'parent-id))
      (common-lisp:list
       (common-lisp:cons "parentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'path-part))
      (common-lisp:list
       (common-lisp:cons "pathPart"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'path))
      (common-lisp:list
       (common-lisp:cons "path"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-methods))
      (common-lisp:list
       (common-lisp:cons "resourceMethods"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input resource))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (resources (:copier common-lisp:nil)
      (:conc-name "struct-shape-resources-"))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or list-of-resource common-lisp:null)))
 (common-lisp:export (common-lisp:list 'resources 'make-resources))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input resources))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input resources))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input resources))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (rest-api (:copier common-lisp:nil) (:conc-name "struct-shape-rest-api-"))
   (id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (warnings common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null))
   (binary-media-types common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null))
   (minimum-compression-size common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null))
   (api-key-source common-lisp:nil :type
    (common-lisp:or api-key-source-type common-lisp:null))
   (endpoint-configuration common-lisp:nil :type
    (common-lisp:or endpoint-configuration common-lisp:null))
   (policy common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (disable-execute-api-endpoint common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'rest-api 'make-rest-api))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input rest-api))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input rest-api))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warnings))
      (common-lisp:list
       (common-lisp:cons "warnings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'binary-media-types))
      (common-lisp:list
       (common-lisp:cons "binaryMediaTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'minimum-compression-size))
      (common-lisp:list
       (common-lisp:cons "minimumCompressionSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key-source))
      (common-lisp:list
       (common-lisp:cons "apiKeySource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'endpoint-configuration))
      (common-lisp:list
       (common-lisp:cons "endpointConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-execute-api-endpoint))
      (common-lisp:list
       (common-lisp:cons "disableExecuteApiEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input rest-api))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (rest-apis (:copier common-lisp:nil)
      (:conc-name "struct-shape-rest-apis-"))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or list-of-rest-api common-lisp:null)))
 (common-lisp:export (common-lisp:list 'rest-apis 'make-rest-apis))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input rest-apis))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input rest-apis))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input rest-apis))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (sdk-configuration-property (:copier common-lisp:nil)
      (:conc-name "struct-shape-sdk-configuration-property-"))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (friendly-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (required common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (default-value common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'sdk-configuration-property
                    'make-sdk-configuration-property))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sdk-configuration-property))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sdk-configuration-property))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'friendly-name))
      (common-lisp:list
       (common-lisp:cons "friendlyName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'required))
      (common-lisp:list
       (common-lisp:cons "required"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'default-value))
      (common-lisp:list
       (common-lisp:cons "defaultValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sdk-configuration-property))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (sdk-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-sdk-response-"))
   (content-type common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (content-disposition common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (body common-lisp:nil :type (common-lisp:or blob common-lisp:null)))
 (common-lisp:export (common-lisp:list 'sdk-response 'make-sdk-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input sdk-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-type))
      (common-lisp:cons "Content-Type" aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-disposition))
      (common-lisp:cons "Content-Disposition"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input sdk-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input sdk-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'body)))
(common-lisp:progn
 (common-lisp:defstruct
     (sdk-type (:copier common-lisp:nil) (:conc-name "struct-shape-sdk-type-"))
   (id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (friendly-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (configuration-properties common-lisp:nil :type
    (common-lisp:or list-of-sdk-configuration-property common-lisp:null)))
 (common-lisp:export (common-lisp:list 'sdk-type 'make-sdk-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input sdk-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input sdk-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'friendly-name))
      (common-lisp:list
       (common-lisp:cons "friendlyName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configuration-properties))
      (common-lisp:list
       (common-lisp:cons "configurationProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input sdk-type))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (sdk-types (:copier common-lisp:nil)
      (:conc-name "struct-shape-sdk-types-"))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or list-of-sdk-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'sdk-types 'make-sdk-types))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input sdk-types))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input sdk-types))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input sdk-types))
   common-lisp:nil))
(common-lisp:deftype security-policy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition service-unavailable-exception
     (apigateway-error)
     ((retry-after-seconds :initarg :retry-after-seconds :initform
       common-lisp:nil :reader
       service-unavailable-exception-retry-after-seconds)
      (message :initarg :message :initform common-lisp:nil :reader
       service-unavailable-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-unavailable-exception
                    'service-unavailable-exception-retry-after-seconds
                    'service-unavailable-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (stage (:copier common-lisp:nil) (:conc-name "struct-shape-stage-"))
   (deployment-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (client-certificate-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (stage-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (cache-cluster-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (cache-cluster-size common-lisp:nil :type
    (common-lisp:or cache-cluster-size common-lisp:null))
   (cache-cluster-status common-lisp:nil :type
    (common-lisp:or cache-cluster-status common-lisp:null))
   (method-settings common-lisp:nil :type
    (common-lisp:or map-of-method-settings common-lisp:null))
   (variables common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (documentation-version common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (access-log-settings common-lisp:nil :type
    (common-lisp:or access-log-settings common-lisp:null))
   (canary-settings common-lisp:nil :type
    (common-lisp:or canary-settings common-lisp:null))
   (tracing-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (web-acl-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (last-updated-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'stage 'make-stage))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stage))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stage))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "deploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-certificate-id))
      (common-lisp:list
       (common-lisp:cons "clientCertificateId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-name))
      (common-lisp:list
       (common-lisp:cons "stageName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-cluster-enabled))
      (common-lisp:list
       (common-lisp:cons "cacheClusterEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-cluster-size))
      (common-lisp:list
       (common-lisp:cons "cacheClusterSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-cluster-status))
      (common-lisp:list
       (common-lisp:cons "cacheClusterStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'method-settings))
      (common-lisp:list
       (common-lisp:cons "methodSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'variables))
      (common-lisp:list
       (common-lisp:cons "variables"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'documentation-version))
      (common-lisp:list
       (common-lisp:cons "documentationVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-log-settings))
      (common-lisp:list
       (common-lisp:cons "accessLogSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'canary-settings))
      (common-lisp:list
       (common-lisp:cons "canarySettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tracing-enabled))
      (common-lisp:list
       (common-lisp:cons "tracingEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'web-acl-arn))
      (common-lisp:list
       (common-lisp:cons "webAclArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-date))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stage))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stage-key (:copier common-lisp:nil)
      (:conc-name "struct-shape-stage-key-"))
   (rest-api-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (stage-name common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'stage-key 'make-stage-key))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stage-key))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stage-key))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rest-api-id))
      (common-lisp:list
       (common-lisp:cons "restApiId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-name))
      (common-lisp:list
       (common-lisp:cons "stageName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stage-key))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stages (:copier common-lisp:nil) (:conc-name "struct-shape-stages-"))
   (item common-lisp:nil :type
    (common-lisp:or list-of-stage common-lisp:null)))
 (common-lisp:export (common-lisp:list 'stages 'make-stages))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stages))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stages))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'item))
      (common-lisp:list
       (common-lisp:cons "item"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stages))
   common-lisp:nil))
(common-lisp:deftype status-code () 'common-lisp:string)
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-request-"))
   (resource-arn (common-lisp:error ":resourcearn is required") :type
    (common-lisp:or string common-lisp:null))
   (tags (common-lisp:error ":tags is required") :type
    (common-lisp:or map-of-string-to-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (tags (:copier common-lisp:nil) (:conc-name "struct-shape-tags-"))
   (tags common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tags 'make-tags))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tags))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tags))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tags))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (template (:copier common-lisp:nil) (:conc-name "struct-shape-template-"))
   (value common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'template 'make-template))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input template))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input template))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input template))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (test-invoke-authorizer-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-test-invoke-authorizer-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (authorizer-id (common-lisp:error ":authorizerid is required") :type
    (common-lisp:or string common-lisp:null))
   (headers common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (multi-value-headers common-lisp:nil :type
    (common-lisp:or map-of-string-to-list common-lisp:null))
   (path-with-query-string common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (body common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (stage-variables common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (additional-context common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'test-invoke-authorizer-request
                    'make-test-invoke-authorizer-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          test-invoke-authorizer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          test-invoke-authorizer-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'headers))
      (common-lisp:list
       (common-lisp:cons "headers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'multi-value-headers))
      (common-lisp:list
       (common-lisp:cons "multiValueHeaders"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'path-with-query-string))
      (common-lisp:list
       (common-lisp:cons "pathWithQueryString"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-variables))
      (common-lisp:list
       (common-lisp:cons "stageVariables"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'additional-context))
      (common-lisp:list
       (common-lisp:cons "additionalContext"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          test-invoke-authorizer-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (test-invoke-authorizer-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-test-invoke-authorizer-response-"))
   (client-status common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (log common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (latency common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (principal-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (policy common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (authorization common-lisp:nil :type
    (common-lisp:or map-of-string-to-list common-lisp:null))
   (claims common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'test-invoke-authorizer-response
                    'make-test-invoke-authorizer-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          test-invoke-authorizer-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          test-invoke-authorizer-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-status))
      (common-lisp:list
       (common-lisp:cons "clientStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log))
      (common-lisp:list
       (common-lisp:cons "log"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latency))
      (common-lisp:list
       (common-lisp:cons "latency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-id))
      (common-lisp:list
       (common-lisp:cons "principalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization))
      (common-lisp:list
       (common-lisp:cons "authorization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'claims))
      (common-lisp:list
       (common-lisp:cons "claims"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          test-invoke-authorizer-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (test-invoke-method-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-test-invoke-method-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (resource-id (common-lisp:error ":resourceid is required") :type
    (common-lisp:or string common-lisp:null))
   (http-method (common-lisp:error ":httpmethod is required") :type
    (common-lisp:or string common-lisp:null))
   (path-with-query-string common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (body common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (headers common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (multi-value-headers common-lisp:nil :type
    (common-lisp:or map-of-string-to-list common-lisp:null))
   (client-certificate-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (stage-variables common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'test-invoke-method-request
                    'make-test-invoke-method-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          test-invoke-method-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          test-invoke-method-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'path-with-query-string))
      (common-lisp:list
       (common-lisp:cons "pathWithQueryString"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'headers))
      (common-lisp:list
       (common-lisp:cons "headers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'multi-value-headers))
      (common-lisp:list
       (common-lisp:cons "multiValueHeaders"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-certificate-id))
      (common-lisp:list
       (common-lisp:cons "clientCertificateId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-variables))
      (common-lisp:list
       (common-lisp:cons "stageVariables"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          test-invoke-method-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (test-invoke-method-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-test-invoke-method-response-"))
   (status common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (body common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (headers common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (multi-value-headers common-lisp:nil :type
    (common-lisp:or map-of-string-to-list common-lisp:null))
   (log common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (latency common-lisp:nil :type (common-lisp:or long common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'test-invoke-method-response
                    'make-test-invoke-method-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          test-invoke-method-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          test-invoke-method-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'headers))
      (common-lisp:list
       (common-lisp:cons "headers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'multi-value-headers))
      (common-lisp:list
       (common-lisp:cons "multiValueHeaders"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log))
      (common-lisp:list
       (common-lisp:cons "log"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latency))
      (common-lisp:list
       (common-lisp:cons "latency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          test-invoke-method-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (throttle-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-throttle-settings-"))
   (burst-limit common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (rate-limit common-lisp:nil :type (common-lisp:or double common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'throttle-settings 'make-throttle-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input throttle-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input throttle-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'burst-limit))
      (common-lisp:list
       (common-lisp:cons "burstLimit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rate-limit))
      (common-lisp:list
       (common-lisp:cons "rateLimit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input throttle-settings))
   common-lisp:nil))
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (tls-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-tls-config-"))
   (insecure-skip-verification common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tls-config 'make-tls-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tls-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tls-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'insecure-skip-verification))
      (common-lisp:list
       (common-lisp:cons "insecureSkipVerification"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tls-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition too-many-requests-exception
     (apigateway-error)
     ((retry-after-seconds :initarg :retry-after-seconds :initform
       common-lisp:nil :reader too-many-requests-exception-retry-after-seconds)
      (message :initarg :message :initform common-lisp:nil :reader
       too-many-requests-exception-message)))
 (common-lisp:export
  (common-lisp:list 'too-many-requests-exception
                    'too-many-requests-exception-retry-after-seconds
                    'too-many-requests-exception-message)))
(common-lisp:deftype unauthorized-cache-control-header-strategy ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition unauthorized-exception
     (apigateway-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       unauthorized-exception-message)))
 (common-lisp:export
  (common-lisp:list 'unauthorized-exception 'unauthorized-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-request-"))
   (resource-arn (common-lisp:error ":resourcearn is required") :type
    (common-lisp:or string common-lisp:null))
   (tag-keys (common-lisp:error ":tagkeys is required") :type
    (common-lisp:or list-of-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-account-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-account-request-"))
   (patch-operations common-lisp:nil :type
    (common-lisp:or list-of-patch-operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-account-request 'make-update-account-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-account-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-account-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-api-key-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-api-key-request-"))
   (api-key (common-lisp:error ":apikey is required") :type
    (common-lisp:or string common-lisp:null))
   (patch-operations common-lisp:nil :type
    (common-lisp:or list-of-patch-operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-api-key-request 'make-update-api-key-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-api-key-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-api-key-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-api-key-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-authorizer-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-authorizer-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (authorizer-id (common-lisp:error ":authorizerid is required") :type
    (common-lisp:or string common-lisp:null))
   (patch-operations common-lisp:nil :type
    (common-lisp:or list-of-patch-operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-authorizer-request
                    'make-update-authorizer-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-authorizer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-authorizer-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-authorizer-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-base-path-mapping-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-base-path-mapping-request-"))
   (domain-name (common-lisp:error ":domainname is required") :type
    (common-lisp:or string common-lisp:null))
   (base-path (common-lisp:error ":basepath is required") :type
    (common-lisp:or string common-lisp:null))
   (patch-operations common-lisp:nil :type
    (common-lisp:or list-of-patch-operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-base-path-mapping-request
                    'make-update-base-path-mapping-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-base-path-mapping-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-base-path-mapping-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-base-path-mapping-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-client-certificate-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-client-certificate-request-"))
   (client-certificate-id
    (common-lisp:error ":clientcertificateid is required") :type
    (common-lisp:or string common-lisp:null))
   (patch-operations common-lisp:nil :type
    (common-lisp:or list-of-patch-operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-client-certificate-request
                    'make-update-client-certificate-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-client-certificate-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-client-certificate-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-client-certificate-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-deployment-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-deployment-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (deployment-id (common-lisp:error ":deploymentid is required") :type
    (common-lisp:or string common-lisp:null))
   (patch-operations common-lisp:nil :type
    (common-lisp:or list-of-patch-operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-deployment-request
                    'make-update-deployment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-deployment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-deployment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-deployment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-documentation-part-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-documentation-part-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (documentation-part-id
    (common-lisp:error ":documentationpartid is required") :type
    (common-lisp:or string common-lisp:null))
   (patch-operations common-lisp:nil :type
    (common-lisp:or list-of-patch-operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-documentation-part-request
                    'make-update-documentation-part-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-documentation-part-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-documentation-part-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-documentation-part-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-documentation-version-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-documentation-version-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (documentation-version
    (common-lisp:error ":documentationversion is required") :type
    (common-lisp:or string common-lisp:null))
   (patch-operations common-lisp:nil :type
    (common-lisp:or list-of-patch-operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-documentation-version-request
                    'make-update-documentation-version-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-documentation-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-documentation-version-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-documentation-version-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-domain-name-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-domain-name-request-"))
   (domain-name (common-lisp:error ":domainname is required") :type
    (common-lisp:or string common-lisp:null))
   (patch-operations common-lisp:nil :type
    (common-lisp:or list-of-patch-operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-domain-name-request
                    'make-update-domain-name-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-name-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-name-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-name-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-gateway-response-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-gateway-response-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (response-type (common-lisp:error ":responsetype is required") :type
    (common-lisp:or gateway-response-type common-lisp:null))
   (patch-operations common-lisp:nil :type
    (common-lisp:or list-of-patch-operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-gateway-response-request
                    'make-update-gateway-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-response-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-integration-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-integration-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (resource-id (common-lisp:error ":resourceid is required") :type
    (common-lisp:or string common-lisp:null))
   (http-method (common-lisp:error ":httpmethod is required") :type
    (common-lisp:or string common-lisp:null))
   (patch-operations common-lisp:nil :type
    (common-lisp:or list-of-patch-operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-integration-request
                    'make-update-integration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-integration-response-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-integration-response-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (resource-id (common-lisp:error ":resourceid is required") :type
    (common-lisp:or string common-lisp:null))
   (http-method (common-lisp:error ":httpmethod is required") :type
    (common-lisp:or string common-lisp:null))
   (status-code (common-lisp:error ":statuscode is required") :type
    (common-lisp:or status-code common-lisp:null))
   (patch-operations common-lisp:nil :type
    (common-lisp:or list-of-patch-operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-integration-response-request
                    'make-update-integration-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-response-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-method-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-method-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (resource-id (common-lisp:error ":resourceid is required") :type
    (common-lisp:or string common-lisp:null))
   (http-method (common-lisp:error ":httpmethod is required") :type
    (common-lisp:or string common-lisp:null))
   (patch-operations common-lisp:nil :type
    (common-lisp:or list-of-patch-operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-method-request 'make-update-method-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-method-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-method-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-method-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-method-response-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-method-response-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (resource-id (common-lisp:error ":resourceid is required") :type
    (common-lisp:or string common-lisp:null))
   (http-method (common-lisp:error ":httpmethod is required") :type
    (common-lisp:or string common-lisp:null))
   (status-code (common-lisp:error ":statuscode is required") :type
    (common-lisp:or status-code common-lisp:null))
   (patch-operations common-lisp:nil :type
    (common-lisp:or list-of-patch-operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-method-response-request
                    'make-update-method-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-method-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-method-response-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-method-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-model-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-model-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (model-name (common-lisp:error ":modelname is required") :type
    (common-lisp:or string common-lisp:null))
   (patch-operations common-lisp:nil :type
    (common-lisp:or list-of-patch-operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-model-request 'make-update-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-model-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-request-validator-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-request-validator-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (request-validator-id (common-lisp:error ":requestvalidatorid is required")
    :type (common-lisp:or string common-lisp:null))
   (patch-operations common-lisp:nil :type
    (common-lisp:or list-of-patch-operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-request-validator-request
                    'make-update-request-validator-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-request-validator-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-request-validator-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-request-validator-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-resource-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (resource-id (common-lisp:error ":resourceid is required") :type
    (common-lisp:or string common-lisp:null))
   (patch-operations common-lisp:nil :type
    (common-lisp:or list-of-patch-operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-resource-request 'make-update-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-rest-api-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-rest-api-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (patch-operations common-lisp:nil :type
    (common-lisp:or list-of-patch-operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-rest-api-request 'make-update-rest-api-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-rest-api-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-rest-api-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-rest-api-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-stage-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-stage-request-"))
   (rest-api-id (common-lisp:error ":restapiid is required") :type
    (common-lisp:or string common-lisp:null))
   (stage-name (common-lisp:error ":stagename is required") :type
    (common-lisp:or string common-lisp:null))
   (patch-operations common-lisp:nil :type
    (common-lisp:or list-of-patch-operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-stage-request 'make-update-stage-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-stage-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-stage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-usage-plan-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-usage-plan-request-"))
   (usage-plan-id (common-lisp:error ":usageplanid is required") :type
    (common-lisp:or string common-lisp:null))
   (patch-operations common-lisp:nil :type
    (common-lisp:or list-of-patch-operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-usage-plan-request
                    'make-update-usage-plan-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-usage-plan-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-usage-plan-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-usage-plan-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-usage-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-usage-request-"))
   (usage-plan-id (common-lisp:error ":usageplanid is required") :type
    (common-lisp:or string common-lisp:null))
   (key-id (common-lisp:error ":keyid is required") :type
    (common-lisp:or string common-lisp:null))
   (patch-operations common-lisp:nil :type
    (common-lisp:or list-of-patch-operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-usage-request 'make-update-usage-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-usage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-usage-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-usage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-vpc-link-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-vpc-link-request-"))
   (vpc-link-id (common-lisp:error ":vpclinkid is required") :type
    (common-lisp:or string common-lisp:null))
   (patch-operations common-lisp:nil :type
    (common-lisp:or list-of-patch-operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-vpc-link-request 'make-update-vpc-link-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-vpc-link-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-vpc-link-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-vpc-link-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (usage (:copier common-lisp:nil) (:conc-name "struct-shape-usage-"))
   (usage-plan-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (start-date common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (end-date common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or map-of-key-usages common-lisp:null)))
 (common-lisp:export (common-lisp:list 'usage 'make-usage))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input usage))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input usage))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'usage-plan-id))
      (common-lisp:list
       (common-lisp:cons "usagePlanId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-date))
      (common-lisp:list
       (common-lisp:cons "startDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-date))
      (common-lisp:list
       (common-lisp:cons "endDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input usage))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (usage-plan (:copier common-lisp:nil)
      (:conc-name "struct-shape-usage-plan-"))
   (id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (api-stages common-lisp:nil :type
    (common-lisp:or list-of-api-stage common-lisp:null))
   (throttle common-lisp:nil :type
    (common-lisp:or throttle-settings common-lisp:null))
   (quota common-lisp:nil :type
    (common-lisp:or quota-settings common-lisp:null))
   (product-code common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'usage-plan 'make-usage-plan))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input usage-plan))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input usage-plan))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-stages))
      (common-lisp:list
       (common-lisp:cons "apiStages"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'throttle))
      (common-lisp:list
       (common-lisp:cons "throttle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'quota))
      (common-lisp:list
       (common-lisp:cons "quota"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'product-code))
      (common-lisp:list
       (common-lisp:cons "productCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input usage-plan))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (usage-plan-key (:copier common-lisp:nil)
      (:conc-name "struct-shape-usage-plan-key-"))
   (id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'usage-plan-key 'make-usage-plan-key))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input usage-plan-key))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input usage-plan-key))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input usage-plan-key))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (usage-plan-keys (:copier common-lisp:nil)
      (:conc-name "struct-shape-usage-plan-keys-"))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or list-of-usage-plan-key common-lisp:null)))
 (common-lisp:export (common-lisp:list 'usage-plan-keys 'make-usage-plan-keys))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input usage-plan-keys))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input usage-plan-keys))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input usage-plan-keys))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (usage-plans (:copier common-lisp:nil)
      (:conc-name "struct-shape-usage-plans-"))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or list-of-usage-plan common-lisp:null)))
 (common-lisp:export (common-lisp:list 'usage-plans 'make-usage-plans))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input usage-plans))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input usage-plans))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input usage-plans))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (vpc-link (:copier common-lisp:nil) (:conc-name "struct-shape-vpc-link-"))
   (id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (target-arns common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or vpc-link-status common-lisp:null))
   (status-message common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'vpc-link 'make-vpc-link))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input vpc-link))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input vpc-link))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-arns))
      (common-lisp:list
       (common-lisp:cons "targetArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-message))
      (common-lisp:list
       (common-lisp:cons "statusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input vpc-link))
   common-lisp:nil))
(common-lisp:deftype vpc-link-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (vpc-links (:copier common-lisp:nil)
      (:conc-name "struct-shape-vpc-links-"))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or list-of-vpc-link common-lisp:null)))
 (common-lisp:export (common-lisp:list 'vpc-links 'make-vpc-links))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input vpc-links))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input vpc-links))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input vpc-links))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defun create-api-key
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description enabled
                     generate-distinct-id value stage-keys customer-id tags)
   (common-lisp:declare
    (common-lisp:ignorable name description enabled generate-distinct-id value
     stage-keys customer-id tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-api-key-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/apikeys"
                                                        "CreateApiKey"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-api-key))
(common-lisp:progn
 (common-lisp:defun create-authorizer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id name type provider-arns
                     auth-type authorizer-uri authorizer-credentials
                     identity-source identity-validation-expression
                     authorizer-result-ttl-in-seconds)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id name type provider-arns auth-type
     authorizer-uri authorizer-credentials identity-source
     identity-validation-expression authorizer-result-ttl-in-seconds))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-authorizer-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/authorizers"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "CreateAuthorizer"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-authorizer))
(common-lisp:progn
 (common-lisp:defun create-base-path-mapping
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name base-path rest-api-id stage)
   (common-lisp:declare
    (common-lisp:ignorable domain-name base-path rest-api-id stage))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-base-path-mapping-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/domainnames/~A/basepathmappings"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'domain-name))))
                                                        "CreateBasePathMapping"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-base-path-mapping))
(common-lisp:progn
 (common-lisp:defun create-deployment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id stage-name stage-description
                     description cache-cluster-enabled cache-cluster-size
                     variables canary-settings tracing-enabled)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id stage-name stage-description description
     cache-cluster-enabled cache-cluster-size variables canary-settings
     tracing-enabled))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-deployment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/deployments"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "CreateDeployment"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-deployment))
(common-lisp:progn
 (common-lisp:defun create-documentation-part
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id location properties)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id location properties))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-documentation-part-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/documentation/parts"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "CreateDocumentationPart"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-documentation-part))
(common-lisp:progn
 (common-lisp:defun create-documentation-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id documentation-version
                     stage-name description)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id documentation-version stage-name
     description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-documentation-version-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/documentation/versions"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "CreateDocumentationVersion"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-documentation-version))
(common-lisp:progn
 (common-lisp:defun create-domain-name
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name certificate-name
                     certificate-body certificate-private-key certificate-chain
                     certificate-arn regional-certificate-name
                     regional-certificate-arn endpoint-configuration tags
                     security-policy mutual-tls-authentication
                     ownership-verification-certificate-arn)
   (common-lisp:declare
    (common-lisp:ignorable domain-name certificate-name certificate-body
     certificate-private-key certificate-chain certificate-arn
     regional-certificate-name regional-certificate-arn endpoint-configuration
     tags security-policy mutual-tls-authentication
     ownership-verification-certificate-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-domain-name-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/domainnames"
                                                        "CreateDomainName"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-domain-name))
(common-lisp:progn
 (common-lisp:defun create-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id name description schema
                     content-type)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id name description schema content-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/models"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "CreateModel"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-model))
(common-lisp:progn
 (common-lisp:defun create-request-validator
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id name validate-request-body
                     validate-request-parameters)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id name validate-request-body
     validate-request-parameters))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-request-validator-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/requestvalidators"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "CreateRequestValidator"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-request-validator))
(common-lisp:progn
 (common-lisp:defun create-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id parent-id path-part)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id parent-id path-part))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'parent-id))))
                                                        "CreateResource"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-resource))
(common-lisp:progn
 (common-lisp:defun create-rest-api
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description version clone-from
                     binary-media-types minimum-compression-size api-key-source
                     endpoint-configuration policy tags
                     disable-execute-api-endpoint)
   (common-lisp:declare
    (common-lisp:ignorable name description version clone-from
     binary-media-types minimum-compression-size api-key-source
     endpoint-configuration policy tags disable-execute-api-endpoint))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-rest-api-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/restapis"
                                                        "CreateRestApi"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-rest-api))
(common-lisp:progn
 (common-lisp:defun create-stage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id stage-name deployment-id
                     description cache-cluster-enabled cache-cluster-size
                     variables documentation-version canary-settings
                     tracing-enabled tags)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id stage-name deployment-id description
     cache-cluster-enabled cache-cluster-size variables documentation-version
     canary-settings tracing-enabled tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-stage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/stages"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "CreateStage"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-stage))
(common-lisp:progn
 (common-lisp:defun create-usage-plan
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description api-stages throttle
                     quota tags)
   (common-lisp:declare
    (common-lisp:ignorable name description api-stages throttle quota tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-usage-plan-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/usageplans"
                                                        "CreateUsagePlan"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-usage-plan))
(common-lisp:progn
 (common-lisp:defun create-usage-plan-key
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key usage-plan-id key-id key-type)
   (common-lisp:declare (common-lisp:ignorable usage-plan-id key-id key-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-usage-plan-key-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/usageplans/~A/keys"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'usageplan-id))))
                                                        "CreateUsagePlanKey"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-usage-plan-key))
(common-lisp:progn
 (common-lisp:defun create-vpc-link
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description target-arns tags)
   (common-lisp:declare
    (common-lisp:ignorable name description target-arns tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-vpc-link-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/vpclinks"
                                                        "CreateVpcLink"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-vpc-link))
(common-lisp:progn
 (common-lisp:defun delete-api-key
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-key)
   (common-lisp:declare (common-lisp:ignorable api-key))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-api-key-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/apikeys/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-key))))
                                                        "DeleteApiKey"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-api-key))
(common-lisp:progn
 (common-lisp:defun delete-authorizer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id authorizer-id)
   (common-lisp:declare (common-lisp:ignorable rest-api-id authorizer-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-authorizer-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/authorizers/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'authorizer-id))))
                                                        "DeleteAuthorizer"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-authorizer))
(common-lisp:progn
 (common-lisp:defun delete-base-path-mapping
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name base-path)
   (common-lisp:declare (common-lisp:ignorable domain-name base-path))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-base-path-mapping-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/domainnames/~A/basepathmappings/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'domain-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'base-path))))
                                                        "DeleteBasePathMapping"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-base-path-mapping))
(common-lisp:progn
 (common-lisp:defun delete-client-certificate
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-certificate-id)
   (common-lisp:declare (common-lisp:ignorable client-certificate-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-client-certificate-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/clientcertificates/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'clientcertificate-id))))
                                                        "DeleteClientCertificate"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-client-certificate))
(common-lisp:progn
 (common-lisp:defun delete-deployment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id deployment-id)
   (common-lisp:declare (common-lisp:ignorable rest-api-id deployment-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-deployment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/deployments/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'deployment-id))))
                                                        "DeleteDeployment"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-deployment))
(common-lisp:progn
 (common-lisp:defun delete-documentation-part
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id documentation-part-id)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id documentation-part-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-documentation-part-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/documentation/parts/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'part-id))))
                                                        "DeleteDocumentationPart"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-documentation-part))
(common-lisp:progn
 (common-lisp:defun delete-documentation-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id documentation-version)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id documentation-version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-documentation-version-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/documentation/versions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'doc-version))))
                                                        "DeleteDocumentationVersion"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-documentation-version))
(common-lisp:progn
 (common-lisp:defun delete-domain-name
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name)
   (common-lisp:declare (common-lisp:ignorable domain-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-domain-name-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/domainnames/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'domain-name))))
                                                        "DeleteDomainName"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-domain-name))
(common-lisp:progn
 (common-lisp:defun delete-gateway-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id response-type)
   (common-lisp:declare (common-lisp:ignorable rest-api-id response-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-gateway-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/gatewayresponses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'response-type))))
                                                        "DeleteGatewayResponse"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-gateway-response))
(common-lisp:progn
 (common-lisp:defun delete-integration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-integration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A/integration"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))))
                                                        "DeleteIntegration"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-integration))
(common-lisp:progn
 (common-lisp:defun delete-integration-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     status-code)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method status-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-integration-response-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A/integration/responses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'status-code))))
                                                        "DeleteIntegrationResponse"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-integration-response))
(common-lisp:progn
 (common-lisp:defun delete-method
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-method-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))))
                                                        "DeleteMethod"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-method))
(common-lisp:progn
 (common-lisp:defun delete-method-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     status-code)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method status-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-method-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A/responses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'status-code))))
                                                        "DeleteMethodResponse"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-method-response))
(common-lisp:progn
 (common-lisp:defun delete-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id model-name)
   (common-lisp:declare (common-lisp:ignorable rest-api-id model-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/models/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'model-name))))
                                                        "DeleteModel"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-model))
(common-lisp:progn
 (common-lisp:defun delete-request-validator
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id request-validator-id)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id request-validator-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-request-validator-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/requestvalidators/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'requestvalidator-id))))
                                                        "DeleteRequestValidator"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-request-validator))
(common-lisp:progn
 (common-lisp:defun delete-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id)
   (common-lisp:declare (common-lisp:ignorable rest-api-id resource-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))))
                                                        "DeleteResource"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-resource))
(common-lisp:progn
 (common-lisp:defun delete-rest-api
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id)
   (common-lisp:declare (common-lisp:ignorable rest-api-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-rest-api-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "DeleteRestApi"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-rest-api))
(common-lisp:progn
 (common-lisp:defun delete-stage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id stage-name)
   (common-lisp:declare (common-lisp:ignorable rest-api-id stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-stage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/stages/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))))
                                                        "DeleteStage"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-stage))
(common-lisp:progn
 (common-lisp:defun delete-usage-plan
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key usage-plan-id)
   (common-lisp:declare (common-lisp:ignorable usage-plan-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-usage-plan-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/usageplans/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'usageplan-id))))
                                                        "DeleteUsagePlan"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-usage-plan))
(common-lisp:progn
 (common-lisp:defun delete-usage-plan-key
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key usage-plan-id key-id)
   (common-lisp:declare (common-lisp:ignorable usage-plan-id key-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-usage-plan-key-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/usageplans/~A/keys/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'usageplan-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'key-id))))
                                                        "DeleteUsagePlanKey"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-usage-plan-key))
(common-lisp:progn
 (common-lisp:defun delete-vpc-link
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key vpc-link-id)
   (common-lisp:declare (common-lisp:ignorable vpc-link-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-vpc-link-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/vpclinks/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vpclink-id))))
                                                        "DeleteVpcLink"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-vpc-link))
(common-lisp:progn
 (common-lisp:defun flush-stage-authorizers-cache
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id stage-name)
   (common-lisp:declare (common-lisp:ignorable rest-api-id stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-flush-stage-authorizers-cache-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/stages/~A/cache/authorizers"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))))
                                                        "FlushStageAuthorizersCache"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'flush-stage-authorizers-cache))
(common-lisp:progn
 (common-lisp:defun flush-stage-cache
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id stage-name)
   (common-lisp:declare (common-lisp:ignorable rest-api-id stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-flush-stage-cache-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/stages/~A/cache/data"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))))
                                                        "FlushStageCache"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'flush-stage-cache))
(common-lisp:progn
 (common-lisp:defun generate-client-certificate
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key description tags)
   (common-lisp:declare (common-lisp:ignorable description tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-generate-client-certificate-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/clientcertificates"
                                                        "GenerateClientCertificate"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'generate-client-certificate))
(common-lisp:progn
 (common-lisp:defun get-account ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'apigateway-request :method "GET" :path
                                "/account" :params
                                `(("Action" ,@"GetAccount")
                                  ("Version" ,@"2015-07-09"))))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-account))
(common-lisp:progn
 (common-lisp:defun get-api-key
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-key include-value)
   (common-lisp:declare (common-lisp:ignorable api-key include-value))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-api-key-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/apikeys/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-key))))
                                                        "GetApiKey"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-api-key))
(common-lisp:progn
 (common-lisp:defun get-api-keys
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key position limit name-query customer-id
                     include-values)
   (common-lisp:declare
    (common-lisp:ignorable position limit name-query customer-id
     include-values))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-api-keys-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/apikeys"
                                                        "GetApiKeys"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-api-keys))
(common-lisp:progn
 (common-lisp:defun get-authorizer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id authorizer-id)
   (common-lisp:declare (common-lisp:ignorable rest-api-id authorizer-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-authorizer-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/authorizers/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'authorizer-id))))
                                                        "GetAuthorizer"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-authorizer))
(common-lisp:progn
 (common-lisp:defun get-authorizers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id position limit)
   (common-lisp:declare (common-lisp:ignorable rest-api-id position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-authorizers-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/authorizers"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "GetAuthorizers"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-authorizers))
(common-lisp:progn
 (common-lisp:defun get-base-path-mapping
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name base-path)
   (common-lisp:declare (common-lisp:ignorable domain-name base-path))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-base-path-mapping-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/domainnames/~A/basepathmappings/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'domain-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'base-path))))
                                                        "GetBasePathMapping"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-base-path-mapping))
(common-lisp:progn
 (common-lisp:defun get-base-path-mappings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name position limit)
   (common-lisp:declare (common-lisp:ignorable domain-name position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-base-path-mappings-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/domainnames/~A/basepathmappings"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'domain-name))))
                                                        "GetBasePathMappings"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-base-path-mappings))
(common-lisp:progn
 (common-lisp:defun get-client-certificate
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-certificate-id)
   (common-lisp:declare (common-lisp:ignorable client-certificate-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-client-certificate-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/clientcertificates/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'clientcertificate-id))))
                                                        "GetClientCertificate"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-client-certificate))
(common-lisp:progn
 (common-lisp:defun get-client-certificates
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key position limit)
   (common-lisp:declare (common-lisp:ignorable position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-client-certificates-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/clientcertificates"
                                                        "GetClientCertificates"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-client-certificates))
(common-lisp:progn
 (common-lisp:defun get-deployment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id deployment-id embed)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id deployment-id embed))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-deployment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/deployments/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'deployment-id))))
                                                        "GetDeployment"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-deployment))
(common-lisp:progn
 (common-lisp:defun get-deployments
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id position limit)
   (common-lisp:declare (common-lisp:ignorable rest-api-id position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-deployments-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/deployments"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "GetDeployments"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-deployments))
(common-lisp:progn
 (common-lisp:defun get-documentation-part
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id documentation-part-id)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id documentation-part-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-documentation-part-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/documentation/parts/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'part-id))))
                                                        "GetDocumentationPart"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-documentation-part))
(common-lisp:progn
 (common-lisp:defun get-documentation-parts
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id type name-query path position
                     limit location-status)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id type name-query path position limit
     location-status))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-documentation-parts-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/documentation/parts"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "GetDocumentationParts"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-documentation-parts))
(common-lisp:progn
 (common-lisp:defun get-documentation-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id documentation-version)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id documentation-version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-documentation-version-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/documentation/versions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'doc-version))))
                                                        "GetDocumentationVersion"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-documentation-version))
(common-lisp:progn
 (common-lisp:defun get-documentation-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id position limit)
   (common-lisp:declare (common-lisp:ignorable rest-api-id position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-documentation-versions-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/documentation/versions"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "GetDocumentationVersions"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-documentation-versions))
(common-lisp:progn
 (common-lisp:defun get-domain-name
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name)
   (common-lisp:declare (common-lisp:ignorable domain-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-domain-name-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/domainnames/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'domain-name))))
                                                        "GetDomainName"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-domain-name))
(common-lisp:progn
 (common-lisp:defun get-domain-names
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key position limit)
   (common-lisp:declare (common-lisp:ignorable position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-domain-names-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/domainnames"
                                                        "GetDomainNames"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-domain-names))
(common-lisp:progn
 (common-lisp:defun get-export
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id stage-name export-type
                     parameters accepts)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id stage-name export-type parameters
     accepts))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-export-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/stages/~A/exports/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'export-type))))
                                                        "GetExport"
                                                        "2015-07-09")
       :want-stream common-lisp:t)
      "blob" common-lisp:nil *error-map*)))
 (common-lisp:export 'get-export))
(common-lisp:progn
 (common-lisp:defun get-gateway-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id response-type)
   (common-lisp:declare (common-lisp:ignorable rest-api-id response-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-gateway-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/gatewayresponses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'response-type))))
                                                        "GetGatewayResponse"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-gateway-response))
(common-lisp:progn
 (common-lisp:defun get-gateway-responses
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id position limit)
   (common-lisp:declare (common-lisp:ignorable rest-api-id position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-gateway-responses-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/gatewayresponses"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "GetGatewayResponses"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-gateway-responses))
(common-lisp:progn
 (common-lisp:defun get-integration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-integration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A/integration"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))))
                                                        "GetIntegration"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-integration))
(common-lisp:progn
 (common-lisp:defun get-integration-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     status-code)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method status-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-integration-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A/integration/responses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'status-code))))
                                                        "GetIntegrationResponse"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-integration-response))
(common-lisp:progn
 (common-lisp:defun get-method
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-method-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))))
                                                        "GetMethod"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-method))
(common-lisp:progn
 (common-lisp:defun get-method-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     status-code)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method status-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-method-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A/responses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'status-code))))
                                                        "GetMethodResponse"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-method-response))
(common-lisp:progn
 (common-lisp:defun get-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id model-name flatten)
   (common-lisp:declare (common-lisp:ignorable rest-api-id model-name flatten))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/models/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'model-name))))
                                                        "GetModel"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-model))
(common-lisp:progn
 (common-lisp:defun get-model-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id model-name)
   (common-lisp:declare (common-lisp:ignorable rest-api-id model-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-model-template-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/models/~A/default_template"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'model-name))))
                                                        "GetModelTemplate"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-model-template))
(common-lisp:progn
 (common-lisp:defun get-models
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id position limit)
   (common-lisp:declare (common-lisp:ignorable rest-api-id position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-models-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/models"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "GetModels"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-models))
(common-lisp:progn
 (common-lisp:defun get-request-validator
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id request-validator-id)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id request-validator-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-request-validator-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/requestvalidators/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'requestvalidator-id))))
                                                        "GetRequestValidator"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-request-validator))
(common-lisp:progn
 (common-lisp:defun get-request-validators
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id position limit)
   (common-lisp:declare (common-lisp:ignorable rest-api-id position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-request-validators-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/requestvalidators"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "GetRequestValidators"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-request-validators))
(common-lisp:progn
 (common-lisp:defun get-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id embed)
   (common-lisp:declare (common-lisp:ignorable rest-api-id resource-id embed))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))))
                                                        "GetResource"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-resource))
(common-lisp:progn
 (common-lisp:defun get-resources
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id position limit embed)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id position limit embed))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-resources-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "GetResources"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-resources))
(common-lisp:progn
 (common-lisp:defun get-rest-api
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id)
   (common-lisp:declare (common-lisp:ignorable rest-api-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-rest-api-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "GetRestApi"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-rest-api))
(common-lisp:progn
 (common-lisp:defun get-rest-apis
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key position limit)
   (common-lisp:declare (common-lisp:ignorable position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-rest-apis-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/restapis"
                                                        "GetRestApis"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-rest-apis))
(common-lisp:progn
 (common-lisp:defun get-sdk
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id stage-name sdk-type
                     parameters)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id stage-name sdk-type parameters))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-sdk-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/stages/~A/sdks/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'sdk-type))))
                                                        "GetSdk" "2015-07-09")
       :want-stream common-lisp:t)
      "blob" common-lisp:nil *error-map*)))
 (common-lisp:export 'get-sdk))
(common-lisp:progn
 (common-lisp:defun get-sdk-type
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-sdk-type-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/sdktypes/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'sdktype-id))))
                                                        "GetSdkType"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-sdk-type))
(common-lisp:progn
 (common-lisp:defun get-sdk-types
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key position limit)
   (common-lisp:declare (common-lisp:ignorable position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-sdk-types-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/sdktypes"
                                                        "GetSdkTypes"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-sdk-types))
(common-lisp:progn
 (common-lisp:defun get-stage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id stage-name)
   (common-lisp:declare (common-lisp:ignorable rest-api-id stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-stage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/stages/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))))
                                                        "GetStage"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-stage))
(common-lisp:progn
 (common-lisp:defun get-stages
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id deployment-id)
   (common-lisp:declare (common-lisp:ignorable rest-api-id deployment-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-stages-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/stages"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "GetStages"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-stages))
(common-lisp:progn
 (common-lisp:defun get-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn position limit)
   (common-lisp:declare (common-lisp:ignorable resource-arn position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-tags-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "GetTags"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-tags))
(common-lisp:progn
 (common-lisp:defun get-usage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key usage-plan-id key-id start-date end-date
                     position limit)
   (common-lisp:declare
    (common-lisp:ignorable usage-plan-id key-id start-date end-date position
     limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-usage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/usageplans/~A/usage"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'usageplan-id))))
                                                        "GetUsage"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-usage))
(common-lisp:progn
 (common-lisp:defun get-usage-plan
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key usage-plan-id)
   (common-lisp:declare (common-lisp:ignorable usage-plan-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-usage-plan-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/usageplans/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'usageplan-id))))
                                                        "GetUsagePlan"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-usage-plan))
(common-lisp:progn
 (common-lisp:defun get-usage-plan-key
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key usage-plan-id key-id)
   (common-lisp:declare (common-lisp:ignorable usage-plan-id key-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-usage-plan-key-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/usageplans/~A/keys/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'usageplan-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'key-id))))
                                                        "GetUsagePlanKey"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-usage-plan-key))
(common-lisp:progn
 (common-lisp:defun get-usage-plan-keys
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key usage-plan-id position limit name-query)
   (common-lisp:declare
    (common-lisp:ignorable usage-plan-id position limit name-query))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-usage-plan-keys-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/usageplans/~A/keys"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'usageplan-id))))
                                                        "GetUsagePlanKeys"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-usage-plan-keys))
(common-lisp:progn
 (common-lisp:defun get-usage-plans
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key position key-id limit)
   (common-lisp:declare (common-lisp:ignorable position key-id limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-usage-plans-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/usageplans"
                                                        "GetUsagePlans"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-usage-plans))
(common-lisp:progn
 (common-lisp:defun get-vpc-link
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key vpc-link-id)
   (common-lisp:declare (common-lisp:ignorable vpc-link-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-vpc-link-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/vpclinks/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vpclink-id))))
                                                        "GetVpcLink"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-vpc-link))
(common-lisp:progn
 (common-lisp:defun get-vpc-links
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key position limit)
   (common-lisp:declare (common-lisp:ignorable position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-vpc-links-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/vpclinks"
                                                        "GetVpcLinks"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-vpc-links))
(common-lisp:progn
 (common-lisp:defun import-api-keys
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key body format fail-on-warnings)
   (common-lisp:declare (common-lisp:ignorable body format fail-on-warnings))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-import-api-keys-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/apikeys?mode=import"
                                                        "ImportApiKeys"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'import-api-keys))
(common-lisp:progn
 (common-lisp:defun import-documentation-parts
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id mode fail-on-warnings body)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id mode fail-on-warnings body))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-import-documentation-parts-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/documentation/parts"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "ImportDocumentationParts"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'import-documentation-parts))
(common-lisp:progn
 (common-lisp:defun import-rest-api
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key fail-on-warnings parameters body)
   (common-lisp:declare
    (common-lisp:ignorable fail-on-warnings parameters body))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-import-rest-api-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/restapis?mode=import"
                                                        "ImportRestApi"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'import-rest-api))
(common-lisp:progn
 (common-lisp:defun put-gateway-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id response-type status-code
                     response-parameters response-templates)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id response-type status-code
     response-parameters response-templates))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-gateway-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/gatewayresponses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'response-type))))
                                                        "PutGatewayResponse"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-gateway-response))
(common-lisp:progn
 (common-lisp:defun put-integration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method type
                     integration-http-method uri connection-type connection-id
                     credentials request-parameters request-templates
                     passthrough-behavior cache-namespace cache-key-parameters
                     content-handling timeout-in-millis tls-config)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method type
     integration-http-method uri connection-type connection-id credentials
     request-parameters request-templates passthrough-behavior cache-namespace
     cache-key-parameters content-handling timeout-in-millis tls-config))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-integration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A/integration"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))))
                                                        "PutIntegration"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-integration))
(common-lisp:progn
 (common-lisp:defun put-integration-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     status-code selection-pattern response-parameters
                     response-templates content-handling)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method status-code
     selection-pattern response-parameters response-templates
     content-handling))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-integration-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A/integration/responses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'status-code))))
                                                        "PutIntegrationResponse"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-integration-response))
(common-lisp:progn
 (common-lisp:defun put-method
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     authorization-type authorizer-id api-key-required
                     operation-name request-parameters request-models
                     request-validator-id authorization-scopes)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method
     authorization-type authorizer-id api-key-required operation-name
     request-parameters request-models request-validator-id
     authorization-scopes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-method-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))))
                                                        "PutMethod"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-method))
(common-lisp:progn
 (common-lisp:defun put-method-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     status-code response-parameters response-models)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method status-code
     response-parameters response-models))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-method-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A/responses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'status-code))))
                                                        "PutMethodResponse"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-method-response))
(common-lisp:progn
 (common-lisp:defun put-rest-api
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id mode fail-on-warnings
                     parameters body)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id mode fail-on-warnings parameters body))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-rest-api-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "PutRestApi"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-rest-api))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "TagResource"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun test-invoke-authorizer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id authorizer-id headers
                     multi-value-headers path-with-query-string body
                     stage-variables additional-context)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id authorizer-id headers
     multi-value-headers path-with-query-string body stage-variables
     additional-context))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-test-invoke-authorizer-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/authorizers/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'authorizer-id))))
                                                        "TestInvokeAuthorizer"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'test-invoke-authorizer))
(common-lisp:progn
 (common-lisp:defun test-invoke-method
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     path-with-query-string body headers multi-value-headers
                     client-certificate-id stage-variables)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method
     path-with-query-string body headers multi-value-headers
     client-certificate-id stage-variables))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-test-invoke-method-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))))
                                                        "TestInvokeMethod"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'test-invoke-method))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "UntagResource"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-account
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key patch-operations)
   (common-lisp:declare (common-lisp:ignorable patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-account-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH" "/account"
                                                        "UpdateAccount"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-account))
(common-lisp:progn
 (common-lisp:defun update-api-key
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-key patch-operations)
   (common-lisp:declare (common-lisp:ignorable api-key patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-api-key-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/apikeys/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-key))))
                                                        "UpdateApiKey"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-api-key))
(common-lisp:progn
 (common-lisp:defun update-authorizer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id authorizer-id
                     patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id authorizer-id patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-authorizer-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/authorizers/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'authorizer-id))))
                                                        "UpdateAuthorizer"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-authorizer))
(common-lisp:progn
 (common-lisp:defun update-base-path-mapping
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name base-path patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable domain-name base-path patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-base-path-mapping-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/domainnames/~A/basepathmappings/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'domain-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'base-path))))
                                                        "UpdateBasePathMapping"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-base-path-mapping))
(common-lisp:progn
 (common-lisp:defun update-client-certificate
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-certificate-id patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable client-certificate-id patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-client-certificate-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/clientcertificates/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'clientcertificate-id))))
                                                        "UpdateClientCertificate"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-client-certificate))
(common-lisp:progn
 (common-lisp:defun update-deployment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id deployment-id
                     patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id deployment-id patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-deployment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/deployments/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'deployment-id))))
                                                        "UpdateDeployment"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-deployment))
(common-lisp:progn
 (common-lisp:defun update-documentation-part
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id documentation-part-id
                     patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id documentation-part-id patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-documentation-part-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/documentation/parts/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'part-id))))
                                                        "UpdateDocumentationPart"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-documentation-part))
(common-lisp:progn
 (common-lisp:defun update-documentation-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id documentation-version
                     patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id documentation-version patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-documentation-version-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/documentation/versions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'doc-version))))
                                                        "UpdateDocumentationVersion"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-documentation-version))
(common-lisp:progn
 (common-lisp:defun update-domain-name
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name patch-operations)
   (common-lisp:declare (common-lisp:ignorable domain-name patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-domain-name-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/domainnames/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'domain-name))))
                                                        "UpdateDomainName"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-domain-name))
(common-lisp:progn
 (common-lisp:defun update-gateway-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id response-type
                     patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id response-type patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-gateway-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/gatewayresponses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'response-type))))
                                                        "UpdateGatewayResponse"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-gateway-response))
(common-lisp:progn
 (common-lisp:defun update-integration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method
     patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-integration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A/integration"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))))
                                                        "UpdateIntegration"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-integration))
(common-lisp:progn
 (common-lisp:defun update-integration-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     status-code patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method status-code
     patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-integration-response-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A/integration/responses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'status-code))))
                                                        "UpdateIntegrationResponse"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-integration-response))
(common-lisp:progn
 (common-lisp:defun update-method
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method
     patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-method-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))))
                                                        "UpdateMethod"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-method))
(common-lisp:progn
 (common-lisp:defun update-method-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     status-code patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method status-code
     patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-method-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A/responses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'status-code))))
                                                        "UpdateMethodResponse"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-method-response))
(common-lisp:progn
 (common-lisp:defun update-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id model-name patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id model-name patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/models/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'model-name))))
                                                        "UpdateModel"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-model))
(common-lisp:progn
 (common-lisp:defun update-request-validator
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id request-validator-id
                     patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id request-validator-id patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-request-validator-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/requestvalidators/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'requestvalidator-id))))
                                                        "UpdateRequestValidator"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-request-validator))
(common-lisp:progn
 (common-lisp:defun update-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))))
                                                        "UpdateResource"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-resource))
(common-lisp:progn
 (common-lisp:defun update-rest-api
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id patch-operations)
   (common-lisp:declare (common-lisp:ignorable rest-api-id patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-rest-api-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "UpdateRestApi"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-rest-api))
(common-lisp:progn
 (common-lisp:defun update-stage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id stage-name patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id stage-name patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-stage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/stages/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))))
                                                        "UpdateStage"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-stage))
(common-lisp:progn
 (common-lisp:defun update-usage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key usage-plan-id key-id patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable usage-plan-id key-id patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-usage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/usageplans/~A/keys/~A/usage"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'usageplan-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'key-id))))
                                                        "UpdateUsage"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-usage))
(common-lisp:progn
 (common-lisp:defun update-usage-plan
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key usage-plan-id patch-operations)
   (common-lisp:declare (common-lisp:ignorable usage-plan-id patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-usage-plan-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/usageplans/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'usageplan-id))))
                                                        "UpdateUsagePlan"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-usage-plan))
(common-lisp:progn
 (common-lisp:defun update-vpc-link
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key vpc-link-id patch-operations)
   (common-lisp:declare (common-lisp:ignorable vpc-link-id patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-vpc-link-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/vpclinks/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vpclink-id))))
                                                        "UpdateVpcLink"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-vpc-link))
