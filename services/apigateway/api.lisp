;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/apigateway/api
  (:use)
  (:nicknames #:aws/apigateway)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/apigateway/api)
(common-lisp:progn
 (common-lisp:defclass apigateway-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "apigateway" :protocol
                        :rest-json))
 (common-lisp:export 'apigateway-request))
(common-lisp:progn
 (common-lisp:define-condition apigateway-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'apigateway-error))
(common-lisp:defvar *error-map*
  '(("BadRequestException" . bad-request-exception)
    ("ConflictException" . conflict-exception)
    ("LimitExceededException" . limit-exceeded-exception)
    ("NotFoundException" . not-found-exception)
    ("ServiceUnavailableException" . service-unavailable-exception)
    ("TooManyRequestsException" . too-many-requests-exception)
    ("UnauthorizedException" . unauthorized-exception)))
(common-lisp:progn
 (common-lisp:defclass access-log-settings common-lisp:nil
                       ((destination-arn :initarg :|destinationArn| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %access-log-settings-destination-arn :initform
                         common-lisp:nil)
                        (format :initarg :|format| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %access-log-settings-format :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'access-log-settings 'make-access-log-settings))
 (common-lisp:defun make-access-log-settings
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key destination-arn format)
   (common-lisp:apply #'common-lisp:make-instance 'access-log-settings
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input access-log-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input access-log-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'format))
      (common-lisp:list
       (common-lisp:cons "format"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination-arn))
      (common-lisp:list
       (common-lisp:cons "destinationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input access-log-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass account common-lisp:nil
                       ((api-key-version :initarg :|apiKeyVersion| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %account-api-key-version :initform common-lisp:nil)
                        (features :initarg :|features| :type
                         (common-lisp:or list-of-string common-lisp:null)
                         :accessor %account-features :initform common-lisp:nil)
                        (throttle-settings :initarg :|throttleSettings| :type
                         (common-lisp:or throttle-settings common-lisp:null)
                         :accessor %account-throttle-settings :initform
                         common-lisp:nil)
                        (cloudwatch-role-arn :initarg :|cloudwatchRoleArn|
                         :type (common-lisp:or string common-lisp:null)
                         :accessor %account-cloudwatch-role-arn :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'account 'make-account))
 (common-lisp:defun make-account
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key api-key-version features
                     throttle-settings cloudwatch-role-arn)
   (common-lisp:apply #'common-lisp:make-instance 'account
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input account))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input account))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cloudwatch-role-arn))
      (common-lisp:list
       (common-lisp:cons "cloudwatchRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'throttle-settings))
      (common-lisp:list
       (common-lisp:cons "throttleSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'features))
      (common-lisp:list
       (common-lisp:cons "features"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key-version))
      (common-lisp:list
       (common-lisp:cons "apiKeyVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input account))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass api-key common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor %api-key-tags :initform common-lisp:nil)
                        (stage-keys :initarg :|stageKeys| :type
                         (common-lisp:or list-of-string common-lisp:null)
                         :accessor %api-key-stage-keys :initform
                         common-lisp:nil)
                        (last-updated-date :initarg :|lastUpdatedDate| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %api-key-last-updated-date :initform common-lisp:nil)
                        (created-date :initarg :|createdDate| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %api-key-created-date :initform common-lisp:nil)
                        (enabled :initarg :|enabled| :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         %api-key-enabled :initform common-lisp:nil)
                        (description :initarg :|description| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %api-key-description :initform common-lisp:nil)
                        (customer-id :initarg :|customerId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %api-key-customer-id :initform common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %api-key-name :initform common-lisp:nil)
                        (value :initarg :|value| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %api-key-value :initform common-lisp:nil)
                        (id :initarg :|id| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %api-key-id :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'api-key 'make-api-key))
 (common-lisp:defun make-api-key
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags stage-keys last-updated-date
                     created-date enabled description customer-id name value
                     id)
   (common-lisp:apply #'common-lisp:make-instance 'api-key
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input api-key))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input api-key))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'customer-id))
      (common-lisp:list
       (common-lisp:cons "customerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-date))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-keys))
      (common-lisp:list
       (common-lisp:cons "stageKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input api-key))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass api-key-ids common-lisp:nil
                       ((warnings :initarg :|warnings| :type
                         (common-lisp:or list-of-string common-lisp:null)
                         :accessor %api-key-ids-warnings :initform
                         common-lisp:nil)
                        (ids :initarg :|ids| :type
                         (common-lisp:or list-of-string common-lisp:null)
                         :accessor %api-key-ids-ids :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'api-key-ids 'make-api-key-ids))
 (common-lisp:defun make-api-key-ids
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key warnings ids)
   (common-lisp:apply #'common-lisp:make-instance 'api-key-ids
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input api-key-ids))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input api-key-ids))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ids))
      (common-lisp:list
       (common-lisp:cons "ids"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warnings))
      (common-lisp:list
       (common-lisp:cons "warnings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input api-key-ids))
   common-lisp:nil))
(common-lisp:deftype api-key-source-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass api-keys common-lisp:nil
                       ((items :initarg :|items| :type
                         (common-lisp:or list-of-api-key common-lisp:null)
                         :accessor %api-keys-items :initform common-lisp:nil)
                        (position :initarg :|position| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %api-keys-position :initform common-lisp:nil)
                        (warnings :initarg :|warnings| :type
                         (common-lisp:or list-of-string common-lisp:null)
                         :accessor %api-keys-warnings :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'api-keys 'make-api-keys))
 (common-lisp:defun make-api-keys
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key items position warnings)
   (common-lisp:apply #'common-lisp:make-instance 'api-keys
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input api-keys))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input api-keys))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warnings))
      (common-lisp:list
       (common-lisp:cons "warnings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input api-keys))
   common-lisp:nil))
(common-lisp:deftype api-keys-format () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass api-stage common-lisp:nil
                       ((throttle :initarg :|throttle| :type
                         (common-lisp:or map-of-api-stage-throttle-settings
                                         common-lisp:null)
                         :accessor %api-stage-throttle :initform
                         common-lisp:nil)
                        (stage :initarg :|stage| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %api-stage-stage :initform common-lisp:nil)
                        (api-id :initarg :|apiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %api-stage-api-id :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'api-stage 'make-api-stage))
 (common-lisp:defun make-api-stage
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key throttle stage api-id)
   (common-lisp:apply #'common-lisp:make-instance 'api-stage
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input api-stage))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input api-stage))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-id))
      (common-lisp:list
       (common-lisp:cons "apiId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage))
      (common-lisp:list
       (common-lisp:cons "stage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'throttle))
      (common-lisp:list
       (common-lisp:cons "throttle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input api-stage))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass authorizer common-lisp:nil
                       ((authorizer-result-ttl-in-seconds :initarg
                         :|authorizerResultTtlInSeconds| :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor %authorizer-authorizer-result-ttl-in-seconds
                         :initform common-lisp:nil)
                        (identity-validation-expression :initarg
                         :|identityValidationExpression| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %authorizer-identity-validation-expression :initform
                         common-lisp:nil)
                        (identity-source :initarg :|identitySource| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %authorizer-identity-source :initform common-lisp:nil)
                        (authorizer-credentials :initarg
                         :|authorizerCredentials| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %authorizer-authorizer-credentials :initform
                         common-lisp:nil)
                        (authorizer-uri :initarg :|authorizerUri| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %authorizer-authorizer-uri :initform common-lisp:nil)
                        (auth-type :initarg :|authType| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %authorizer-auth-type :initform common-lisp:nil)
                        (provider-arns :initarg :|providerARNs| :type
                         (common-lisp:or list-of-arns common-lisp:null)
                         :accessor %authorizer-provider-arns :initform
                         common-lisp:nil)
                        (type :initarg :|type| :type
                         (common-lisp:or authorizer-type common-lisp:null)
                         :accessor %authorizer-type :initform common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %authorizer-name :initform common-lisp:nil)
                        (id :initarg :|id| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %authorizer-id :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'authorizer 'make-authorizer))
 (common-lisp:defun make-authorizer
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key authorizer-result-ttl-in-seconds
                     identity-validation-expression identity-source
                     authorizer-credentials authorizer-uri auth-type
                     provider-arns type name id)
   (common-lisp:apply #'common-lisp:make-instance 'authorizer
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input authorizer))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input authorizer))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'provider-arns))
      (common-lisp:list
       (common-lisp:cons "providerARNs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auth-type))
      (common-lisp:list
       (common-lisp:cons "authType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-uri))
      (common-lisp:list
       (common-lisp:cons "authorizerUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-credentials))
      (common-lisp:list
       (common-lisp:cons "authorizerCredentials"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-source))
      (common-lisp:list
       (common-lisp:cons "identitySource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'identity-validation-expression))
      (common-lisp:list
       (common-lisp:cons "identityValidationExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-result-ttl-in-seconds))
      (common-lisp:list
       (common-lisp:cons "authorizerResultTtlInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input authorizer))
   common-lisp:nil))
(common-lisp:deftype authorizer-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass authorizers common-lisp:nil
                       ((items :initarg :|items| :type
                         (common-lisp:or list-of-authorizer common-lisp:null)
                         :accessor %authorizers-items :initform
                         common-lisp:nil)
                        (position :initarg :|position| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %authorizers-position :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'authorizers 'make-authorizers))
 (common-lisp:defun make-authorizers
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key items position)
   (common-lisp:apply #'common-lisp:make-instance 'authorizers
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input authorizers))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input authorizers))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input authorizers))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition bad-request-exception
     (apigateway-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       bad-request-exception-message)))
 (common-lisp:export
  (common-lisp:list 'bad-request-exception 'bad-request-exception-message)))
(common-lisp:progn
 (common-lisp:defclass base-path-mapping common-lisp:nil
                       ((stage :initarg :|stage| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %base-path-mapping-stage :initform common-lisp:nil)
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %base-path-mapping-rest-api-id :initform
                         common-lisp:nil)
                        (base-path :initarg :|basePath| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %base-path-mapping-base-path :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'base-path-mapping 'make-base-path-mapping))
 (common-lisp:defun make-base-path-mapping
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key stage rest-api-id base-path)
   (common-lisp:apply #'common-lisp:make-instance 'base-path-mapping
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input base-path-mapping))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input base-path-mapping))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'base-path))
      (common-lisp:list
       (common-lisp:cons "basePath"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rest-api-id))
      (common-lisp:list
       (common-lisp:cons "restApiId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage))
      (common-lisp:list
       (common-lisp:cons "stage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input base-path-mapping))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass base-path-mappings common-lisp:nil
                       ((items :initarg :|items| :type
                         (common-lisp:or list-of-base-path-mapping
                                         common-lisp:null)
                         :accessor %base-path-mappings-items :initform
                         common-lisp:nil)
                        (position :initarg :|position| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %base-path-mappings-position :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'base-path-mappings 'make-base-path-mappings))
 (common-lisp:defun make-base-path-mappings
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key items position)
   (common-lisp:apply #'common-lisp:make-instance 'base-path-mappings
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input base-path-mappings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input base-path-mappings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input base-path-mappings))
   common-lisp:nil))
(common-lisp:deftype blob ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:deftype cache-cluster-size () 'common-lisp:string)
(common-lisp:deftype cache-cluster-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass canary-settings common-lisp:nil
                       ((use-stage-cache :initarg :|useStageCache| :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         %canary-settings-use-stage-cache :initform
                         common-lisp:nil)
                        (stage-variable-overrides :initarg
                         :|stageVariableOverrides| :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor %canary-settings-stage-variable-overrides
                         :initform common-lisp:nil)
                        (deployment-id :initarg :|deploymentId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %canary-settings-deployment-id :initform
                         common-lisp:nil)
                        (percent-traffic :initarg :|percentTraffic| :type
                         (common-lisp:or double common-lisp:null) :accessor
                         %canary-settings-percent-traffic :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'canary-settings 'make-canary-settings))
 (common-lisp:defun make-canary-settings
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key use-stage-cache stage-variable-overrides
                     deployment-id percent-traffic)
   (common-lisp:apply #'common-lisp:make-instance 'canary-settings
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input canary-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input canary-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'percent-traffic))
      (common-lisp:list
       (common-lisp:cons "percentTraffic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "deploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'stage-variable-overrides))
      (common-lisp:list
       (common-lisp:cons "stageVariableOverrides"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'use-stage-cache))
      (common-lisp:list
       (common-lisp:cons "useStageCache"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input canary-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass client-certificate common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor %client-certificate-tags :initform
                         common-lisp:nil)
                        (expiration-date :initarg :|expirationDate| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %client-certificate-expiration-date :initform
                         common-lisp:nil)
                        (created-date :initarg :|createdDate| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %client-certificate-created-date :initform
                         common-lisp:nil)
                        (pem-encoded-certificate :initarg
                         :|pemEncodedCertificate| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %client-certificate-pem-encoded-certificate :initform
                         common-lisp:nil)
                        (description :initarg :|description| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %client-certificate-description :initform
                         common-lisp:nil)
                        (client-certificate-id :initarg :|clientCertificateId|
                         :type (common-lisp:or string common-lisp:null)
                         :accessor %client-certificate-client-certificate-id
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'client-certificate 'make-client-certificate))
 (common-lisp:defun make-client-certificate
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags expiration-date created-date
                     pem-encoded-certificate description client-certificate-id)
   (common-lisp:apply #'common-lisp:make-instance 'client-certificate
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input client-certificate))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input client-certificate))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-certificate-id))
      (common-lisp:list
       (common-lisp:cons "clientCertificateId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pem-encoded-certificate))
      (common-lisp:list
       (common-lisp:cons "pemEncodedCertificate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expiration-date))
      (common-lisp:list
       (common-lisp:cons "expirationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input client-certificate))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass client-certificates common-lisp:nil
                       ((items :initarg :|items| :type
                         (common-lisp:or list-of-client-certificate
                                         common-lisp:null)
                         :accessor %client-certificates-items :initform
                         common-lisp:nil)
                        (position :initarg :|position| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %client-certificates-position :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'client-certificates 'make-client-certificates))
 (common-lisp:defun make-client-certificates
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key items position)
   (common-lisp:apply #'common-lisp:make-instance 'client-certificates
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input client-certificates))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input client-certificates))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input client-certificates))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (apigateway-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       conflict-exception-message)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message)))
(common-lisp:deftype connection-type () 'common-lisp:string)
(common-lisp:deftype content-handling-strategy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass create-api-key-request common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor %create-api-key-request-tags :initform
                         common-lisp:nil)
                        (customer-id :initarg :|customerId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-api-key-request-customer-id :initform
                         common-lisp:nil)
                        (stage-keys :initarg :|stageKeys| :type
                         (common-lisp:or list-of-stage-keys common-lisp:null)
                         :accessor %create-api-key-request-stage-keys :initform
                         common-lisp:nil)
                        (value :initarg :|value| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-api-key-request-value :initform
                         common-lisp:nil)
                        (generate-distinct-id :initarg :|generateDistinctId|
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor %create-api-key-request-generate-distinct-id
                         :initform common-lisp:nil)
                        (enabled :initarg :|enabled| :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         %create-api-key-request-enabled :initform
                         common-lisp:nil)
                        (description :initarg :|description| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-api-key-request-description :initform
                         common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-api-key-request-name :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-api-key-request 'make-create-api-key-request))
 (common-lisp:defun make-create-api-key-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags customer-id stage-keys value
                     generate-distinct-id enabled description name)
   (common-lisp:apply #'common-lisp:make-instance 'create-api-key-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-api-key-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-api-key-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'generate-distinct-id))
      (common-lisp:list
       (common-lisp:cons "generateDistinctId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-keys))
      (common-lisp:list
       (common-lisp:cons "stageKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'customer-id))
      (common-lisp:list
       (common-lisp:cons "customerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-api-key-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-authorizer-request common-lisp:nil
                       ((authorizer-result-ttl-in-seconds :initarg
                         :|authorizerResultTtlInSeconds| :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor
                         %create-authorizer-request-authorizer-result-ttl-in-seconds
                         :initform common-lisp:nil)
                        (identity-validation-expression :initarg
                         :|identityValidationExpression| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-authorizer-request-identity-validation-expression
                         :initform common-lisp:nil)
                        (identity-source :initarg :|identitySource| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-authorizer-request-identity-source :initform
                         common-lisp:nil)
                        (authorizer-credentials :initarg
                         :|authorizerCredentials| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-authorizer-request-authorizer-credentials
                         :initform common-lisp:nil)
                        (authorizer-uri :initarg :|authorizerUri| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-authorizer-request-authorizer-uri :initform
                         common-lisp:nil)
                        (auth-type :initarg :|authType| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-authorizer-request-auth-type :initform
                         common-lisp:nil)
                        (provider-arns :initarg :|providerARNs| :type
                         (common-lisp:or list-of-arns common-lisp:null)
                         :accessor %create-authorizer-request-provider-arns
                         :initform common-lisp:nil)
                        (type :initarg :|type| :type
                         (common-lisp:or authorizer-type common-lisp:null)
                         :accessor %create-authorizer-request-type :initform
                         (common-lisp:error ":type is required"))
                        (name :initarg :|name| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-authorizer-request-name :initform
                         (common-lisp:error ":name is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-authorizer-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'create-authorizer-request
                    'make-create-authorizer-request))
 (common-lisp:defun make-create-authorizer-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key authorizer-result-ttl-in-seconds
                     identity-validation-expression identity-source
                     authorizer-credentials authorizer-uri auth-type
                     provider-arns type name rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'create-authorizer-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-authorizer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-authorizer-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'provider-arns))
      (common-lisp:list
       (common-lisp:cons "providerARNs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auth-type))
      (common-lisp:list
       (common-lisp:cons "authType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-uri))
      (common-lisp:list
       (common-lisp:cons "authorizerUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-credentials))
      (common-lisp:list
       (common-lisp:cons "authorizerCredentials"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-source))
      (common-lisp:list
       (common-lisp:cons "identitySource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'identity-validation-expression))
      (common-lisp:list
       (common-lisp:cons "identityValidationExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-result-ttl-in-seconds))
      (common-lisp:list
       (common-lisp:cons "authorizerResultTtlInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-authorizer-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-base-path-mapping-request common-lisp:nil
                       ((stage :initarg :|stage| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-base-path-mapping-request-stage :initform
                         common-lisp:nil)
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-base-path-mapping-request-rest-api-id
                         :initform
                         (common-lisp:error ":restapiid is required"))
                        (base-path :initarg :|basePath| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-base-path-mapping-request-base-path :initform
                         common-lisp:nil)
                        (domain-name :initarg :|domainName| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-base-path-mapping-request-domain-name
                         :initform
                         (common-lisp:error ":domainname is required"))))
 (common-lisp:export
  (common-lisp:list 'create-base-path-mapping-request
                    'make-create-base-path-mapping-request))
 (common-lisp:defun make-create-base-path-mapping-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key stage rest-api-id base-path domain-name)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-base-path-mapping-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-base-path-mapping-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-base-path-mapping-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'base-path))
      (common-lisp:list
       (common-lisp:cons "basePath"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rest-api-id))
      (common-lisp:list
       (common-lisp:cons "restApiId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage))
      (common-lisp:list
       (common-lisp:cons "stage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-base-path-mapping-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-deployment-request common-lisp:nil
                       ((tracing-enabled :initarg :|tracingEnabled| :type
                         (common-lisp:or nullable-boolean common-lisp:null)
                         :accessor %create-deployment-request-tracing-enabled
                         :initform common-lisp:nil)
                        (canary-settings :initarg :|canarySettings| :type
                         (common-lisp:or deployment-canary-settings
                                         common-lisp:null)
                         :accessor %create-deployment-request-canary-settings
                         :initform common-lisp:nil)
                        (variables :initarg :|variables| :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor %create-deployment-request-variables
                         :initform common-lisp:nil)
                        (cache-cluster-size :initarg :|cacheClusterSize| :type
                         (common-lisp:or cache-cluster-size common-lisp:null)
                         :accessor
                         %create-deployment-request-cache-cluster-size
                         :initform common-lisp:nil)
                        (cache-cluster-enabled :initarg :|cacheClusterEnabled|
                         :type
                         (common-lisp:or nullable-boolean common-lisp:null)
                         :accessor
                         %create-deployment-request-cache-cluster-enabled
                         :initform common-lisp:nil)
                        (description :initarg :|description| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-deployment-request-description :initform
                         common-lisp:nil)
                        (stage-description :initarg :|stageDescription| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-deployment-request-stage-description :initform
                         common-lisp:nil)
                        (stage-name :initarg :|stageName| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-deployment-request-stage-name :initform
                         common-lisp:nil)
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-deployment-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'create-deployment-request
                    'make-create-deployment-request))
 (common-lisp:defun make-create-deployment-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tracing-enabled canary-settings variables
                     cache-cluster-size cache-cluster-enabled description
                     stage-description stage-name rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'create-deployment-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-deployment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-deployment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-name))
      (common-lisp:list
       (common-lisp:cons "stageName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-description))
      (common-lisp:list
       (common-lisp:cons "stageDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-cluster-enabled))
      (common-lisp:list
       (common-lisp:cons "cacheClusterEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-cluster-size))
      (common-lisp:list
       (common-lisp:cons "cacheClusterSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'variables))
      (common-lisp:list
       (common-lisp:cons "variables"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'canary-settings))
      (common-lisp:list
       (common-lisp:cons "canarySettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tracing-enabled))
      (common-lisp:list
       (common-lisp:cons "tracingEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-deployment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-documentation-part-request common-lisp:nil
                       ((properties :initarg :|properties| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-documentation-part-request-properties
                         :initform
                         (common-lisp:error ":properties is required"))
                        (location :initarg :|location| :type
                         (common-lisp:or documentation-part-location
                                         common-lisp:null)
                         :accessor %create-documentation-part-request-location
                         :initform (common-lisp:error ":location is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-documentation-part-request-rest-api-id
                         :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'create-documentation-part-request
                    'make-create-documentation-part-request))
 (common-lisp:defun make-create-documentation-part-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key properties location rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-documentation-part-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-documentation-part-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-documentation-part-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location))
      (common-lisp:list
       (common-lisp:cons "location"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'properties))
      (common-lisp:list
       (common-lisp:cons "properties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-documentation-part-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-documentation-version-request common-lisp:nil
                       ((description :initarg :|description| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-documentation-version-request-description
                         :initform common-lisp:nil)
                        (stage-name :initarg :|stageName| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-documentation-version-request-stage-name
                         :initform common-lisp:nil)
                        (documentation-version :initarg :|documentationVersion|
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         %create-documentation-version-request-documentation-version
                         :initform
                         (common-lisp:error
                          ":documentationversion is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-documentation-version-request-rest-api-id
                         :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'create-documentation-version-request
                    'make-create-documentation-version-request))
 (common-lisp:defun make-create-documentation-version-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key description stage-name
                     documentation-version rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-documentation-version-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-documentation-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-documentation-version-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'documentation-version))
      (common-lisp:list
       (common-lisp:cons "documentationVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-name))
      (common-lisp:list
       (common-lisp:cons "stageName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-documentation-version-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-domain-name-request common-lisp:nil
                       ((ownership-verification-certificate-arn :initarg
                         :|ownershipVerificationCertificateArn| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-domain-name-request-ownership-verification-certificate-arn
                         :initform common-lisp:nil)
                        (mutual-tls-authentication :initarg
                         :|mutualTlsAuthentication| :type
                         (common-lisp:or mutual-tls-authentication-input
                                         common-lisp:null)
                         :accessor
                         %create-domain-name-request-mutual-tls-authentication
                         :initform common-lisp:nil)
                        (security-policy :initarg :|securityPolicy| :type
                         (common-lisp:or security-policy common-lisp:null)
                         :accessor %create-domain-name-request-security-policy
                         :initform common-lisp:nil)
                        (tags :initarg :|tags| :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor %create-domain-name-request-tags :initform
                         common-lisp:nil)
                        (endpoint-configuration :initarg
                         :|endpointConfiguration| :type
                         (common-lisp:or endpoint-configuration
                                         common-lisp:null)
                         :accessor
                         %create-domain-name-request-endpoint-configuration
                         :initform common-lisp:nil)
                        (regional-certificate-arn :initarg
                         :|regionalCertificateArn| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-domain-name-request-regional-certificate-arn
                         :initform common-lisp:nil)
                        (regional-certificate-name :initarg
                         :|regionalCertificateName| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-domain-name-request-regional-certificate-name
                         :initform common-lisp:nil)
                        (certificate-arn :initarg :|certificateArn| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-domain-name-request-certificate-arn :initform
                         common-lisp:nil)
                        (certificate-chain :initarg :|certificateChain| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-domain-name-request-certificate-chain
                         :initform common-lisp:nil)
                        (certificate-private-key :initarg
                         :|certificatePrivateKey| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-domain-name-request-certificate-private-key
                         :initform common-lisp:nil)
                        (certificate-body :initarg :|certificateBody| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-domain-name-request-certificate-body :initform
                         common-lisp:nil)
                        (certificate-name :initarg :|certificateName| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-domain-name-request-certificate-name :initform
                         common-lisp:nil)
                        (domain-name :initarg :|domainName| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-domain-name-request-domain-name :initform
                         (common-lisp:error ":domainname is required"))))
 (common-lisp:export
  (common-lisp:list 'create-domain-name-request
                    'make-create-domain-name-request))
 (common-lisp:defun make-create-domain-name-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key ownership-verification-certificate-arn
                     mutual-tls-authentication security-policy tags
                     endpoint-configuration regional-certificate-arn
                     regional-certificate-name certificate-arn
                     certificate-chain certificate-private-key certificate-body
                     certificate-name domain-name)
   (common-lisp:apply #'common-lisp:make-instance 'create-domain-name-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-domain-name-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-domain-name-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "domainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate-name))
      (common-lisp:list
       (common-lisp:cons "certificateName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate-body))
      (common-lisp:list
       (common-lisp:cons "certificateBody"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'certificate-private-key))
      (common-lisp:list
       (common-lisp:cons "certificatePrivateKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate-chain))
      (common-lisp:list
       (common-lisp:cons "certificateChain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate-arn))
      (common-lisp:list
       (common-lisp:cons "certificateArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'regional-certificate-name))
      (common-lisp:list
       (common-lisp:cons "regionalCertificateName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'regional-certificate-arn))
      (common-lisp:list
       (common-lisp:cons "regionalCertificateArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'endpoint-configuration))
      (common-lisp:list
       (common-lisp:cons "endpointConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-policy))
      (common-lisp:list
       (common-lisp:cons "securityPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'mutual-tls-authentication))
      (common-lisp:list
       (common-lisp:cons "mutualTlsAuthentication"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ownership-verification-certificate-arn))
      (common-lisp:list
       (common-lisp:cons "ownershipVerificationCertificateArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-domain-name-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-model-request common-lisp:nil
                       ((content-type :initarg :|contentType| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-model-request-content-type :initform
                         (common-lisp:error ":contenttype is required"))
                        (schema :initarg :|schema| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-model-request-schema :initform
                         common-lisp:nil)
                        (description :initarg :|description| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-model-request-description :initform
                         common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-model-request-name :initform
                         (common-lisp:error ":name is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-model-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'create-model-request 'make-create-model-request))
 (common-lisp:defun make-create-model-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key content-type schema description name
                     rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'create-model-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-model-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schema))
      (common-lisp:list
       (common-lisp:cons "schema"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-type))
      (common-lisp:list
       (common-lisp:cons "contentType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-request-validator-request common-lisp:nil
                       ((validate-request-parameters :initarg
                         :|validateRequestParameters| :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         %create-request-validator-request-validate-request-parameters
                         :initform common-lisp:nil)
                        (validate-request-body :initarg :|validateRequestBody|
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor
                         %create-request-validator-request-validate-request-body
                         :initform common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-request-validator-request-name :initform
                         common-lisp:nil)
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-request-validator-request-rest-api-id
                         :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'create-request-validator-request
                    'make-create-request-validator-request))
 (common-lisp:defun make-create-request-validator-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key validate-request-parameters
                     validate-request-body name rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-request-validator-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-request-validator-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-request-validator-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'validate-request-body))
      (common-lisp:list
       (common-lisp:cons "validateRequestBody"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'validate-request-parameters))
      (common-lisp:list
       (common-lisp:cons "validateRequestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-request-validator-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-resource-request common-lisp:nil
                       ((path-part :initarg :|pathPart| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-resource-request-path-part :initform
                         (common-lisp:error ":pathpart is required"))
                        (parent-id :initarg :|parentId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-resource-request-parent-id :initform
                         (common-lisp:error ":parentid is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-resource-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'create-resource-request 'make-create-resource-request))
 (common-lisp:defun make-create-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key path-part parent-id rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'create-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'path-part))
      (common-lisp:list
       (common-lisp:cons "pathPart"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-rest-api-request common-lisp:nil
                       ((disable-execute-api-endpoint :initarg
                         :|disableExecuteApiEndpoint| :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         %create-rest-api-request-disable-execute-api-endpoint
                         :initform common-lisp:nil)
                        (tags :initarg :|tags| :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor %create-rest-api-request-tags :initform
                         common-lisp:nil)
                        (policy :initarg :|policy| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-rest-api-request-policy :initform
                         common-lisp:nil)
                        (endpoint-configuration :initarg
                         :|endpointConfiguration| :type
                         (common-lisp:or endpoint-configuration
                                         common-lisp:null)
                         :accessor
                         %create-rest-api-request-endpoint-configuration
                         :initform common-lisp:nil)
                        (api-key-source :initarg :|apiKeySource| :type
                         (common-lisp:or api-key-source-type common-lisp:null)
                         :accessor %create-rest-api-request-api-key-source
                         :initform common-lisp:nil)
                        (minimum-compression-size :initarg
                         :|minimumCompressionSize| :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor
                         %create-rest-api-request-minimum-compression-size
                         :initform common-lisp:nil)
                        (binary-media-types :initarg :|binaryMediaTypes| :type
                         (common-lisp:or list-of-string common-lisp:null)
                         :accessor %create-rest-api-request-binary-media-types
                         :initform common-lisp:nil)
                        (clone-from :initarg :|cloneFrom| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-rest-api-request-clone-from :initform
                         common-lisp:nil)
                        (version :initarg :|version| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-rest-api-request-version :initform
                         common-lisp:nil)
                        (description :initarg :|description| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-rest-api-request-description :initform
                         common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-rest-api-request-name :initform
                         (common-lisp:error ":name is required"))))
 (common-lisp:export
  (common-lisp:list 'create-rest-api-request 'make-create-rest-api-request))
 (common-lisp:defun make-create-rest-api-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key disable-execute-api-endpoint tags policy
                     endpoint-configuration api-key-source
                     minimum-compression-size binary-media-types clone-from
                     version description name)
   (common-lisp:apply #'common-lisp:make-instance 'create-rest-api-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-rest-api-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-rest-api-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'clone-from))
      (common-lisp:list
       (common-lisp:cons "cloneFrom"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'binary-media-types))
      (common-lisp:list
       (common-lisp:cons "binaryMediaTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'minimum-compression-size))
      (common-lisp:list
       (common-lisp:cons "minimumCompressionSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key-source))
      (common-lisp:list
       (common-lisp:cons "apiKeySource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'endpoint-configuration))
      (common-lisp:list
       (common-lisp:cons "endpointConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-execute-api-endpoint))
      (common-lisp:list
       (common-lisp:cons "disableExecuteApiEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-rest-api-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-stage-request common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor %create-stage-request-tags :initform
                         common-lisp:nil)
                        (tracing-enabled :initarg :|tracingEnabled| :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         %create-stage-request-tracing-enabled :initform
                         common-lisp:nil)
                        (canary-settings :initarg :|canarySettings| :type
                         (common-lisp:or canary-settings common-lisp:null)
                         :accessor %create-stage-request-canary-settings
                         :initform common-lisp:nil)
                        (documentation-version :initarg :|documentationVersion|
                         :type (common-lisp:or string common-lisp:null)
                         :accessor %create-stage-request-documentation-version
                         :initform common-lisp:nil)
                        (variables :initarg :|variables| :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor %create-stage-request-variables :initform
                         common-lisp:nil)
                        (cache-cluster-size :initarg :|cacheClusterSize| :type
                         (common-lisp:or cache-cluster-size common-lisp:null)
                         :accessor %create-stage-request-cache-cluster-size
                         :initform common-lisp:nil)
                        (cache-cluster-enabled :initarg :|cacheClusterEnabled|
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor %create-stage-request-cache-cluster-enabled
                         :initform common-lisp:nil)
                        (description :initarg :|description| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-stage-request-description :initform
                         common-lisp:nil)
                        (deployment-id :initarg :|deploymentId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-stage-request-deployment-id :initform
                         (common-lisp:error ":deploymentid is required"))
                        (stage-name :initarg :|stageName| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-stage-request-stage-name :initform
                         (common-lisp:error ":stagename is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-stage-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'create-stage-request 'make-create-stage-request))
 (common-lisp:defun make-create-stage-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags tracing-enabled canary-settings
                     documentation-version variables cache-cluster-size
                     cache-cluster-enabled description deployment-id stage-name
                     rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'create-stage-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-stage-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-name))
      (common-lisp:list
       (common-lisp:cons "stageName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "deploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-cluster-enabled))
      (common-lisp:list
       (common-lisp:cons "cacheClusterEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-cluster-size))
      (common-lisp:list
       (common-lisp:cons "cacheClusterSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'variables))
      (common-lisp:list
       (common-lisp:cons "variables"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'documentation-version))
      (common-lisp:list
       (common-lisp:cons "documentationVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'canary-settings))
      (common-lisp:list
       (common-lisp:cons "canarySettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tracing-enabled))
      (common-lisp:list
       (common-lisp:cons "tracingEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-stage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-usage-plan-key-request common-lisp:nil
                       ((key-type :initarg :|keyType| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-usage-plan-key-request-key-type :initform
                         (common-lisp:error ":keytype is required"))
                        (key-id :initarg :|keyId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-usage-plan-key-request-key-id :initform
                         (common-lisp:error ":keyid is required"))
                        (usage-plan-id :initarg :|usagePlanId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-usage-plan-key-request-usage-plan-id :initform
                         (common-lisp:error ":usageplanid is required"))))
 (common-lisp:export
  (common-lisp:list 'create-usage-plan-key-request
                    'make-create-usage-plan-key-request))
 (common-lisp:defun make-create-usage-plan-key-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key key-type key-id usage-plan-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-usage-plan-key-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-usage-plan-key-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-usage-plan-key-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-id))
      (common-lisp:list
       (common-lisp:cons "keyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-type))
      (common-lisp:list
       (common-lisp:cons "keyType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-usage-plan-key-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-usage-plan-request common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor %create-usage-plan-request-tags :initform
                         common-lisp:nil)
                        (quota :initarg :|quota| :type
                         (common-lisp:or quota-settings common-lisp:null)
                         :accessor %create-usage-plan-request-quota :initform
                         common-lisp:nil)
                        (throttle :initarg :|throttle| :type
                         (common-lisp:or throttle-settings common-lisp:null)
                         :accessor %create-usage-plan-request-throttle
                         :initform common-lisp:nil)
                        (api-stages :initarg :|apiStages| :type
                         (common-lisp:or list-of-api-stage common-lisp:null)
                         :accessor %create-usage-plan-request-api-stages
                         :initform common-lisp:nil)
                        (description :initarg :|description| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-usage-plan-request-description :initform
                         common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-usage-plan-request-name :initform
                         (common-lisp:error ":name is required"))))
 (common-lisp:export
  (common-lisp:list 'create-usage-plan-request
                    'make-create-usage-plan-request))
 (common-lisp:defun make-create-usage-plan-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags quota throttle api-stages
                     description name)
   (common-lisp:apply #'common-lisp:make-instance 'create-usage-plan-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-usage-plan-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-usage-plan-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-stages))
      (common-lisp:list
       (common-lisp:cons "apiStages"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'throttle))
      (common-lisp:list
       (common-lisp:cons "throttle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'quota))
      (common-lisp:list
       (common-lisp:cons "quota"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-usage-plan-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-vpc-link-request common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor %create-vpc-link-request-tags :initform
                         common-lisp:nil)
                        (target-arns :initarg :|targetArns| :type
                         (common-lisp:or list-of-string common-lisp:null)
                         :accessor %create-vpc-link-request-target-arns
                         :initform
                         (common-lisp:error ":targetarns is required"))
                        (description :initarg :|description| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-vpc-link-request-description :initform
                         common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-vpc-link-request-name :initform
                         (common-lisp:error ":name is required"))))
 (common-lisp:export
  (common-lisp:list 'create-vpc-link-request 'make-create-vpc-link-request))
 (common-lisp:defun make-create-vpc-link-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags target-arns description name)
   (common-lisp:apply #'common-lisp:make-instance 'create-vpc-link-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-vpc-link-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-vpc-link-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-arns))
      (common-lisp:list
       (common-lisp:cons "targetArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-vpc-link-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-api-key-request common-lisp:nil
                       ((api-key :initarg :|apiKey| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %delete-api-key-request-api-key :initform
                         (common-lisp:error ":apikey is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-api-key-request 'make-delete-api-key-request))
 (common-lisp:defun make-delete-api-key-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key api-key)
   (common-lisp:apply #'common-lisp:make-instance 'delete-api-key-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-api-key-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-api-key-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-api-key-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-authorizer-request common-lisp:nil
                       ((authorizer-id :initarg :|authorizerId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %delete-authorizer-request-authorizer-id :initform
                         (common-lisp:error ":authorizerid is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %delete-authorizer-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-authorizer-request
                    'make-delete-authorizer-request))
 (common-lisp:defun make-delete-authorizer-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key authorizer-id rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'delete-authorizer-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-authorizer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-authorizer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-authorizer-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-base-path-mapping-request common-lisp:nil
                       ((base-path :initarg :|basePath| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %delete-base-path-mapping-request-base-path :initform
                         (common-lisp:error ":basepath is required"))
                        (domain-name :initarg :|domainName| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %delete-base-path-mapping-request-domain-name
                         :initform
                         (common-lisp:error ":domainname is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-base-path-mapping-request
                    'make-delete-base-path-mapping-request))
 (common-lisp:defun make-delete-base-path-mapping-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key base-path domain-name)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-base-path-mapping-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-base-path-mapping-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-base-path-mapping-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-base-path-mapping-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-client-certificate-request common-lisp:nil
                       ((client-certificate-id :initarg :|clientCertificateId|
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         %delete-client-certificate-request-client-certificate-id
                         :initform
                         (common-lisp:error
                          ":clientcertificateid is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-client-certificate-request
                    'make-delete-client-certificate-request))
 (common-lisp:defun make-delete-client-certificate-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key client-certificate-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-client-certificate-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-client-certificate-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-client-certificate-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-client-certificate-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-deployment-request common-lisp:nil
                       ((deployment-id :initarg :|deploymentId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %delete-deployment-request-deployment-id :initform
                         (common-lisp:error ":deploymentid is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %delete-deployment-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-deployment-request
                    'make-delete-deployment-request))
 (common-lisp:defun make-delete-deployment-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key deployment-id rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'delete-deployment-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-deployment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-deployment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-deployment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-documentation-part-request common-lisp:nil
                       ((documentation-part-id :initarg :|documentationPartId|
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         %delete-documentation-part-request-documentation-part-id
                         :initform
                         (common-lisp:error
                          ":documentationpartid is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %delete-documentation-part-request-rest-api-id
                         :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-documentation-part-request
                    'make-delete-documentation-part-request))
 (common-lisp:defun make-delete-documentation-part-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key documentation-part-id rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-documentation-part-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-documentation-part-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-documentation-part-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-documentation-part-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-documentation-version-request common-lisp:nil
                       ((documentation-version :initarg :|documentationVersion|
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         %delete-documentation-version-request-documentation-version
                         :initform
                         (common-lisp:error
                          ":documentationversion is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %delete-documentation-version-request-rest-api-id
                         :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-documentation-version-request
                    'make-delete-documentation-version-request))
 (common-lisp:defun make-delete-documentation-version-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key documentation-version rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-documentation-version-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-documentation-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-documentation-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-documentation-version-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-domain-name-request common-lisp:nil
                       ((domain-name :initarg :|domainName| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %delete-domain-name-request-domain-name :initform
                         (common-lisp:error ":domainname is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-domain-name-request
                    'make-delete-domain-name-request))
 (common-lisp:defun make-delete-domain-name-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key domain-name)
   (common-lisp:apply #'common-lisp:make-instance 'delete-domain-name-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-domain-name-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-domain-name-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-domain-name-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-gateway-response-request common-lisp:nil
                       ((response-type :initarg :|responseType| :type
                         (common-lisp:or gateway-response-type
                                         common-lisp:null)
                         :accessor
                         %delete-gateway-response-request-response-type
                         :initform
                         (common-lisp:error ":responsetype is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %delete-gateway-response-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-gateway-response-request
                    'make-delete-gateway-response-request))
 (common-lisp:defun make-delete-gateway-response-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key response-type rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-gateway-response-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-gateway-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-gateway-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-gateway-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-integration-request common-lisp:nil
                       ((http-method :initarg :|httpMethod| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %delete-integration-request-http-method :initform
                         (common-lisp:error ":httpmethod is required"))
                        (resource-id :initarg :|resourceId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %delete-integration-request-resource-id :initform
                         (common-lisp:error ":resourceid is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %delete-integration-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-integration-request
                    'make-delete-integration-request))
 (common-lisp:defun make-delete-integration-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key http-method resource-id rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'delete-integration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-integration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-integration-response-request common-lisp:nil
                       ((status-code :initarg :|statusCode| :type
                         (common-lisp:or status-code common-lisp:null)
                         :accessor
                         %delete-integration-response-request-status-code
                         :initform
                         (common-lisp:error ":statuscode is required"))
                        (http-method :initarg :|httpMethod| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %delete-integration-response-request-http-method
                         :initform
                         (common-lisp:error ":httpmethod is required"))
                        (resource-id :initarg :|resourceId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %delete-integration-response-request-resource-id
                         :initform
                         (common-lisp:error ":resourceid is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %delete-integration-response-request-rest-api-id
                         :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-integration-response-request
                    'make-delete-integration-response-request))
 (common-lisp:defun make-delete-integration-response-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key status-code http-method resource-id
                     rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-integration-response-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-integration-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-integration-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-integration-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-method-request common-lisp:nil
                       ((http-method :initarg :|httpMethod| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %delete-method-request-http-method :initform
                         (common-lisp:error ":httpmethod is required"))
                        (resource-id :initarg :|resourceId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %delete-method-request-resource-id :initform
                         (common-lisp:error ":resourceid is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %delete-method-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-method-request 'make-delete-method-request))
 (common-lisp:defun make-delete-method-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key http-method resource-id rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'delete-method-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-method-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-method-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-method-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-method-response-request common-lisp:nil
                       ((status-code :initarg :|statusCode| :type
                         (common-lisp:or status-code common-lisp:null)
                         :accessor %delete-method-response-request-status-code
                         :initform
                         (common-lisp:error ":statuscode is required"))
                        (http-method :initarg :|httpMethod| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %delete-method-response-request-http-method :initform
                         (common-lisp:error ":httpmethod is required"))
                        (resource-id :initarg :|resourceId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %delete-method-response-request-resource-id :initform
                         (common-lisp:error ":resourceid is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %delete-method-response-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-method-response-request
                    'make-delete-method-response-request))
 (common-lisp:defun make-delete-method-response-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key status-code http-method resource-id
                     rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-method-response-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-method-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-method-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-method-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-model-request common-lisp:nil
                       ((model-name :initarg :|modelName| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %delete-model-request-model-name :initform
                         (common-lisp:error ":modelname is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %delete-model-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-model-request 'make-delete-model-request))
 (common-lisp:defun make-delete-model-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key model-name rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'delete-model-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-request-validator-request common-lisp:nil
                       ((request-validator-id :initarg :|requestValidatorId|
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         %delete-request-validator-request-request-validator-id
                         :initform
                         (common-lisp:error ":requestvalidatorid is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %delete-request-validator-request-rest-api-id
                         :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-request-validator-request
                    'make-delete-request-validator-request))
 (common-lisp:defun make-delete-request-validator-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key request-validator-id rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-request-validator-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-request-validator-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-request-validator-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-request-validator-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-resource-request common-lisp:nil
                       ((resource-id :initarg :|resourceId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %delete-resource-request-resource-id :initform
                         (common-lisp:error ":resourceid is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %delete-resource-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-resource-request 'make-delete-resource-request))
 (common-lisp:defun make-delete-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-id rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'delete-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-rest-api-request common-lisp:nil
                       ((rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %delete-rest-api-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-rest-api-request 'make-delete-rest-api-request))
 (common-lisp:defun make-delete-rest-api-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'delete-rest-api-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-rest-api-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-rest-api-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-rest-api-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-stage-request common-lisp:nil
                       ((stage-name :initarg :|stageName| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %delete-stage-request-stage-name :initform
                         (common-lisp:error ":stagename is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %delete-stage-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-stage-request 'make-delete-stage-request))
 (common-lisp:defun make-delete-stage-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key stage-name rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'delete-stage-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-stage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-usage-plan-key-request common-lisp:nil
                       ((key-id :initarg :|keyId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %delete-usage-plan-key-request-key-id :initform
                         (common-lisp:error ":keyid is required"))
                        (usage-plan-id :initarg :|usagePlanId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %delete-usage-plan-key-request-usage-plan-id :initform
                         (common-lisp:error ":usageplanid is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-usage-plan-key-request
                    'make-delete-usage-plan-key-request))
 (common-lisp:defun make-delete-usage-plan-key-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key key-id usage-plan-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-usage-plan-key-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-usage-plan-key-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-usage-plan-key-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-usage-plan-key-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-usage-plan-request common-lisp:nil
                       ((usage-plan-id :initarg :|usagePlanId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %delete-usage-plan-request-usage-plan-id :initform
                         (common-lisp:error ":usageplanid is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-usage-plan-request
                    'make-delete-usage-plan-request))
 (common-lisp:defun make-delete-usage-plan-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key usage-plan-id)
   (common-lisp:apply #'common-lisp:make-instance 'delete-usage-plan-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-usage-plan-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-usage-plan-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-usage-plan-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-vpc-link-request common-lisp:nil
                       ((vpc-link-id :initarg :|vpcLinkId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %delete-vpc-link-request-vpc-link-id :initform
                         (common-lisp:error ":vpclinkid is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-vpc-link-request 'make-delete-vpc-link-request))
 (common-lisp:defun make-delete-vpc-link-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key vpc-link-id)
   (common-lisp:apply #'common-lisp:make-instance 'delete-vpc-link-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-vpc-link-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-vpc-link-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-vpc-link-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass deployment common-lisp:nil
                       ((api-summary :initarg :|apiSummary| :type
                         (common-lisp:or path-to-map-of-method-snapshot
                                         common-lisp:null)
                         :accessor %deployment-api-summary :initform
                         common-lisp:nil)
                        (created-date :initarg :|createdDate| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %deployment-created-date :initform common-lisp:nil)
                        (description :initarg :|description| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %deployment-description :initform common-lisp:nil)
                        (id :initarg :|id| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %deployment-id :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'deployment 'make-deployment))
 (common-lisp:defun make-deployment
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key api-summary created-date description id)
   (common-lisp:apply #'common-lisp:make-instance 'deployment
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input deployment))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input deployment))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-summary))
      (common-lisp:list
       (common-lisp:cons "apiSummary"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input deployment))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass deployment-canary-settings common-lisp:nil
                       ((use-stage-cache :initarg :|useStageCache| :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         %deployment-canary-settings-use-stage-cache :initform
                         common-lisp:nil)
                        (stage-variable-overrides :initarg
                         :|stageVariableOverrides| :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor
                         %deployment-canary-settings-stage-variable-overrides
                         :initform common-lisp:nil)
                        (percent-traffic :initarg :|percentTraffic| :type
                         (common-lisp:or double common-lisp:null) :accessor
                         %deployment-canary-settings-percent-traffic :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'deployment-canary-settings
                    'make-deployment-canary-settings))
 (common-lisp:defun make-deployment-canary-settings
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key use-stage-cache stage-variable-overrides
                     percent-traffic)
   (common-lisp:apply #'common-lisp:make-instance 'deployment-canary-settings
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          deployment-canary-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          deployment-canary-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'percent-traffic))
      (common-lisp:list
       (common-lisp:cons "percentTraffic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'stage-variable-overrides))
      (common-lisp:list
       (common-lisp:cons "stageVariableOverrides"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'use-stage-cache))
      (common-lisp:list
       (common-lisp:cons "useStageCache"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          deployment-canary-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass deployments common-lisp:nil
                       ((items :initarg :|items| :type
                         (common-lisp:or list-of-deployment common-lisp:null)
                         :accessor %deployments-items :initform
                         common-lisp:nil)
                        (position :initarg :|position| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %deployments-position :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'deployments 'make-deployments))
 (common-lisp:defun make-deployments
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key items position)
   (common-lisp:apply #'common-lisp:make-instance 'deployments
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input deployments))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input deployments))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input deployments))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass documentation-part common-lisp:nil
                       ((properties :initarg :|properties| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %documentation-part-properties :initform
                         common-lisp:nil)
                        (location :initarg :|location| :type
                         (common-lisp:or documentation-part-location
                                         common-lisp:null)
                         :accessor %documentation-part-location :initform
                         common-lisp:nil)
                        (id :initarg :|id| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %documentation-part-id :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'documentation-part 'make-documentation-part))
 (common-lisp:defun make-documentation-part
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key properties location id)
   (common-lisp:apply #'common-lisp:make-instance 'documentation-part
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input documentation-part))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input documentation-part))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location))
      (common-lisp:list
       (common-lisp:cons "location"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'properties))
      (common-lisp:list
       (common-lisp:cons "properties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input documentation-part))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass documentation-part-ids common-lisp:nil
                       ((warnings :initarg :|warnings| :type
                         (common-lisp:or list-of-string common-lisp:null)
                         :accessor %documentation-part-ids-warnings :initform
                         common-lisp:nil)
                        (ids :initarg :|ids| :type
                         (common-lisp:or list-of-string common-lisp:null)
                         :accessor %documentation-part-ids-ids :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'documentation-part-ids 'make-documentation-part-ids))
 (common-lisp:defun make-documentation-part-ids
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key warnings ids)
   (common-lisp:apply #'common-lisp:make-instance 'documentation-part-ids
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          documentation-part-ids))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          documentation-part-ids))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ids))
      (common-lisp:list
       (common-lisp:cons "ids"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warnings))
      (common-lisp:list
       (common-lisp:cons "warnings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          documentation-part-ids))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass documentation-part-location common-lisp:nil
                       ((name :initarg :|name| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %documentation-part-location-name :initform
                         common-lisp:nil)
                        (status-code :initarg :|statusCode| :type
                         (common-lisp:or
                          documentation-part-location-status-code
                          common-lisp:null)
                         :accessor %documentation-part-location-status-code
                         :initform common-lisp:nil)
                        (method :initarg :|method| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %documentation-part-location-method :initform
                         common-lisp:nil)
                        (path :initarg :|path| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %documentation-part-location-path :initform
                         common-lisp:nil)
                        (type :initarg :|type| :type
                         (common-lisp:or documentation-part-type
                                         common-lisp:null)
                         :accessor %documentation-part-location-type :initform
                         (common-lisp:error ":type is required"))))
 (common-lisp:export
  (common-lisp:list 'documentation-part-location
                    'make-documentation-part-location))
 (common-lisp:defun make-documentation-part-location
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key name status-code method path type)
   (common-lisp:apply #'common-lisp:make-instance 'documentation-part-location
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          documentation-part-location))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          documentation-part-location))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'path))
      (common-lisp:list
       (common-lisp:cons "path"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'method))
      (common-lisp:list
       (common-lisp:cons "method"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-code))
      (common-lisp:list
       (common-lisp:cons "statusCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          documentation-part-location))
   common-lisp:nil))
(common-lisp:deftype documentation-part-location-status-code ()
  'common-lisp:string)
(common-lisp:deftype documentation-part-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass documentation-parts common-lisp:nil
                       ((items :initarg :|items| :type
                         (common-lisp:or list-of-documentation-part
                                         common-lisp:null)
                         :accessor %documentation-parts-items :initform
                         common-lisp:nil)
                        (position :initarg :|position| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %documentation-parts-position :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'documentation-parts 'make-documentation-parts))
 (common-lisp:defun make-documentation-parts
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key items position)
   (common-lisp:apply #'common-lisp:make-instance 'documentation-parts
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input documentation-parts))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input documentation-parts))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input documentation-parts))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass documentation-version common-lisp:nil
                       ((description :initarg :|description| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %documentation-version-description :initform
                         common-lisp:nil)
                        (created-date :initarg :|createdDate| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %documentation-version-created-date :initform
                         common-lisp:nil)
                        (version :initarg :|version| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %documentation-version-version :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'documentation-version 'make-documentation-version))
 (common-lisp:defun make-documentation-version
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key description created-date version)
   (common-lisp:apply #'common-lisp:make-instance 'documentation-version
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          documentation-version))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          documentation-version))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          documentation-version))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass documentation-versions common-lisp:nil
                       ((items :initarg :|items| :type
                         (common-lisp:or list-of-documentation-version
                                         common-lisp:null)
                         :accessor %documentation-versions-items :initform
                         common-lisp:nil)
                        (position :initarg :|position| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %documentation-versions-position :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'documentation-versions 'make-documentation-versions))
 (common-lisp:defun make-documentation-versions
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key items position)
   (common-lisp:apply #'common-lisp:make-instance 'documentation-versions
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          documentation-versions))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          documentation-versions))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          documentation-versions))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass domain-name common-lisp:nil
                       ((ownership-verification-certificate-arn :initarg
                         :|ownershipVerificationCertificateArn| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %domain-name-ownership-verification-certificate-arn
                         :initform common-lisp:nil)
                        (mutual-tls-authentication :initarg
                         :|mutualTlsAuthentication| :type
                         (common-lisp:or mutual-tls-authentication
                                         common-lisp:null)
                         :accessor %domain-name-mutual-tls-authentication
                         :initform common-lisp:nil)
                        (tags :initarg :|tags| :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor %domain-name-tags :initform common-lisp:nil)
                        (security-policy :initarg :|securityPolicy| :type
                         (common-lisp:or security-policy common-lisp:null)
                         :accessor %domain-name-security-policy :initform
                         common-lisp:nil)
                        (domain-name-status-message :initarg
                         :|domainNameStatusMessage| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %domain-name-domain-name-status-message :initform
                         common-lisp:nil)
                        (domain-name-status :initarg :|domainNameStatus| :type
                         (common-lisp:or domain-name-status common-lisp:null)
                         :accessor %domain-name-domain-name-status :initform
                         common-lisp:nil)
                        (endpoint-configuration :initarg
                         :|endpointConfiguration| :type
                         (common-lisp:or endpoint-configuration
                                         common-lisp:null)
                         :accessor %domain-name-endpoint-configuration
                         :initform common-lisp:nil)
                        (distribution-hosted-zone-id :initarg
                         :|distributionHostedZoneId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %domain-name-distribution-hosted-zone-id :initform
                         common-lisp:nil)
                        (distribution-domain-name :initarg
                         :|distributionDomainName| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %domain-name-distribution-domain-name :initform
                         common-lisp:nil)
                        (regional-certificate-arn :initarg
                         :|regionalCertificateArn| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %domain-name-regional-certificate-arn :initform
                         common-lisp:nil)
                        (regional-certificate-name :initarg
                         :|regionalCertificateName| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %domain-name-regional-certificate-name :initform
                         common-lisp:nil)
                        (regional-hosted-zone-id :initarg
                         :|regionalHostedZoneId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %domain-name-regional-hosted-zone-id :initform
                         common-lisp:nil)
                        (regional-domain-name :initarg :|regionalDomainName|
                         :type (common-lisp:or string common-lisp:null)
                         :accessor %domain-name-regional-domain-name :initform
                         common-lisp:nil)
                        (certificate-upload-date :initarg
                         :|certificateUploadDate| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %domain-name-certificate-upload-date :initform
                         common-lisp:nil)
                        (certificate-arn :initarg :|certificateArn| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %domain-name-certificate-arn :initform
                         common-lisp:nil)
                        (certificate-name :initarg :|certificateName| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %domain-name-certificate-name :initform
                         common-lisp:nil)
                        (domain-name :initarg :|domainName| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %domain-name-domain-name :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'domain-name 'make-domain-name))
 (common-lisp:defun make-domain-name
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key ownership-verification-certificate-arn
                     mutual-tls-authentication tags security-policy
                     domain-name-status-message domain-name-status
                     endpoint-configuration distribution-hosted-zone-id
                     distribution-domain-name regional-certificate-arn
                     regional-certificate-name regional-hosted-zone-id
                     regional-domain-name certificate-upload-date
                     certificate-arn certificate-name domain-name)
   (common-lisp:apply #'common-lisp:make-instance 'domain-name
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input domain-name))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input domain-name))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "domainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate-name))
      (common-lisp:list
       (common-lisp:cons "certificateName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate-arn))
      (common-lisp:list
       (common-lisp:cons "certificateArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'certificate-upload-date))
      (common-lisp:list
       (common-lisp:cons "certificateUploadDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'regional-domain-name))
      (common-lisp:list
       (common-lisp:cons "regionalDomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'regional-hosted-zone-id))
      (common-lisp:list
       (common-lisp:cons "regionalHostedZoneId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'regional-certificate-name))
      (common-lisp:list
       (common-lisp:cons "regionalCertificateName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'regional-certificate-arn))
      (common-lisp:list
       (common-lisp:cons "regionalCertificateArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'distribution-domain-name))
      (common-lisp:list
       (common-lisp:cons "distributionDomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'distribution-hosted-zone-id))
      (common-lisp:list
       (common-lisp:cons "distributionHostedZoneId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'endpoint-configuration))
      (common-lisp:list
       (common-lisp:cons "endpointConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name-status))
      (common-lisp:list
       (common-lisp:cons "domainNameStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'domain-name-status-message))
      (common-lisp:list
       (common-lisp:cons "domainNameStatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-policy))
      (common-lisp:list
       (common-lisp:cons "securityPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'mutual-tls-authentication))
      (common-lisp:list
       (common-lisp:cons "mutualTlsAuthentication"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ownership-verification-certificate-arn))
      (common-lisp:list
       (common-lisp:cons "ownershipVerificationCertificateArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input domain-name))
   common-lisp:nil))
(common-lisp:deftype domain-name-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass domain-names common-lisp:nil
                       ((items :initarg :|items| :type
                         (common-lisp:or list-of-domain-name common-lisp:null)
                         :accessor %domain-names-items :initform
                         common-lisp:nil)
                        (position :initarg :|position| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %domain-names-position :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'domain-names 'make-domain-names))
 (common-lisp:defun make-domain-names
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key items position)
   (common-lisp:apply #'common-lisp:make-instance 'domain-names
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input domain-names))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input domain-names))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input domain-names))
   common-lisp:nil))
(common-lisp:deftype double () 'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:defclass endpoint-configuration common-lisp:nil
                       ((vpc-endpoint-ids :initarg :|vpcEndpointIds| :type
                         (common-lisp:or list-of-string common-lisp:null)
                         :accessor %endpoint-configuration-vpc-endpoint-ids
                         :initform common-lisp:nil)
                        (types :initarg :|types| :type
                         (common-lisp:or list-of-endpoint-type
                                         common-lisp:null)
                         :accessor %endpoint-configuration-types :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'endpoint-configuration 'make-endpoint-configuration))
 (common-lisp:defun make-endpoint-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key vpc-endpoint-ids types)
   (common-lisp:apply #'common-lisp:make-instance 'endpoint-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          endpoint-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          endpoint-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'types))
      (common-lisp:list
       (common-lisp:cons "types"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-endpoint-ids))
      (common-lisp:list
       (common-lisp:cons "vpcEndpointIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          endpoint-configuration))
   common-lisp:nil))
(common-lisp:deftype endpoint-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass export-response common-lisp:nil
                       ((body :initarg :|body| :type
                         (common-lisp:or blob common-lisp:null) :accessor
                         %export-response-body :initform common-lisp:nil)
                        (content-disposition :initarg :|contentDisposition|
                         :type (common-lisp:or string common-lisp:null)
                         :accessor %export-response-content-disposition
                         :initform common-lisp:nil)
                        (content-type :initarg :|contentType| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %export-response-content-type :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'export-response 'make-export-response))
 (common-lisp:defun make-export-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key body content-disposition content-type)
   (common-lisp:apply #'common-lisp:make-instance 'export-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input export-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-type))
      (common-lisp:cons "Content-Type" aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-disposition))
      (common-lisp:cons "Content-Disposition"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input export-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input export-response))
   (com.inuoe.jzon:stringify
    (common-lisp:slot-value aws-sdk/generator/shape::input 'body))))
(common-lisp:progn
 (common-lisp:defclass flush-stage-authorizers-cache-request common-lisp:nil
                       ((stage-name :initarg :|stageName| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %flush-stage-authorizers-cache-request-stage-name
                         :initform
                         (common-lisp:error ":stagename is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %flush-stage-authorizers-cache-request-rest-api-id
                         :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'flush-stage-authorizers-cache-request
                    'make-flush-stage-authorizers-cache-request))
 (common-lisp:defun make-flush-stage-authorizers-cache-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key stage-name rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'flush-stage-authorizers-cache-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          flush-stage-authorizers-cache-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          flush-stage-authorizers-cache-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          flush-stage-authorizers-cache-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass flush-stage-cache-request common-lisp:nil
                       ((stage-name :initarg :|stageName| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %flush-stage-cache-request-stage-name :initform
                         (common-lisp:error ":stagename is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %flush-stage-cache-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'flush-stage-cache-request
                    'make-flush-stage-cache-request))
 (common-lisp:defun make-flush-stage-cache-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key stage-name rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'flush-stage-cache-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          flush-stage-cache-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          flush-stage-cache-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          flush-stage-cache-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass gateway-response common-lisp:nil
                       ((default-response :initarg :|defaultResponse| :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         %gateway-response-default-response :initform
                         common-lisp:nil)
                        (response-templates :initarg :|responseTemplates| :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor %gateway-response-response-templates
                         :initform common-lisp:nil)
                        (response-parameters :initarg :|responseParameters|
                         :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor %gateway-response-response-parameters
                         :initform common-lisp:nil)
                        (status-code :initarg :|statusCode| :type
                         (common-lisp:or status-code common-lisp:null)
                         :accessor %gateway-response-status-code :initform
                         common-lisp:nil)
                        (response-type :initarg :|responseType| :type
                         (common-lisp:or gateway-response-type
                                         common-lisp:null)
                         :accessor %gateway-response-response-type :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'gateway-response 'make-gateway-response))
 (common-lisp:defun make-gateway-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key default-response response-templates
                     response-parameters status-code response-type)
   (common-lisp:apply #'common-lisp:make-instance 'gateway-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input gateway-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input gateway-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-type))
      (common-lisp:list
       (common-lisp:cons "responseType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-code))
      (common-lisp:list
       (common-lisp:cons "statusCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "responseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-templates))
      (common-lisp:list
       (common-lisp:cons "responseTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'default-response))
      (common-lisp:list
       (common-lisp:cons "defaultResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input gateway-response))
   common-lisp:nil))
(common-lisp:deftype gateway-response-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass gateway-responses common-lisp:nil
                       ((items :initarg :|items| :type
                         (common-lisp:or list-of-gateway-response
                                         common-lisp:null)
                         :accessor %gateway-responses-items :initform
                         common-lisp:nil)
                        (position :initarg :|position| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %gateway-responses-position :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'gateway-responses 'make-gateway-responses))
 (common-lisp:defun make-gateway-responses
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key items position)
   (common-lisp:apply #'common-lisp:make-instance 'gateway-responses
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input gateway-responses))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input gateway-responses))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input gateway-responses))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass generate-client-certificate-request common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor %generate-client-certificate-request-tags
                         :initform common-lisp:nil)
                        (description :initarg :|description| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %generate-client-certificate-request-description
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'generate-client-certificate-request
                    'make-generate-client-certificate-request))
 (common-lisp:defun make-generate-client-certificate-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags description)
   (common-lisp:apply #'common-lisp:make-instance
                      'generate-client-certificate-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          generate-client-certificate-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          generate-client-certificate-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          generate-client-certificate-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-account-request common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'get-account-request 'make-get-account-request))
 (common-lisp:defun make-get-account-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'get-account-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-account-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-api-key-request common-lisp:nil
                       ((include-value :initarg :|includeValue| :type
                         (common-lisp:or nullable-boolean common-lisp:null)
                         :accessor %get-api-key-request-include-value :initform
                         common-lisp:nil)
                        (api-key :initarg :|apiKey| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-api-key-request-api-key :initform
                         (common-lisp:error ":apikey is required"))))
 (common-lisp:export
  (common-lisp:list 'get-api-key-request 'make-get-api-key-request))
 (common-lisp:defun make-get-api-key-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key include-value api-key)
   (common-lisp:apply #'common-lisp:make-instance 'get-api-key-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-api-key-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-api-key-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-api-key-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-api-keys-request common-lisp:nil
                       ((include-values :initarg :|includeValues| :type
                         (common-lisp:or nullable-boolean common-lisp:null)
                         :accessor %get-api-keys-request-include-values
                         :initform common-lisp:nil)
                        (customer-id :initarg :|customerId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-api-keys-request-customer-id :initform
                         common-lisp:nil)
                        (name-query :initarg :|nameQuery| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-api-keys-request-name-query :initform
                         common-lisp:nil)
                        (limit :initarg :|limit| :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor %get-api-keys-request-limit :initform
                         common-lisp:nil)
                        (position :initarg :|position| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-api-keys-request-position :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-api-keys-request 'make-get-api-keys-request))
 (common-lisp:defun make-get-api-keys-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key include-values customer-id name-query
                     limit position)
   (common-lisp:apply #'common-lisp:make-instance 'get-api-keys-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-api-keys-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-api-keys-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-api-keys-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-authorizer-request common-lisp:nil
                       ((authorizer-id :initarg :|authorizerId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-authorizer-request-authorizer-id :initform
                         (common-lisp:error ":authorizerid is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-authorizer-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'get-authorizer-request 'make-get-authorizer-request))
 (common-lisp:defun make-get-authorizer-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key authorizer-id rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'get-authorizer-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-authorizer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-authorizer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-authorizer-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-authorizers-request common-lisp:nil
                       ((limit :initarg :|limit| :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor %get-authorizers-request-limit :initform
                         common-lisp:nil)
                        (position :initarg :|position| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-authorizers-request-position :initform
                         common-lisp:nil)
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-authorizers-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'get-authorizers-request 'make-get-authorizers-request))
 (common-lisp:defun make-get-authorizers-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key limit position rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'get-authorizers-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-authorizers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-authorizers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-authorizers-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-base-path-mapping-request common-lisp:nil
                       ((base-path :initarg :|basePath| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-base-path-mapping-request-base-path :initform
                         (common-lisp:error ":basepath is required"))
                        (domain-name :initarg :|domainName| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-base-path-mapping-request-domain-name :initform
                         (common-lisp:error ":domainname is required"))))
 (common-lisp:export
  (common-lisp:list 'get-base-path-mapping-request
                    'make-get-base-path-mapping-request))
 (common-lisp:defun make-get-base-path-mapping-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key base-path domain-name)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-base-path-mapping-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-base-path-mapping-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-base-path-mapping-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-base-path-mapping-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-base-path-mappings-request common-lisp:nil
                       ((limit :initarg :|limit| :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor %get-base-path-mappings-request-limit
                         :initform common-lisp:nil)
                        (position :initarg :|position| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-base-path-mappings-request-position :initform
                         common-lisp:nil)
                        (domain-name :initarg :|domainName| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-base-path-mappings-request-domain-name :initform
                         (common-lisp:error ":domainname is required"))))
 (common-lisp:export
  (common-lisp:list 'get-base-path-mappings-request
                    'make-get-base-path-mappings-request))
 (common-lisp:defun make-get-base-path-mappings-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key limit position domain-name)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-base-path-mappings-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-base-path-mappings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-base-path-mappings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-base-path-mappings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-client-certificate-request common-lisp:nil
                       ((client-certificate-id :initarg :|clientCertificateId|
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         %get-client-certificate-request-client-certificate-id
                         :initform
                         (common-lisp:error
                          ":clientcertificateid is required"))))
 (common-lisp:export
  (common-lisp:list 'get-client-certificate-request
                    'make-get-client-certificate-request))
 (common-lisp:defun make-get-client-certificate-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key client-certificate-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-client-certificate-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-client-certificate-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-client-certificate-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-client-certificate-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-client-certificates-request common-lisp:nil
                       ((limit :initarg :|limit| :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor %get-client-certificates-request-limit
                         :initform common-lisp:nil)
                        (position :initarg :|position| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-client-certificates-request-position :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-client-certificates-request
                    'make-get-client-certificates-request))
 (common-lisp:defun make-get-client-certificates-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key limit position)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-client-certificates-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-client-certificates-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-client-certificates-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-client-certificates-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-deployment-request common-lisp:nil
                       ((embed :initarg :|embed| :type
                         (common-lisp:or list-of-string common-lisp:null)
                         :accessor %get-deployment-request-embed :initform
                         common-lisp:nil)
                        (deployment-id :initarg :|deploymentId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-deployment-request-deployment-id :initform
                         (common-lisp:error ":deploymentid is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-deployment-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'get-deployment-request 'make-get-deployment-request))
 (common-lisp:defun make-get-deployment-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key embed deployment-id rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'get-deployment-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-deployment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-deployment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-deployment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-deployments-request common-lisp:nil
                       ((limit :initarg :|limit| :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor %get-deployments-request-limit :initform
                         common-lisp:nil)
                        (position :initarg :|position| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-deployments-request-position :initform
                         common-lisp:nil)
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-deployments-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'get-deployments-request 'make-get-deployments-request))
 (common-lisp:defun make-get-deployments-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key limit position rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'get-deployments-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-deployments-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-deployments-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-deployments-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-documentation-part-request common-lisp:nil
                       ((documentation-part-id :initarg :|documentationPartId|
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         %get-documentation-part-request-documentation-part-id
                         :initform
                         (common-lisp:error
                          ":documentationpartid is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-documentation-part-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'get-documentation-part-request
                    'make-get-documentation-part-request))
 (common-lisp:defun make-get-documentation-part-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key documentation-part-id rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-documentation-part-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-documentation-part-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-documentation-part-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-documentation-part-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-documentation-parts-request common-lisp:nil
                       ((location-status :initarg :|locationStatus| :type
                         (common-lisp:or location-status-type common-lisp:null)
                         :accessor
                         %get-documentation-parts-request-location-status
                         :initform common-lisp:nil)
                        (limit :initarg :|limit| :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor %get-documentation-parts-request-limit
                         :initform common-lisp:nil)
                        (position :initarg :|position| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-documentation-parts-request-position :initform
                         common-lisp:nil)
                        (path :initarg :|path| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-documentation-parts-request-path :initform
                         common-lisp:nil)
                        (name-query :initarg :|nameQuery| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-documentation-parts-request-name-query :initform
                         common-lisp:nil)
                        (type :initarg :|type| :type
                         (common-lisp:or documentation-part-type
                                         common-lisp:null)
                         :accessor %get-documentation-parts-request-type
                         :initform common-lisp:nil)
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-documentation-parts-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'get-documentation-parts-request
                    'make-get-documentation-parts-request))
 (common-lisp:defun make-get-documentation-parts-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key location-status limit position path
                     name-query type rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-documentation-parts-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-documentation-parts-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-documentation-parts-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-documentation-parts-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-documentation-version-request common-lisp:nil
                       ((documentation-version :initarg :|documentationVersion|
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         %get-documentation-version-request-documentation-version
                         :initform
                         (common-lisp:error
                          ":documentationversion is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-documentation-version-request-rest-api-id
                         :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'get-documentation-version-request
                    'make-get-documentation-version-request))
 (common-lisp:defun make-get-documentation-version-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key documentation-version rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-documentation-version-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-documentation-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-documentation-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-documentation-version-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-documentation-versions-request common-lisp:nil
                       ((limit :initarg :|limit| :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor %get-documentation-versions-request-limit
                         :initform common-lisp:nil)
                        (position :initarg :|position| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-documentation-versions-request-position :initform
                         common-lisp:nil)
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-documentation-versions-request-rest-api-id
                         :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'get-documentation-versions-request
                    'make-get-documentation-versions-request))
 (common-lisp:defun make-get-documentation-versions-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key limit position rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-documentation-versions-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-documentation-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-documentation-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-documentation-versions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-domain-name-request common-lisp:nil
                       ((domain-name :initarg :|domainName| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-domain-name-request-domain-name :initform
                         (common-lisp:error ":domainname is required"))))
 (common-lisp:export
  (common-lisp:list 'get-domain-name-request 'make-get-domain-name-request))
 (common-lisp:defun make-get-domain-name-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key domain-name)
   (common-lisp:apply #'common-lisp:make-instance 'get-domain-name-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-name-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-name-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-name-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-domain-names-request common-lisp:nil
                       ((limit :initarg :|limit| :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor %get-domain-names-request-limit :initform
                         common-lisp:nil)
                        (position :initarg :|position| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-domain-names-request-position :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-domain-names-request 'make-get-domain-names-request))
 (common-lisp:defun make-get-domain-names-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key limit position)
   (common-lisp:apply #'common-lisp:make-instance 'get-domain-names-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-names-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-names-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-names-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-export-request common-lisp:nil
                       ((accepts :initarg :|accepts| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-export-request-accepts :initform common-lisp:nil)
                        (parameters :initarg :|parameters| :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor %get-export-request-parameters :initform
                         common-lisp:nil)
                        (export-type :initarg :|exportType| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-export-request-export-type :initform
                         (common-lisp:error ":exporttype is required"))
                        (stage-name :initarg :|stageName| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-export-request-stage-name :initform
                         (common-lisp:error ":stagename is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-export-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'get-export-request 'make-get-export-request))
 (common-lisp:defun make-get-export-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key accepts parameters export-type stage-name
                     rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'get-export-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-export-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'accepts))
      (common-lisp:cons "Accept" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-export-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-export-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-gateway-response-request common-lisp:nil
                       ((response-type :initarg :|responseType| :type
                         (common-lisp:or gateway-response-type
                                         common-lisp:null)
                         :accessor %get-gateway-response-request-response-type
                         :initform
                         (common-lisp:error ":responsetype is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-gateway-response-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'get-gateway-response-request
                    'make-get-gateway-response-request))
 (common-lisp:defun make-get-gateway-response-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key response-type rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'get-gateway-response-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-gateway-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-gateway-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-gateway-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-gateway-responses-request common-lisp:nil
                       ((limit :initarg :|limit| :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor %get-gateway-responses-request-limit
                         :initform common-lisp:nil)
                        (position :initarg :|position| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-gateway-responses-request-position :initform
                         common-lisp:nil)
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-gateway-responses-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'get-gateway-responses-request
                    'make-get-gateway-responses-request))
 (common-lisp:defun make-get-gateway-responses-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key limit position rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-gateway-responses-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-gateway-responses-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-gateway-responses-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-gateway-responses-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-integration-request common-lisp:nil
                       ((http-method :initarg :|httpMethod| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-integration-request-http-method :initform
                         (common-lisp:error ":httpmethod is required"))
                        (resource-id :initarg :|resourceId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-integration-request-resource-id :initform
                         (common-lisp:error ":resourceid is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-integration-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'get-integration-request 'make-get-integration-request))
 (common-lisp:defun make-get-integration-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key http-method resource-id rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'get-integration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-integration-response-request common-lisp:nil
                       ((status-code :initarg :|statusCode| :type
                         (common-lisp:or status-code common-lisp:null)
                         :accessor
                         %get-integration-response-request-status-code
                         :initform
                         (common-lisp:error ":statuscode is required"))
                        (http-method :initarg :|httpMethod| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-integration-response-request-http-method
                         :initform
                         (common-lisp:error ":httpmethod is required"))
                        (resource-id :initarg :|resourceId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-integration-response-request-resource-id
                         :initform
                         (common-lisp:error ":resourceid is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-integration-response-request-rest-api-id
                         :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'get-integration-response-request
                    'make-get-integration-response-request))
 (common-lisp:defun make-get-integration-response-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key status-code http-method resource-id
                     rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-integration-response-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-method-request common-lisp:nil
                       ((http-method :initarg :|httpMethod| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-method-request-http-method :initform
                         (common-lisp:error ":httpmethod is required"))
                        (resource-id :initarg :|resourceId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-method-request-resource-id :initform
                         (common-lisp:error ":resourceid is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-method-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'get-method-request 'make-get-method-request))
 (common-lisp:defun make-get-method-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key http-method resource-id rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'get-method-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-method-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-method-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-method-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-method-response-request common-lisp:nil
                       ((status-code :initarg :|statusCode| :type
                         (common-lisp:or status-code common-lisp:null)
                         :accessor %get-method-response-request-status-code
                         :initform
                         (common-lisp:error ":statuscode is required"))
                        (http-method :initarg :|httpMethod| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-method-response-request-http-method :initform
                         (common-lisp:error ":httpmethod is required"))
                        (resource-id :initarg :|resourceId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-method-response-request-resource-id :initform
                         (common-lisp:error ":resourceid is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-method-response-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'get-method-response-request
                    'make-get-method-response-request))
 (common-lisp:defun make-get-method-response-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key status-code http-method resource-id
                     rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'get-method-response-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-method-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-method-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-method-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-model-request common-lisp:nil
                       ((flatten :initarg :|flatten| :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         %get-model-request-flatten :initform common-lisp:nil)
                        (model-name :initarg :|modelName| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-model-request-model-name :initform
                         (common-lisp:error ":modelname is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-model-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'get-model-request 'make-get-model-request))
 (common-lisp:defun make-get-model-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key flatten model-name rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'get-model-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-model-template-request common-lisp:nil
                       ((model-name :initarg :|modelName| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-model-template-request-model-name :initform
                         (common-lisp:error ":modelname is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-model-template-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'get-model-template-request
                    'make-get-model-template-request))
 (common-lisp:defun make-get-model-template-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key model-name rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'get-model-template-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-model-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-model-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-model-template-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-models-request common-lisp:nil
                       ((limit :initarg :|limit| :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor %get-models-request-limit :initform
                         common-lisp:nil)
                        (position :initarg :|position| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-models-request-position :initform
                         common-lisp:nil)
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-models-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'get-models-request 'make-get-models-request))
 (common-lisp:defun make-get-models-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key limit position rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'get-models-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-models-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-models-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-models-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-request-validator-request common-lisp:nil
                       ((request-validator-id :initarg :|requestValidatorId|
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         %get-request-validator-request-request-validator-id
                         :initform
                         (common-lisp:error ":requestvalidatorid is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-request-validator-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'get-request-validator-request
                    'make-get-request-validator-request))
 (common-lisp:defun make-get-request-validator-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key request-validator-id rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-request-validator-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-request-validator-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-request-validator-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-request-validator-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-request-validators-request common-lisp:nil
                       ((limit :initarg :|limit| :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor %get-request-validators-request-limit
                         :initform common-lisp:nil)
                        (position :initarg :|position| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-request-validators-request-position :initform
                         common-lisp:nil)
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-request-validators-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'get-request-validators-request
                    'make-get-request-validators-request))
 (common-lisp:defun make-get-request-validators-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key limit position rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-request-validators-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-request-validators-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-request-validators-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-request-validators-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-resource-request common-lisp:nil
                       ((embed :initarg :|embed| :type
                         (common-lisp:or list-of-string common-lisp:null)
                         :accessor %get-resource-request-embed :initform
                         common-lisp:nil)
                        (resource-id :initarg :|resourceId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-resource-request-resource-id :initform
                         (common-lisp:error ":resourceid is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-resource-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'get-resource-request 'make-get-resource-request))
 (common-lisp:defun make-get-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key embed resource-id rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'get-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-resources-request common-lisp:nil
                       ((embed :initarg :|embed| :type
                         (common-lisp:or list-of-string common-lisp:null)
                         :accessor %get-resources-request-embed :initform
                         common-lisp:nil)
                        (limit :initarg :|limit| :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor %get-resources-request-limit :initform
                         common-lisp:nil)
                        (position :initarg :|position| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-resources-request-position :initform
                         common-lisp:nil)
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-resources-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'get-resources-request 'make-get-resources-request))
 (common-lisp:defun make-get-resources-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key embed limit position rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'get-resources-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-resources-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-resources-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-resources-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-rest-api-request common-lisp:nil
                       ((rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-rest-api-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'get-rest-api-request 'make-get-rest-api-request))
 (common-lisp:defun make-get-rest-api-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'get-rest-api-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-rest-api-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-rest-api-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-rest-api-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-rest-apis-request common-lisp:nil
                       ((limit :initarg :|limit| :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor %get-rest-apis-request-limit :initform
                         common-lisp:nil)
                        (position :initarg :|position| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-rest-apis-request-position :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-rest-apis-request 'make-get-rest-apis-request))
 (common-lisp:defun make-get-rest-apis-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key limit position)
   (common-lisp:apply #'common-lisp:make-instance 'get-rest-apis-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-rest-apis-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-rest-apis-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-rest-apis-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-sdk-request common-lisp:nil
                       ((parameters :initarg :|parameters| :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor %get-sdk-request-parameters :initform
                         common-lisp:nil)
                        (sdk-type :initarg :|sdkType| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-sdk-request-sdk-type :initform
                         (common-lisp:error ":sdktype is required"))
                        (stage-name :initarg :|stageName| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-sdk-request-stage-name :initform
                         (common-lisp:error ":stagename is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-sdk-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export (common-lisp:list 'get-sdk-request 'make-get-sdk-request))
 (common-lisp:defun make-get-sdk-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key parameters sdk-type stage-name
                     rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'get-sdk-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-sdk-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-sdk-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-sdk-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-sdk-type-request common-lisp:nil
                       ((id :initarg :|id| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-sdk-type-request-id :initform
                         (common-lisp:error ":id is required"))))
 (common-lisp:export
  (common-lisp:list 'get-sdk-type-request 'make-get-sdk-type-request))
 (common-lisp:defun make-get-sdk-type-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key id)
   (common-lisp:apply #'common-lisp:make-instance 'get-sdk-type-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-sdk-type-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-sdk-type-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-sdk-type-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-sdk-types-request common-lisp:nil
                       ((limit :initarg :|limit| :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor %get-sdk-types-request-limit :initform
                         common-lisp:nil)
                        (position :initarg :|position| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-sdk-types-request-position :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-sdk-types-request 'make-get-sdk-types-request))
 (common-lisp:defun make-get-sdk-types-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key limit position)
   (common-lisp:apply #'common-lisp:make-instance 'get-sdk-types-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-sdk-types-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-sdk-types-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-sdk-types-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-stage-request common-lisp:nil
                       ((stage-name :initarg :|stageName| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-stage-request-stage-name :initform
                         (common-lisp:error ":stagename is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-stage-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'get-stage-request 'make-get-stage-request))
 (common-lisp:defun make-get-stage-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key stage-name rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'get-stage-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-stage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-stages-request common-lisp:nil
                       ((deployment-id :initarg :|deploymentId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-stages-request-deployment-id :initform
                         common-lisp:nil)
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-stages-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'get-stages-request 'make-get-stages-request))
 (common-lisp:defun make-get-stages-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key deployment-id rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'get-stages-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-stages-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-stages-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-stages-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-tags-request common-lisp:nil
                       ((limit :initarg :|limit| :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor %get-tags-request-limit :initform
                         common-lisp:nil)
                        (position :initarg :|position| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-tags-request-position :initform common-lisp:nil)
                        (resource-arn :initarg :|resourceArn| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-tags-request-resource-arn :initform
                         (common-lisp:error ":resourcearn is required"))))
 (common-lisp:export
  (common-lisp:list 'get-tags-request 'make-get-tags-request))
 (common-lisp:defun make-get-tags-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key limit position resource-arn)
   (common-lisp:apply #'common-lisp:make-instance 'get-tags-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-tags-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-tags-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-tags-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-usage-plan-key-request common-lisp:nil
                       ((key-id :initarg :|keyId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-usage-plan-key-request-key-id :initform
                         (common-lisp:error ":keyid is required"))
                        (usage-plan-id :initarg :|usagePlanId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-usage-plan-key-request-usage-plan-id :initform
                         (common-lisp:error ":usageplanid is required"))))
 (common-lisp:export
  (common-lisp:list 'get-usage-plan-key-request
                    'make-get-usage-plan-key-request))
 (common-lisp:defun make-get-usage-plan-key-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key key-id usage-plan-id)
   (common-lisp:apply #'common-lisp:make-instance 'get-usage-plan-key-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-plan-key-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-plan-key-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-plan-key-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-usage-plan-keys-request common-lisp:nil
                       ((name-query :initarg :|nameQuery| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-usage-plan-keys-request-name-query :initform
                         common-lisp:nil)
                        (limit :initarg :|limit| :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor %get-usage-plan-keys-request-limit :initform
                         common-lisp:nil)
                        (position :initarg :|position| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-usage-plan-keys-request-position :initform
                         common-lisp:nil)
                        (usage-plan-id :initarg :|usagePlanId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-usage-plan-keys-request-usage-plan-id :initform
                         (common-lisp:error ":usageplanid is required"))))
 (common-lisp:export
  (common-lisp:list 'get-usage-plan-keys-request
                    'make-get-usage-plan-keys-request))
 (common-lisp:defun make-get-usage-plan-keys-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key name-query limit position usage-plan-id)
   (common-lisp:apply #'common-lisp:make-instance 'get-usage-plan-keys-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-plan-keys-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-plan-keys-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-plan-keys-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-usage-plan-request common-lisp:nil
                       ((usage-plan-id :initarg :|usagePlanId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-usage-plan-request-usage-plan-id :initform
                         (common-lisp:error ":usageplanid is required"))))
 (common-lisp:export
  (common-lisp:list 'get-usage-plan-request 'make-get-usage-plan-request))
 (common-lisp:defun make-get-usage-plan-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key usage-plan-id)
   (common-lisp:apply #'common-lisp:make-instance 'get-usage-plan-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-plan-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-plan-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-plan-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-usage-plans-request common-lisp:nil
                       ((limit :initarg :|limit| :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor %get-usage-plans-request-limit :initform
                         common-lisp:nil)
                        (key-id :initarg :|keyId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-usage-plans-request-key-id :initform
                         common-lisp:nil)
                        (position :initarg :|position| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-usage-plans-request-position :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-usage-plans-request 'make-get-usage-plans-request))
 (common-lisp:defun make-get-usage-plans-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key limit key-id position)
   (common-lisp:apply #'common-lisp:make-instance 'get-usage-plans-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-plans-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-plans-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-plans-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-usage-request common-lisp:nil
                       ((limit :initarg :|limit| :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor %get-usage-request-limit :initform
                         common-lisp:nil)
                        (position :initarg :|position| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-usage-request-position :initform common-lisp:nil)
                        (end-date :initarg :|endDate| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-usage-request-end-date :initform
                         (common-lisp:error ":enddate is required"))
                        (start-date :initarg :|startDate| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-usage-request-start-date :initform
                         (common-lisp:error ":startdate is required"))
                        (key-id :initarg :|keyId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-usage-request-key-id :initform common-lisp:nil)
                        (usage-plan-id :initarg :|usagePlanId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-usage-request-usage-plan-id :initform
                         (common-lisp:error ":usageplanid is required"))))
 (common-lisp:export
  (common-lisp:list 'get-usage-request 'make-get-usage-request))
 (common-lisp:defun make-get-usage-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key limit position end-date start-date key-id
                     usage-plan-id)
   (common-lisp:apply #'common-lisp:make-instance 'get-usage-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-usage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-usage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-usage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-vpc-link-request common-lisp:nil
                       ((vpc-link-id :initarg :|vpcLinkId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-vpc-link-request-vpc-link-id :initform
                         (common-lisp:error ":vpclinkid is required"))))
 (common-lisp:export
  (common-lisp:list 'get-vpc-link-request 'make-get-vpc-link-request))
 (common-lisp:defun make-get-vpc-link-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key vpc-link-id)
   (common-lisp:apply #'common-lisp:make-instance 'get-vpc-link-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-vpc-link-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-vpc-link-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-vpc-link-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-vpc-links-request common-lisp:nil
                       ((limit :initarg :|limit| :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor %get-vpc-links-request-limit :initform
                         common-lisp:nil)
                        (position :initarg :|position| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-vpc-links-request-position :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-vpc-links-request 'make-get-vpc-links-request))
 (common-lisp:defun make-get-vpc-links-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key limit position)
   (common-lisp:apply #'common-lisp:make-instance 'get-vpc-links-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-vpc-links-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-vpc-links-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-vpc-links-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass import-api-keys-request common-lisp:nil
                       ((fail-on-warnings :initarg :|failOnWarnings| :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         %import-api-keys-request-fail-on-warnings :initform
                         common-lisp:nil)
                        (format :initarg :|format| :type
                         (common-lisp:or api-keys-format common-lisp:null)
                         :accessor %import-api-keys-request-format :initform
                         (common-lisp:error ":format is required"))
                        (body :initarg :|body| :type
                         (common-lisp:or blob common-lisp:null) :accessor
                         %import-api-keys-request-body :initform
                         (common-lisp:error ":body is required"))))
 (common-lisp:export
  (common-lisp:list 'import-api-keys-request 'make-import-api-keys-request))
 (common-lisp:defun make-import-api-keys-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key fail-on-warnings format body)
   (common-lisp:apply #'common-lisp:make-instance 'import-api-keys-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          import-api-keys-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          import-api-keys-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          import-api-keys-request))
   (com.inuoe.jzon:stringify
    (common-lisp:slot-value aws-sdk/generator/shape::input 'body))))
(common-lisp:progn
 (common-lisp:defclass import-documentation-parts-request common-lisp:nil
                       ((body :initarg :|body| :type
                         (common-lisp:or blob common-lisp:null) :accessor
                         %import-documentation-parts-request-body :initform
                         (common-lisp:error ":body is required"))
                        (fail-on-warnings :initarg :|failOnWarnings| :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         %import-documentation-parts-request-fail-on-warnings
                         :initform common-lisp:nil)
                        (mode :initarg :|mode| :type
                         (common-lisp:or put-mode common-lisp:null) :accessor
                         %import-documentation-parts-request-mode :initform
                         common-lisp:nil)
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %import-documentation-parts-request-rest-api-id
                         :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'import-documentation-parts-request
                    'make-import-documentation-parts-request))
 (common-lisp:defun make-import-documentation-parts-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key body fail-on-warnings mode rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'import-documentation-parts-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          import-documentation-parts-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          import-documentation-parts-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          import-documentation-parts-request))
   (com.inuoe.jzon:stringify
    (common-lisp:slot-value aws-sdk/generator/shape::input 'body))))
(common-lisp:progn
 (common-lisp:defclass import-rest-api-request common-lisp:nil
                       ((body :initarg :|body| :type
                         (common-lisp:or blob common-lisp:null) :accessor
                         %import-rest-api-request-body :initform
                         (common-lisp:error ":body is required"))
                        (parameters :initarg :|parameters| :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor %import-rest-api-request-parameters
                         :initform common-lisp:nil)
                        (fail-on-warnings :initarg :|failOnWarnings| :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         %import-rest-api-request-fail-on-warnings :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'import-rest-api-request 'make-import-rest-api-request))
 (common-lisp:defun make-import-rest-api-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key body parameters fail-on-warnings)
   (common-lisp:apply #'common-lisp:make-instance 'import-rest-api-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          import-rest-api-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          import-rest-api-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          import-rest-api-request))
   (com.inuoe.jzon:stringify
    (common-lisp:slot-value aws-sdk/generator/shape::input 'body))))
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass integration common-lisp:nil
                       ((tls-config :initarg :|tlsConfig| :type
                         (common-lisp:or tls-config common-lisp:null) :accessor
                         %integration-tls-config :initform common-lisp:nil)
                        (integration-responses :initarg :|integrationResponses|
                         :type
                         (common-lisp:or map-of-integration-response
                                         common-lisp:null)
                         :accessor %integration-integration-responses :initform
                         common-lisp:nil)
                        (cache-key-parameters :initarg :|cacheKeyParameters|
                         :type (common-lisp:or list-of-string common-lisp:null)
                         :accessor %integration-cache-key-parameters :initform
                         common-lisp:nil)
                        (cache-namespace :initarg :|cacheNamespace| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %integration-cache-namespace :initform
                         common-lisp:nil)
                        (timeout-in-millis :initarg :|timeoutInMillis| :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         %integration-timeout-in-millis :initform
                         common-lisp:nil)
                        (content-handling :initarg :|contentHandling| :type
                         (common-lisp:or content-handling-strategy
                                         common-lisp:null)
                         :accessor %integration-content-handling :initform
                         common-lisp:nil)
                        (passthrough-behavior :initarg :|passthroughBehavior|
                         :type (common-lisp:or string common-lisp:null)
                         :accessor %integration-passthrough-behavior :initform
                         common-lisp:nil)
                        (request-templates :initarg :|requestTemplates| :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor %integration-request-templates :initform
                         common-lisp:nil)
                        (request-parameters :initarg :|requestParameters| :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor %integration-request-parameters :initform
                         common-lisp:nil)
                        (credentials :initarg :|credentials| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %integration-credentials :initform common-lisp:nil)
                        (connection-id :initarg :|connectionId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %integration-connection-id :initform common-lisp:nil)
                        (connection-type :initarg :|connectionType| :type
                         (common-lisp:or connection-type common-lisp:null)
                         :accessor %integration-connection-type :initform
                         common-lisp:nil)
                        (uri :initarg :|uri| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %integration-uri :initform common-lisp:nil)
                        (http-method :initarg :|httpMethod| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %integration-http-method :initform common-lisp:nil)
                        (type :initarg :|type| :type
                         (common-lisp:or integration-type common-lisp:null)
                         :accessor %integration-type :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'integration 'make-integration))
 (common-lisp:defun make-integration
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tls-config integration-responses
                     cache-key-parameters cache-namespace timeout-in-millis
                     content-handling passthrough-behavior request-templates
                     request-parameters credentials connection-id
                     connection-type uri http-method type)
   (common-lisp:apply #'common-lisp:make-instance 'integration
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input integration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input integration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'http-method))
      (common-lisp:list
       (common-lisp:cons "httpMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'uri))
      (common-lisp:list
       (common-lisp:cons "uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-type))
      (common-lisp:list
       (common-lisp:cons "connectionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-id))
      (common-lisp:list
       (common-lisp:cons "connectionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'credentials))
      (common-lisp:list
       (common-lisp:cons "credentials"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-parameters))
      (common-lisp:list
       (common-lisp:cons "requestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-templates))
      (common-lisp:list
       (common-lisp:cons "requestTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'passthrough-behavior))
      (common-lisp:list
       (common-lisp:cons "passthroughBehavior"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-handling))
      (common-lisp:list
       (common-lisp:cons "contentHandling"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timeout-in-millis))
      (common-lisp:list
       (common-lisp:cons "timeoutInMillis"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-namespace))
      (common-lisp:list
       (common-lisp:cons "cacheNamespace"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-key-parameters))
      (common-lisp:list
       (common-lisp:cons "cacheKeyParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'integration-responses))
      (common-lisp:list
       (common-lisp:cons "integrationResponses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tls-config))
      (common-lisp:list
       (common-lisp:cons "tlsConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input integration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass integration-response common-lisp:nil
                       ((content-handling :initarg :|contentHandling| :type
                         (common-lisp:or content-handling-strategy
                                         common-lisp:null)
                         :accessor %integration-response-content-handling
                         :initform common-lisp:nil)
                        (response-templates :initarg :|responseTemplates| :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor %integration-response-response-templates
                         :initform common-lisp:nil)
                        (response-parameters :initarg :|responseParameters|
                         :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor %integration-response-response-parameters
                         :initform common-lisp:nil)
                        (selection-pattern :initarg :|selectionPattern| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %integration-response-selection-pattern :initform
                         common-lisp:nil)
                        (status-code :initarg :|statusCode| :type
                         (common-lisp:or status-code common-lisp:null)
                         :accessor %integration-response-status-code :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'integration-response 'make-integration-response))
 (common-lisp:defun make-integration-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key content-handling response-templates
                     response-parameters selection-pattern status-code)
   (common-lisp:apply #'common-lisp:make-instance 'integration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input integration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input integration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-code))
      (common-lisp:list
       (common-lisp:cons "statusCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'selection-pattern))
      (common-lisp:list
       (common-lisp:cons "selectionPattern"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "responseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-templates))
      (common-lisp:list
       (common-lisp:cons "responseTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-handling))
      (common-lisp:list
       (common-lisp:cons "contentHandling"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input integration-response))
   common-lisp:nil))
(common-lisp:deftype integration-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition limit-exceeded-exception
     (apigateway-error)
     ((retry-after-seconds :initarg :|retryAfterSeconds| :initform
       common-lisp:nil :reader limit-exceeded-exception-retry-after-seconds)
      (message :initarg :|message| :initform common-lisp:nil :reader
       limit-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception
                    'limit-exceeded-exception-retry-after-seconds
                    'limit-exceeded-exception-message)))
(common-lisp:progn
 (common-lisp:deftype list-of-arns ()
   '(trivial-types:proper-list provider-arn))
 (common-lisp:defun |make-list-of-arns|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list provider-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-api-key () '(trivial-types:proper-list api-key))
 (common-lisp:defun |make-list-of-api-key|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list api-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-api-stage ()
   '(trivial-types:proper-list api-stage))
 (common-lisp:defun |make-list-of-api-stage|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list api-stage))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-authorizer ()
   '(trivial-types:proper-list authorizer))
 (common-lisp:defun |make-list-of-authorizer|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list authorizer))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-base-path-mapping ()
   '(trivial-types:proper-list base-path-mapping))
 (common-lisp:defun |make-list-of-base-path-mapping|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list base-path-mapping))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-client-certificate ()
   '(trivial-types:proper-list client-certificate))
 (common-lisp:defun |make-list-of-client-certificate|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list client-certificate))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-deployment ()
   '(trivial-types:proper-list deployment))
 (common-lisp:defun |make-list-of-deployment|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list deployment))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-documentation-part ()
   '(trivial-types:proper-list documentation-part))
 (common-lisp:defun |make-list-of-documentation-part|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list documentation-part))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-documentation-version ()
   '(trivial-types:proper-list documentation-version))
 (common-lisp:defun |make-list-of-documentation-version|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list documentation-version))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-domain-name ()
   '(trivial-types:proper-list domain-name))
 (common-lisp:defun |make-list-of-domain-name|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list domain-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-endpoint-type ()
   '(trivial-types:proper-list endpoint-type))
 (common-lisp:defun |make-list-of-endpoint-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list endpoint-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-gateway-response ()
   '(trivial-types:proper-list gateway-response))
 (common-lisp:defun |make-list-of-gateway-response|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list gateway-response))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-long () '(trivial-types:proper-list long))
 (common-lisp:defun |make-list-of-long|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list long))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-model () '(trivial-types:proper-list model))
 (common-lisp:defun |make-list-of-model|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list model))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-patch-operation ()
   '(trivial-types:proper-list patch-operation))
 (common-lisp:defun |make-list-of-patch-operation|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list patch-operation))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-request-validator ()
   '(trivial-types:proper-list request-validator))
 (common-lisp:defun |make-list-of-request-validator|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list request-validator))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-resource ()
   '(trivial-types:proper-list resource))
 (common-lisp:defun |make-list-of-resource|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-rest-api ()
   '(trivial-types:proper-list rest-api))
 (common-lisp:defun |make-list-of-rest-api|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list rest-api))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-sdk-configuration-property ()
   '(trivial-types:proper-list sdk-configuration-property))
 (common-lisp:defun |make-list-of-sdk-configuration-property|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            sdk-configuration-property))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-sdk-type ()
   '(trivial-types:proper-list sdk-type))
 (common-lisp:defun |make-list-of-sdk-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list sdk-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-stage () '(trivial-types:proper-list stage))
 (common-lisp:defun |make-list-of-stage|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list stage))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-stage-keys ()
   '(trivial-types:proper-list stage-key))
 (common-lisp:defun |make-list-of-stage-keys|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list stage-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-string () '(trivial-types:proper-list string))
 (common-lisp:defun |make-list-of-string|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-usage ()
   '(trivial-types:proper-list list-of-long))
 (common-lisp:defun |make-list-of-usage|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list list-of-long))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-usage-plan ()
   '(trivial-types:proper-list usage-plan))
 (common-lisp:defun |make-list-of-usage-plan|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list usage-plan))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-usage-plan-key ()
   '(trivial-types:proper-list usage-plan-key))
 (common-lisp:defun |make-list-of-usage-plan-key|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list usage-plan-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-vpc-link ()
   '(trivial-types:proper-list vpc-link))
 (common-lisp:defun |make-list-of-vpc-link|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list vpc-link))
   aws-sdk/generator/shape::members))
(common-lisp:deftype location-status-type () 'common-lisp:string)
(common-lisp:deftype long () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype map-of-api-stage-throttle-settings ()
   'common-lisp:hash-table)
 (common-lisp:defun |make-map-of-api-stage-throttle-settings|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-integration-response () 'common-lisp:hash-table)
 (common-lisp:defun |make-map-of-integration-response|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-key-usages () 'common-lisp:hash-table)
 (common-lisp:defun |make-map-of-key-usages|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-method () 'common-lisp:hash-table)
 (common-lisp:defun |make-map-of-method| (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-method-response () 'common-lisp:hash-table)
 (common-lisp:defun |make-map-of-method-response|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-method-settings () 'common-lisp:hash-table)
 (common-lisp:defun |make-map-of-method-settings|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-method-snapshot () 'common-lisp:hash-table)
 (common-lisp:defun |make-map-of-method-snapshot|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-string-to-boolean () 'common-lisp:hash-table)
 (common-lisp:defun |make-map-of-string-to-boolean|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-string-to-list () 'common-lisp:hash-table)
 (common-lisp:defun |make-map-of-string-to-list|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-string-to-string () 'common-lisp:hash-table)
 (common-lisp:defun |make-map-of-string-to-string|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass method common-lisp:nil
                       ((authorization-scopes :initarg :|authorizationScopes|
                         :type (common-lisp:or list-of-string common-lisp:null)
                         :accessor %method-authorization-scopes :initform
                         common-lisp:nil)
                        (method-integration :initarg :|methodIntegration| :type
                         (common-lisp:or integration common-lisp:null)
                         :accessor %method-method-integration :initform
                         common-lisp:nil)
                        (method-responses :initarg :|methodResponses| :type
                         (common-lisp:or map-of-method-response
                                         common-lisp:null)
                         :accessor %method-method-responses :initform
                         common-lisp:nil)
                        (request-models :initarg :|requestModels| :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor %method-request-models :initform
                         common-lisp:nil)
                        (request-parameters :initarg :|requestParameters| :type
                         (common-lisp:or map-of-string-to-boolean
                                         common-lisp:null)
                         :accessor %method-request-parameters :initform
                         common-lisp:nil)
                        (operation-name :initarg :|operationName| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %method-operation-name :initform common-lisp:nil)
                        (request-validator-id :initarg :|requestValidatorId|
                         :type (common-lisp:or string common-lisp:null)
                         :accessor %method-request-validator-id :initform
                         common-lisp:nil)
                        (api-key-required :initarg :|apiKeyRequired| :type
                         (common-lisp:or nullable-boolean common-lisp:null)
                         :accessor %method-api-key-required :initform
                         common-lisp:nil)
                        (authorizer-id :initarg :|authorizerId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %method-authorizer-id :initform common-lisp:nil)
                        (authorization-type :initarg :|authorizationType| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %method-authorization-type :initform common-lisp:nil)
                        (http-method :initarg :|httpMethod| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %method-http-method :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'method 'make-method))
 (common-lisp:defun make-method
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key authorization-scopes method-integration
                     method-responses request-models request-parameters
                     operation-name request-validator-id api-key-required
                     authorizer-id authorization-type http-method)
   (common-lisp:apply #'common-lisp:make-instance 'method
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input method))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input method))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'http-method))
      (common-lisp:list
       (common-lisp:cons "httpMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization-type))
      (common-lisp:list
       (common-lisp:cons "authorizationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-id))
      (common-lisp:list
       (common-lisp:cons "authorizerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key-required))
      (common-lisp:list
       (common-lisp:cons "apiKeyRequired"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'request-validator-id))
      (common-lisp:list
       (common-lisp:cons "requestValidatorId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation-name))
      (common-lisp:list
       (common-lisp:cons "operationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-parameters))
      (common-lisp:list
       (common-lisp:cons "requestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-models))
      (common-lisp:list
       (common-lisp:cons "requestModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'method-responses))
      (common-lisp:list
       (common-lisp:cons "methodResponses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'method-integration))
      (common-lisp:list
       (common-lisp:cons "methodIntegration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorization-scopes))
      (common-lisp:list
       (common-lisp:cons "authorizationScopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input method))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass method-response common-lisp:nil
                       ((response-models :initarg :|responseModels| :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor %method-response-response-models :initform
                         common-lisp:nil)
                        (response-parameters :initarg :|responseParameters|
                         :type
                         (common-lisp:or map-of-string-to-boolean
                                         common-lisp:null)
                         :accessor %method-response-response-parameters
                         :initform common-lisp:nil)
                        (status-code :initarg :|statusCode| :type
                         (common-lisp:or status-code common-lisp:null)
                         :accessor %method-response-status-code :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'method-response 'make-method-response))
 (common-lisp:defun make-method-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key response-models response-parameters
                     status-code)
   (common-lisp:apply #'common-lisp:make-instance 'method-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input method-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input method-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-code))
      (common-lisp:list
       (common-lisp:cons "statusCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "responseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-models))
      (common-lisp:list
       (common-lisp:cons "responseModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input method-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass method-setting common-lisp:nil
                       ((unauthorized-cache-control-header-strategy :initarg
                         :|unauthorizedCacheControlHeaderStrategy| :type
                         (common-lisp:or
                          unauthorized-cache-control-header-strategy
                          common-lisp:null)
                         :accessor
                         %method-setting-unauthorized-cache-control-header-strategy
                         :initform common-lisp:nil)
                        (require-authorization-for-cache-control :initarg
                         :|requireAuthorizationForCacheControl| :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         %method-setting-require-authorization-for-cache-control
                         :initform common-lisp:nil)
                        (cache-data-encrypted :initarg :|cacheDataEncrypted|
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor %method-setting-cache-data-encrypted
                         :initform common-lisp:nil)
                        (cache-ttl-in-seconds :initarg :|cacheTtlInSeconds|
                         :type (common-lisp:or integer common-lisp:null)
                         :accessor %method-setting-cache-ttl-in-seconds
                         :initform common-lisp:nil)
                        (caching-enabled :initarg :|cachingEnabled| :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         %method-setting-caching-enabled :initform
                         common-lisp:nil)
                        (throttling-rate-limit :initarg :|throttlingRateLimit|
                         :type (common-lisp:or double common-lisp:null)
                         :accessor %method-setting-throttling-rate-limit
                         :initform common-lisp:nil)
                        (throttling-burst-limit :initarg
                         :|throttlingBurstLimit| :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         %method-setting-throttling-burst-limit :initform
                         common-lisp:nil)
                        (data-trace-enabled :initarg :|dataTraceEnabled| :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         %method-setting-data-trace-enabled :initform
                         common-lisp:nil)
                        (logging-level :initarg :|loggingLevel| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %method-setting-logging-level :initform
                         common-lisp:nil)
                        (metrics-enabled :initarg :|metricsEnabled| :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         %method-setting-metrics-enabled :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'method-setting 'make-method-setting))
 (common-lisp:defun make-method-setting
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key
                     unauthorized-cache-control-header-strategy
                     require-authorization-for-cache-control
                     cache-data-encrypted cache-ttl-in-seconds caching-enabled
                     throttling-rate-limit throttling-burst-limit
                     data-trace-enabled logging-level metrics-enabled)
   (common-lisp:apply #'common-lisp:make-instance 'method-setting
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input method-setting))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input method-setting))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metrics-enabled))
      (common-lisp:list
       (common-lisp:cons "metricsEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'logging-level))
      (common-lisp:list
       (common-lisp:cons "loggingLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-trace-enabled))
      (common-lisp:list
       (common-lisp:cons "dataTraceEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'throttling-burst-limit))
      (common-lisp:list
       (common-lisp:cons "throttlingBurstLimit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'throttling-rate-limit))
      (common-lisp:list
       (common-lisp:cons "throttlingRateLimit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'caching-enabled))
      (common-lisp:list
       (common-lisp:cons "cachingEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-ttl-in-seconds))
      (common-lisp:list
       (common-lisp:cons "cacheTtlInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-data-encrypted))
      (common-lisp:list
       (common-lisp:cons "cacheDataEncrypted"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'require-authorization-for-cache-control))
      (common-lisp:list
       (common-lisp:cons "requireAuthorizationForCacheControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'unauthorized-cache-control-header-strategy))
      (common-lisp:list
       (common-lisp:cons "unauthorizedCacheControlHeaderStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input method-setting))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass method-snapshot common-lisp:nil
                       ((api-key-required :initarg :|apiKeyRequired| :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         %method-snapshot-api-key-required :initform
                         common-lisp:nil)
                        (authorization-type :initarg :|authorizationType| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %method-snapshot-authorization-type :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'method-snapshot 'make-method-snapshot))
 (common-lisp:defun make-method-snapshot
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key api-key-required authorization-type)
   (common-lisp:apply #'common-lisp:make-instance 'method-snapshot
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input method-snapshot))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input method-snapshot))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization-type))
      (common-lisp:list
       (common-lisp:cons "authorizationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key-required))
      (common-lisp:list
       (common-lisp:cons "apiKeyRequired"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input method-snapshot))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass model common-lisp:nil
                       ((content-type :initarg :|contentType| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %model-content-type :initform common-lisp:nil)
                        (schema :initarg :|schema| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %model-schema :initform common-lisp:nil)
                        (description :initarg :|description| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %model-description :initform common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %model-name :initform common-lisp:nil)
                        (id :initarg :|id| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %model-id :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'model 'make-model))
 (common-lisp:defun make-model
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key content-type schema description name id)
   (common-lisp:apply #'common-lisp:make-instance 'model
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input model))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input model))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schema))
      (common-lisp:list
       (common-lisp:cons "schema"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-type))
      (common-lisp:list
       (common-lisp:cons "contentType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input model))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass models common-lisp:nil
                       ((items :initarg :|items| :type
                         (common-lisp:or list-of-model common-lisp:null)
                         :accessor %models-items :initform common-lisp:nil)
                        (position :initarg :|position| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %models-position :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'models 'make-models))
 (common-lisp:defun make-models
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key items position)
   (common-lisp:apply #'common-lisp:make-instance 'models
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input models))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input models))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input models))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass mutual-tls-authentication common-lisp:nil
                       ((truststore-warnings :initarg :|truststoreWarnings|
                         :type (common-lisp:or list-of-string common-lisp:null)
                         :accessor
                         %mutual-tls-authentication-truststore-warnings
                         :initform common-lisp:nil)
                        (truststore-version :initarg :|truststoreVersion| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %mutual-tls-authentication-truststore-version
                         :initform common-lisp:nil)
                        (truststore-uri :initarg :|truststoreUri| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %mutual-tls-authentication-truststore-uri :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'mutual-tls-authentication
                    'make-mutual-tls-authentication))
 (common-lisp:defun make-mutual-tls-authentication
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key truststore-warnings truststore-version
                     truststore-uri)
   (common-lisp:apply #'common-lisp:make-instance 'mutual-tls-authentication
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          mutual-tls-authentication))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          mutual-tls-authentication))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'truststore-uri))
      (common-lisp:list
       (common-lisp:cons "truststoreUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'truststore-version))
      (common-lisp:list
       (common-lisp:cons "truststoreVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'truststore-warnings))
      (common-lisp:list
       (common-lisp:cons "truststoreWarnings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          mutual-tls-authentication))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass mutual-tls-authentication-input common-lisp:nil
                       ((truststore-version :initarg :|truststoreVersion| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %mutual-tls-authentication-input-truststore-version
                         :initform common-lisp:nil)
                        (truststore-uri :initarg :|truststoreUri| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %mutual-tls-authentication-input-truststore-uri
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'mutual-tls-authentication-input
                    'make-mutual-tls-authentication-input))
 (common-lisp:defun make-mutual-tls-authentication-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key truststore-version truststore-uri)
   (common-lisp:apply #'common-lisp:make-instance
                      'mutual-tls-authentication-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          mutual-tls-authentication-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          mutual-tls-authentication-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'truststore-uri))
      (common-lisp:list
       (common-lisp:cons "truststoreUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'truststore-version))
      (common-lisp:list
       (common-lisp:cons "truststoreVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          mutual-tls-authentication-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition not-found-exception
     (apigateway-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'not-found-exception 'not-found-exception-message)))
(common-lisp:deftype nullable-boolean () 'common-lisp:boolean)
(common-lisp:deftype nullable-integer () 'common-lisp:integer)
(common-lisp:deftype op () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass patch-operation common-lisp:nil
                       ((from :initarg :|from| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %patch-operation-from :initform common-lisp:nil)
                        (value :initarg :|value| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %patch-operation-value :initform common-lisp:nil)
                        (path :initarg :|path| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %patch-operation-path :initform common-lisp:nil)
                        (op :initarg :|op| :type
                         (common-lisp:or op common-lisp:null) :accessor
                         %patch-operation-op :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'patch-operation 'make-patch-operation))
 (common-lisp:defun make-patch-operation
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key from value path op)
   (common-lisp:apply #'common-lisp:make-instance 'patch-operation
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input patch-operation))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input patch-operation))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'op))
      (common-lisp:list
       (common-lisp:cons "op"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'path))
      (common-lisp:list
       (common-lisp:cons "path"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from))
      (common-lisp:list
       (common-lisp:cons "from"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input patch-operation))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype path-to-map-of-method-snapshot ()
   'common-lisp:hash-table)
 (common-lisp:defun |make-path-to-map-of-method-snapshot|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype provider-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass put-gateway-response-request common-lisp:nil
                       ((response-templates :initarg :|responseTemplates| :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor
                         %put-gateway-response-request-response-templates
                         :initform common-lisp:nil)
                        (response-parameters :initarg :|responseParameters|
                         :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor
                         %put-gateway-response-request-response-parameters
                         :initform common-lisp:nil)
                        (status-code :initarg :|statusCode| :type
                         (common-lisp:or status-code common-lisp:null)
                         :accessor %put-gateway-response-request-status-code
                         :initform common-lisp:nil)
                        (response-type :initarg :|responseType| :type
                         (common-lisp:or gateway-response-type
                                         common-lisp:null)
                         :accessor %put-gateway-response-request-response-type
                         :initform
                         (common-lisp:error ":responsetype is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %put-gateway-response-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'put-gateway-response-request
                    'make-put-gateway-response-request))
 (common-lisp:defun make-put-gateway-response-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key response-templates response-parameters
                     status-code response-type rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'put-gateway-response-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-gateway-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-gateway-response-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-code))
      (common-lisp:list
       (common-lisp:cons "statusCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "responseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-templates))
      (common-lisp:list
       (common-lisp:cons "responseTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-gateway-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-integration-request common-lisp:nil
                       ((tls-config :initarg :|tlsConfig| :type
                         (common-lisp:or tls-config common-lisp:null) :accessor
                         %put-integration-request-tls-config :initform
                         common-lisp:nil)
                        (timeout-in-millis :initarg :|timeoutInMillis| :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor %put-integration-request-timeout-in-millis
                         :initform common-lisp:nil)
                        (content-handling :initarg :|contentHandling| :type
                         (common-lisp:or content-handling-strategy
                                         common-lisp:null)
                         :accessor %put-integration-request-content-handling
                         :initform common-lisp:nil)
                        (cache-key-parameters :initarg :|cacheKeyParameters|
                         :type (common-lisp:or list-of-string common-lisp:null)
                         :accessor
                         %put-integration-request-cache-key-parameters
                         :initform common-lisp:nil)
                        (cache-namespace :initarg :|cacheNamespace| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %put-integration-request-cache-namespace :initform
                         common-lisp:nil)
                        (passthrough-behavior :initarg :|passthroughBehavior|
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         %put-integration-request-passthrough-behavior
                         :initform common-lisp:nil)
                        (request-templates :initarg :|requestTemplates| :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor %put-integration-request-request-templates
                         :initform common-lisp:nil)
                        (request-parameters :initarg :|requestParameters| :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor %put-integration-request-request-parameters
                         :initform common-lisp:nil)
                        (credentials :initarg :|credentials| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %put-integration-request-credentials :initform
                         common-lisp:nil)
                        (connection-id :initarg :|connectionId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %put-integration-request-connection-id :initform
                         common-lisp:nil)
                        (connection-type :initarg :|connectionType| :type
                         (common-lisp:or connection-type common-lisp:null)
                         :accessor %put-integration-request-connection-type
                         :initform common-lisp:nil)
                        (uri :initarg :|uri| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %put-integration-request-uri :initform
                         common-lisp:nil)
                        (integration-http-method :initarg
                         :|integrationHttpMethod| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %put-integration-request-integration-http-method
                         :initform common-lisp:nil)
                        (type :initarg :|type| :type
                         (common-lisp:or integration-type common-lisp:null)
                         :accessor %put-integration-request-type :initform
                         (common-lisp:error ":type is required"))
                        (http-method :initarg :|httpMethod| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %put-integration-request-http-method :initform
                         (common-lisp:error ":httpmethod is required"))
                        (resource-id :initarg :|resourceId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %put-integration-request-resource-id :initform
                         (common-lisp:error ":resourceid is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %put-integration-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'put-integration-request 'make-put-integration-request))
 (common-lisp:defun make-put-integration-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tls-config timeout-in-millis
                     content-handling cache-key-parameters cache-namespace
                     passthrough-behavior request-templates request-parameters
                     credentials connection-id connection-type uri
                     integration-http-method type http-method resource-id
                     rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'put-integration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-integration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'integration-http-method))
      (common-lisp:list
       (common-lisp:cons "integrationHttpMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'uri))
      (common-lisp:list
       (common-lisp:cons "uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-type))
      (common-lisp:list
       (common-lisp:cons "connectionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-id))
      (common-lisp:list
       (common-lisp:cons "connectionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'credentials))
      (common-lisp:list
       (common-lisp:cons "credentials"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-parameters))
      (common-lisp:list
       (common-lisp:cons "requestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-templates))
      (common-lisp:list
       (common-lisp:cons "requestTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'passthrough-behavior))
      (common-lisp:list
       (common-lisp:cons "passthroughBehavior"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-namespace))
      (common-lisp:list
       (common-lisp:cons "cacheNamespace"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-key-parameters))
      (common-lisp:list
       (common-lisp:cons "cacheKeyParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-handling))
      (common-lisp:list
       (common-lisp:cons "contentHandling"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timeout-in-millis))
      (common-lisp:list
       (common-lisp:cons "timeoutInMillis"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tls-config))
      (common-lisp:list
       (common-lisp:cons "tlsConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-integration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-integration-response-request common-lisp:nil
                       ((content-handling :initarg :|contentHandling| :type
                         (common-lisp:or content-handling-strategy
                                         common-lisp:null)
                         :accessor
                         %put-integration-response-request-content-handling
                         :initform common-lisp:nil)
                        (response-templates :initarg :|responseTemplates| :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor
                         %put-integration-response-request-response-templates
                         :initform common-lisp:nil)
                        (response-parameters :initarg :|responseParameters|
                         :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor
                         %put-integration-response-request-response-parameters
                         :initform common-lisp:nil)
                        (selection-pattern :initarg :|selectionPattern| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %put-integration-response-request-selection-pattern
                         :initform common-lisp:nil)
                        (status-code :initarg :|statusCode| :type
                         (common-lisp:or status-code common-lisp:null)
                         :accessor
                         %put-integration-response-request-status-code
                         :initform
                         (common-lisp:error ":statuscode is required"))
                        (http-method :initarg :|httpMethod| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %put-integration-response-request-http-method
                         :initform
                         (common-lisp:error ":httpmethod is required"))
                        (resource-id :initarg :|resourceId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %put-integration-response-request-resource-id
                         :initform
                         (common-lisp:error ":resourceid is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %put-integration-response-request-rest-api-id
                         :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'put-integration-response-request
                    'make-put-integration-response-request))
 (common-lisp:defun make-put-integration-response-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key content-handling response-templates
                     response-parameters selection-pattern status-code
                     http-method resource-id rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-integration-response-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-integration-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-integration-response-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'selection-pattern))
      (common-lisp:list
       (common-lisp:cons "selectionPattern"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "responseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-templates))
      (common-lisp:list
       (common-lisp:cons "responseTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-handling))
      (common-lisp:list
       (common-lisp:cons "contentHandling"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-integration-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-method-request common-lisp:nil
                       ((authorization-scopes :initarg :|authorizationScopes|
                         :type (common-lisp:or list-of-string common-lisp:null)
                         :accessor %put-method-request-authorization-scopes
                         :initform common-lisp:nil)
                        (request-validator-id :initarg :|requestValidatorId|
                         :type (common-lisp:or string common-lisp:null)
                         :accessor %put-method-request-request-validator-id
                         :initform common-lisp:nil)
                        (request-models :initarg :|requestModels| :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor %put-method-request-request-models :initform
                         common-lisp:nil)
                        (request-parameters :initarg :|requestParameters| :type
                         (common-lisp:or map-of-string-to-boolean
                                         common-lisp:null)
                         :accessor %put-method-request-request-parameters
                         :initform common-lisp:nil)
                        (operation-name :initarg :|operationName| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %put-method-request-operation-name :initform
                         common-lisp:nil)
                        (api-key-required :initarg :|apiKeyRequired| :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         %put-method-request-api-key-required :initform
                         common-lisp:nil)
                        (authorizer-id :initarg :|authorizerId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %put-method-request-authorizer-id :initform
                         common-lisp:nil)
                        (authorization-type :initarg :|authorizationType| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %put-method-request-authorization-type :initform
                         (common-lisp:error ":authorizationtype is required"))
                        (http-method :initarg :|httpMethod| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %put-method-request-http-method :initform
                         (common-lisp:error ":httpmethod is required"))
                        (resource-id :initarg :|resourceId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %put-method-request-resource-id :initform
                         (common-lisp:error ":resourceid is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %put-method-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'put-method-request 'make-put-method-request))
 (common-lisp:defun make-put-method-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key authorization-scopes request-validator-id
                     request-models request-parameters operation-name
                     api-key-required authorizer-id authorization-type
                     http-method resource-id rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'put-method-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input put-method-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input put-method-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization-type))
      (common-lisp:list
       (common-lisp:cons "authorizationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-id))
      (common-lisp:list
       (common-lisp:cons "authorizerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key-required))
      (common-lisp:list
       (common-lisp:cons "apiKeyRequired"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation-name))
      (common-lisp:list
       (common-lisp:cons "operationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-parameters))
      (common-lisp:list
       (common-lisp:cons "requestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-models))
      (common-lisp:list
       (common-lisp:cons "requestModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'request-validator-id))
      (common-lisp:list
       (common-lisp:cons "requestValidatorId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorization-scopes))
      (common-lisp:list
       (common-lisp:cons "authorizationScopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input put-method-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-method-response-request common-lisp:nil
                       ((response-models :initarg :|responseModels| :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor %put-method-response-request-response-models
                         :initform common-lisp:nil)
                        (response-parameters :initarg :|responseParameters|
                         :type
                         (common-lisp:or map-of-string-to-boolean
                                         common-lisp:null)
                         :accessor
                         %put-method-response-request-response-parameters
                         :initform common-lisp:nil)
                        (status-code :initarg :|statusCode| :type
                         (common-lisp:or status-code common-lisp:null)
                         :accessor %put-method-response-request-status-code
                         :initform
                         (common-lisp:error ":statuscode is required"))
                        (http-method :initarg :|httpMethod| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %put-method-response-request-http-method :initform
                         (common-lisp:error ":httpmethod is required"))
                        (resource-id :initarg :|resourceId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %put-method-response-request-resource-id :initform
                         (common-lisp:error ":resourceid is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %put-method-response-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'put-method-response-request
                    'make-put-method-response-request))
 (common-lisp:defun make-put-method-response-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key response-models response-parameters
                     status-code http-method resource-id rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'put-method-response-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-method-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-method-response-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "responseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-models))
      (common-lisp:list
       (common-lisp:cons "responseModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-method-response-request))
   common-lisp:nil))
(common-lisp:deftype put-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass put-rest-api-request common-lisp:nil
                       ((body :initarg :|body| :type
                         (common-lisp:or blob common-lisp:null) :accessor
                         %put-rest-api-request-body :initform
                         (common-lisp:error ":body is required"))
                        (parameters :initarg :|parameters| :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor %put-rest-api-request-parameters :initform
                         common-lisp:nil)
                        (fail-on-warnings :initarg :|failOnWarnings| :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         %put-rest-api-request-fail-on-warnings :initform
                         common-lisp:nil)
                        (mode :initarg :|mode| :type
                         (common-lisp:or put-mode common-lisp:null) :accessor
                         %put-rest-api-request-mode :initform common-lisp:nil)
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %put-rest-api-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'put-rest-api-request 'make-put-rest-api-request))
 (common-lisp:defun make-put-rest-api-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key body parameters fail-on-warnings mode
                     rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'put-rest-api-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input put-rest-api-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input put-rest-api-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input put-rest-api-request))
   (com.inuoe.jzon:stringify
    (common-lisp:slot-value aws-sdk/generator/shape::input 'body))))
(common-lisp:deftype quota-period-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass quota-settings common-lisp:nil
                       ((period :initarg :|period| :type
                         (common-lisp:or quota-period-type common-lisp:null)
                         :accessor %quota-settings-period :initform
                         common-lisp:nil)
                        (offset :initarg :|offset| :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         %quota-settings-offset :initform common-lisp:nil)
                        (limit :initarg :|limit| :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         %quota-settings-limit :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'quota-settings 'make-quota-settings))
 (common-lisp:defun make-quota-settings
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key period offset limit)
   (common-lisp:apply #'common-lisp:make-instance 'quota-settings
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input quota-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input quota-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit))
      (common-lisp:list
       (common-lisp:cons "limit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'offset))
      (common-lisp:list
       (common-lisp:cons "offset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'period))
      (common-lisp:list
       (common-lisp:cons "period"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input quota-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass request-validator common-lisp:nil
                       ((validate-request-parameters :initarg
                         :|validateRequestParameters| :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         %request-validator-validate-request-parameters
                         :initform common-lisp:nil)
                        (validate-request-body :initarg :|validateRequestBody|
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor %request-validator-validate-request-body
                         :initform common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %request-validator-name :initform common-lisp:nil)
                        (id :initarg :|id| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %request-validator-id :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'request-validator 'make-request-validator))
 (common-lisp:defun make-request-validator
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key validate-request-parameters
                     validate-request-body name id)
   (common-lisp:apply #'common-lisp:make-instance 'request-validator
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input request-validator))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input request-validator))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'validate-request-body))
      (common-lisp:list
       (common-lisp:cons "validateRequestBody"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'validate-request-parameters))
      (common-lisp:list
       (common-lisp:cons "validateRequestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input request-validator))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass request-validators common-lisp:nil
                       ((items :initarg :|items| :type
                         (common-lisp:or list-of-request-validator
                                         common-lisp:null)
                         :accessor %request-validators-items :initform
                         common-lisp:nil)
                        (position :initarg :|position| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %request-validators-position :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'request-validators 'make-request-validators))
 (common-lisp:defun make-request-validators
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key items position)
   (common-lisp:apply #'common-lisp:make-instance 'request-validators
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input request-validators))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input request-validators))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input request-validators))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass resource common-lisp:nil
                       ((resource-methods :initarg :|resourceMethods| :type
                         (common-lisp:or map-of-method common-lisp:null)
                         :accessor %resource-resource-methods :initform
                         common-lisp:nil)
                        (path :initarg :|path| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %resource-path :initform common-lisp:nil)
                        (path-part :initarg :|pathPart| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %resource-path-part :initform common-lisp:nil)
                        (parent-id :initarg :|parentId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %resource-parent-id :initform common-lisp:nil)
                        (id :initarg :|id| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %resource-id :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'resource 'make-resource))
 (common-lisp:defun make-resource
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-methods path path-part parent-id
                     id)
   (common-lisp:apply #'common-lisp:make-instance 'resource
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input resource))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input resource))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'parent-id))
      (common-lisp:list
       (common-lisp:cons "parentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'path-part))
      (common-lisp:list
       (common-lisp:cons "pathPart"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'path))
      (common-lisp:list
       (common-lisp:cons "path"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-methods))
      (common-lisp:list
       (common-lisp:cons "resourceMethods"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input resource))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass resources common-lisp:nil
                       ((items :initarg :|items| :type
                         (common-lisp:or list-of-resource common-lisp:null)
                         :accessor %resources-items :initform common-lisp:nil)
                        (position :initarg :|position| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %resources-position :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'resources 'make-resources))
 (common-lisp:defun make-resources
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key items position)
   (common-lisp:apply #'common-lisp:make-instance 'resources
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input resources))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input resources))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input resources))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass rest-api common-lisp:nil
                       ((disable-execute-api-endpoint :initarg
                         :|disableExecuteApiEndpoint| :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         %rest-api-disable-execute-api-endpoint :initform
                         common-lisp:nil)
                        (tags :initarg :|tags| :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor %rest-api-tags :initform common-lisp:nil)
                        (policy :initarg :|policy| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %rest-api-policy :initform common-lisp:nil)
                        (endpoint-configuration :initarg
                         :|endpointConfiguration| :type
                         (common-lisp:or endpoint-configuration
                                         common-lisp:null)
                         :accessor %rest-api-endpoint-configuration :initform
                         common-lisp:nil)
                        (api-key-source :initarg :|apiKeySource| :type
                         (common-lisp:or api-key-source-type common-lisp:null)
                         :accessor %rest-api-api-key-source :initform
                         common-lisp:nil)
                        (minimum-compression-size :initarg
                         :|minimumCompressionSize| :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor %rest-api-minimum-compression-size :initform
                         common-lisp:nil)
                        (binary-media-types :initarg :|binaryMediaTypes| :type
                         (common-lisp:or list-of-string common-lisp:null)
                         :accessor %rest-api-binary-media-types :initform
                         common-lisp:nil)
                        (warnings :initarg :|warnings| :type
                         (common-lisp:or list-of-string common-lisp:null)
                         :accessor %rest-api-warnings :initform
                         common-lisp:nil)
                        (version :initarg :|version| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %rest-api-version :initform common-lisp:nil)
                        (created-date :initarg :|createdDate| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %rest-api-created-date :initform common-lisp:nil)
                        (description :initarg :|description| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %rest-api-description :initform common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %rest-api-name :initform common-lisp:nil)
                        (id :initarg :|id| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %rest-api-id :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'rest-api 'make-rest-api))
 (common-lisp:defun make-rest-api
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key disable-execute-api-endpoint tags policy
                     endpoint-configuration api-key-source
                     minimum-compression-size binary-media-types warnings
                     version created-date description name id)
   (common-lisp:apply #'common-lisp:make-instance 'rest-api
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input rest-api))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input rest-api))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warnings))
      (common-lisp:list
       (common-lisp:cons "warnings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'binary-media-types))
      (common-lisp:list
       (common-lisp:cons "binaryMediaTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'minimum-compression-size))
      (common-lisp:list
       (common-lisp:cons "minimumCompressionSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key-source))
      (common-lisp:list
       (common-lisp:cons "apiKeySource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'endpoint-configuration))
      (common-lisp:list
       (common-lisp:cons "endpointConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-execute-api-endpoint))
      (common-lisp:list
       (common-lisp:cons "disableExecuteApiEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input rest-api))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass rest-apis common-lisp:nil
                       ((items :initarg :|items| :type
                         (common-lisp:or list-of-rest-api common-lisp:null)
                         :accessor %rest-apis-items :initform common-lisp:nil)
                        (position :initarg :|position| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %rest-apis-position :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'rest-apis 'make-rest-apis))
 (common-lisp:defun make-rest-apis
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key items position)
   (common-lisp:apply #'common-lisp:make-instance 'rest-apis
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input rest-apis))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input rest-apis))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input rest-apis))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass sdk-configuration-property common-lisp:nil
                       ((default-value :initarg :|defaultValue| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %sdk-configuration-property-default-value :initform
                         common-lisp:nil)
                        (required :initarg :|required| :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         %sdk-configuration-property-required :initform
                         common-lisp:nil)
                        (description :initarg :|description| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %sdk-configuration-property-description :initform
                         common-lisp:nil)
                        (friendly-name :initarg :|friendlyName| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %sdk-configuration-property-friendly-name :initform
                         common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %sdk-configuration-property-name :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'sdk-configuration-property
                    'make-sdk-configuration-property))
 (common-lisp:defun make-sdk-configuration-property
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key default-value required description
                     friendly-name name)
   (common-lisp:apply #'common-lisp:make-instance 'sdk-configuration-property
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sdk-configuration-property))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sdk-configuration-property))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'friendly-name))
      (common-lisp:list
       (common-lisp:cons "friendlyName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'required))
      (common-lisp:list
       (common-lisp:cons "required"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'default-value))
      (common-lisp:list
       (common-lisp:cons "defaultValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sdk-configuration-property))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass sdk-response common-lisp:nil
                       ((body :initarg :|body| :type
                         (common-lisp:or blob common-lisp:null) :accessor
                         %sdk-response-body :initform common-lisp:nil)
                        (content-disposition :initarg :|contentDisposition|
                         :type (common-lisp:or string common-lisp:null)
                         :accessor %sdk-response-content-disposition :initform
                         common-lisp:nil)
                        (content-type :initarg :|contentType| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %sdk-response-content-type :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'sdk-response 'make-sdk-response))
 (common-lisp:defun make-sdk-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key body content-disposition content-type)
   (common-lisp:apply #'common-lisp:make-instance 'sdk-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input sdk-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-type))
      (common-lisp:cons "Content-Type" aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-disposition))
      (common-lisp:cons "Content-Disposition"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input sdk-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input sdk-response))
   (com.inuoe.jzon:stringify
    (common-lisp:slot-value aws-sdk/generator/shape::input 'body))))
(common-lisp:progn
 (common-lisp:defclass sdk-type common-lisp:nil
                       ((configuration-properties :initarg
                         :|configurationProperties| :type
                         (common-lisp:or list-of-sdk-configuration-property
                                         common-lisp:null)
                         :accessor %sdk-type-configuration-properties :initform
                         common-lisp:nil)
                        (description :initarg :|description| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %sdk-type-description :initform common-lisp:nil)
                        (friendly-name :initarg :|friendlyName| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %sdk-type-friendly-name :initform common-lisp:nil)
                        (id :initarg :|id| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %sdk-type-id :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'sdk-type 'make-sdk-type))
 (common-lisp:defun make-sdk-type
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key configuration-properties description
                     friendly-name id)
   (common-lisp:apply #'common-lisp:make-instance 'sdk-type
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input sdk-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input sdk-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'friendly-name))
      (common-lisp:list
       (common-lisp:cons "friendlyName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configuration-properties))
      (common-lisp:list
       (common-lisp:cons "configurationProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input sdk-type))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass sdk-types common-lisp:nil
                       ((items :initarg :|items| :type
                         (common-lisp:or list-of-sdk-type common-lisp:null)
                         :accessor %sdk-types-items :initform common-lisp:nil)
                        (position :initarg :|position| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %sdk-types-position :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'sdk-types 'make-sdk-types))
 (common-lisp:defun make-sdk-types
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key items position)
   (common-lisp:apply #'common-lisp:make-instance 'sdk-types
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input sdk-types))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input sdk-types))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input sdk-types))
   common-lisp:nil))
(common-lisp:deftype security-policy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition service-unavailable-exception
     (apigateway-error)
     ((retry-after-seconds :initarg :|retryAfterSeconds| :initform
       common-lisp:nil :reader
       service-unavailable-exception-retry-after-seconds)
      (message :initarg :|message| :initform common-lisp:nil :reader
       service-unavailable-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-unavailable-exception
                    'service-unavailable-exception-retry-after-seconds
                    'service-unavailable-exception-message)))
(common-lisp:progn
 (common-lisp:defclass stage common-lisp:nil
                       ((last-updated-date :initarg :|lastUpdatedDate| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %stage-last-updated-date :initform common-lisp:nil)
                        (created-date :initarg :|createdDate| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %stage-created-date :initform common-lisp:nil)
                        (tags :initarg :|tags| :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor %stage-tags :initform common-lisp:nil)
                        (web-acl-arn :initarg :|webAclArn| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %stage-web-acl-arn :initform common-lisp:nil)
                        (tracing-enabled :initarg :|tracingEnabled| :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         %stage-tracing-enabled :initform common-lisp:nil)
                        (canary-settings :initarg :|canarySettings| :type
                         (common-lisp:or canary-settings common-lisp:null)
                         :accessor %stage-canary-settings :initform
                         common-lisp:nil)
                        (access-log-settings :initarg :|accessLogSettings|
                         :type
                         (common-lisp:or access-log-settings common-lisp:null)
                         :accessor %stage-access-log-settings :initform
                         common-lisp:nil)
                        (documentation-version :initarg :|documentationVersion|
                         :type (common-lisp:or string common-lisp:null)
                         :accessor %stage-documentation-version :initform
                         common-lisp:nil)
                        (variables :initarg :|variables| :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor %stage-variables :initform common-lisp:nil)
                        (method-settings :initarg :|methodSettings| :type
                         (common-lisp:or map-of-method-settings
                                         common-lisp:null)
                         :accessor %stage-method-settings :initform
                         common-lisp:nil)
                        (cache-cluster-status :initarg :|cacheClusterStatus|
                         :type
                         (common-lisp:or cache-cluster-status common-lisp:null)
                         :accessor %stage-cache-cluster-status :initform
                         common-lisp:nil)
                        (cache-cluster-size :initarg :|cacheClusterSize| :type
                         (common-lisp:or cache-cluster-size common-lisp:null)
                         :accessor %stage-cache-cluster-size :initform
                         common-lisp:nil)
                        (cache-cluster-enabled :initarg :|cacheClusterEnabled|
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor %stage-cache-cluster-enabled :initform
                         common-lisp:nil)
                        (description :initarg :|description| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %stage-description :initform common-lisp:nil)
                        (stage-name :initarg :|stageName| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %stage-stage-name :initform common-lisp:nil)
                        (client-certificate-id :initarg :|clientCertificateId|
                         :type (common-lisp:or string common-lisp:null)
                         :accessor %stage-client-certificate-id :initform
                         common-lisp:nil)
                        (deployment-id :initarg :|deploymentId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %stage-deployment-id :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'stage 'make-stage))
 (common-lisp:defun make-stage
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key last-updated-date created-date tags
                     web-acl-arn tracing-enabled canary-settings
                     access-log-settings documentation-version variables
                     method-settings cache-cluster-status cache-cluster-size
                     cache-cluster-enabled description stage-name
                     client-certificate-id deployment-id)
   (common-lisp:apply #'common-lisp:make-instance 'stage
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stage))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stage))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "deploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-certificate-id))
      (common-lisp:list
       (common-lisp:cons "clientCertificateId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-name))
      (common-lisp:list
       (common-lisp:cons "stageName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-cluster-enabled))
      (common-lisp:list
       (common-lisp:cons "cacheClusterEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-cluster-size))
      (common-lisp:list
       (common-lisp:cons "cacheClusterSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-cluster-status))
      (common-lisp:list
       (common-lisp:cons "cacheClusterStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'method-settings))
      (common-lisp:list
       (common-lisp:cons "methodSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'variables))
      (common-lisp:list
       (common-lisp:cons "variables"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'documentation-version))
      (common-lisp:list
       (common-lisp:cons "documentationVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-log-settings))
      (common-lisp:list
       (common-lisp:cons "accessLogSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'canary-settings))
      (common-lisp:list
       (common-lisp:cons "canarySettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tracing-enabled))
      (common-lisp:list
       (common-lisp:cons "tracingEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'web-acl-arn))
      (common-lisp:list
       (common-lisp:cons "webAclArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-date))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stage))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass stage-key common-lisp:nil
                       ((stage-name :initarg :|stageName| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %stage-key-stage-name :initform common-lisp:nil)
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %stage-key-rest-api-id :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'stage-key 'make-stage-key))
 (common-lisp:defun make-stage-key
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key stage-name rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'stage-key
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stage-key))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stage-key))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rest-api-id))
      (common-lisp:list
       (common-lisp:cons "restApiId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-name))
      (common-lisp:list
       (common-lisp:cons "stageName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stage-key))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass stages common-lisp:nil
                       ((item :initarg :|item| :type
                         (common-lisp:or list-of-stage common-lisp:null)
                         :accessor %stages-item :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'stages 'make-stages))
 (common-lisp:defun make-stages
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key item)
   (common-lisp:apply #'common-lisp:make-instance 'stages
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stages))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stages))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'item))
      (common-lisp:list
       (common-lisp:cons "item"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stages))
   common-lisp:nil))
(common-lisp:deftype status-code () 'common-lisp:string)
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass tag-resource-request common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor %tag-resource-request-tags :initform
                         (common-lisp:error ":tags is required"))
                        (resource-arn :initarg :|resourceArn| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %tag-resource-request-resource-arn :initform
                         (common-lisp:error ":resourcearn is required"))))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defun make-tag-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags resource-arn)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tags common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor %tags-tags :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'tags 'make-tags))
 (common-lisp:defun make-tags
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags)
   (common-lisp:apply #'common-lisp:make-instance 'tags
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tags))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tags))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tags))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass template common-lisp:nil
                       ((value :initarg :|value| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %template-value :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'template 'make-template))
 (common-lisp:defun make-template
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key value)
   (common-lisp:apply #'common-lisp:make-instance 'template
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input template))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input template))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input template))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass test-invoke-authorizer-request common-lisp:nil
                       ((additional-context :initarg :|additionalContext| :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor
                         %test-invoke-authorizer-request-additional-context
                         :initform common-lisp:nil)
                        (stage-variables :initarg :|stageVariables| :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor
                         %test-invoke-authorizer-request-stage-variables
                         :initform common-lisp:nil)
                        (body :initarg :|body| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %test-invoke-authorizer-request-body :initform
                         common-lisp:nil)
                        (path-with-query-string :initarg :|pathWithQueryString|
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         %test-invoke-authorizer-request-path-with-query-string
                         :initform common-lisp:nil)
                        (multi-value-headers :initarg :|multiValueHeaders|
                         :type
                         (common-lisp:or map-of-string-to-list
                                         common-lisp:null)
                         :accessor
                         %test-invoke-authorizer-request-multi-value-headers
                         :initform common-lisp:nil)
                        (headers :initarg :|headers| :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor %test-invoke-authorizer-request-headers
                         :initform common-lisp:nil)
                        (authorizer-id :initarg :|authorizerId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %test-invoke-authorizer-request-authorizer-id
                         :initform
                         (common-lisp:error ":authorizerid is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %test-invoke-authorizer-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'test-invoke-authorizer-request
                    'make-test-invoke-authorizer-request))
 (common-lisp:defun make-test-invoke-authorizer-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key additional-context stage-variables body
                     path-with-query-string multi-value-headers headers
                     authorizer-id rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'test-invoke-authorizer-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          test-invoke-authorizer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          test-invoke-authorizer-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'headers))
      (common-lisp:list
       (common-lisp:cons "headers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'multi-value-headers))
      (common-lisp:list
       (common-lisp:cons "multiValueHeaders"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'path-with-query-string))
      (common-lisp:list
       (common-lisp:cons "pathWithQueryString"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-variables))
      (common-lisp:list
       (common-lisp:cons "stageVariables"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'additional-context))
      (common-lisp:list
       (common-lisp:cons "additionalContext"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          test-invoke-authorizer-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass test-invoke-authorizer-response common-lisp:nil
                       ((claims :initarg :|claims| :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor %test-invoke-authorizer-response-claims
                         :initform common-lisp:nil)
                        (authorization :initarg :|authorization| :type
                         (common-lisp:or map-of-string-to-list
                                         common-lisp:null)
                         :accessor
                         %test-invoke-authorizer-response-authorization
                         :initform common-lisp:nil)
                        (policy :initarg :|policy| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %test-invoke-authorizer-response-policy :initform
                         common-lisp:nil)
                        (principal-id :initarg :|principalId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %test-invoke-authorizer-response-principal-id
                         :initform common-lisp:nil)
                        (latency :initarg :|latency| :type
                         (common-lisp:or long common-lisp:null) :accessor
                         %test-invoke-authorizer-response-latency :initform
                         common-lisp:nil)
                        (log :initarg :|log| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %test-invoke-authorizer-response-log :initform
                         common-lisp:nil)
                        (client-status :initarg :|clientStatus| :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         %test-invoke-authorizer-response-client-status
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'test-invoke-authorizer-response
                    'make-test-invoke-authorizer-response))
 (common-lisp:defun make-test-invoke-authorizer-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key claims authorization policy principal-id
                     latency log client-status)
   (common-lisp:apply #'common-lisp:make-instance
                      'test-invoke-authorizer-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          test-invoke-authorizer-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          test-invoke-authorizer-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-status))
      (common-lisp:list
       (common-lisp:cons "clientStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log))
      (common-lisp:list
       (common-lisp:cons "log"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latency))
      (common-lisp:list
       (common-lisp:cons "latency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-id))
      (common-lisp:list
       (common-lisp:cons "principalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization))
      (common-lisp:list
       (common-lisp:cons "authorization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'claims))
      (common-lisp:list
       (common-lisp:cons "claims"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          test-invoke-authorizer-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass test-invoke-method-request common-lisp:nil
                       ((stage-variables :initarg :|stageVariables| :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor %test-invoke-method-request-stage-variables
                         :initform common-lisp:nil)
                        (client-certificate-id :initarg :|clientCertificateId|
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         %test-invoke-method-request-client-certificate-id
                         :initform common-lisp:nil)
                        (multi-value-headers :initarg :|multiValueHeaders|
                         :type
                         (common-lisp:or map-of-string-to-list
                                         common-lisp:null)
                         :accessor
                         %test-invoke-method-request-multi-value-headers
                         :initform common-lisp:nil)
                        (headers :initarg :|headers| :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor %test-invoke-method-request-headers
                         :initform common-lisp:nil)
                        (body :initarg :|body| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %test-invoke-method-request-body :initform
                         common-lisp:nil)
                        (path-with-query-string :initarg :|pathWithQueryString|
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         %test-invoke-method-request-path-with-query-string
                         :initform common-lisp:nil)
                        (http-method :initarg :|httpMethod| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %test-invoke-method-request-http-method :initform
                         (common-lisp:error ":httpmethod is required"))
                        (resource-id :initarg :|resourceId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %test-invoke-method-request-resource-id :initform
                         (common-lisp:error ":resourceid is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %test-invoke-method-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'test-invoke-method-request
                    'make-test-invoke-method-request))
 (common-lisp:defun make-test-invoke-method-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key stage-variables client-certificate-id
                     multi-value-headers headers body path-with-query-string
                     http-method resource-id rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'test-invoke-method-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          test-invoke-method-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          test-invoke-method-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'path-with-query-string))
      (common-lisp:list
       (common-lisp:cons "pathWithQueryString"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'headers))
      (common-lisp:list
       (common-lisp:cons "headers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'multi-value-headers))
      (common-lisp:list
       (common-lisp:cons "multiValueHeaders"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-certificate-id))
      (common-lisp:list
       (common-lisp:cons "clientCertificateId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-variables))
      (common-lisp:list
       (common-lisp:cons "stageVariables"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          test-invoke-method-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass test-invoke-method-response common-lisp:nil
                       ((latency :initarg :|latency| :type
                         (common-lisp:or long common-lisp:null) :accessor
                         %test-invoke-method-response-latency :initform
                         common-lisp:nil)
                        (log :initarg :|log| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %test-invoke-method-response-log :initform
                         common-lisp:nil)
                        (multi-value-headers :initarg :|multiValueHeaders|
                         :type
                         (common-lisp:or map-of-string-to-list
                                         common-lisp:null)
                         :accessor
                         %test-invoke-method-response-multi-value-headers
                         :initform common-lisp:nil)
                        (headers :initarg :|headers| :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor %test-invoke-method-response-headers
                         :initform common-lisp:nil)
                        (body :initarg :|body| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %test-invoke-method-response-body :initform
                         common-lisp:nil)
                        (status :initarg :|status| :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         %test-invoke-method-response-status :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'test-invoke-method-response
                    'make-test-invoke-method-response))
 (common-lisp:defun make-test-invoke-method-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key latency log multi-value-headers headers
                     body status)
   (common-lisp:apply #'common-lisp:make-instance 'test-invoke-method-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          test-invoke-method-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          test-invoke-method-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'headers))
      (common-lisp:list
       (common-lisp:cons "headers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'multi-value-headers))
      (common-lisp:list
       (common-lisp:cons "multiValueHeaders"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log))
      (common-lisp:list
       (common-lisp:cons "log"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latency))
      (common-lisp:list
       (common-lisp:cons "latency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          test-invoke-method-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass throttle-settings common-lisp:nil
                       ((rate-limit :initarg :|rateLimit| :type
                         (common-lisp:or double common-lisp:null) :accessor
                         %throttle-settings-rate-limit :initform
                         common-lisp:nil)
                        (burst-limit :initarg :|burstLimit| :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         %throttle-settings-burst-limit :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'throttle-settings 'make-throttle-settings))
 (common-lisp:defun make-throttle-settings
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key rate-limit burst-limit)
   (common-lisp:apply #'common-lisp:make-instance 'throttle-settings
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input throttle-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input throttle-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'burst-limit))
      (common-lisp:list
       (common-lisp:cons "burstLimit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rate-limit))
      (common-lisp:list
       (common-lisp:cons "rateLimit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input throttle-settings))
   common-lisp:nil))
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass tls-config common-lisp:nil
                       ((insecure-skip-verification :initarg
                         :|insecureSkipVerification| :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         %tls-config-insecure-skip-verification :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'tls-config 'make-tls-config))
 (common-lisp:defun make-tls-config
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key insecure-skip-verification)
   (common-lisp:apply #'common-lisp:make-instance 'tls-config
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tls-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tls-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'insecure-skip-verification))
      (common-lisp:list
       (common-lisp:cons "insecureSkipVerification"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tls-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition too-many-requests-exception
     (apigateway-error)
     ((retry-after-seconds :initarg :|retryAfterSeconds| :initform
       common-lisp:nil :reader too-many-requests-exception-retry-after-seconds)
      (message :initarg :|message| :initform common-lisp:nil :reader
       too-many-requests-exception-message)))
 (common-lisp:export
  (common-lisp:list 'too-many-requests-exception
                    'too-many-requests-exception-retry-after-seconds
                    'too-many-requests-exception-message)))
(common-lisp:deftype unauthorized-cache-control-header-strategy ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition unauthorized-exception
     (apigateway-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       unauthorized-exception-message)))
 (common-lisp:export
  (common-lisp:list 'unauthorized-exception 'unauthorized-exception-message)))
(common-lisp:progn
 (common-lisp:defclass untag-resource-request common-lisp:nil
                       ((tag-keys :initarg :|tagKeys| :type
                         (common-lisp:or list-of-string common-lisp:null)
                         :accessor %untag-resource-request-tag-keys :initform
                         (common-lisp:error ":tagkeys is required"))
                        (resource-arn :initarg :|resourceArn| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %untag-resource-request-resource-arn :initform
                         (common-lisp:error ":resourcearn is required"))))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defun make-untag-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tag-keys resource-arn)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-account-request common-lisp:nil
                       ((patch-operations :initarg :|patchOperations| :type
                         (common-lisp:or list-of-patch-operation
                                         common-lisp:null)
                         :accessor %update-account-request-patch-operations
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-account-request 'make-update-account-request))
 (common-lisp:defun make-update-account-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key patch-operations)
   (common-lisp:apply #'common-lisp:make-instance 'update-account-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-account-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-account-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-api-key-request common-lisp:nil
                       ((patch-operations :initarg :|patchOperations| :type
                         (common-lisp:or list-of-patch-operation
                                         common-lisp:null)
                         :accessor %update-api-key-request-patch-operations
                         :initform common-lisp:nil)
                        (api-key :initarg :|apiKey| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %update-api-key-request-api-key :initform
                         (common-lisp:error ":apikey is required"))))
 (common-lisp:export
  (common-lisp:list 'update-api-key-request 'make-update-api-key-request))
 (common-lisp:defun make-update-api-key-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key patch-operations api-key)
   (common-lisp:apply #'common-lisp:make-instance 'update-api-key-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-api-key-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-api-key-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-api-key-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-authorizer-request common-lisp:nil
                       ((patch-operations :initarg :|patchOperations| :type
                         (common-lisp:or list-of-patch-operation
                                         common-lisp:null)
                         :accessor %update-authorizer-request-patch-operations
                         :initform common-lisp:nil)
                        (authorizer-id :initarg :|authorizerId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %update-authorizer-request-authorizer-id :initform
                         (common-lisp:error ":authorizerid is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %update-authorizer-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'update-authorizer-request
                    'make-update-authorizer-request))
 (common-lisp:defun make-update-authorizer-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key patch-operations authorizer-id
                     rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'update-authorizer-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-authorizer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-authorizer-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-authorizer-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-base-path-mapping-request common-lisp:nil
                       ((patch-operations :initarg :|patchOperations| :type
                         (common-lisp:or list-of-patch-operation
                                         common-lisp:null)
                         :accessor
                         %update-base-path-mapping-request-patch-operations
                         :initform common-lisp:nil)
                        (base-path :initarg :|basePath| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %update-base-path-mapping-request-base-path :initform
                         (common-lisp:error ":basepath is required"))
                        (domain-name :initarg :|domainName| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %update-base-path-mapping-request-domain-name
                         :initform
                         (common-lisp:error ":domainname is required"))))
 (common-lisp:export
  (common-lisp:list 'update-base-path-mapping-request
                    'make-update-base-path-mapping-request))
 (common-lisp:defun make-update-base-path-mapping-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key patch-operations base-path domain-name)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-base-path-mapping-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-base-path-mapping-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-base-path-mapping-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-base-path-mapping-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-client-certificate-request common-lisp:nil
                       ((patch-operations :initarg :|patchOperations| :type
                         (common-lisp:or list-of-patch-operation
                                         common-lisp:null)
                         :accessor
                         %update-client-certificate-request-patch-operations
                         :initform common-lisp:nil)
                        (client-certificate-id :initarg :|clientCertificateId|
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         %update-client-certificate-request-client-certificate-id
                         :initform
                         (common-lisp:error
                          ":clientcertificateid is required"))))
 (common-lisp:export
  (common-lisp:list 'update-client-certificate-request
                    'make-update-client-certificate-request))
 (common-lisp:defun make-update-client-certificate-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key patch-operations client-certificate-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-client-certificate-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-client-certificate-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-client-certificate-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-client-certificate-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-deployment-request common-lisp:nil
                       ((patch-operations :initarg :|patchOperations| :type
                         (common-lisp:or list-of-patch-operation
                                         common-lisp:null)
                         :accessor %update-deployment-request-patch-operations
                         :initform common-lisp:nil)
                        (deployment-id :initarg :|deploymentId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %update-deployment-request-deployment-id :initform
                         (common-lisp:error ":deploymentid is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %update-deployment-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'update-deployment-request
                    'make-update-deployment-request))
 (common-lisp:defun make-update-deployment-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key patch-operations deployment-id
                     rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'update-deployment-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-deployment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-deployment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-deployment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-documentation-part-request common-lisp:nil
                       ((patch-operations :initarg :|patchOperations| :type
                         (common-lisp:or list-of-patch-operation
                                         common-lisp:null)
                         :accessor
                         %update-documentation-part-request-patch-operations
                         :initform common-lisp:nil)
                        (documentation-part-id :initarg :|documentationPartId|
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         %update-documentation-part-request-documentation-part-id
                         :initform
                         (common-lisp:error
                          ":documentationpartid is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %update-documentation-part-request-rest-api-id
                         :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'update-documentation-part-request
                    'make-update-documentation-part-request))
 (common-lisp:defun make-update-documentation-part-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key patch-operations documentation-part-id
                     rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-documentation-part-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-documentation-part-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-documentation-part-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-documentation-part-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-documentation-version-request common-lisp:nil
                       ((patch-operations :initarg :|patchOperations| :type
                         (common-lisp:or list-of-patch-operation
                                         common-lisp:null)
                         :accessor
                         %update-documentation-version-request-patch-operations
                         :initform common-lisp:nil)
                        (documentation-version :initarg :|documentationVersion|
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         %update-documentation-version-request-documentation-version
                         :initform
                         (common-lisp:error
                          ":documentationversion is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %update-documentation-version-request-rest-api-id
                         :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'update-documentation-version-request
                    'make-update-documentation-version-request))
 (common-lisp:defun make-update-documentation-version-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key patch-operations documentation-version
                     rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-documentation-version-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-documentation-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-documentation-version-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-documentation-version-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-domain-name-request common-lisp:nil
                       ((patch-operations :initarg :|patchOperations| :type
                         (common-lisp:or list-of-patch-operation
                                         common-lisp:null)
                         :accessor %update-domain-name-request-patch-operations
                         :initform common-lisp:nil)
                        (domain-name :initarg :|domainName| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %update-domain-name-request-domain-name :initform
                         (common-lisp:error ":domainname is required"))))
 (common-lisp:export
  (common-lisp:list 'update-domain-name-request
                    'make-update-domain-name-request))
 (common-lisp:defun make-update-domain-name-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key patch-operations domain-name)
   (common-lisp:apply #'common-lisp:make-instance 'update-domain-name-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-name-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-name-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-name-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-gateway-response-request common-lisp:nil
                       ((patch-operations :initarg :|patchOperations| :type
                         (common-lisp:or list-of-patch-operation
                                         common-lisp:null)
                         :accessor
                         %update-gateway-response-request-patch-operations
                         :initform common-lisp:nil)
                        (response-type :initarg :|responseType| :type
                         (common-lisp:or gateway-response-type
                                         common-lisp:null)
                         :accessor
                         %update-gateway-response-request-response-type
                         :initform
                         (common-lisp:error ":responsetype is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %update-gateway-response-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'update-gateway-response-request
                    'make-update-gateway-response-request))
 (common-lisp:defun make-update-gateway-response-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key patch-operations response-type
                     rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-gateway-response-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-response-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-integration-request common-lisp:nil
                       ((patch-operations :initarg :|patchOperations| :type
                         (common-lisp:or list-of-patch-operation
                                         common-lisp:null)
                         :accessor %update-integration-request-patch-operations
                         :initform common-lisp:nil)
                        (http-method :initarg :|httpMethod| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %update-integration-request-http-method :initform
                         (common-lisp:error ":httpmethod is required"))
                        (resource-id :initarg :|resourceId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %update-integration-request-resource-id :initform
                         (common-lisp:error ":resourceid is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %update-integration-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'update-integration-request
                    'make-update-integration-request))
 (common-lisp:defun make-update-integration-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key patch-operations http-method resource-id
                     rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'update-integration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-integration-response-request common-lisp:nil
                       ((patch-operations :initarg :|patchOperations| :type
                         (common-lisp:or list-of-patch-operation
                                         common-lisp:null)
                         :accessor
                         %update-integration-response-request-patch-operations
                         :initform common-lisp:nil)
                        (status-code :initarg :|statusCode| :type
                         (common-lisp:or status-code common-lisp:null)
                         :accessor
                         %update-integration-response-request-status-code
                         :initform
                         (common-lisp:error ":statuscode is required"))
                        (http-method :initarg :|httpMethod| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %update-integration-response-request-http-method
                         :initform
                         (common-lisp:error ":httpmethod is required"))
                        (resource-id :initarg :|resourceId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %update-integration-response-request-resource-id
                         :initform
                         (common-lisp:error ":resourceid is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %update-integration-response-request-rest-api-id
                         :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'update-integration-response-request
                    'make-update-integration-response-request))
 (common-lisp:defun make-update-integration-response-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key patch-operations status-code http-method
                     resource-id rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-integration-response-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-response-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-method-request common-lisp:nil
                       ((patch-operations :initarg :|patchOperations| :type
                         (common-lisp:or list-of-patch-operation
                                         common-lisp:null)
                         :accessor %update-method-request-patch-operations
                         :initform common-lisp:nil)
                        (http-method :initarg :|httpMethod| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %update-method-request-http-method :initform
                         (common-lisp:error ":httpmethod is required"))
                        (resource-id :initarg :|resourceId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %update-method-request-resource-id :initform
                         (common-lisp:error ":resourceid is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %update-method-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'update-method-request 'make-update-method-request))
 (common-lisp:defun make-update-method-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key patch-operations http-method resource-id
                     rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'update-method-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-method-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-method-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-method-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-method-response-request common-lisp:nil
                       ((patch-operations :initarg :|patchOperations| :type
                         (common-lisp:or list-of-patch-operation
                                         common-lisp:null)
                         :accessor
                         %update-method-response-request-patch-operations
                         :initform common-lisp:nil)
                        (status-code :initarg :|statusCode| :type
                         (common-lisp:or status-code common-lisp:null)
                         :accessor %update-method-response-request-status-code
                         :initform
                         (common-lisp:error ":statuscode is required"))
                        (http-method :initarg :|httpMethod| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %update-method-response-request-http-method :initform
                         (common-lisp:error ":httpmethod is required"))
                        (resource-id :initarg :|resourceId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %update-method-response-request-resource-id :initform
                         (common-lisp:error ":resourceid is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %update-method-response-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'update-method-response-request
                    'make-update-method-response-request))
 (common-lisp:defun make-update-method-response-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key patch-operations status-code http-method
                     resource-id rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-method-response-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-method-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-method-response-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-method-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-model-request common-lisp:nil
                       ((patch-operations :initarg :|patchOperations| :type
                         (common-lisp:or list-of-patch-operation
                                         common-lisp:null)
                         :accessor %update-model-request-patch-operations
                         :initform common-lisp:nil)
                        (model-name :initarg :|modelName| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %update-model-request-model-name :initform
                         (common-lisp:error ":modelname is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %update-model-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'update-model-request 'make-update-model-request))
 (common-lisp:defun make-update-model-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key patch-operations model-name rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'update-model-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-model-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-request-validator-request common-lisp:nil
                       ((patch-operations :initarg :|patchOperations| :type
                         (common-lisp:or list-of-patch-operation
                                         common-lisp:null)
                         :accessor
                         %update-request-validator-request-patch-operations
                         :initform common-lisp:nil)
                        (request-validator-id :initarg :|requestValidatorId|
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         %update-request-validator-request-request-validator-id
                         :initform
                         (common-lisp:error ":requestvalidatorid is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %update-request-validator-request-rest-api-id
                         :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'update-request-validator-request
                    'make-update-request-validator-request))
 (common-lisp:defun make-update-request-validator-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key patch-operations request-validator-id
                     rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-request-validator-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-request-validator-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-request-validator-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-request-validator-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-resource-request common-lisp:nil
                       ((patch-operations :initarg :|patchOperations| :type
                         (common-lisp:or list-of-patch-operation
                                         common-lisp:null)
                         :accessor %update-resource-request-patch-operations
                         :initform common-lisp:nil)
                        (resource-id :initarg :|resourceId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %update-resource-request-resource-id :initform
                         (common-lisp:error ":resourceid is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %update-resource-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'update-resource-request 'make-update-resource-request))
 (common-lisp:defun make-update-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key patch-operations resource-id rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'update-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-rest-api-request common-lisp:nil
                       ((patch-operations :initarg :|patchOperations| :type
                         (common-lisp:or list-of-patch-operation
                                         common-lisp:null)
                         :accessor %update-rest-api-request-patch-operations
                         :initform common-lisp:nil)
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %update-rest-api-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'update-rest-api-request 'make-update-rest-api-request))
 (common-lisp:defun make-update-rest-api-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key patch-operations rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'update-rest-api-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-rest-api-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-rest-api-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-rest-api-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-stage-request common-lisp:nil
                       ((patch-operations :initarg :|patchOperations| :type
                         (common-lisp:or list-of-patch-operation
                                         common-lisp:null)
                         :accessor %update-stage-request-patch-operations
                         :initform common-lisp:nil)
                        (stage-name :initarg :|stageName| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %update-stage-request-stage-name :initform
                         (common-lisp:error ":stagename is required"))
                        (rest-api-id :initarg :|restApiId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %update-stage-request-rest-api-id :initform
                         (common-lisp:error ":restapiid is required"))))
 (common-lisp:export
  (common-lisp:list 'update-stage-request 'make-update-stage-request))
 (common-lisp:defun make-update-stage-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key patch-operations stage-name rest-api-id)
   (common-lisp:apply #'common-lisp:make-instance 'update-stage-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-stage-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-stage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-usage-plan-request common-lisp:nil
                       ((patch-operations :initarg :|patchOperations| :type
                         (common-lisp:or list-of-patch-operation
                                         common-lisp:null)
                         :accessor %update-usage-plan-request-patch-operations
                         :initform common-lisp:nil)
                        (usage-plan-id :initarg :|usagePlanId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %update-usage-plan-request-usage-plan-id :initform
                         (common-lisp:error ":usageplanid is required"))))
 (common-lisp:export
  (common-lisp:list 'update-usage-plan-request
                    'make-update-usage-plan-request))
 (common-lisp:defun make-update-usage-plan-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key patch-operations usage-plan-id)
   (common-lisp:apply #'common-lisp:make-instance 'update-usage-plan-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-usage-plan-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-usage-plan-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-usage-plan-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-usage-request common-lisp:nil
                       ((patch-operations :initarg :|patchOperations| :type
                         (common-lisp:or list-of-patch-operation
                                         common-lisp:null)
                         :accessor %update-usage-request-patch-operations
                         :initform common-lisp:nil)
                        (key-id :initarg :|keyId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %update-usage-request-key-id :initform
                         (common-lisp:error ":keyid is required"))
                        (usage-plan-id :initarg :|usagePlanId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %update-usage-request-usage-plan-id :initform
                         (common-lisp:error ":usageplanid is required"))))
 (common-lisp:export
  (common-lisp:list 'update-usage-request 'make-update-usage-request))
 (common-lisp:defun make-update-usage-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key patch-operations key-id usage-plan-id)
   (common-lisp:apply #'common-lisp:make-instance 'update-usage-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-usage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-usage-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-usage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-vpc-link-request common-lisp:nil
                       ((patch-operations :initarg :|patchOperations| :type
                         (common-lisp:or list-of-patch-operation
                                         common-lisp:null)
                         :accessor %update-vpc-link-request-patch-operations
                         :initform common-lisp:nil)
                        (vpc-link-id :initarg :|vpcLinkId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %update-vpc-link-request-vpc-link-id :initform
                         (common-lisp:error ":vpclinkid is required"))))
 (common-lisp:export
  (common-lisp:list 'update-vpc-link-request 'make-update-vpc-link-request))
 (common-lisp:defun make-update-vpc-link-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key patch-operations vpc-link-id)
   (common-lisp:apply #'common-lisp:make-instance 'update-vpc-link-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-vpc-link-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-vpc-link-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-vpc-link-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass usage common-lisp:nil
                       ((items :initarg :|items| :type
                         (common-lisp:or map-of-key-usages common-lisp:null)
                         :accessor %usage-items :initform common-lisp:nil)
                        (position :initarg :|position| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %usage-position :initform common-lisp:nil)
                        (end-date :initarg :|endDate| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %usage-end-date :initform common-lisp:nil)
                        (start-date :initarg :|startDate| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %usage-start-date :initform common-lisp:nil)
                        (usage-plan-id :initarg :|usagePlanId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %usage-usage-plan-id :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'usage 'make-usage))
 (common-lisp:defun make-usage
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key items position end-date start-date
                     usage-plan-id)
   (common-lisp:apply #'common-lisp:make-instance 'usage
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input usage))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input usage))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'usage-plan-id))
      (common-lisp:list
       (common-lisp:cons "usagePlanId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-date))
      (common-lisp:list
       (common-lisp:cons "startDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-date))
      (common-lisp:list
       (common-lisp:cons "endDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input usage))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass usage-plan common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor %usage-plan-tags :initform common-lisp:nil)
                        (product-code :initarg :|productCode| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %usage-plan-product-code :initform common-lisp:nil)
                        (quota :initarg :|quota| :type
                         (common-lisp:or quota-settings common-lisp:null)
                         :accessor %usage-plan-quota :initform common-lisp:nil)
                        (throttle :initarg :|throttle| :type
                         (common-lisp:or throttle-settings common-lisp:null)
                         :accessor %usage-plan-throttle :initform
                         common-lisp:nil)
                        (api-stages :initarg :|apiStages| :type
                         (common-lisp:or list-of-api-stage common-lisp:null)
                         :accessor %usage-plan-api-stages :initform
                         common-lisp:nil)
                        (description :initarg :|description| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %usage-plan-description :initform common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %usage-plan-name :initform common-lisp:nil)
                        (id :initarg :|id| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %usage-plan-id :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'usage-plan 'make-usage-plan))
 (common-lisp:defun make-usage-plan
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags product-code quota throttle
                     api-stages description name id)
   (common-lisp:apply #'common-lisp:make-instance 'usage-plan
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input usage-plan))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input usage-plan))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-stages))
      (common-lisp:list
       (common-lisp:cons "apiStages"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'throttle))
      (common-lisp:list
       (common-lisp:cons "throttle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'quota))
      (common-lisp:list
       (common-lisp:cons "quota"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'product-code))
      (common-lisp:list
       (common-lisp:cons "productCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input usage-plan))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass usage-plan-key common-lisp:nil
                       ((name :initarg :|name| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %usage-plan-key-name :initform common-lisp:nil)
                        (value :initarg :|value| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %usage-plan-key-value :initform common-lisp:nil)
                        (type :initarg :|type| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %usage-plan-key-type :initform common-lisp:nil)
                        (id :initarg :|id| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %usage-plan-key-id :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'usage-plan-key 'make-usage-plan-key))
 (common-lisp:defun make-usage-plan-key
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key name value type id)
   (common-lisp:apply #'common-lisp:make-instance 'usage-plan-key
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input usage-plan-key))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input usage-plan-key))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input usage-plan-key))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass usage-plan-keys common-lisp:nil
                       ((items :initarg :|items| :type
                         (common-lisp:or list-of-usage-plan-key
                                         common-lisp:null)
                         :accessor %usage-plan-keys-items :initform
                         common-lisp:nil)
                        (position :initarg :|position| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %usage-plan-keys-position :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'usage-plan-keys 'make-usage-plan-keys))
 (common-lisp:defun make-usage-plan-keys
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key items position)
   (common-lisp:apply #'common-lisp:make-instance 'usage-plan-keys
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input usage-plan-keys))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input usage-plan-keys))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input usage-plan-keys))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass usage-plans common-lisp:nil
                       ((items :initarg :|items| :type
                         (common-lisp:or list-of-usage-plan common-lisp:null)
                         :accessor %usage-plans-items :initform
                         common-lisp:nil)
                        (position :initarg :|position| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %usage-plans-position :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'usage-plans 'make-usage-plans))
 (common-lisp:defun make-usage-plans
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key items position)
   (common-lisp:apply #'common-lisp:make-instance 'usage-plans
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input usage-plans))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input usage-plans))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input usage-plans))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass vpc-link common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor %vpc-link-tags :initform common-lisp:nil)
                        (status-message :initarg :|statusMessage| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %vpc-link-status-message :initform common-lisp:nil)
                        (status :initarg :|status| :type
                         (common-lisp:or vpc-link-status common-lisp:null)
                         :accessor %vpc-link-status :initform common-lisp:nil)
                        (target-arns :initarg :|targetArns| :type
                         (common-lisp:or list-of-string common-lisp:null)
                         :accessor %vpc-link-target-arns :initform
                         common-lisp:nil)
                        (description :initarg :|description| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %vpc-link-description :initform common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %vpc-link-name :initform common-lisp:nil)
                        (id :initarg :|id| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %vpc-link-id :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'vpc-link 'make-vpc-link))
 (common-lisp:defun make-vpc-link
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags status-message status target-arns
                     description name id)
   (common-lisp:apply #'common-lisp:make-instance 'vpc-link
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input vpc-link))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input vpc-link))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-arns))
      (common-lisp:list
       (common-lisp:cons "targetArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-message))
      (common-lisp:list
       (common-lisp:cons "statusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input vpc-link))
   common-lisp:nil))
(common-lisp:deftype vpc-link-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass vpc-links common-lisp:nil
                       ((items :initarg :|items| :type
                         (common-lisp:or list-of-vpc-link common-lisp:null)
                         :accessor %vpc-links-items :initform common-lisp:nil)
                        (position :initarg :|position| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %vpc-links-position :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'vpc-links 'make-vpc-links))
 (common-lisp:defun make-vpc-links
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key items position)
   (common-lisp:apply #'common-lisp:make-instance 'vpc-links
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input vpc-links))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input vpc-links))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input vpc-links))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defun create-api-key
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description enabled
                     generate-distinct-id value stage-keys customer-id tags)
   (common-lisp:declare
    (common-lisp:ignorable name description enabled generate-distinct-id value
     stage-keys customer-id tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-api-key-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/apikeys"
                                                        "CreateApiKey"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-api-key))
(common-lisp:progn
 (common-lisp:defun create-authorizer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id name type provider-arns
                     auth-type authorizer-uri authorizer-credentials
                     identity-source identity-validation-expression
                     authorizer-result-ttl-in-seconds)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id name type provider-arns auth-type
     authorizer-uri authorizer-credentials identity-source
     identity-validation-expression authorizer-result-ttl-in-seconds))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-authorizer-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/authorizers"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "CreateAuthorizer"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-authorizer))
(common-lisp:progn
 (common-lisp:defun create-base-path-mapping
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name base-path rest-api-id stage)
   (common-lisp:declare
    (common-lisp:ignorable domain-name base-path rest-api-id stage))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-base-path-mapping-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/domainnames/~A/basepathmappings"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'domain-name))))
                                                        "CreateBasePathMapping"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-base-path-mapping))
(common-lisp:progn
 (common-lisp:defun create-deployment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id stage-name stage-description
                     description cache-cluster-enabled cache-cluster-size
                     variables canary-settings tracing-enabled)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id stage-name stage-description description
     cache-cluster-enabled cache-cluster-size variables canary-settings
     tracing-enabled))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-deployment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/deployments"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "CreateDeployment"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-deployment))
(common-lisp:progn
 (common-lisp:defun create-documentation-part
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id location properties)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id location properties))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-documentation-part-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/documentation/parts"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "CreateDocumentationPart"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-documentation-part))
(common-lisp:progn
 (common-lisp:defun create-documentation-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id documentation-version
                     stage-name description)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id documentation-version stage-name
     description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-documentation-version-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/documentation/versions"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "CreateDocumentationVersion"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-documentation-version))
(common-lisp:progn
 (common-lisp:defun create-domain-name
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name certificate-name
                     certificate-body certificate-private-key certificate-chain
                     certificate-arn regional-certificate-name
                     regional-certificate-arn endpoint-configuration tags
                     security-policy mutual-tls-authentication
                     ownership-verification-certificate-arn)
   (common-lisp:declare
    (common-lisp:ignorable domain-name certificate-name certificate-body
     certificate-private-key certificate-chain certificate-arn
     regional-certificate-name regional-certificate-arn endpoint-configuration
     tags security-policy mutual-tls-authentication
     ownership-verification-certificate-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-domain-name-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/domainnames"
                                                        "CreateDomainName"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-domain-name))
(common-lisp:progn
 (common-lisp:defun create-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id name description schema
                     content-type)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id name description schema content-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/models"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "CreateModel"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-model))
(common-lisp:progn
 (common-lisp:defun create-request-validator
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id name validate-request-body
                     validate-request-parameters)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id name validate-request-body
     validate-request-parameters))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-request-validator-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/requestvalidators"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "CreateRequestValidator"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-request-validator))
(common-lisp:progn
 (common-lisp:defun create-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id parent-id path-part)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id parent-id path-part))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'parent-id))))
                                                        "CreateResource"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-resource))
(common-lisp:progn
 (common-lisp:defun create-rest-api
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description version clone-from
                     binary-media-types minimum-compression-size api-key-source
                     endpoint-configuration policy tags
                     disable-execute-api-endpoint)
   (common-lisp:declare
    (common-lisp:ignorable name description version clone-from
     binary-media-types minimum-compression-size api-key-source
     endpoint-configuration policy tags disable-execute-api-endpoint))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-rest-api-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/restapis"
                                                        "CreateRestApi"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-rest-api))
(common-lisp:progn
 (common-lisp:defun create-stage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id stage-name deployment-id
                     description cache-cluster-enabled cache-cluster-size
                     variables documentation-version canary-settings
                     tracing-enabled tags)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id stage-name deployment-id description
     cache-cluster-enabled cache-cluster-size variables documentation-version
     canary-settings tracing-enabled tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-stage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/stages"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "CreateStage"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-stage))
(common-lisp:progn
 (common-lisp:defun create-usage-plan
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description api-stages throttle
                     quota tags)
   (common-lisp:declare
    (common-lisp:ignorable name description api-stages throttle quota tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-usage-plan-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/usageplans"
                                                        "CreateUsagePlan"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-usage-plan))
(common-lisp:progn
 (common-lisp:defun create-usage-plan-key
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key usage-plan-id key-id key-type)
   (common-lisp:declare (common-lisp:ignorable usage-plan-id key-id key-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-usage-plan-key-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/usageplans/~A/keys"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'usageplan-id))))
                                                        "CreateUsagePlanKey"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-usage-plan-key))
(common-lisp:progn
 (common-lisp:defun create-vpc-link
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description target-arns tags)
   (common-lisp:declare
    (common-lisp:ignorable name description target-arns tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-vpc-link-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/vpclinks"
                                                        "CreateVpcLink"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-vpc-link))
(common-lisp:progn
 (common-lisp:defun delete-api-key
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-key)
   (common-lisp:declare (common-lisp:ignorable api-key))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-api-key-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/apikeys/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-key))))
                                                        "DeleteApiKey"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-api-key))
(common-lisp:progn
 (common-lisp:defun delete-authorizer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id authorizer-id)
   (common-lisp:declare (common-lisp:ignorable rest-api-id authorizer-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-authorizer-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/authorizers/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'authorizer-id))))
                                                        "DeleteAuthorizer"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-authorizer))
(common-lisp:progn
 (common-lisp:defun delete-base-path-mapping
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name base-path)
   (common-lisp:declare (common-lisp:ignorable domain-name base-path))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-base-path-mapping-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/domainnames/~A/basepathmappings/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'domain-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'base-path))))
                                                        "DeleteBasePathMapping"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-base-path-mapping))
(common-lisp:progn
 (common-lisp:defun delete-client-certificate
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-certificate-id)
   (common-lisp:declare (common-lisp:ignorable client-certificate-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-client-certificate-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/clientcertificates/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'clientcertificate-id))))
                                                        "DeleteClientCertificate"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-client-certificate))
(common-lisp:progn
 (common-lisp:defun delete-deployment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id deployment-id)
   (common-lisp:declare (common-lisp:ignorable rest-api-id deployment-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-deployment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/deployments/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'deployment-id))))
                                                        "DeleteDeployment"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-deployment))
(common-lisp:progn
 (common-lisp:defun delete-documentation-part
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id documentation-part-id)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id documentation-part-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-documentation-part-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/documentation/parts/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'part-id))))
                                                        "DeleteDocumentationPart"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-documentation-part))
(common-lisp:progn
 (common-lisp:defun delete-documentation-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id documentation-version)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id documentation-version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-documentation-version-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/documentation/versions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'doc-version))))
                                                        "DeleteDocumentationVersion"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-documentation-version))
(common-lisp:progn
 (common-lisp:defun delete-domain-name
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name)
   (common-lisp:declare (common-lisp:ignorable domain-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-domain-name-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/domainnames/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'domain-name))))
                                                        "DeleteDomainName"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-domain-name))
(common-lisp:progn
 (common-lisp:defun delete-gateway-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id response-type)
   (common-lisp:declare (common-lisp:ignorable rest-api-id response-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-gateway-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/gatewayresponses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'response-type))))
                                                        "DeleteGatewayResponse"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-gateway-response))
(common-lisp:progn
 (common-lisp:defun delete-integration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-integration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A/integration"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))))
                                                        "DeleteIntegration"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-integration))
(common-lisp:progn
 (common-lisp:defun delete-integration-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     status-code)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method status-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-integration-response-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A/integration/responses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'status-code))))
                                                        "DeleteIntegrationResponse"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-integration-response))
(common-lisp:progn
 (common-lisp:defun delete-method
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-method-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))))
                                                        "DeleteMethod"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-method))
(common-lisp:progn
 (common-lisp:defun delete-method-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     status-code)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method status-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-method-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A/responses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'status-code))))
                                                        "DeleteMethodResponse"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-method-response))
(common-lisp:progn
 (common-lisp:defun delete-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id model-name)
   (common-lisp:declare (common-lisp:ignorable rest-api-id model-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/models/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'model-name))))
                                                        "DeleteModel"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-model))
(common-lisp:progn
 (common-lisp:defun delete-request-validator
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id request-validator-id)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id request-validator-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-request-validator-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/requestvalidators/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'requestvalidator-id))))
                                                        "DeleteRequestValidator"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-request-validator))
(common-lisp:progn
 (common-lisp:defun delete-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id)
   (common-lisp:declare (common-lisp:ignorable rest-api-id resource-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))))
                                                        "DeleteResource"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-resource))
(common-lisp:progn
 (common-lisp:defun delete-rest-api
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id)
   (common-lisp:declare (common-lisp:ignorable rest-api-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-rest-api-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "DeleteRestApi"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-rest-api))
(common-lisp:progn
 (common-lisp:defun delete-stage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id stage-name)
   (common-lisp:declare (common-lisp:ignorable rest-api-id stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-stage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/stages/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))))
                                                        "DeleteStage"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-stage))
(common-lisp:progn
 (common-lisp:defun delete-usage-plan
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key usage-plan-id)
   (common-lisp:declare (common-lisp:ignorable usage-plan-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-usage-plan-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/usageplans/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'usageplan-id))))
                                                        "DeleteUsagePlan"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-usage-plan))
(common-lisp:progn
 (common-lisp:defun delete-usage-plan-key
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key usage-plan-id key-id)
   (common-lisp:declare (common-lisp:ignorable usage-plan-id key-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-usage-plan-key-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/usageplans/~A/keys/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'usageplan-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'key-id))))
                                                        "DeleteUsagePlanKey"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-usage-plan-key))
(common-lisp:progn
 (common-lisp:defun delete-vpc-link
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key vpc-link-id)
   (common-lisp:declare (common-lisp:ignorable vpc-link-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-vpc-link-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/vpclinks/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vpclink-id))))
                                                        "DeleteVpcLink"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-vpc-link))
(common-lisp:progn
 (common-lisp:defun flush-stage-authorizers-cache
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id stage-name)
   (common-lisp:declare (common-lisp:ignorable rest-api-id stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-flush-stage-authorizers-cache-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/stages/~A/cache/authorizers"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))))
                                                        "FlushStageAuthorizersCache"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'flush-stage-authorizers-cache))
(common-lisp:progn
 (common-lisp:defun flush-stage-cache
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id stage-name)
   (common-lisp:declare (common-lisp:ignorable rest-api-id stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-flush-stage-cache-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/stages/~A/cache/data"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))))
                                                        "FlushStageCache"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'flush-stage-cache))
(common-lisp:progn
 (common-lisp:defun generate-client-certificate
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key description tags)
   (common-lisp:declare (common-lisp:ignorable description tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-generate-client-certificate-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/clientcertificates"
                                                        "GenerateClientCertificate"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'generate-client-certificate))
(common-lisp:progn
 (common-lisp:defun get-account ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'apigateway-request :method "GET" :path
                                "/account" :protocol :rest-json :operation
                                "GetAccount" :params
                                `(("Action" ,@"GetAccount")
                                  ("Version" ,@"2015-07-09"))))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-account))
(common-lisp:progn
 (common-lisp:defun get-api-key
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-key include-value)
   (common-lisp:declare (common-lisp:ignorable api-key include-value))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-api-key-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/apikeys/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-key))))
                                                        "GetApiKey"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-api-key))
(common-lisp:progn
 (common-lisp:defun get-api-keys
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key position limit name-query customer-id
                     include-values)
   (common-lisp:declare
    (common-lisp:ignorable position limit name-query customer-id
     include-values))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-api-keys-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/apikeys" "GetApiKeys"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-api-keys))
(common-lisp:progn
 (common-lisp:defun get-authorizer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id authorizer-id)
   (common-lisp:declare (common-lisp:ignorable rest-api-id authorizer-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-authorizer-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/authorizers/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'authorizer-id))))
                                                        "GetAuthorizer"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-authorizer))
(common-lisp:progn
 (common-lisp:defun get-authorizers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id position limit)
   (common-lisp:declare (common-lisp:ignorable rest-api-id position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-authorizers-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/authorizers"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "GetAuthorizers"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-authorizers))
(common-lisp:progn
 (common-lisp:defun get-base-path-mapping
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name base-path)
   (common-lisp:declare (common-lisp:ignorable domain-name base-path))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-base-path-mapping-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/domainnames/~A/basepathmappings/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'domain-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'base-path))))
                                                        "GetBasePathMapping"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-base-path-mapping))
(common-lisp:progn
 (common-lisp:defun get-base-path-mappings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name position limit)
   (common-lisp:declare (common-lisp:ignorable domain-name position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-base-path-mappings-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/domainnames/~A/basepathmappings"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'domain-name))))
                                                        "GetBasePathMappings"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-base-path-mappings))
(common-lisp:progn
 (common-lisp:defun get-client-certificate
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-certificate-id)
   (common-lisp:declare (common-lisp:ignorable client-certificate-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-client-certificate-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/clientcertificates/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'clientcertificate-id))))
                                                        "GetClientCertificate"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-client-certificate))
(common-lisp:progn
 (common-lisp:defun get-client-certificates
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key position limit)
   (common-lisp:declare (common-lisp:ignorable position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-client-certificates-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/clientcertificates"
                                                        "GetClientCertificates"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-client-certificates))
(common-lisp:progn
 (common-lisp:defun get-deployment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id deployment-id embed)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id deployment-id embed))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-deployment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/deployments/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'deployment-id))))
                                                        "GetDeployment"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-deployment))
(common-lisp:progn
 (common-lisp:defun get-deployments
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id position limit)
   (common-lisp:declare (common-lisp:ignorable rest-api-id position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-deployments-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/deployments"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "GetDeployments"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-deployments))
(common-lisp:progn
 (common-lisp:defun get-documentation-part
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id documentation-part-id)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id documentation-part-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-documentation-part-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/documentation/parts/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'part-id))))
                                                        "GetDocumentationPart"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-documentation-part))
(common-lisp:progn
 (common-lisp:defun get-documentation-parts
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id type name-query path position
                     limit location-status)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id type name-query path position limit
     location-status))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-documentation-parts-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/documentation/parts"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "GetDocumentationParts"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-documentation-parts))
(common-lisp:progn
 (common-lisp:defun get-documentation-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id documentation-version)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id documentation-version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-documentation-version-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/documentation/versions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'doc-version))))
                                                        "GetDocumentationVersion"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-documentation-version))
(common-lisp:progn
 (common-lisp:defun get-documentation-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id position limit)
   (common-lisp:declare (common-lisp:ignorable rest-api-id position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-documentation-versions-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/documentation/versions"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "GetDocumentationVersions"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-documentation-versions))
(common-lisp:progn
 (common-lisp:defun get-domain-name
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name)
   (common-lisp:declare (common-lisp:ignorable domain-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-domain-name-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/domainnames/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'domain-name))))
                                                        "GetDomainName"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-domain-name))
(common-lisp:progn
 (common-lisp:defun get-domain-names
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key position limit)
   (common-lisp:declare (common-lisp:ignorable position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-domain-names-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/domainnames"
                                                        "GetDomainNames"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-domain-names))
(common-lisp:progn
 (common-lisp:defun get-export
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id stage-name export-type
                     parameters accepts)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id stage-name export-type parameters
     accepts))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-export-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/stages/~A/exports/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'export-type))))
                                                        "GetExport"
                                                        "2015-07-09")
       :want-stream common-lisp:t)
      "blob" common-lisp:nil *error-map*)))
 (common-lisp:export 'get-export))
(common-lisp:progn
 (common-lisp:defun get-gateway-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id response-type)
   (common-lisp:declare (common-lisp:ignorable rest-api-id response-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-gateway-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/gatewayresponses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'response-type))))
                                                        "GetGatewayResponse"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-gateway-response))
(common-lisp:progn
 (common-lisp:defun get-gateway-responses
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id position limit)
   (common-lisp:declare (common-lisp:ignorable rest-api-id position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-gateway-responses-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/gatewayresponses"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "GetGatewayResponses"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-gateway-responses))
(common-lisp:progn
 (common-lisp:defun get-integration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-integration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A/integration"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))))
                                                        "GetIntegration"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-integration))
(common-lisp:progn
 (common-lisp:defun get-integration-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     status-code)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method status-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-integration-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A/integration/responses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'status-code))))
                                                        "GetIntegrationResponse"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-integration-response))
(common-lisp:progn
 (common-lisp:defun get-method
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-method-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))))
                                                        "GetMethod"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-method))
(common-lisp:progn
 (common-lisp:defun get-method-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     status-code)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method status-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-method-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A/responses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'status-code))))
                                                        "GetMethodResponse"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-method-response))
(common-lisp:progn
 (common-lisp:defun get-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id model-name flatten)
   (common-lisp:declare (common-lisp:ignorable rest-api-id model-name flatten))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/models/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'model-name))))
                                                        "GetModel"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-model))
(common-lisp:progn
 (common-lisp:defun get-model-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id model-name)
   (common-lisp:declare (common-lisp:ignorable rest-api-id model-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-model-template-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/models/~A/default_template"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'model-name))))
                                                        "GetModelTemplate"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-model-template))
(common-lisp:progn
 (common-lisp:defun get-models
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id position limit)
   (common-lisp:declare (common-lisp:ignorable rest-api-id position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-models-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/models"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "GetModels"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-models))
(common-lisp:progn
 (common-lisp:defun get-request-validator
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id request-validator-id)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id request-validator-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-request-validator-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/requestvalidators/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'requestvalidator-id))))
                                                        "GetRequestValidator"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-request-validator))
(common-lisp:progn
 (common-lisp:defun get-request-validators
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id position limit)
   (common-lisp:declare (common-lisp:ignorable rest-api-id position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-request-validators-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/requestvalidators"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "GetRequestValidators"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-request-validators))
(common-lisp:progn
 (common-lisp:defun get-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id embed)
   (common-lisp:declare (common-lisp:ignorable rest-api-id resource-id embed))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))))
                                                        "GetResource"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-resource))
(common-lisp:progn
 (common-lisp:defun get-resources
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id position limit embed)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id position limit embed))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-resources-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "GetResources"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-resources))
(common-lisp:progn
 (common-lisp:defun get-rest-api
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id)
   (common-lisp:declare (common-lisp:ignorable rest-api-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-rest-api-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "GetRestApi"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-rest-api))
(common-lisp:progn
 (common-lisp:defun get-rest-apis
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key position limit)
   (common-lisp:declare (common-lisp:ignorable position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-rest-apis-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/restapis"
                                                        "GetRestApis"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-rest-apis))
(common-lisp:progn
 (common-lisp:defun get-sdk
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id stage-name sdk-type
                     parameters)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id stage-name sdk-type parameters))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-sdk-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/stages/~A/sdks/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'sdk-type))))
                                                        "GetSdk" "2015-07-09")
       :want-stream common-lisp:t)
      "blob" common-lisp:nil *error-map*)))
 (common-lisp:export 'get-sdk))
(common-lisp:progn
 (common-lisp:defun get-sdk-type
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-sdk-type-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/sdktypes/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'sdktype-id))))
                                                        "GetSdkType"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-sdk-type))
(common-lisp:progn
 (common-lisp:defun get-sdk-types
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key position limit)
   (common-lisp:declare (common-lisp:ignorable position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-sdk-types-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/sdktypes"
                                                        "GetSdkTypes"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-sdk-types))
(common-lisp:progn
 (common-lisp:defun get-stage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id stage-name)
   (common-lisp:declare (common-lisp:ignorable rest-api-id stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-stage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/stages/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))))
                                                        "GetStage"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-stage))
(common-lisp:progn
 (common-lisp:defun get-stages
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id deployment-id)
   (common-lisp:declare (common-lisp:ignorable rest-api-id deployment-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-stages-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/stages"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "GetStages"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-stages))
(common-lisp:progn
 (common-lisp:defun get-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn position limit)
   (common-lisp:declare (common-lisp:ignorable resource-arn position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-tags-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "GetTags"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-tags))
(common-lisp:progn
 (common-lisp:defun get-usage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key usage-plan-id key-id start-date end-date
                     position limit)
   (common-lisp:declare
    (common-lisp:ignorable usage-plan-id key-id start-date end-date position
     limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-usage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/usageplans/~A/usage"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'usageplan-id))))
                                                        "GetUsage"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-usage))
(common-lisp:progn
 (common-lisp:defun get-usage-plan
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key usage-plan-id)
   (common-lisp:declare (common-lisp:ignorable usage-plan-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-usage-plan-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/usageplans/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'usageplan-id))))
                                                        "GetUsagePlan"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-usage-plan))
(common-lisp:progn
 (common-lisp:defun get-usage-plan-key
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key usage-plan-id key-id)
   (common-lisp:declare (common-lisp:ignorable usage-plan-id key-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-usage-plan-key-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/usageplans/~A/keys/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'usageplan-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'key-id))))
                                                        "GetUsagePlanKey"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-usage-plan-key))
(common-lisp:progn
 (common-lisp:defun get-usage-plan-keys
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key usage-plan-id position limit name-query)
   (common-lisp:declare
    (common-lisp:ignorable usage-plan-id position limit name-query))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-usage-plan-keys-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/usageplans/~A/keys"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'usageplan-id))))
                                                        "GetUsagePlanKeys"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-usage-plan-keys))
(common-lisp:progn
 (common-lisp:defun get-usage-plans
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key position key-id limit)
   (common-lisp:declare (common-lisp:ignorable position key-id limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-usage-plans-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/usageplans"
                                                        "GetUsagePlans"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-usage-plans))
(common-lisp:progn
 (common-lisp:defun get-vpc-link
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key vpc-link-id)
   (common-lisp:declare (common-lisp:ignorable vpc-link-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-vpc-link-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/vpclinks/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vpclink-id))))
                                                        "GetVpcLink"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-vpc-link))
(common-lisp:progn
 (common-lisp:defun get-vpc-links
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key position limit)
   (common-lisp:declare (common-lisp:ignorable position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-vpc-links-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/vpclinks"
                                                        "GetVpcLinks"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-vpc-links))
(common-lisp:progn
 (common-lisp:defun import-api-keys
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key body format fail-on-warnings)
   (common-lisp:declare (common-lisp:ignorable body format fail-on-warnings))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-import-api-keys-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/apikeys?mode=import"
                                                        "ImportApiKeys"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'import-api-keys))
(common-lisp:progn
 (common-lisp:defun import-documentation-parts
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id mode fail-on-warnings body)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id mode fail-on-warnings body))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-import-documentation-parts-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/documentation/parts"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "ImportDocumentationParts"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'import-documentation-parts))
(common-lisp:progn
 (common-lisp:defun import-rest-api
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key fail-on-warnings parameters body)
   (common-lisp:declare
    (common-lisp:ignorable fail-on-warnings parameters body))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-import-rest-api-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/restapis?mode=import"
                                                        "ImportRestApi"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'import-rest-api))
(common-lisp:progn
 (common-lisp:defun put-gateway-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id response-type status-code
                     response-parameters response-templates)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id response-type status-code
     response-parameters response-templates))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-gateway-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/gatewayresponses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'response-type))))
                                                        "PutGatewayResponse"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-gateway-response))
(common-lisp:progn
 (common-lisp:defun put-integration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method type
                     integration-http-method uri connection-type connection-id
                     credentials request-parameters request-templates
                     passthrough-behavior cache-namespace cache-key-parameters
                     content-handling timeout-in-millis tls-config)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method type
     integration-http-method uri connection-type connection-id credentials
     request-parameters request-templates passthrough-behavior cache-namespace
     cache-key-parameters content-handling timeout-in-millis tls-config))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-integration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A/integration"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))))
                                                        "PutIntegration"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-integration))
(common-lisp:progn
 (common-lisp:defun put-integration-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     status-code selection-pattern response-parameters
                     response-templates content-handling)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method status-code
     selection-pattern response-parameters response-templates
     content-handling))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-integration-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A/integration/responses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'status-code))))
                                                        "PutIntegrationResponse"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-integration-response))
(common-lisp:progn
 (common-lisp:defun put-method
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     authorization-type authorizer-id api-key-required
                     operation-name request-parameters request-models
                     request-validator-id authorization-scopes)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method
     authorization-type authorizer-id api-key-required operation-name
     request-parameters request-models request-validator-id
     authorization-scopes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-method-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))))
                                                        "PutMethod"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-method))
(common-lisp:progn
 (common-lisp:defun put-method-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     status-code response-parameters response-models)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method status-code
     response-parameters response-models))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-method-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A/responses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'status-code))))
                                                        "PutMethodResponse"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-method-response))
(common-lisp:progn
 (common-lisp:defun put-rest-api
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id mode fail-on-warnings
                     parameters body)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id mode fail-on-warnings parameters body))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-rest-api-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "PutRestApi"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-rest-api))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "TagResource"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun test-invoke-authorizer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id authorizer-id headers
                     multi-value-headers path-with-query-string body
                     stage-variables additional-context)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id authorizer-id headers
     multi-value-headers path-with-query-string body stage-variables
     additional-context))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-test-invoke-authorizer-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/authorizers/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'authorizer-id))))
                                                        "TestInvokeAuthorizer"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'test-invoke-authorizer))
(common-lisp:progn
 (common-lisp:defun test-invoke-method
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     path-with-query-string body headers multi-value-headers
                     client-certificate-id stage-variables)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method
     path-with-query-string body headers multi-value-headers
     client-certificate-id stage-variables))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-test-invoke-method-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))))
                                                        "TestInvokeMethod"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'test-invoke-method))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "UntagResource"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-account
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key patch-operations)
   (common-lisp:declare (common-lisp:ignorable patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-account-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH" :rest-json
                                                        "/account"
                                                        "UpdateAccount"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-account))
(common-lisp:progn
 (common-lisp:defun update-api-key
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-key patch-operations)
   (common-lisp:declare (common-lisp:ignorable api-key patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-api-key-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/apikeys/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-key))))
                                                        "UpdateApiKey"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-api-key))
(common-lisp:progn
 (common-lisp:defun update-authorizer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id authorizer-id
                     patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id authorizer-id patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-authorizer-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/authorizers/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'authorizer-id))))
                                                        "UpdateAuthorizer"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-authorizer))
(common-lisp:progn
 (common-lisp:defun update-base-path-mapping
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name base-path patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable domain-name base-path patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-base-path-mapping-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/domainnames/~A/basepathmappings/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'domain-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'base-path))))
                                                        "UpdateBasePathMapping"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-base-path-mapping))
(common-lisp:progn
 (common-lisp:defun update-client-certificate
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-certificate-id patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable client-certificate-id patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-client-certificate-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/clientcertificates/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'clientcertificate-id))))
                                                        "UpdateClientCertificate"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-client-certificate))
(common-lisp:progn
 (common-lisp:defun update-deployment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id deployment-id
                     patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id deployment-id patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-deployment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/deployments/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'deployment-id))))
                                                        "UpdateDeployment"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-deployment))
(common-lisp:progn
 (common-lisp:defun update-documentation-part
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id documentation-part-id
                     patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id documentation-part-id patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-documentation-part-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/documentation/parts/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'part-id))))
                                                        "UpdateDocumentationPart"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-documentation-part))
(common-lisp:progn
 (common-lisp:defun update-documentation-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id documentation-version
                     patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id documentation-version patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-documentation-version-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/documentation/versions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'doc-version))))
                                                        "UpdateDocumentationVersion"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-documentation-version))
(common-lisp:progn
 (common-lisp:defun update-domain-name
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name patch-operations)
   (common-lisp:declare (common-lisp:ignorable domain-name patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-domain-name-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/domainnames/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'domain-name))))
                                                        "UpdateDomainName"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-domain-name))
(common-lisp:progn
 (common-lisp:defun update-gateway-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id response-type
                     patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id response-type patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-gateway-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/gatewayresponses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'response-type))))
                                                        "UpdateGatewayResponse"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-gateway-response))
(common-lisp:progn
 (common-lisp:defun update-integration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method
     patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-integration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A/integration"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))))
                                                        "UpdateIntegration"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-integration))
(common-lisp:progn
 (common-lisp:defun update-integration-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     status-code patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method status-code
     patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-integration-response-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A/integration/responses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'status-code))))
                                                        "UpdateIntegrationResponse"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-integration-response))
(common-lisp:progn
 (common-lisp:defun update-method
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method
     patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-method-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))))
                                                        "UpdateMethod"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-method))
(common-lisp:progn
 (common-lisp:defun update-method-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     status-code patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method status-code
     patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-method-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A/responses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'status-code))))
                                                        "UpdateMethodResponse"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-method-response))
(common-lisp:progn
 (common-lisp:defun update-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id model-name patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id model-name patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/models/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'model-name))))
                                                        "UpdateModel"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-model))
(common-lisp:progn
 (common-lisp:defun update-request-validator
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id request-validator-id
                     patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id request-validator-id patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-request-validator-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/requestvalidators/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'requestvalidator-id))))
                                                        "UpdateRequestValidator"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-request-validator))
(common-lisp:progn
 (common-lisp:defun update-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))))
                                                        "UpdateResource"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-resource))
(common-lisp:progn
 (common-lisp:defun update-rest-api
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id patch-operations)
   (common-lisp:declare (common-lisp:ignorable rest-api-id patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-rest-api-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "UpdateRestApi"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-rest-api))
(common-lisp:progn
 (common-lisp:defun update-stage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id stage-name patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id stage-name patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-stage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/stages/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))))
                                                        "UpdateStage"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-stage))
(common-lisp:progn
 (common-lisp:defun update-usage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key usage-plan-id key-id patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable usage-plan-id key-id patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-usage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/usageplans/~A/keys/~A/usage"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'usageplan-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'key-id))))
                                                        "UpdateUsage"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-usage))
(common-lisp:progn
 (common-lisp:defun update-usage-plan
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key usage-plan-id patch-operations)
   (common-lisp:declare (common-lisp:ignorable usage-plan-id patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-usage-plan-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/usageplans/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'usageplan-id))))
                                                        "UpdateUsagePlan"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-usage-plan))
(common-lisp:progn
 (common-lisp:defun update-vpc-link
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key vpc-link-id patch-operations)
   (common-lisp:declare (common-lisp:ignorable vpc-link-id patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-vpc-link-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/vpclinks/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vpclink-id))))
                                                        "UpdateVpcLink"
                                                        "2015-07-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-vpc-link))
