;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/datasync/api
  (:use)
  (:nicknames #:aws/datasync)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/datasync/api)
(common-lisp:progn
 (common-lisp:defclass datasync-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "datasync" :protocol :json))
 (common-lisp:export 'datasync-request))
(common-lisp:progn
 (common-lisp:define-condition datasync-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'datasync-error))
(common-lisp:defvar *error-map*
  '(("InternalException" . internal-exception)
    ("InvalidRequestException" . invalid-request-exception)))
(common-lisp:deftype activation-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (add-storage-system-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-add-storage-system-request-"))
   (server-configuration
    (common-lisp:error ":server-configuration is required") :type
    (common-lisp:or discovery-server-configuration common-lisp:null))
   (system-type (common-lisp:error ":system-type is required") :type
    (common-lisp:or discovery-system-type common-lisp:null))
   (agent-arns (common-lisp:error ":agent-arns is required") :type
    (common-lisp:or discovery-agent-arn-list common-lisp:null))
   (cloud-watch-log-group-arn common-lisp:nil :type
    (common-lisp:or log-group-arn common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or input-tag-list common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (client-token (common-lisp:error ":client-token is required") :type
    (common-lisp:or ptolemy-uuid common-lisp:null))
   (credentials (common-lisp:error ":credentials is required") :type
    (common-lisp:or credentials common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-storage-system-request
                    'make-add-storage-system-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          add-storage-system-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          add-storage-system-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'server-configuration))
      (common-lisp:list
       (common-lisp:cons "ServerConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'system-type))
      (common-lisp:list
       (common-lisp:cons "SystemType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-arns))
      (common-lisp:list
       (common-lisp:cons "AgentArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cloud-watch-log-group-arn))
      (common-lisp:list
       (common-lisp:cons "CloudWatchLogGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'credentials))
      (common-lisp:list
       (common-lisp:cons "Credentials"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          add-storage-system-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (add-storage-system-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-add-storage-system-response-"))
   (storage-system-arn (common-lisp:error ":storage-system-arn is required")
    :type (common-lisp:or storage-system-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-storage-system-response
                    'make-add-storage-system-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          add-storage-system-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          add-storage-system-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'storage-system-arn))
      (common-lisp:list
       (common-lisp:cons "StorageSystemArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          add-storage-system-response))
   common-lisp:nil))
(common-lisp:deftype agent-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype agent-arn-list () '(trivial-types:proper-list agent-arn))
 (common-lisp:defun |make-agent-arn-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list agent-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype agent-list ()
   '(trivial-types:proper-list agent-list-entry))
 (common-lisp:defun |make-agent-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list agent-list-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (agent-list-entry (:copier common-lisp:nil)
      (:conc-name "struct-shape-agent-list-entry-"))
   (agent-arn common-lisp:nil :type
    (common-lisp:or agent-arn common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or tag-value common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or agent-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'agent-list-entry 'make-agent-list-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input agent-list-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input agent-list-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-arn))
      (common-lisp:list
       (common-lisp:cons "AgentArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input agent-list-entry))
   common-lisp:nil))
(common-lisp:deftype agent-status () 'common-lisp:string)
(common-lisp:deftype atime () 'common-lisp:string)
(common-lisp:deftype bytes-per-second () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (cancel-task-execution-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-cancel-task-execution-request-"))
   (task-execution-arn (common-lisp:error ":task-execution-arn is required")
    :type (common-lisp:or task-execution-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cancel-task-execution-request
                    'make-cancel-task-execution-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cancel-task-execution-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cancel-task-execution-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-execution-arn))
      (common-lisp:list
       (common-lisp:cons "TaskExecutionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cancel-task-execution-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (cancel-task-execution-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-cancel-task-execution-response-")))
 (common-lisp:export
  (common-lisp:list 'cancel-task-execution-response
                    'make-cancel-task-execution-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cancel-task-execution-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cancel-task-execution-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cancel-task-execution-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (capacity (:copier common-lisp:nil) (:conc-name "struct-shape-capacity-"))
   (used common-lisp:nil :type
    (common-lisp:or non-negative-long common-lisp:null))
   (provisioned common-lisp:nil :type
    (common-lisp:or non-negative-long common-lisp:null))
   (logical-used common-lisp:nil :type
    (common-lisp:or non-negative-long common-lisp:null)))
 (common-lisp:export (common-lisp:list 'capacity 'make-capacity))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input capacity))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input capacity))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'used))
      (common-lisp:list
       (common-lisp:cons "Used"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'provisioned))
      (common-lisp:list
       (common-lisp:cons "Provisioned"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'logical-used))
      (common-lisp:list
       (common-lisp:cons "LogicalUsed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input capacity))
   common-lisp:nil))
(common-lisp:deftype collection-duration-minutes () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (create-agent-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-agent-request-"))
   (activation-key (common-lisp:error ":activation-key is required") :type
    (common-lisp:or activation-key common-lisp:null))
   (agent-name common-lisp:nil :type
    (common-lisp:or tag-value common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or input-tag-list common-lisp:null))
   (vpc-endpoint-id common-lisp:nil :type
    (common-lisp:or vpc-endpoint-id common-lisp:null))
   (subnet-arns common-lisp:nil :type
    (common-lisp:or plsubnet-arn-list common-lisp:null))
   (security-group-arns common-lisp:nil :type
    (common-lisp:or plsecurity-group-arn-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-agent-request 'make-create-agent-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-agent-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-agent-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'activation-key))
      (common-lisp:list
       (common-lisp:cons "ActivationKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-name))
      (common-lisp:list
       (common-lisp:cons "AgentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-endpoint-id))
      (common-lisp:list
       (common-lisp:cons "VpcEndpointId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-arns))
      (common-lisp:list
       (common-lisp:cons "SubnetArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-arns))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-agent-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-agent-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-agent-response-"))
   (agent-arn common-lisp:nil :type
    (common-lisp:or agent-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-agent-response 'make-create-agent-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-agent-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-agent-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-arn))
      (common-lisp:list
       (common-lisp:cons "AgentArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-agent-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-location-efs-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-location-efs-request-"))
   (subdirectory common-lisp:nil :type
    (common-lisp:or efs-subdirectory common-lisp:null))
   (efs-filesystem-arn (common-lisp:error ":efs-filesystem-arn is required")
    :type (common-lisp:or efs-filesystem-arn common-lisp:null))
   (ec2config (common-lisp:error ":ec2config is required") :type
    (common-lisp:or ec2config common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or input-tag-list common-lisp:null))
   (access-point-arn common-lisp:nil :type
    (common-lisp:or efs-access-point-arn common-lisp:null))
   (file-system-access-role-arn common-lisp:nil :type
    (common-lisp:or iam-role-arn common-lisp:null))
   (in-transit-encryption common-lisp:nil :type
    (common-lisp:or efs-in-transit-encryption common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-location-efs-request
                    'make-create-location-efs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-location-efs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-location-efs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subdirectory))
      (common-lisp:list
       (common-lisp:cons "Subdirectory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'efs-filesystem-arn))
      (common-lisp:list
       (common-lisp:cons "EfsFilesystemArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ec2config))
      (common-lisp:list
       (common-lisp:cons "Ec2Config"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-point-arn))
      (common-lisp:list
       (common-lisp:cons "AccessPointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'file-system-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "FileSystemAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'in-transit-encryption))
      (common-lisp:list
       (common-lisp:cons "InTransitEncryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-location-efs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-location-efs-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-location-efs-response-"))
   (location-arn common-lisp:nil :type
    (common-lisp:or location-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-location-efs-response
                    'make-create-location-efs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-location-efs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-location-efs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-location-efs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-location-fsx-lustre-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-location-fsx-lustre-request-"))
   (fsx-filesystem-arn (common-lisp:error ":fsx-filesystem-arn is required")
    :type (common-lisp:or fsx-filesystem-arn common-lisp:null))
   (security-group-arns (common-lisp:error ":security-group-arns is required")
    :type (common-lisp:or ec2security-group-arn-list common-lisp:null))
   (subdirectory common-lisp:nil :type
    (common-lisp:or fsx-lustre-subdirectory common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or input-tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-location-fsx-lustre-request
                    'make-create-location-fsx-lustre-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-lustre-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-lustre-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fsx-filesystem-arn))
      (common-lisp:list
       (common-lisp:cons "FsxFilesystemArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-arns))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subdirectory))
      (common-lisp:list
       (common-lisp:cons "Subdirectory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-lustre-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-location-fsx-lustre-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-location-fsx-lustre-response-"))
   (location-arn common-lisp:nil :type
    (common-lisp:or location-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-location-fsx-lustre-response
                    'make-create-location-fsx-lustre-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-lustre-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-lustre-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-lustre-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-location-fsx-ontap-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-location-fsx-ontap-request-"))
   (protocol (common-lisp:error ":protocol is required") :type
    (common-lisp:or fsx-protocol common-lisp:null))
   (security-group-arns (common-lisp:error ":security-group-arns is required")
    :type (common-lisp:or ec2security-group-arn-list common-lisp:null))
   (storage-virtual-machine-arn
    (common-lisp:error ":storage-virtual-machine-arn is required") :type
    (common-lisp:or storage-virtual-machine-arn common-lisp:null))
   (subdirectory common-lisp:nil :type
    (common-lisp:or fsx-ontap-subdirectory common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or input-tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-location-fsx-ontap-request
                    'make-create-location-fsx-ontap-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-ontap-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-ontap-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol))
      (common-lisp:list
       (common-lisp:cons "Protocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-arns))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'storage-virtual-machine-arn))
      (common-lisp:list
       (common-lisp:cons "StorageVirtualMachineArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subdirectory))
      (common-lisp:list
       (common-lisp:cons "Subdirectory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-ontap-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-location-fsx-ontap-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-location-fsx-ontap-response-"))
   (location-arn common-lisp:nil :type
    (common-lisp:or location-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-location-fsx-ontap-response
                    'make-create-location-fsx-ontap-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-ontap-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-ontap-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-ontap-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-location-fsx-open-zfs-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-location-fsx-open-zfs-request-"))
   (fsx-filesystem-arn (common-lisp:error ":fsx-filesystem-arn is required")
    :type (common-lisp:or fsx-filesystem-arn common-lisp:null))
   (protocol (common-lisp:error ":protocol is required") :type
    (common-lisp:or fsx-protocol common-lisp:null))
   (security-group-arns (common-lisp:error ":security-group-arns is required")
    :type (common-lisp:or ec2security-group-arn-list common-lisp:null))
   (subdirectory common-lisp:nil :type
    (common-lisp:or fsx-open-zfs-subdirectory common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or input-tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-location-fsx-open-zfs-request
                    'make-create-location-fsx-open-zfs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-open-zfs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-open-zfs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fsx-filesystem-arn))
      (common-lisp:list
       (common-lisp:cons "FsxFilesystemArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol))
      (common-lisp:list
       (common-lisp:cons "Protocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-arns))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subdirectory))
      (common-lisp:list
       (common-lisp:cons "Subdirectory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-open-zfs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-location-fsx-open-zfs-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-location-fsx-open-zfs-response-"))
   (location-arn common-lisp:nil :type
    (common-lisp:or location-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-location-fsx-open-zfs-response
                    'make-create-location-fsx-open-zfs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-open-zfs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-open-zfs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-open-zfs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-location-fsx-windows-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-location-fsx-windows-request-"))
   (subdirectory common-lisp:nil :type
    (common-lisp:or fsx-windows-subdirectory common-lisp:null))
   (fsx-filesystem-arn (common-lisp:error ":fsx-filesystem-arn is required")
    :type (common-lisp:or fsx-filesystem-arn common-lisp:null))
   (security-group-arns (common-lisp:error ":security-group-arns is required")
    :type (common-lisp:or ec2security-group-arn-list common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or input-tag-list common-lisp:null))
   (user (common-lisp:error ":user is required") :type
    (common-lisp:or smb-user common-lisp:null))
   (domain common-lisp:nil :type (common-lisp:or smb-domain common-lisp:null))
   (password (common-lisp:error ":password is required") :type
    (common-lisp:or smb-password common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-location-fsx-windows-request
                    'make-create-location-fsx-windows-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-windows-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-windows-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subdirectory))
      (common-lisp:list
       (common-lisp:cons "Subdirectory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fsx-filesystem-arn))
      (common-lisp:list
       (common-lisp:cons "FsxFilesystemArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-arns))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user))
      (common-lisp:list
       (common-lisp:cons "User"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain))
      (common-lisp:list
       (common-lisp:cons "Domain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'password))
      (common-lisp:list
       (common-lisp:cons "Password"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-windows-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-location-fsx-windows-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-location-fsx-windows-response-"))
   (location-arn common-lisp:nil :type
    (common-lisp:or location-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-location-fsx-windows-response
                    'make-create-location-fsx-windows-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-windows-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-windows-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-windows-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-location-hdfs-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-location-hdfs-request-"))
   (subdirectory common-lisp:nil :type
    (common-lisp:or hdfs-subdirectory common-lisp:null))
   (name-nodes (common-lisp:error ":name-nodes is required") :type
    (common-lisp:or hdfs-name-node-list common-lisp:null))
   (block-size common-lisp:nil :type
    (common-lisp:or hdfs-block-size common-lisp:null))
   (replication-factor common-lisp:nil :type
    (common-lisp:or hdfs-replication-factor common-lisp:null))
   (kms-key-provider-uri common-lisp:nil :type
    (common-lisp:or kms-key-provider-uri common-lisp:null))
   (qop-configuration common-lisp:nil :type
    (common-lisp:or qop-configuration common-lisp:null))
   (authentication-type (common-lisp:error ":authentication-type is required")
    :type (common-lisp:or hdfs-authentication-type common-lisp:null))
   (simple-user common-lisp:nil :type
    (common-lisp:or hdfs-user common-lisp:null))
   (kerberos-principal common-lisp:nil :type
    (common-lisp:or kerberos-principal common-lisp:null))
   (kerberos-keytab common-lisp:nil :type
    (common-lisp:or kerberos-keytab-file common-lisp:null))
   (kerberos-krb5conf common-lisp:nil :type
    (common-lisp:or kerberos-krb5conf-file common-lisp:null))
   (agent-arns (common-lisp:error ":agent-arns is required") :type
    (common-lisp:or agent-arn-list common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or input-tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-location-hdfs-request
                    'make-create-location-hdfs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-location-hdfs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-location-hdfs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subdirectory))
      (common-lisp:list
       (common-lisp:cons "Subdirectory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name-nodes))
      (common-lisp:list
       (common-lisp:cons "NameNodes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'block-size))
      (common-lisp:list
       (common-lisp:cons "BlockSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replication-factor))
      (common-lisp:list
       (common-lisp:cons "ReplicationFactor"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'kms-key-provider-uri))
      (common-lisp:list
       (common-lisp:cons "KmsKeyProviderUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'qop-configuration))
      (common-lisp:list
       (common-lisp:cons "QopConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authentication-type))
      (common-lisp:list
       (common-lisp:cons "AuthenticationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'simple-user))
      (common-lisp:list
       (common-lisp:cons "SimpleUser"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kerberos-principal))
      (common-lisp:list
       (common-lisp:cons "KerberosPrincipal"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kerberos-keytab))
      (common-lisp:list
       (common-lisp:cons "KerberosKeytab"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kerberos-krb5conf))
      (common-lisp:list
       (common-lisp:cons "KerberosKrb5Conf"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-arns))
      (common-lisp:list
       (common-lisp:cons "AgentArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-location-hdfs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-location-hdfs-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-location-hdfs-response-"))
   (location-arn common-lisp:nil :type
    (common-lisp:or location-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-location-hdfs-response
                    'make-create-location-hdfs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-location-hdfs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-location-hdfs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-location-hdfs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-location-nfs-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-location-nfs-request-"))
   (subdirectory (common-lisp:error ":subdirectory is required") :type
    (common-lisp:or nfs-subdirectory common-lisp:null))
   (server-hostname (common-lisp:error ":server-hostname is required") :type
    (common-lisp:or server-hostname common-lisp:null))
   (on-prem-config (common-lisp:error ":on-prem-config is required") :type
    (common-lisp:or on-prem-config common-lisp:null))
   (mount-options common-lisp:nil :type
    (common-lisp:or nfs-mount-options common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or input-tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-location-nfs-request
                    'make-create-location-nfs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-location-nfs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-location-nfs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subdirectory))
      (common-lisp:list
       (common-lisp:cons "Subdirectory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'server-hostname))
      (common-lisp:list
       (common-lisp:cons "ServerHostname"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'on-prem-config))
      (common-lisp:list
       (common-lisp:cons "OnPremConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mount-options))
      (common-lisp:list
       (common-lisp:cons "MountOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-location-nfs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-location-nfs-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-location-nfs-response-"))
   (location-arn common-lisp:nil :type
    (common-lisp:or location-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-location-nfs-response
                    'make-create-location-nfs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-location-nfs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-location-nfs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-location-nfs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-location-object-storage-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-location-object-storage-request-"))
   (server-hostname (common-lisp:error ":server-hostname is required") :type
    (common-lisp:or server-hostname common-lisp:null))
   (server-port common-lisp:nil :type
    (common-lisp:or object-storage-server-port common-lisp:null))
   (server-protocol common-lisp:nil :type
    (common-lisp:or object-storage-server-protocol common-lisp:null))
   (subdirectory common-lisp:nil :type
    (common-lisp:or s3subdirectory common-lisp:null))
   (bucket-name (common-lisp:error ":bucket-name is required") :type
    (common-lisp:or object-storage-bucket-name common-lisp:null))
   (access-key common-lisp:nil :type
    (common-lisp:or object-storage-access-key common-lisp:null))
   (secret-key common-lisp:nil :type
    (common-lisp:or object-storage-secret-key common-lisp:null))
   (agent-arns (common-lisp:error ":agent-arns is required") :type
    (common-lisp:or agent-arn-list common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or input-tag-list common-lisp:null))
   (server-certificate common-lisp:nil :type
    (common-lisp:or object-storage-certificate common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-location-object-storage-request
                    'make-create-location-object-storage-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-location-object-storage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-location-object-storage-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'server-hostname))
      (common-lisp:list
       (common-lisp:cons "ServerHostname"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'server-port))
      (common-lisp:list
       (common-lisp:cons "ServerPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'server-protocol))
      (common-lisp:list
       (common-lisp:cons "ServerProtocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subdirectory))
      (common-lisp:list
       (common-lisp:cons "Subdirectory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket-name))
      (common-lisp:list
       (common-lisp:cons "BucketName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-key))
      (common-lisp:list
       (common-lisp:cons "AccessKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'secret-key))
      (common-lisp:list
       (common-lisp:cons "SecretKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-arns))
      (common-lisp:list
       (common-lisp:cons "AgentArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'server-certificate))
      (common-lisp:list
       (common-lisp:cons "ServerCertificate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-location-object-storage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-location-object-storage-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-location-object-storage-response-"))
   (location-arn common-lisp:nil :type
    (common-lisp:or location-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-location-object-storage-response
                    'make-create-location-object-storage-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-location-object-storage-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-location-object-storage-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-location-object-storage-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-location-s3request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-location-s3request-"))
   (subdirectory common-lisp:nil :type
    (common-lisp:or s3subdirectory common-lisp:null))
   (s3bucket-arn (common-lisp:error ":s3bucket-arn is required") :type
    (common-lisp:or s3bucket-arn common-lisp:null))
   (s3storage-class common-lisp:nil :type
    (common-lisp:or s3storage-class common-lisp:null))
   (s3config (common-lisp:error ":s3config is required") :type
    (common-lisp:or s3config common-lisp:null))
   (agent-arns common-lisp:nil :type
    (common-lisp:or agent-arn-list common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or input-tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-location-s3request
                    'make-create-location-s3request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-location-s3request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-location-s3request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subdirectory))
      (common-lisp:list
       (common-lisp:cons "Subdirectory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3bucket-arn))
      (common-lisp:list
       (common-lisp:cons "S3BucketArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3storage-class))
      (common-lisp:list
       (common-lisp:cons "S3StorageClass"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3config))
      (common-lisp:list
       (common-lisp:cons "S3Config"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-arns))
      (common-lisp:list
       (common-lisp:cons "AgentArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-location-s3request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-location-s3response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-location-s3response-"))
   (location-arn common-lisp:nil :type
    (common-lisp:or location-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-location-s3response
                    'make-create-location-s3response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-location-s3response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-location-s3response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-location-s3response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-location-smb-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-location-smb-request-"))
   (subdirectory (common-lisp:error ":subdirectory is required") :type
    (common-lisp:or smb-subdirectory common-lisp:null))
   (server-hostname (common-lisp:error ":server-hostname is required") :type
    (common-lisp:or server-hostname common-lisp:null))
   (user (common-lisp:error ":user is required") :type
    (common-lisp:or smb-user common-lisp:null))
   (domain common-lisp:nil :type (common-lisp:or smb-domain common-lisp:null))
   (password (common-lisp:error ":password is required") :type
    (common-lisp:or smb-password common-lisp:null))
   (agent-arns (common-lisp:error ":agent-arns is required") :type
    (common-lisp:or agent-arn-list common-lisp:null))
   (mount-options common-lisp:nil :type
    (common-lisp:or smb-mount-options common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or input-tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-location-smb-request
                    'make-create-location-smb-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-location-smb-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-location-smb-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subdirectory))
      (common-lisp:list
       (common-lisp:cons "Subdirectory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'server-hostname))
      (common-lisp:list
       (common-lisp:cons "ServerHostname"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user))
      (common-lisp:list
       (common-lisp:cons "User"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain))
      (common-lisp:list
       (common-lisp:cons "Domain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'password))
      (common-lisp:list
       (common-lisp:cons "Password"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-arns))
      (common-lisp:list
       (common-lisp:cons "AgentArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mount-options))
      (common-lisp:list
       (common-lisp:cons "MountOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-location-smb-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-location-smb-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-location-smb-response-"))
   (location-arn common-lisp:nil :type
    (common-lisp:or location-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-location-smb-response
                    'make-create-location-smb-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-location-smb-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-location-smb-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-location-smb-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-task-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-task-request-"))
   (source-location-arn (common-lisp:error ":source-location-arn is required")
    :type (common-lisp:or location-arn common-lisp:null))
   (destination-location-arn
    (common-lisp:error ":destination-location-arn is required") :type
    (common-lisp:or location-arn common-lisp:null))
   (cloud-watch-log-group-arn common-lisp:nil :type
    (common-lisp:or log-group-arn common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or tag-value common-lisp:null))
   (options common-lisp:nil :type (common-lisp:or options common-lisp:null))
   (excludes common-lisp:nil :type
    (common-lisp:or filter-list common-lisp:null))
   (schedule common-lisp:nil :type
    (common-lisp:or task-schedule common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or input-tag-list common-lisp:null))
   (includes common-lisp:nil :type
    (common-lisp:or filter-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-task-request 'make-create-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-task-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-location-arn))
      (common-lisp:list
       (common-lisp:cons "SourceLocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'destination-location-arn))
      (common-lisp:list
       (common-lisp:cons "DestinationLocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cloud-watch-log-group-arn))
      (common-lisp:list
       (common-lisp:cons "CloudWatchLogGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'options))
      (common-lisp:list
       (common-lisp:cons "Options"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'excludes))
      (common-lisp:list
       (common-lisp:cons "Excludes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schedule))
      (common-lisp:list
       (common-lisp:cons "Schedule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'includes))
      (common-lisp:list
       (common-lisp:cons "Includes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-task-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-task-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-task-response-"))
   (task-arn common-lisp:nil :type (common-lisp:or task-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-task-response 'make-create-task-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-task-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-arn))
      (common-lisp:list
       (common-lisp:cons "TaskArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-task-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (credentials (:copier common-lisp:nil)
      (:conc-name "struct-shape-credentials-"))
   (username (common-lisp:error ":username is required") :type
    (common-lisp:or ptolemy-username common-lisp:null))
   (password (common-lisp:error ":password is required") :type
    (common-lisp:or ptolemy-password common-lisp:null)))
 (common-lisp:export (common-lisp:list 'credentials 'make-credentials))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input credentials))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input credentials))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'password))
      (common-lisp:list
       (common-lisp:cons "Password"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input credentials))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-agent-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-agent-request-"))
   (agent-arn (common-lisp:error ":agent-arn is required") :type
    (common-lisp:or agent-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-agent-request 'make-delete-agent-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-agent-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-agent-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-arn))
      (common-lisp:list
       (common-lisp:cons "AgentArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-agent-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-agent-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-agent-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-agent-response 'make-delete-agent-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-agent-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-agent-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-agent-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-location-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-location-request-"))
   (location-arn (common-lisp:error ":location-arn is required") :type
    (common-lisp:or location-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-location-request 'make-delete-location-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-location-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-location-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-location-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-location-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-location-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-location-response 'make-delete-location-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-location-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-location-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-location-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-task-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-task-request-"))
   (task-arn (common-lisp:error ":task-arn is required") :type
    (common-lisp:or task-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-task-request 'make-delete-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-task-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-arn))
      (common-lisp:list
       (common-lisp:cons "TaskArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-task-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-task-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-task-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-task-response 'make-delete-task-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-task-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-agent-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-agent-request-"))
   (agent-arn (common-lisp:error ":agent-arn is required") :type
    (common-lisp:or agent-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-agent-request 'make-describe-agent-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-agent-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-agent-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-arn))
      (common-lisp:list
       (common-lisp:cons "AgentArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-agent-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-agent-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-agent-response-"))
   (agent-arn common-lisp:nil :type
    (common-lisp:or agent-arn common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or tag-value common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or agent-status common-lisp:null))
   (last-connection-time common-lisp:nil :type
    (common-lisp:or time common-lisp:null))
   (creation-time common-lisp:nil :type (common-lisp:or time common-lisp:null))
   (endpoint-type common-lisp:nil :type
    (common-lisp:or endpoint-type common-lisp:null))
   (private-link-config common-lisp:nil :type
    (common-lisp:or private-link-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-agent-response 'make-describe-agent-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-agent-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-agent-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-arn))
      (common-lisp:list
       (common-lisp:cons "AgentArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-connection-time))
      (common-lisp:list
       (common-lisp:cons "LastConnectionTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-type))
      (common-lisp:list
       (common-lisp:cons "EndpointType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'private-link-config))
      (common-lisp:list
       (common-lisp:cons "PrivateLinkConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-agent-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-discovery-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-discovery-job-request-"))
   (discovery-job-arn (common-lisp:error ":discovery-job-arn is required")
    :type (common-lisp:or discovery-job-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-discovery-job-request
                    'make-describe-discovery-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-discovery-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-discovery-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'discovery-job-arn))
      (common-lisp:list
       (common-lisp:cons "DiscoveryJobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-discovery-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-discovery-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-discovery-job-response-"))
   (storage-system-arn common-lisp:nil :type
    (common-lisp:or storage-system-arn common-lisp:null))
   (discovery-job-arn common-lisp:nil :type
    (common-lisp:or discovery-job-arn common-lisp:null))
   (collection-duration-minutes common-lisp:nil :type
    (common-lisp:or collection-duration-minutes common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or discovery-job-status common-lisp:null))
   (job-start-time common-lisp:nil :type
    (common-lisp:or discovery-time common-lisp:null))
   (job-end-time common-lisp:nil :type
    (common-lisp:or discovery-time common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-discovery-job-response
                    'make-describe-discovery-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-discovery-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-discovery-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'storage-system-arn))
      (common-lisp:list
       (common-lisp:cons "StorageSystemArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'discovery-job-arn))
      (common-lisp:list
       (common-lisp:cons "DiscoveryJobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'collection-duration-minutes))
      (common-lisp:list
       (common-lisp:cons "CollectionDurationMinutes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-start-time))
      (common-lisp:list
       (common-lisp:cons "JobStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-end-time))
      (common-lisp:list
       (common-lisp:cons "JobEndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-discovery-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-location-efs-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-location-efs-request-"))
   (location-arn (common-lisp:error ":location-arn is required") :type
    (common-lisp:or location-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-location-efs-request
                    'make-describe-location-efs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-efs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-efs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-efs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-location-efs-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-location-efs-response-"))
   (location-arn common-lisp:nil :type
    (common-lisp:or location-arn common-lisp:null))
   (location-uri common-lisp:nil :type
    (common-lisp:or location-uri common-lisp:null))
   (ec2config common-lisp:nil :type
    (common-lisp:or ec2config common-lisp:null))
   (creation-time common-lisp:nil :type (common-lisp:or time common-lisp:null))
   (access-point-arn common-lisp:nil :type
    (common-lisp:or efs-access-point-arn common-lisp:null))
   (file-system-access-role-arn common-lisp:nil :type
    (common-lisp:or iam-role-arn common-lisp:null))
   (in-transit-encryption common-lisp:nil :type
    (common-lisp:or efs-in-transit-encryption common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-location-efs-response
                    'make-describe-location-efs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-efs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-efs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-uri))
      (common-lisp:list
       (common-lisp:cons "LocationUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ec2config))
      (common-lisp:list
       (common-lisp:cons "Ec2Config"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-point-arn))
      (common-lisp:list
       (common-lisp:cons "AccessPointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'file-system-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "FileSystemAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'in-transit-encryption))
      (common-lisp:list
       (common-lisp:cons "InTransitEncryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-efs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-location-fsx-lustre-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-location-fsx-lustre-request-"))
   (location-arn (common-lisp:error ":location-arn is required") :type
    (common-lisp:or location-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-location-fsx-lustre-request
                    'make-describe-location-fsx-lustre-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-lustre-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-lustre-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-lustre-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-location-fsx-lustre-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-location-fsx-lustre-response-"))
   (location-arn common-lisp:nil :type
    (common-lisp:or location-arn common-lisp:null))
   (location-uri common-lisp:nil :type
    (common-lisp:or location-uri common-lisp:null))
   (security-group-arns common-lisp:nil :type
    (common-lisp:or ec2security-group-arn-list common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or time common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-location-fsx-lustre-response
                    'make-describe-location-fsx-lustre-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-lustre-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-lustre-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-uri))
      (common-lisp:list
       (common-lisp:cons "LocationUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-arns))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-lustre-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-location-fsx-ontap-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-location-fsx-ontap-request-"))
   (location-arn (common-lisp:error ":location-arn is required") :type
    (common-lisp:or location-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-location-fsx-ontap-request
                    'make-describe-location-fsx-ontap-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-ontap-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-ontap-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-ontap-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-location-fsx-ontap-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-location-fsx-ontap-response-"))
   (creation-time common-lisp:nil :type (common-lisp:or time common-lisp:null))
   (location-arn common-lisp:nil :type
    (common-lisp:or location-arn common-lisp:null))
   (location-uri common-lisp:nil :type
    (common-lisp:or location-uri common-lisp:null))
   (protocol common-lisp:nil :type
    (common-lisp:or fsx-protocol common-lisp:null))
   (security-group-arns common-lisp:nil :type
    (common-lisp:or ec2security-group-arn-list common-lisp:null))
   (storage-virtual-machine-arn common-lisp:nil :type
    (common-lisp:or storage-virtual-machine-arn common-lisp:null))
   (fsx-filesystem-arn common-lisp:nil :type
    (common-lisp:or fsx-filesystem-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-location-fsx-ontap-response
                    'make-describe-location-fsx-ontap-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-ontap-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-ontap-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-uri))
      (common-lisp:list
       (common-lisp:cons "LocationUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol))
      (common-lisp:list
       (common-lisp:cons "Protocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-arns))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'storage-virtual-machine-arn))
      (common-lisp:list
       (common-lisp:cons "StorageVirtualMachineArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fsx-filesystem-arn))
      (common-lisp:list
       (common-lisp:cons "FsxFilesystemArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-ontap-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-location-fsx-open-zfs-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-location-fsx-open-zfs-request-"))
   (location-arn (common-lisp:error ":location-arn is required") :type
    (common-lisp:or location-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-location-fsx-open-zfs-request
                    'make-describe-location-fsx-open-zfs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-open-zfs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-open-zfs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-open-zfs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-location-fsx-open-zfs-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-location-fsx-open-zfs-response-"))
   (location-arn common-lisp:nil :type
    (common-lisp:or location-arn common-lisp:null))
   (location-uri common-lisp:nil :type
    (common-lisp:or location-uri common-lisp:null))
   (security-group-arns common-lisp:nil :type
    (common-lisp:or ec2security-group-arn-list common-lisp:null))
   (protocol common-lisp:nil :type
    (common-lisp:or fsx-protocol common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or time common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-location-fsx-open-zfs-response
                    'make-describe-location-fsx-open-zfs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-open-zfs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-open-zfs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-uri))
      (common-lisp:list
       (common-lisp:cons "LocationUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-arns))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol))
      (common-lisp:list
       (common-lisp:cons "Protocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-open-zfs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-location-fsx-windows-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-location-fsx-windows-request-"))
   (location-arn (common-lisp:error ":location-arn is required") :type
    (common-lisp:or location-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-location-fsx-windows-request
                    'make-describe-location-fsx-windows-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-windows-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-windows-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-windows-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-location-fsx-windows-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-location-fsx-windows-response-"))
   (location-arn common-lisp:nil :type
    (common-lisp:or location-arn common-lisp:null))
   (location-uri common-lisp:nil :type
    (common-lisp:or location-uri common-lisp:null))
   (security-group-arns common-lisp:nil :type
    (common-lisp:or ec2security-group-arn-list common-lisp:null))
   (creation-time common-lisp:nil :type (common-lisp:or time common-lisp:null))
   (user common-lisp:nil :type (common-lisp:or smb-user common-lisp:null))
   (domain common-lisp:nil :type (common-lisp:or smb-domain common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-location-fsx-windows-response
                    'make-describe-location-fsx-windows-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-windows-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-windows-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-uri))
      (common-lisp:list
       (common-lisp:cons "LocationUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-arns))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user))
      (common-lisp:list
       (common-lisp:cons "User"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain))
      (common-lisp:list
       (common-lisp:cons "Domain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-windows-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-location-hdfs-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-location-hdfs-request-"))
   (location-arn (common-lisp:error ":location-arn is required") :type
    (common-lisp:or location-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-location-hdfs-request
                    'make-describe-location-hdfs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-hdfs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-hdfs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-hdfs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-location-hdfs-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-location-hdfs-response-"))
   (location-arn common-lisp:nil :type
    (common-lisp:or location-arn common-lisp:null))
   (location-uri common-lisp:nil :type
    (common-lisp:or location-uri common-lisp:null))
   (name-nodes common-lisp:nil :type
    (common-lisp:or hdfs-name-node-list common-lisp:null))
   (block-size common-lisp:nil :type
    (common-lisp:or hdfs-block-size common-lisp:null))
   (replication-factor common-lisp:nil :type
    (common-lisp:or hdfs-replication-factor common-lisp:null))
   (kms-key-provider-uri common-lisp:nil :type
    (common-lisp:or kms-key-provider-uri common-lisp:null))
   (qop-configuration common-lisp:nil :type
    (common-lisp:or qop-configuration common-lisp:null))
   (authentication-type common-lisp:nil :type
    (common-lisp:or hdfs-authentication-type common-lisp:null))
   (simple-user common-lisp:nil :type
    (common-lisp:or hdfs-user common-lisp:null))
   (kerberos-principal common-lisp:nil :type
    (common-lisp:or kerberos-principal common-lisp:null))
   (agent-arns common-lisp:nil :type
    (common-lisp:or agent-arn-list common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or time common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-location-hdfs-response
                    'make-describe-location-hdfs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-hdfs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-hdfs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-uri))
      (common-lisp:list
       (common-lisp:cons "LocationUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name-nodes))
      (common-lisp:list
       (common-lisp:cons "NameNodes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'block-size))
      (common-lisp:list
       (common-lisp:cons "BlockSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replication-factor))
      (common-lisp:list
       (common-lisp:cons "ReplicationFactor"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'kms-key-provider-uri))
      (common-lisp:list
       (common-lisp:cons "KmsKeyProviderUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'qop-configuration))
      (common-lisp:list
       (common-lisp:cons "QopConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authentication-type))
      (common-lisp:list
       (common-lisp:cons "AuthenticationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'simple-user))
      (common-lisp:list
       (common-lisp:cons "SimpleUser"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kerberos-principal))
      (common-lisp:list
       (common-lisp:cons "KerberosPrincipal"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-arns))
      (common-lisp:list
       (common-lisp:cons "AgentArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-hdfs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-location-nfs-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-location-nfs-request-"))
   (location-arn (common-lisp:error ":location-arn is required") :type
    (common-lisp:or location-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-location-nfs-request
                    'make-describe-location-nfs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-nfs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-nfs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-nfs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-location-nfs-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-location-nfs-response-"))
   (location-arn common-lisp:nil :type
    (common-lisp:or location-arn common-lisp:null))
   (location-uri common-lisp:nil :type
    (common-lisp:or location-uri common-lisp:null))
   (on-prem-config common-lisp:nil :type
    (common-lisp:or on-prem-config common-lisp:null))
   (mount-options common-lisp:nil :type
    (common-lisp:or nfs-mount-options common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or time common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-location-nfs-response
                    'make-describe-location-nfs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-nfs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-nfs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-uri))
      (common-lisp:list
       (common-lisp:cons "LocationUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'on-prem-config))
      (common-lisp:list
       (common-lisp:cons "OnPremConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mount-options))
      (common-lisp:list
       (common-lisp:cons "MountOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-nfs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-location-object-storage-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-location-object-storage-request-"))
   (location-arn (common-lisp:error ":location-arn is required") :type
    (common-lisp:or location-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-location-object-storage-request
                    'make-describe-location-object-storage-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-object-storage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-object-storage-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-object-storage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-location-object-storage-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-location-object-storage-response-"))
   (location-arn common-lisp:nil :type
    (common-lisp:or location-arn common-lisp:null))
   (location-uri common-lisp:nil :type
    (common-lisp:or location-uri common-lisp:null))
   (access-key common-lisp:nil :type
    (common-lisp:or object-storage-access-key common-lisp:null))
   (server-port common-lisp:nil :type
    (common-lisp:or object-storage-server-port common-lisp:null))
   (server-protocol common-lisp:nil :type
    (common-lisp:or object-storage-server-protocol common-lisp:null))
   (agent-arns common-lisp:nil :type
    (common-lisp:or agent-arn-list common-lisp:null))
   (creation-time common-lisp:nil :type (common-lisp:or time common-lisp:null))
   (server-certificate common-lisp:nil :type
    (common-lisp:or object-storage-certificate common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-location-object-storage-response
                    'make-describe-location-object-storage-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-object-storage-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-object-storage-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-uri))
      (common-lisp:list
       (common-lisp:cons "LocationUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-key))
      (common-lisp:list
       (common-lisp:cons "AccessKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'server-port))
      (common-lisp:list
       (common-lisp:cons "ServerPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'server-protocol))
      (common-lisp:list
       (common-lisp:cons "ServerProtocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-arns))
      (common-lisp:list
       (common-lisp:cons "AgentArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'server-certificate))
      (common-lisp:list
       (common-lisp:cons "ServerCertificate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-object-storage-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-location-s3request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-location-s3request-"))
   (location-arn (common-lisp:error ":location-arn is required") :type
    (common-lisp:or location-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-location-s3request
                    'make-describe-location-s3request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-s3request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-s3request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-s3request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-location-s3response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-location-s3response-"))
   (location-arn common-lisp:nil :type
    (common-lisp:or location-arn common-lisp:null))
   (location-uri common-lisp:nil :type
    (common-lisp:or location-uri common-lisp:null))
   (s3storage-class common-lisp:nil :type
    (common-lisp:or s3storage-class common-lisp:null))
   (s3config common-lisp:nil :type (common-lisp:or s3config common-lisp:null))
   (agent-arns common-lisp:nil :type
    (common-lisp:or agent-arn-list common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or time common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-location-s3response
                    'make-describe-location-s3response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-s3response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-s3response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-uri))
      (common-lisp:list
       (common-lisp:cons "LocationUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3storage-class))
      (common-lisp:list
       (common-lisp:cons "S3StorageClass"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3config))
      (common-lisp:list
       (common-lisp:cons "S3Config"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-arns))
      (common-lisp:list
       (common-lisp:cons "AgentArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-s3response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-location-smb-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-location-smb-request-"))
   (location-arn (common-lisp:error ":location-arn is required") :type
    (common-lisp:or location-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-location-smb-request
                    'make-describe-location-smb-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-smb-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-smb-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-smb-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-location-smb-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-location-smb-response-"))
   (location-arn common-lisp:nil :type
    (common-lisp:or location-arn common-lisp:null))
   (location-uri common-lisp:nil :type
    (common-lisp:or location-uri common-lisp:null))
   (agent-arns common-lisp:nil :type
    (common-lisp:or agent-arn-list common-lisp:null))
   (user common-lisp:nil :type (common-lisp:or smb-user common-lisp:null))
   (domain common-lisp:nil :type (common-lisp:or smb-domain common-lisp:null))
   (mount-options common-lisp:nil :type
    (common-lisp:or smb-mount-options common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or time common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-location-smb-response
                    'make-describe-location-smb-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-smb-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-smb-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-uri))
      (common-lisp:list
       (common-lisp:cons "LocationUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-arns))
      (common-lisp:list
       (common-lisp:cons "AgentArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user))
      (common-lisp:list
       (common-lisp:cons "User"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain))
      (common-lisp:list
       (common-lisp:cons "Domain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mount-options))
      (common-lisp:list
       (common-lisp:cons "MountOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-smb-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-storage-system-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-storage-system-request-"))
   (storage-system-arn (common-lisp:error ":storage-system-arn is required")
    :type (common-lisp:or storage-system-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-storage-system-request
                    'make-describe-storage-system-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-storage-system-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-storage-system-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'storage-system-arn))
      (common-lisp:list
       (common-lisp:cons "StorageSystemArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-storage-system-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-storage-system-resource-metrics-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-describe-storage-system-resource-metrics-request-"))
   (discovery-job-arn (common-lisp:error ":discovery-job-arn is required")
    :type (common-lisp:or discovery-job-arn common-lisp:null))
   (resource-type (common-lisp:error ":resource-type is required") :type
    (common-lisp:or discovery-resource-type common-lisp:null))
   (resource-id (common-lisp:error ":resource-id is required") :type
    (common-lisp:or resource-id common-lisp:null))
   (start-time common-lisp:nil :type
    (common-lisp:or discovery-time common-lisp:null))
   (end-time common-lisp:nil :type
    (common-lisp:or discovery-time common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or discovery-max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or discovery-next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-storage-system-resource-metrics-request
                    'make-describe-storage-system-resource-metrics-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-storage-system-resource-metrics-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-storage-system-resource-metrics-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'discovery-job-arn))
      (common-lisp:list
       (common-lisp:cons "DiscoveryJobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "ResourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-id))
      (common-lisp:list
       (common-lisp:cons "ResourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-storage-system-resource-metrics-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-storage-system-resource-metrics-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-describe-storage-system-resource-metrics-response-"))
   (metrics common-lisp:nil :type (common-lisp:or metrics common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or discovery-next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-storage-system-resource-metrics-response
                    'make-describe-storage-system-resource-metrics-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-storage-system-resource-metrics-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-storage-system-resource-metrics-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metrics))
      (common-lisp:list
       (common-lisp:cons "Metrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-storage-system-resource-metrics-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-storage-system-resources-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-storage-system-resources-request-"))
   (discovery-job-arn (common-lisp:error ":discovery-job-arn is required")
    :type (common-lisp:or discovery-job-arn common-lisp:null))
   (resource-type (common-lisp:error ":resource-type is required") :type
    (common-lisp:or discovery-resource-type common-lisp:null))
   (resource-ids common-lisp:nil :type
    (common-lisp:or resource-ids common-lisp:null))
   (filter common-lisp:nil :type
    (common-lisp:or resource-filters common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or discovery-max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or discovery-next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-storage-system-resources-request
                    'make-describe-storage-system-resources-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-storage-system-resources-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-storage-system-resources-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'discovery-job-arn))
      (common-lisp:list
       (common-lisp:cons "DiscoveryJobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "ResourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-ids))
      (common-lisp:list
       (common-lisp:cons "ResourceIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-storage-system-resources-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-storage-system-resources-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-storage-system-resources-response-"))
   (resource-details common-lisp:nil :type
    (common-lisp:or resource-details common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or discovery-next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-storage-system-resources-response
                    'make-describe-storage-system-resources-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-storage-system-resources-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-storage-system-resources-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-details))
      (common-lisp:list
       (common-lisp:cons "ResourceDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-storage-system-resources-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-storage-system-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-storage-system-response-"))
   (storage-system-arn common-lisp:nil :type
    (common-lisp:or storage-system-arn common-lisp:null))
   (server-configuration common-lisp:nil :type
    (common-lisp:or discovery-server-configuration common-lisp:null))
   (system-type common-lisp:nil :type
    (common-lisp:or discovery-system-type common-lisp:null))
   (agent-arns common-lisp:nil :type
    (common-lisp:or discovery-agent-arn-list common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (error-message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null))
   (connectivity-status common-lisp:nil :type
    (common-lisp:or storage-system-connectivity-status common-lisp:null))
   (cloud-watch-log-group-arn common-lisp:nil :type
    (common-lisp:or log-group-arn common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (secrets-manager-arn common-lisp:nil :type
    (common-lisp:or secrets-manager-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-storage-system-response
                    'make-describe-storage-system-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-storage-system-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-storage-system-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'storage-system-arn))
      (common-lisp:list
       (common-lisp:cons "StorageSystemArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'server-configuration))
      (common-lisp:list
       (common-lisp:cons "ServerConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'system-type))
      (common-lisp:list
       (common-lisp:cons "SystemType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-arns))
      (common-lisp:list
       (common-lisp:cons "AgentArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "ErrorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connectivity-status))
      (common-lisp:list
       (common-lisp:cons "ConnectivityStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cloud-watch-log-group-arn))
      (common-lisp:list
       (common-lisp:cons "CloudWatchLogGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'secrets-manager-arn))
      (common-lisp:list
       (common-lisp:cons "SecretsManagerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-storage-system-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-task-execution-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-task-execution-request-"))
   (task-execution-arn (common-lisp:error ":task-execution-arn is required")
    :type (common-lisp:or task-execution-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-task-execution-request
                    'make-describe-task-execution-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-task-execution-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-task-execution-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-execution-arn))
      (common-lisp:list
       (common-lisp:cons "TaskExecutionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-task-execution-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-task-execution-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-task-execution-response-"))
   (task-execution-arn common-lisp:nil :type
    (common-lisp:or task-execution-arn common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or task-execution-status common-lisp:null))
   (options common-lisp:nil :type (common-lisp:or options common-lisp:null))
   (excludes common-lisp:nil :type
    (common-lisp:or filter-list common-lisp:null))
   (includes common-lisp:nil :type
    (common-lisp:or filter-list common-lisp:null))
   (start-time common-lisp:nil :type (common-lisp:or time common-lisp:null))
   (estimated-files-to-transfer common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (estimated-bytes-to-transfer common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (files-transferred common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (bytes-written common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (bytes-transferred common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (result common-lisp:nil :type
    (common-lisp:or task-execution-result-detail common-lisp:null))
   (bytes-compressed common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-task-execution-response
                    'make-describe-task-execution-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-task-execution-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-task-execution-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-execution-arn))
      (common-lisp:list
       (common-lisp:cons "TaskExecutionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'options))
      (common-lisp:list
       (common-lisp:cons "Options"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'excludes))
      (common-lisp:list
       (common-lisp:cons "Excludes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'includes))
      (common-lisp:list
       (common-lisp:cons "Includes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'estimated-files-to-transfer))
      (common-lisp:list
       (common-lisp:cons "EstimatedFilesToTransfer"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'estimated-bytes-to-transfer))
      (common-lisp:list
       (common-lisp:cons "EstimatedBytesToTransfer"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'files-transferred))
      (common-lisp:list
       (common-lisp:cons "FilesTransferred"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bytes-written))
      (common-lisp:list
       (common-lisp:cons "BytesWritten"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bytes-transferred))
      (common-lisp:list
       (common-lisp:cons "BytesTransferred"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'result))
      (common-lisp:list
       (common-lisp:cons "Result"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bytes-compressed))
      (common-lisp:list
       (common-lisp:cons "BytesCompressed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-task-execution-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-task-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-task-request-"))
   (task-arn (common-lisp:error ":task-arn is required") :type
    (common-lisp:or task-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-task-request 'make-describe-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-task-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-arn))
      (common-lisp:list
       (common-lisp:cons "TaskArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-task-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-task-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-task-response-"))
   (task-arn common-lisp:nil :type (common-lisp:or task-arn common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or task-status common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or tag-value common-lisp:null))
   (current-task-execution-arn common-lisp:nil :type
    (common-lisp:or task-execution-arn common-lisp:null))
   (source-location-arn common-lisp:nil :type
    (common-lisp:or location-arn common-lisp:null))
   (destination-location-arn common-lisp:nil :type
    (common-lisp:or location-arn common-lisp:null))
   (cloud-watch-log-group-arn common-lisp:nil :type
    (common-lisp:or log-group-arn common-lisp:null))
   (source-network-interface-arns common-lisp:nil :type
    (common-lisp:or source-network-interface-arns common-lisp:null))
   (destination-network-interface-arns common-lisp:nil :type
    (common-lisp:or destination-network-interface-arns common-lisp:null))
   (options common-lisp:nil :type (common-lisp:or options common-lisp:null))
   (excludes common-lisp:nil :type
    (common-lisp:or filter-list common-lisp:null))
   (schedule common-lisp:nil :type
    (common-lisp:or task-schedule common-lisp:null))
   (error-code common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (error-detail common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (creation-time common-lisp:nil :type (common-lisp:or time common-lisp:null))
   (includes common-lisp:nil :type
    (common-lisp:or filter-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-task-response 'make-describe-task-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-task-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-arn))
      (common-lisp:list
       (common-lisp:cons "TaskArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'current-task-execution-arn))
      (common-lisp:list
       (common-lisp:cons "CurrentTaskExecutionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-location-arn))
      (common-lisp:list
       (common-lisp:cons "SourceLocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'destination-location-arn))
      (common-lisp:list
       (common-lisp:cons "DestinationLocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cloud-watch-log-group-arn))
      (common-lisp:list
       (common-lisp:cons "CloudWatchLogGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-network-interface-arns))
      (common-lisp:list
       (common-lisp:cons "SourceNetworkInterfaceArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'destination-network-interface-arns))
      (common-lisp:list
       (common-lisp:cons "DestinationNetworkInterfaceArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'options))
      (common-lisp:list
       (common-lisp:cons "Options"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'excludes))
      (common-lisp:list
       (common-lisp:cons "Excludes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schedule))
      (common-lisp:list
       (common-lisp:cons "Schedule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-code))
      (common-lisp:list
       (common-lisp:cons "ErrorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-detail))
      (common-lisp:list
       (common-lisp:cons "ErrorDetail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'includes))
      (common-lisp:list
       (common-lisp:cons "Includes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-task-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype destination-network-interface-arns ()
   '(trivial-types:proper-list network-interface-arn))
 (common-lisp:defun |make-destination-network-interface-arns|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list network-interface-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype discovery-agent-arn-list ()
   '(trivial-types:proper-list agent-arn))
 (common-lisp:defun |make-discovery-agent-arn-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list agent-arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype discovery-job-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype discovery-job-list ()
   '(trivial-types:proper-list discovery-job-list-entry))
 (common-lisp:defun |make-discovery-job-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            discovery-job-list-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (discovery-job-list-entry (:copier common-lisp:nil)
      (:conc-name "struct-shape-discovery-job-list-entry-"))
   (discovery-job-arn common-lisp:nil :type
    (common-lisp:or discovery-job-arn common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or discovery-job-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'discovery-job-list-entry 'make-discovery-job-list-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          discovery-job-list-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          discovery-job-list-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'discovery-job-arn))
      (common-lisp:list
       (common-lisp:cons "DiscoveryJobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          discovery-job-list-entry))
   common-lisp:nil))
(common-lisp:deftype discovery-job-status () 'common-lisp:string)
(common-lisp:deftype discovery-max-results () 'common-lisp:integer)
(common-lisp:deftype discovery-next-token () 'common-lisp:string)
(common-lisp:deftype discovery-resource-filter () 'common-lisp:string)
(common-lisp:deftype discovery-resource-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (discovery-server-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-discovery-server-configuration-"))
   (server-hostname (common-lisp:error ":server-hostname is required") :type
    (common-lisp:or discovery-server-hostname common-lisp:null))
   (server-port common-lisp:nil :type
    (common-lisp:or discovery-server-port common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'discovery-server-configuration
                    'make-discovery-server-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          discovery-server-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          discovery-server-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'server-hostname))
      (common-lisp:list
       (common-lisp:cons "ServerHostname"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'server-port))
      (common-lisp:list
       (common-lisp:cons "ServerPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          discovery-server-configuration))
   common-lisp:nil))
(common-lisp:deftype discovery-server-hostname () 'common-lisp:string)
(common-lisp:deftype discovery-server-port () 'common-lisp:integer)
(common-lisp:deftype discovery-system-type () 'common-lisp:string)
(common-lisp:deftype discovery-time () 'common-lisp:string)
(common-lisp:deftype duration () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (ec2config (:copier common-lisp:nil)
      (:conc-name "struct-shape-ec2config-"))
   (subnet-arn (common-lisp:error ":subnet-arn is required") :type
    (common-lisp:or ec2subnet-arn common-lisp:null))
   (security-group-arns (common-lisp:error ":security-group-arns is required")
    :type (common-lisp:or ec2security-group-arn-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'ec2config 'make-ec2config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input ec2config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input ec2config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-arn))
      (common-lisp:list
       (common-lisp:cons "SubnetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-arns))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input ec2config))
   common-lisp:nil))
(common-lisp:deftype ec2security-group-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype ec2security-group-arn-list ()
   '(trivial-types:proper-list ec2security-group-arn))
 (common-lisp:defun |make-ec2security-group-arn-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ec2security-group-arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype ec2subnet-arn () 'common-lisp:string)
(common-lisp:deftype efs-access-point-arn () 'common-lisp:string)
(common-lisp:deftype efs-filesystem-arn () 'common-lisp:string)
(common-lisp:deftype efs-in-transit-encryption () 'common-lisp:string)
(common-lisp:deftype efs-subdirectory () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype enabled-protocols ()
   '(trivial-types:proper-list ptolemy-string))
 (common-lisp:defun |make-enabled-protocols|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ptolemy-string))
   aws-sdk/generator/shape::members))
(common-lisp:deftype endpoint () 'common-lisp:string)
(common-lisp:deftype endpoint-type () 'common-lisp:string)
(common-lisp:deftype error-message () 'common-lisp:string)
(common-lisp:deftype filter-attribute-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype filter-list () '(trivial-types:proper-list filter-rule))
 (common-lisp:defun |make-filter-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list filter-rule))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype filter-members ()
   '(trivial-types:proper-list ptolemy-string))
 (common-lisp:defun |make-filter-members|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ptolemy-string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (filter-rule (:copier common-lisp:nil)
      (:conc-name "struct-shape-filter-rule-"))
   (filter-type common-lisp:nil :type
    (common-lisp:or filter-type common-lisp:null))
   (value common-lisp:nil :type
    (common-lisp:or filter-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'filter-rule 'make-filter-rule))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input filter-rule))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input filter-rule))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter-type))
      (common-lisp:list
       (common-lisp:cons "FilterType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input filter-rule))
   common-lisp:nil))
(common-lisp:deftype filter-type () 'common-lisp:string)
(common-lisp:deftype filter-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype filter-values ()
   '(trivial-types:proper-list filter-attribute-value))
 (common-lisp:defun |make-filter-values|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list filter-attribute-value))
   aws-sdk/generator/shape::members))
(common-lisp:deftype fsx-filesystem-arn () 'common-lisp:string)
(common-lisp:deftype fsx-lustre-subdirectory () 'common-lisp:string)
(common-lisp:deftype fsx-ontap-subdirectory () 'common-lisp:string)
(common-lisp:deftype fsx-open-zfs-subdirectory () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (fsx-protocol (:copier common-lisp:nil)
      (:conc-name "struct-shape-fsx-protocol-"))
   (nfs common-lisp:nil :type
    (common-lisp:or fsx-protocol-nfs common-lisp:null))
   (smb common-lisp:nil :type
    (common-lisp:or fsx-protocol-smb common-lisp:null)))
 (common-lisp:export (common-lisp:list 'fsx-protocol 'make-fsx-protocol))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input fsx-protocol))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input fsx-protocol))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'nfs))
      (common-lisp:list
       (common-lisp:cons "NFS"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'smb))
      (common-lisp:list
       (common-lisp:cons "SMB"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input fsx-protocol))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (fsx-protocol-nfs (:copier common-lisp:nil)
      (:conc-name "struct-shape-fsx-protocol-nfs-"))
   (mount-options common-lisp:nil :type
    (common-lisp:or nfs-mount-options common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'fsx-protocol-nfs 'make-fsx-protocol-nfs))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input fsx-protocol-nfs))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input fsx-protocol-nfs))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mount-options))
      (common-lisp:list
       (common-lisp:cons "MountOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input fsx-protocol-nfs))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (fsx-protocol-smb (:copier common-lisp:nil)
      (:conc-name "struct-shape-fsx-protocol-smb-"))
   (domain common-lisp:nil :type (common-lisp:or smb-domain common-lisp:null))
   (mount-options common-lisp:nil :type
    (common-lisp:or smb-mount-options common-lisp:null))
   (password (common-lisp:error ":password is required") :type
    (common-lisp:or smb-password common-lisp:null))
   (user (common-lisp:error ":user is required") :type
    (common-lisp:or smb-user common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'fsx-protocol-smb 'make-fsx-protocol-smb))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input fsx-protocol-smb))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input fsx-protocol-smb))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain))
      (common-lisp:list
       (common-lisp:cons "Domain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mount-options))
      (common-lisp:list
       (common-lisp:cons "MountOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'password))
      (common-lisp:list
       (common-lisp:cons "Password"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user))
      (common-lisp:list
       (common-lisp:cons "User"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input fsx-protocol-smb))
   common-lisp:nil))
(common-lisp:deftype fsx-windows-subdirectory () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (generate-recommendations-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-generate-recommendations-request-"))
   (discovery-job-arn (common-lisp:error ":discovery-job-arn is required")
    :type (common-lisp:or discovery-job-arn common-lisp:null))
   (resource-ids (common-lisp:error ":resource-ids is required") :type
    (common-lisp:or resource-ids common-lisp:null))
   (resource-type (common-lisp:error ":resource-type is required") :type
    (common-lisp:or discovery-resource-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'generate-recommendations-request
                    'make-generate-recommendations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          generate-recommendations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          generate-recommendations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'discovery-job-arn))
      (common-lisp:list
       (common-lisp:cons "DiscoveryJobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-ids))
      (common-lisp:list
       (common-lisp:cons "ResourceIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "ResourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          generate-recommendations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (generate-recommendations-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-generate-recommendations-response-")))
 (common-lisp:export
  (common-lisp:list 'generate-recommendations-response
                    'make-generate-recommendations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          generate-recommendations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          generate-recommendations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          generate-recommendations-response))
   common-lisp:nil))
(common-lisp:deftype gid () 'common-lisp:string)
(common-lisp:deftype hdfs-authentication-type () 'common-lisp:string)
(common-lisp:deftype hdfs-block-size () 'common-lisp:integer)
(common-lisp:deftype hdfs-data-transfer-protection () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (hdfs-name-node (:copier common-lisp:nil)
      (:conc-name "struct-shape-hdfs-name-node-"))
   (hostname (common-lisp:error ":hostname is required") :type
    (common-lisp:or hdfs-server-hostname common-lisp:null))
   (port (common-lisp:error ":port is required") :type
    (common-lisp:or hdfs-server-port common-lisp:null)))
 (common-lisp:export (common-lisp:list 'hdfs-name-node 'make-hdfs-name-node))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input hdfs-name-node))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input hdfs-name-node))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hostname))
      (common-lisp:list
       (common-lisp:cons "Hostname"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'port))
      (common-lisp:list
       (common-lisp:cons "Port"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input hdfs-name-node))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype hdfs-name-node-list ()
   '(trivial-types:proper-list hdfs-name-node))
 (common-lisp:defun |make-hdfs-name-node-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list hdfs-name-node))
   aws-sdk/generator/shape::members))
(common-lisp:deftype hdfs-replication-factor () 'common-lisp:integer)
(common-lisp:deftype hdfs-rpc-protection () 'common-lisp:string)
(common-lisp:deftype hdfs-server-hostname () 'common-lisp:string)
(common-lisp:deftype hdfs-server-port () 'common-lisp:integer)
(common-lisp:deftype hdfs-subdirectory () 'common-lisp:string)
(common-lisp:deftype hdfs-user () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (iops (:copier common-lisp:nil) (:conc-name "struct-shape-iops-"))
   (read common-lisp:nil :type
    (common-lisp:or non-negative-double common-lisp:null))
   (write common-lisp:nil :type
    (common-lisp:or non-negative-double common-lisp:null))
   (other common-lisp:nil :type
    (common-lisp:or non-negative-double common-lisp:null))
   (total common-lisp:nil :type
    (common-lisp:or non-negative-double common-lisp:null)))
 (common-lisp:export (common-lisp:list 'iops 'make-iops))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input iops))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input iops))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'read))
      (common-lisp:list
       (common-lisp:cons "Read"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'write))
      (common-lisp:list
       (common-lisp:cons "Write"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'other))
      (common-lisp:list
       (common-lisp:cons "Other"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'total))
      (common-lisp:list
       (common-lisp:cons "Total"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input iops))
   common-lisp:nil))
(common-lisp:deftype iam-role-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype input-tag-list ()
   '(trivial-types:proper-list tag-list-entry))
 (common-lisp:defun |make-input-tag-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-list-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition internal-exception
     (datasync-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-exception-message)
      (error-code :initarg :error-code :initform common-lisp:nil :reader
       internal-exception-error-code)))
 (common-lisp:export
  (common-lisp:list 'internal-exception 'internal-exception-message
                    'internal-exception-error-code)))
(common-lisp:progn
 (common-lisp:define-condition invalid-request-exception
     (datasync-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-request-exception-message)
      (error-code :initarg :error-code :initform common-lisp:nil :reader
       invalid-request-exception-error-code)
      (datasync-error-code :initarg :datasync-error-code :initform
       common-lisp:nil :reader invalid-request-exception-datasync-error-code)))
 (common-lisp:export
  (common-lisp:list 'invalid-request-exception
                    'invalid-request-exception-message
                    'invalid-request-exception-error-code
                    'invalid-request-exception-datasync-error-code)))
(common-lisp:deftype kerberos-keytab-file ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:deftype kerberos-krb5conf-file ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:deftype kerberos-principal () 'common-lisp:string)
(common-lisp:deftype kms-key-provider-uri () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (latency (:copier common-lisp:nil) (:conc-name "struct-shape-latency-"))
   (read common-lisp:nil :type
    (common-lisp:or non-negative-double common-lisp:null))
   (write common-lisp:nil :type
    (common-lisp:or non-negative-double common-lisp:null))
   (other common-lisp:nil :type
    (common-lisp:or non-negative-double common-lisp:null)))
 (common-lisp:export (common-lisp:list 'latency 'make-latency))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input latency))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input latency))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'read))
      (common-lisp:list
       (common-lisp:cons "Read"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'write))
      (common-lisp:list
       (common-lisp:cons "Write"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'other))
      (common-lisp:list
       (common-lisp:cons "Other"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input latency))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-agents-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-agents-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-agents-request 'make-list-agents-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-agents-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-agents-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-agents-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-agents-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-agents-response-"))
   (agents common-lisp:nil :type (common-lisp:or agent-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-agents-response 'make-list-agents-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-agents-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-agents-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agents))
      (common-lisp:list
       (common-lisp:cons "Agents"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-agents-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-discovery-jobs-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-discovery-jobs-request-"))
   (storage-system-arn common-lisp:nil :type
    (common-lisp:or storage-system-arn common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or discovery-max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or discovery-next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-discovery-jobs-request
                    'make-list-discovery-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-discovery-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-discovery-jobs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'storage-system-arn))
      (common-lisp:list
       (common-lisp:cons "StorageSystemArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-discovery-jobs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-discovery-jobs-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-discovery-jobs-response-"))
   (discovery-jobs common-lisp:nil :type
    (common-lisp:or discovery-job-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or discovery-next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-discovery-jobs-response
                    'make-list-discovery-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-discovery-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-discovery-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'discovery-jobs))
      (common-lisp:list
       (common-lisp:cons "DiscoveryJobs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-discovery-jobs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-locations-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-locations-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (filters common-lisp:nil :type
    (common-lisp:or location-filters common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-locations-request 'make-list-locations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-locations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-locations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "Filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-locations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-locations-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-locations-response-"))
   (locations common-lisp:nil :type
    (common-lisp:or location-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-locations-response 'make-list-locations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-locations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-locations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'locations))
      (common-lisp:list
       (common-lisp:cons "Locations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-locations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-storage-systems-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-storage-systems-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or discovery-max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or discovery-next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-storage-systems-request
                    'make-list-storage-systems-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-storage-systems-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-storage-systems-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-storage-systems-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-storage-systems-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-storage-systems-response-"))
   (storage-systems common-lisp:nil :type
    (common-lisp:or storage-system-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or discovery-next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-storage-systems-response
                    'make-list-storage-systems-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-storage-systems-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-storage-systems-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'storage-systems))
      (common-lisp:list
       (common-lisp:cons "StorageSystems"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-storage-systems-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or taggable-resource-arn common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-response-"))
   (tags common-lisp:nil :type
    (common-lisp:or output-tag-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-task-executions-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-task-executions-request-"))
   (task-arn common-lisp:nil :type (common-lisp:or task-arn common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-task-executions-request
                    'make-list-task-executions-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-task-executions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-task-executions-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-arn))
      (common-lisp:list
       (common-lisp:cons "TaskArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-task-executions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-task-executions-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-task-executions-response-"))
   (task-executions common-lisp:nil :type
    (common-lisp:or task-execution-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-task-executions-response
                    'make-list-task-executions-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-task-executions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-task-executions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-executions))
      (common-lisp:list
       (common-lisp:cons "TaskExecutions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-task-executions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tasks-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tasks-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (filters common-lisp:nil :type
    (common-lisp:or task-filters common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tasks-request 'make-list-tasks-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-tasks-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-tasks-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "Filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-tasks-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tasks-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tasks-response-"))
   (tasks common-lisp:nil :type (common-lisp:or task-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tasks-response 'make-list-tasks-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-tasks-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-tasks-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tasks))
      (common-lisp:list
       (common-lisp:cons "Tasks"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-tasks-response))
   common-lisp:nil))
(common-lisp:deftype location-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (location-filter (:copier common-lisp:nil)
      (:conc-name "struct-shape-location-filter-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or location-filter-name common-lisp:null))
   (values (common-lisp:error ":values is required") :type
    (common-lisp:or filter-values common-lisp:null))
   (operator (common-lisp:error ":operator is required") :type
    (common-lisp:or operator common-lisp:null)))
 (common-lisp:export (common-lisp:list 'location-filter 'make-location-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input location-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input location-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "Values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operator))
      (common-lisp:list
       (common-lisp:cons "Operator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input location-filter))
   common-lisp:nil))
(common-lisp:deftype location-filter-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype location-filters ()
   '(trivial-types:proper-list location-filter))
 (common-lisp:defun |make-location-filters|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list location-filter))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype location-list ()
   '(trivial-types:proper-list location-list-entry))
 (common-lisp:defun |make-location-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list location-list-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (location-list-entry (:copier common-lisp:nil)
      (:conc-name "struct-shape-location-list-entry-"))
   (location-arn common-lisp:nil :type
    (common-lisp:or location-arn common-lisp:null))
   (location-uri common-lisp:nil :type
    (common-lisp:or location-uri common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'location-list-entry 'make-location-list-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input location-list-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input location-list-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-uri))
      (common-lisp:list
       (common-lisp:cons "LocationUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input location-list-entry))
   common-lisp:nil))
(common-lisp:deftype location-uri () 'common-lisp:string)
(common-lisp:deftype log-group-arn () 'common-lisp:string)
(common-lisp:deftype log-level () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (max-p95performance (:copier common-lisp:nil)
      (:conc-name "struct-shape-max-p95performance-"))
   (iops-read common-lisp:nil :type
    (common-lisp:or non-negative-double common-lisp:null))
   (iops-write common-lisp:nil :type
    (common-lisp:or non-negative-double common-lisp:null))
   (iops-other common-lisp:nil :type
    (common-lisp:or non-negative-double common-lisp:null))
   (iops-total common-lisp:nil :type
    (common-lisp:or non-negative-double common-lisp:null))
   (throughput-read common-lisp:nil :type
    (common-lisp:or non-negative-double common-lisp:null))
   (throughput-write common-lisp:nil :type
    (common-lisp:or non-negative-double common-lisp:null))
   (throughput-other common-lisp:nil :type
    (common-lisp:or non-negative-double common-lisp:null))
   (throughput-total common-lisp:nil :type
    (common-lisp:or non-negative-double common-lisp:null))
   (latency-read common-lisp:nil :type
    (common-lisp:or non-negative-double common-lisp:null))
   (latency-write common-lisp:nil :type
    (common-lisp:or non-negative-double common-lisp:null))
   (latency-other common-lisp:nil :type
    (common-lisp:or non-negative-double common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'max-p95performance 'make-max-p95performance))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input max-p95performance))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input max-p95performance))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iops-read))
      (common-lisp:list
       (common-lisp:cons "IopsRead"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iops-write))
      (common-lisp:list
       (common-lisp:cons "IopsWrite"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iops-other))
      (common-lisp:list
       (common-lisp:cons "IopsOther"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iops-total))
      (common-lisp:list
       (common-lisp:cons "IopsTotal"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'throughput-read))
      (common-lisp:list
       (common-lisp:cons "ThroughputRead"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'throughput-write))
      (common-lisp:list
       (common-lisp:cons "ThroughputWrite"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'throughput-other))
      (common-lisp:list
       (common-lisp:cons "ThroughputOther"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'throughput-total))
      (common-lisp:list
       (common-lisp:cons "ThroughputTotal"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latency-read))
      (common-lisp:list
       (common-lisp:cons "LatencyRead"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latency-write))
      (common-lisp:list
       (common-lisp:cons "LatencyWrite"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latency-other))
      (common-lisp:list
       (common-lisp:cons "LatencyOther"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input max-p95performance))
   common-lisp:nil))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype metrics () '(trivial-types:proper-list resource-metrics))
 (common-lisp:defun |make-metrics|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource-metrics))
   aws-sdk/generator/shape::members))
(common-lisp:deftype mtime () 'common-lisp:string)
(common-lisp:deftype name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (net-app-ontapcluster (:copier common-lisp:nil)
      (:conc-name "struct-shape-net-app-ontapcluster-"))
   (cifs-share-count common-lisp:nil :type
    (common-lisp:or non-negative-long common-lisp:null))
   (nfs-exported-volumes common-lisp:nil :type
    (common-lisp:or non-negative-long common-lisp:null))
   (resource-id common-lisp:nil :type
    (common-lisp:or ptolemy-uuid common-lisp:null))
   (cluster-name common-lisp:nil :type
    (common-lisp:or ptolemy-string common-lisp:null))
   (max-p95performance common-lisp:nil :type
    (common-lisp:or max-p95performance common-lisp:null))
   (cluster-block-storage-size common-lisp:nil :type
    (common-lisp:or non-negative-long common-lisp:null))
   (cluster-block-storage-used common-lisp:nil :type
    (common-lisp:or non-negative-long common-lisp:null))
   (cluster-block-storage-logical-used common-lisp:nil :type
    (common-lisp:or non-negative-long common-lisp:null))
   (recommendations common-lisp:nil :type
    (common-lisp:or recommendations common-lisp:null))
   (recommendation-status common-lisp:nil :type
    (common-lisp:or recommendation-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'net-app-ontapcluster 'make-net-app-ontapcluster))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input net-app-ontapcluster))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input net-app-ontapcluster))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cifs-share-count))
      (common-lisp:list
       (common-lisp:cons "CifsShareCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'nfs-exported-volumes))
      (common-lisp:list
       (common-lisp:cons "NfsExportedVolumes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-id))
      (common-lisp:list
       (common-lisp:cons "ResourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cluster-name))
      (common-lisp:list
       (common-lisp:cons "ClusterName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-p95performance))
      (common-lisp:list
       (common-lisp:cons "MaxP95Performance"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cluster-block-storage-size))
      (common-lisp:list
       (common-lisp:cons "ClusterBlockStorageSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cluster-block-storage-used))
      (common-lisp:list
       (common-lisp:cons "ClusterBlockStorageUsed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cluster-block-storage-logical-used))
      (common-lisp:list
       (common-lisp:cons "ClusterBlockStorageLogicalUsed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recommendations))
      (common-lisp:list
       (common-lisp:cons "Recommendations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-status))
      (common-lisp:list
       (common-lisp:cons "RecommendationStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input net-app-ontapcluster))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype net-app-ontapclusters ()
   '(trivial-types:proper-list net-app-ontapcluster))
 (common-lisp:defun |make-net-app-ontapclusters|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list net-app-ontapcluster))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (net-app-ontapsvm (:copier common-lisp:nil)
      (:conc-name "struct-shape-net-app-ontapsvm-"))
   (cluster-uuid common-lisp:nil :type
    (common-lisp:or ptolemy-uuid common-lisp:null))
   (resource-id common-lisp:nil :type
    (common-lisp:or ptolemy-uuid common-lisp:null))
   (svm-name common-lisp:nil :type
    (common-lisp:or ptolemy-string common-lisp:null))
   (cifs-share-count common-lisp:nil :type
    (common-lisp:or non-negative-long common-lisp:null))
   (enabled-protocols common-lisp:nil :type
    (common-lisp:or enabled-protocols common-lisp:null))
   (total-capacity-used common-lisp:nil :type
    (common-lisp:or non-negative-long common-lisp:null))
   (total-capacity-provisioned common-lisp:nil :type
    (common-lisp:or non-negative-long common-lisp:null))
   (total-logical-capacity-used common-lisp:nil :type
    (common-lisp:or non-negative-long common-lisp:null))
   (max-p95performance common-lisp:nil :type
    (common-lisp:or max-p95performance common-lisp:null))
   (recommendations common-lisp:nil :type
    (common-lisp:or recommendations common-lisp:null))
   (nfs-exported-volumes common-lisp:nil :type
    (common-lisp:or non-negative-long common-lisp:null))
   (recommendation-status common-lisp:nil :type
    (common-lisp:or recommendation-status common-lisp:null))
   (total-snapshot-capacity-used common-lisp:nil :type
    (common-lisp:or non-negative-long common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'net-app-ontapsvm 'make-net-app-ontapsvm))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input net-app-ontapsvm))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input net-app-ontapsvm))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cluster-uuid))
      (common-lisp:list
       (common-lisp:cons "ClusterUuid"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-id))
      (common-lisp:list
       (common-lisp:cons "ResourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'svm-name))
      (common-lisp:list
       (common-lisp:cons "SvmName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cifs-share-count))
      (common-lisp:list
       (common-lisp:cons "CifsShareCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled-protocols))
      (common-lisp:list
       (common-lisp:cons "EnabledProtocols"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'total-capacity-used))
      (common-lisp:list
       (common-lisp:cons "TotalCapacityUsed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'total-capacity-provisioned))
      (common-lisp:list
       (common-lisp:cons "TotalCapacityProvisioned"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'total-logical-capacity-used))
      (common-lisp:list
       (common-lisp:cons "TotalLogicalCapacityUsed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-p95performance))
      (common-lisp:list
       (common-lisp:cons "MaxP95Performance"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recommendations))
      (common-lisp:list
       (common-lisp:cons "Recommendations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'nfs-exported-volumes))
      (common-lisp:list
       (common-lisp:cons "NfsExportedVolumes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-status))
      (common-lisp:list
       (common-lisp:cons "RecommendationStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'total-snapshot-capacity-used))
      (common-lisp:list
       (common-lisp:cons "TotalSnapshotCapacityUsed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input net-app-ontapsvm))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype net-app-ontapsvms ()
   '(trivial-types:proper-list net-app-ontapsvm))
 (common-lisp:defun |make-net-app-ontapsvms|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list net-app-ontapsvm))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (net-app-ontapvolume (:copier common-lisp:nil)
      (:conc-name "struct-shape-net-app-ontapvolume-"))
   (volume-name common-lisp:nil :type
    (common-lisp:or ptolemy-string common-lisp:null))
   (resource-id common-lisp:nil :type
    (common-lisp:or ptolemy-uuid common-lisp:null))
   (cifs-share-count common-lisp:nil :type
    (common-lisp:or non-negative-long common-lisp:null))
   (security-style common-lisp:nil :type
    (common-lisp:or ptolemy-string common-lisp:null))
   (svm-uuid common-lisp:nil :type
    (common-lisp:or ptolemy-uuid common-lisp:null))
   (svm-name common-lisp:nil :type
    (common-lisp:or ptolemy-string common-lisp:null))
   (capacity-used common-lisp:nil :type
    (common-lisp:or non-negative-long common-lisp:null))
   (capacity-provisioned common-lisp:nil :type
    (common-lisp:or non-negative-long common-lisp:null))
   (logical-capacity-used common-lisp:nil :type
    (common-lisp:or non-negative-long common-lisp:null))
   (nfs-exported common-lisp:nil :type
    (common-lisp:or ptolemy-boolean common-lisp:null))
   (snapshot-capacity-used common-lisp:nil :type
    (common-lisp:or non-negative-long common-lisp:null))
   (max-p95performance common-lisp:nil :type
    (common-lisp:or max-p95performance common-lisp:null))
   (recommendations common-lisp:nil :type
    (common-lisp:or recommendations common-lisp:null))
   (recommendation-status common-lisp:nil :type
    (common-lisp:or recommendation-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'net-app-ontapvolume 'make-net-app-ontapvolume))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input net-app-ontapvolume))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input net-app-ontapvolume))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-name))
      (common-lisp:list
       (common-lisp:cons "VolumeName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-id))
      (common-lisp:list
       (common-lisp:cons "ResourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cifs-share-count))
      (common-lisp:list
       (common-lisp:cons "CifsShareCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-style))
      (common-lisp:list
       (common-lisp:cons "SecurityStyle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'svm-uuid))
      (common-lisp:list
       (common-lisp:cons "SvmUuid"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'svm-name))
      (common-lisp:list
       (common-lisp:cons "SvmName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'capacity-used))
      (common-lisp:list
       (common-lisp:cons "CapacityUsed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'capacity-provisioned))
      (common-lisp:list
       (common-lisp:cons "CapacityProvisioned"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'logical-capacity-used))
      (common-lisp:list
       (common-lisp:cons "LogicalCapacityUsed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'nfs-exported))
      (common-lisp:list
       (common-lisp:cons "NfsExported"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'snapshot-capacity-used))
      (common-lisp:list
       (common-lisp:cons "SnapshotCapacityUsed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-p95performance))
      (common-lisp:list
       (common-lisp:cons "MaxP95Performance"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recommendations))
      (common-lisp:list
       (common-lisp:cons "Recommendations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-status))
      (common-lisp:list
       (common-lisp:cons "RecommendationStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input net-app-ontapvolume))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype net-app-ontapvolumes ()
   '(trivial-types:proper-list net-app-ontapvolume))
 (common-lisp:defun |make-net-app-ontapvolumes|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list net-app-ontapvolume))
   aws-sdk/generator/shape::members))
(common-lisp:deftype network-interface-arn () 'common-lisp:string)
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (nfs-mount-options (:copier common-lisp:nil)
      (:conc-name "struct-shape-nfs-mount-options-"))
   (version common-lisp:nil :type
    (common-lisp:or nfs-version common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'nfs-mount-options 'make-nfs-mount-options))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input nfs-mount-options))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input nfs-mount-options))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input nfs-mount-options))
   common-lisp:nil))
(common-lisp:deftype nfs-subdirectory () 'common-lisp:string)
(common-lisp:deftype nfs-version () 'common-lisp:string)
(common-lisp:deftype non-negative-double () 'common-lisp:double-float)
(common-lisp:deftype non-negative-long () 'common-lisp:integer)
(common-lisp:deftype object-storage-access-key () 'common-lisp:string)
(common-lisp:deftype object-storage-bucket-name () 'common-lisp:string)
(common-lisp:deftype object-storage-certificate ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:deftype object-storage-secret-key () 'common-lisp:string)
(common-lisp:deftype object-storage-server-port () 'common-lisp:integer)
(common-lisp:deftype object-storage-server-protocol () 'common-lisp:string)
(common-lisp:deftype object-tags () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (on-prem-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-on-prem-config-"))
   (agent-arns (common-lisp:error ":agent-arns is required") :type
    (common-lisp:or agent-arn-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'on-prem-config 'make-on-prem-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input on-prem-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input on-prem-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-arns))
      (common-lisp:list
       (common-lisp:cons "AgentArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input on-prem-config))
   common-lisp:nil))
(common-lisp:deftype operator () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (options (:copier common-lisp:nil) (:conc-name "struct-shape-options-"))
   (verify-mode common-lisp:nil :type
    (common-lisp:or verify-mode common-lisp:null))
   (overwrite-mode common-lisp:nil :type
    (common-lisp:or overwrite-mode common-lisp:null))
   (atime common-lisp:nil :type (common-lisp:or atime common-lisp:null))
   (mtime common-lisp:nil :type (common-lisp:or mtime common-lisp:null))
   (uid common-lisp:nil :type (common-lisp:or uid common-lisp:null))
   (gid common-lisp:nil :type (common-lisp:or gid common-lisp:null))
   (preserve-deleted-files common-lisp:nil :type
    (common-lisp:or preserve-deleted-files common-lisp:null))
   (preserve-devices common-lisp:nil :type
    (common-lisp:or preserve-devices common-lisp:null))
   (posix-permissions common-lisp:nil :type
    (common-lisp:or posix-permissions common-lisp:null))
   (bytes-per-second common-lisp:nil :type
    (common-lisp:or bytes-per-second common-lisp:null))
   (task-queueing common-lisp:nil :type
    (common-lisp:or task-queueing common-lisp:null))
   (log-level common-lisp:nil :type
    (common-lisp:or log-level common-lisp:null))
   (transfer-mode common-lisp:nil :type
    (common-lisp:or transfer-mode common-lisp:null))
   (security-descriptor-copy-flags common-lisp:nil :type
    (common-lisp:or smb-security-descriptor-copy-flags common-lisp:null))
   (object-tags common-lisp:nil :type
    (common-lisp:or object-tags common-lisp:null)))
 (common-lisp:export (common-lisp:list 'options 'make-options))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input options))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input options))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'verify-mode))
      (common-lisp:list
       (common-lisp:cons "VerifyMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'overwrite-mode))
      (common-lisp:list
       (common-lisp:cons "OverwriteMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'atime))
      (common-lisp:list
       (common-lisp:cons "Atime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mtime))
      (common-lisp:list
       (common-lisp:cons "Mtime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'uid))
      (common-lisp:list
       (common-lisp:cons "Uid"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gid))
      (common-lisp:list
       (common-lisp:cons "Gid"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'preserve-deleted-files))
      (common-lisp:list
       (common-lisp:cons "PreserveDeletedFiles"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'preserve-devices))
      (common-lisp:list
       (common-lisp:cons "PreserveDevices"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'posix-permissions))
      (common-lisp:list
       (common-lisp:cons "PosixPermissions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bytes-per-second))
      (common-lisp:list
       (common-lisp:cons "BytesPerSecond"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-queueing))
      (common-lisp:list
       (common-lisp:cons "TaskQueueing"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-level))
      (common-lisp:list
       (common-lisp:cons "LogLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'transfer-mode))
      (common-lisp:list
       (common-lisp:cons "TransferMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'security-descriptor-copy-flags))
      (common-lisp:list
       (common-lisp:cons "SecurityDescriptorCopyFlags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'object-tags))
      (common-lisp:list
       (common-lisp:cons "ObjectTags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input options))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype output-tag-list ()
   '(trivial-types:proper-list tag-list-entry))
 (common-lisp:defun |make-output-tag-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-list-entry))
   aws-sdk/generator/shape::members))
(common-lisp:deftype overwrite-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (p95metrics (:copier common-lisp:nil)
      (:conc-name "struct-shape-p95metrics-"))
   (iops common-lisp:nil :type (common-lisp:or iops common-lisp:null))
   (throughput common-lisp:nil :type
    (common-lisp:or throughput common-lisp:null))
   (latency common-lisp:nil :type (common-lisp:or latency common-lisp:null)))
 (common-lisp:export (common-lisp:list 'p95metrics 'make-p95metrics))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input p95metrics))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input p95metrics))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iops))
      (common-lisp:list
       (common-lisp:cons "IOPS"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'throughput))
      (common-lisp:list
       (common-lisp:cons "Throughput"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latency))
      (common-lisp:list
       (common-lisp:cons "Latency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input p95metrics))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype plsecurity-group-arn-list ()
   '(trivial-types:proper-list ec2security-group-arn))
 (common-lisp:defun |make-plsecurity-group-arn-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ec2security-group-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype plsubnet-arn-list ()
   '(trivial-types:proper-list ec2subnet-arn))
 (common-lisp:defun |make-plsubnet-arn-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ec2subnet-arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype phase-status () 'common-lisp:string)
(common-lisp:deftype posix-permissions () 'common-lisp:string)
(common-lisp:deftype preserve-deleted-files () 'common-lisp:string)
(common-lisp:deftype preserve-devices () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (private-link-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-private-link-config-"))
   (vpc-endpoint-id common-lisp:nil :type
    (common-lisp:or vpc-endpoint-id common-lisp:null))
   (private-link-endpoint common-lisp:nil :type
    (common-lisp:or endpoint common-lisp:null))
   (subnet-arns common-lisp:nil :type
    (common-lisp:or plsubnet-arn-list common-lisp:null))
   (security-group-arns common-lisp:nil :type
    (common-lisp:or plsecurity-group-arn-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'private-link-config 'make-private-link-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input private-link-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input private-link-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-endpoint-id))
      (common-lisp:list
       (common-lisp:cons "VpcEndpointId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'private-link-endpoint))
      (common-lisp:list
       (common-lisp:cons "PrivateLinkEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-arns))
      (common-lisp:list
       (common-lisp:cons "SubnetArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-arns))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input private-link-config))
   common-lisp:nil))
(common-lisp:deftype ptolemy-boolean () 'common-lisp:boolean)
(common-lisp:deftype ptolemy-password () 'common-lisp:string)
(common-lisp:deftype ptolemy-string () 'common-lisp:string)
(common-lisp:deftype ptolemy-uuid () 'common-lisp:string)
(common-lisp:deftype ptolemy-username () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (qop-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-qop-configuration-"))
   (rpc-protection common-lisp:nil :type
    (common-lisp:or hdfs-rpc-protection common-lisp:null))
   (data-transfer-protection common-lisp:nil :type
    (common-lisp:or hdfs-data-transfer-protection common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'qop-configuration 'make-qop-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input qop-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input qop-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rpc-protection))
      (common-lisp:list
       (common-lisp:cons "RpcProtection"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-transfer-protection))
      (common-lisp:list
       (common-lisp:cons "DataTransferProtection"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input qop-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (recommendation (:copier common-lisp:nil)
      (:conc-name "struct-shape-recommendation-"))
   (storage-type common-lisp:nil :type
    (common-lisp:or ptolemy-string common-lisp:null))
   (storage-configuration common-lisp:nil :type
    (common-lisp:or recommendations-config-map common-lisp:null))
   (estimated-monthly-storage-cost common-lisp:nil :type
    (common-lisp:or ptolemy-string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'recommendation 'make-recommendation))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input recommendation))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input recommendation))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'storage-type))
      (common-lisp:list
       (common-lisp:cons "StorageType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'storage-configuration))
      (common-lisp:list
       (common-lisp:cons "StorageConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'estimated-monthly-storage-cost))
      (common-lisp:list
       (common-lisp:cons "EstimatedMonthlyStorageCost"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input recommendation))
   common-lisp:nil))
(common-lisp:deftype recommendation-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype recommendations ()
   '(trivial-types:proper-list recommendation))
 (common-lisp:defun |make-recommendations|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list recommendation))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype recommendations-config-map () 'common-lisp:hash-table)
 (common-lisp:defun |make-recommendations-config-map|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defstruct
     (remove-storage-system-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-remove-storage-system-request-"))
   (storage-system-arn (common-lisp:error ":storage-system-arn is required")
    :type (common-lisp:or storage-system-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-storage-system-request
                    'make-remove-storage-system-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          remove-storage-system-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          remove-storage-system-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'storage-system-arn))
      (common-lisp:list
       (common-lisp:cons "StorageSystemArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          remove-storage-system-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (remove-storage-system-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-remove-storage-system-response-")))
 (common-lisp:export
  (common-lisp:list 'remove-storage-system-response
                    'make-remove-storage-system-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          remove-storage-system-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          remove-storage-system-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          remove-storage-system-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (resource-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-resource-details-"))
   (net-app-ontapsvms common-lisp:nil :type
    (common-lisp:or net-app-ontapsvms common-lisp:null))
   (net-app-ontapvolumes common-lisp:nil :type
    (common-lisp:or net-app-ontapvolumes common-lisp:null))
   (net-app-ontapclusters common-lisp:nil :type
    (common-lisp:or net-app-ontapclusters common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-details 'make-resource-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input resource-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input resource-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'net-app-ontapsvms))
      (common-lisp:list
       (common-lisp:cons "NetAppONTAPSVMs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'net-app-ontapvolumes))
      (common-lisp:list
       (common-lisp:cons "NetAppONTAPVolumes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'net-app-ontapclusters))
      (common-lisp:list
       (common-lisp:cons "NetAppONTAPClusters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input resource-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype resource-filters () 'common-lisp:hash-table)
 (common-lisp:defun |make-resource-filters|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype resource-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype resource-ids () '(trivial-types:proper-list resource-id))
 (common-lisp:defun |make-resource-ids|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (resource-metrics (:copier common-lisp:nil)
      (:conc-name "struct-shape-resource-metrics-"))
   (timestamp common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (p95metrics common-lisp:nil :type
    (common-lisp:or p95metrics common-lisp:null))
   (capacity common-lisp:nil :type (common-lisp:or capacity common-lisp:null))
   (resource-id common-lisp:nil :type
    (common-lisp:or resource-id common-lisp:null))
   (resource-type common-lisp:nil :type
    (common-lisp:or discovery-resource-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-metrics 'make-resource-metrics))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input resource-metrics))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input resource-metrics))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timestamp))
      (common-lisp:list
       (common-lisp:cons "Timestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'p95metrics))
      (common-lisp:list
       (common-lisp:cons "P95Metrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'capacity))
      (common-lisp:list
       (common-lisp:cons "Capacity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-id))
      (common-lisp:list
       (common-lisp:cons "ResourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "ResourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input resource-metrics))
   common-lisp:nil))
(common-lisp:deftype s3bucket-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (s3config (:copier common-lisp:nil) (:conc-name "struct-shape-s3config-"))
   (bucket-access-role-arn
    (common-lisp:error ":bucket-access-role-arn is required") :type
    (common-lisp:or iam-role-arn common-lisp:null)))
 (common-lisp:export (common-lisp:list 's3config 'make-s3config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input s3config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input s3config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'bucket-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "BucketAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input s3config))
   common-lisp:nil))
(common-lisp:deftype s3storage-class () 'common-lisp:string)
(common-lisp:deftype s3subdirectory () 'common-lisp:string)
(common-lisp:deftype schedule-expression-cron () 'common-lisp:string)
(common-lisp:deftype secrets-manager-arn () 'common-lisp:string)
(common-lisp:deftype server-hostname () 'common-lisp:string)
(common-lisp:deftype smb-domain () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (smb-mount-options (:copier common-lisp:nil)
      (:conc-name "struct-shape-smb-mount-options-"))
   (version common-lisp:nil :type
    (common-lisp:or smb-version common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'smb-mount-options 'make-smb-mount-options))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input smb-mount-options))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input smb-mount-options))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input smb-mount-options))
   common-lisp:nil))
(common-lisp:deftype smb-password () 'common-lisp:string)
(common-lisp:deftype smb-security-descriptor-copy-flags () 'common-lisp:string)
(common-lisp:deftype smb-subdirectory () 'common-lisp:string)
(common-lisp:deftype smb-user () 'common-lisp:string)
(common-lisp:deftype smb-version () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype source-network-interface-arns ()
   '(trivial-types:proper-list network-interface-arn))
 (common-lisp:defun |make-source-network-interface-arns|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list network-interface-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (start-discovery-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-discovery-job-request-"))
   (storage-system-arn (common-lisp:error ":storage-system-arn is required")
    :type (common-lisp:or storage-system-arn common-lisp:null))
   (collection-duration-minutes
    (common-lisp:error ":collection-duration-minutes is required") :type
    (common-lisp:or collection-duration-minutes common-lisp:null))
   (client-token (common-lisp:error ":client-token is required") :type
    (common-lisp:or ptolemy-uuid common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or input-tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-discovery-job-request
                    'make-start-discovery-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-discovery-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-discovery-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'storage-system-arn))
      (common-lisp:list
       (common-lisp:cons "StorageSystemArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'collection-duration-minutes))
      (common-lisp:list
       (common-lisp:cons "CollectionDurationMinutes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-discovery-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-discovery-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-discovery-job-response-"))
   (discovery-job-arn common-lisp:nil :type
    (common-lisp:or discovery-job-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-discovery-job-response
                    'make-start-discovery-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-discovery-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-discovery-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'discovery-job-arn))
      (common-lisp:list
       (common-lisp:cons "DiscoveryJobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-discovery-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-task-execution-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-task-execution-request-"))
   (task-arn (common-lisp:error ":task-arn is required") :type
    (common-lisp:or task-arn common-lisp:null))
   (override-options common-lisp:nil :type
    (common-lisp:or options common-lisp:null))
   (includes common-lisp:nil :type
    (common-lisp:or filter-list common-lisp:null))
   (excludes common-lisp:nil :type
    (common-lisp:or filter-list common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or input-tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-task-execution-request
                    'make-start-task-execution-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-task-execution-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-task-execution-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-arn))
      (common-lisp:list
       (common-lisp:cons "TaskArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'override-options))
      (common-lisp:list
       (common-lisp:cons "OverrideOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'includes))
      (common-lisp:list
       (common-lisp:cons "Includes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'excludes))
      (common-lisp:list
       (common-lisp:cons "Excludes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-task-execution-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-task-execution-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-task-execution-response-"))
   (task-execution-arn common-lisp:nil :type
    (common-lisp:or task-execution-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-task-execution-response
                    'make-start-task-execution-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-task-execution-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-task-execution-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-execution-arn))
      (common-lisp:list
       (common-lisp:cons "TaskExecutionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-task-execution-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-discovery-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-stop-discovery-job-request-"))
   (discovery-job-arn (common-lisp:error ":discovery-job-arn is required")
    :type (common-lisp:or discovery-job-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-discovery-job-request
                    'make-stop-discovery-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-discovery-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-discovery-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'discovery-job-arn))
      (common-lisp:list
       (common-lisp:cons "DiscoveryJobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-discovery-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-discovery-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-stop-discovery-job-response-")))
 (common-lisp:export
  (common-lisp:list 'stop-discovery-job-response
                    'make-stop-discovery-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-discovery-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-discovery-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-discovery-job-response))
   common-lisp:nil))
(common-lisp:deftype storage-system-arn () 'common-lisp:string)
(common-lisp:deftype storage-system-connectivity-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype storage-system-list ()
   '(trivial-types:proper-list storage-system-list-entry))
 (common-lisp:defun |make-storage-system-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            storage-system-list-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (storage-system-list-entry (:copier common-lisp:nil)
      (:conc-name "struct-shape-storage-system-list-entry-"))
   (storage-system-arn common-lisp:nil :type
    (common-lisp:or storage-system-arn common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'storage-system-list-entry
                    'make-storage-system-list-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          storage-system-list-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          storage-system-list-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'storage-system-arn))
      (common-lisp:list
       (common-lisp:cons "StorageSystemArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          storage-system-list-entry))
   common-lisp:nil))
(common-lisp:deftype storage-virtual-machine-arn () 'common-lisp:string)
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun |make-tag-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-list-entry (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-list-entry-"))
   (key (common-lisp:error ":key is required") :type
    (common-lisp:or tag-key common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or tag-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag-list-entry 'make-tag-list-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-list-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-list-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-list-entry))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or taggable-resource-arn common-lisp:null))
   (tags (common-lisp:error ":tags is required") :type
    (common-lisp:or input-tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:deftype taggable-resource-arn () 'common-lisp:string)
(common-lisp:deftype task-arn () 'common-lisp:string)
(common-lisp:deftype task-execution-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype task-execution-list ()
   '(trivial-types:proper-list task-execution-list-entry))
 (common-lisp:defun |make-task-execution-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            task-execution-list-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (task-execution-list-entry (:copier common-lisp:nil)
      (:conc-name "struct-shape-task-execution-list-entry-"))
   (task-execution-arn common-lisp:nil :type
    (common-lisp:or task-execution-arn common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or task-execution-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'task-execution-list-entry
                    'make-task-execution-list-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          task-execution-list-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          task-execution-list-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-execution-arn))
      (common-lisp:list
       (common-lisp:cons "TaskExecutionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          task-execution-list-entry))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (task-execution-result-detail (:copier common-lisp:nil)
      (:conc-name "struct-shape-task-execution-result-detail-"))
   (prepare-duration common-lisp:nil :type
    (common-lisp:or duration common-lisp:null))
   (prepare-status common-lisp:nil :type
    (common-lisp:or phase-status common-lisp:null))
   (total-duration common-lisp:nil :type
    (common-lisp:or duration common-lisp:null))
   (transfer-duration common-lisp:nil :type
    (common-lisp:or duration common-lisp:null))
   (transfer-status common-lisp:nil :type
    (common-lisp:or phase-status common-lisp:null))
   (verify-duration common-lisp:nil :type
    (common-lisp:or duration common-lisp:null))
   (verify-status common-lisp:nil :type
    (common-lisp:or phase-status common-lisp:null))
   (error-code common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (error-detail common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'task-execution-result-detail
                    'make-task-execution-result-detail))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          task-execution-result-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          task-execution-result-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'prepare-duration))
      (common-lisp:list
       (common-lisp:cons "PrepareDuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'prepare-status))
      (common-lisp:list
       (common-lisp:cons "PrepareStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'total-duration))
      (common-lisp:list
       (common-lisp:cons "TotalDuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'transfer-duration))
      (common-lisp:list
       (common-lisp:cons "TransferDuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'transfer-status))
      (common-lisp:list
       (common-lisp:cons "TransferStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'verify-duration))
      (common-lisp:list
       (common-lisp:cons "VerifyDuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'verify-status))
      (common-lisp:list
       (common-lisp:cons "VerifyStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-code))
      (common-lisp:list
       (common-lisp:cons "ErrorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-detail))
      (common-lisp:list
       (common-lisp:cons "ErrorDetail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          task-execution-result-detail))
   common-lisp:nil))
(common-lisp:deftype task-execution-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (task-filter (:copier common-lisp:nil)
      (:conc-name "struct-shape-task-filter-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or task-filter-name common-lisp:null))
   (values (common-lisp:error ":values is required") :type
    (common-lisp:or filter-values common-lisp:null))
   (operator (common-lisp:error ":operator is required") :type
    (common-lisp:or operator common-lisp:null)))
 (common-lisp:export (common-lisp:list 'task-filter 'make-task-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input task-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input task-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "Values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operator))
      (common-lisp:list
       (common-lisp:cons "Operator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input task-filter))
   common-lisp:nil))
(common-lisp:deftype task-filter-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype task-filters () '(trivial-types:proper-list task-filter))
 (common-lisp:defun |make-task-filters|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list task-filter))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype task-list ()
   '(trivial-types:proper-list task-list-entry))
 (common-lisp:defun |make-task-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list task-list-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (task-list-entry (:copier common-lisp:nil)
      (:conc-name "struct-shape-task-list-entry-"))
   (task-arn common-lisp:nil :type (common-lisp:or task-arn common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or task-status common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or tag-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'task-list-entry 'make-task-list-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input task-list-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input task-list-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-arn))
      (common-lisp:list
       (common-lisp:cons "TaskArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input task-list-entry))
   common-lisp:nil))
(common-lisp:deftype task-queueing () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (task-schedule (:copier common-lisp:nil)
      (:conc-name "struct-shape-task-schedule-"))
   (schedule-expression (common-lisp:error ":schedule-expression is required")
    :type (common-lisp:or schedule-expression-cron common-lisp:null)))
 (common-lisp:export (common-lisp:list 'task-schedule 'make-task-schedule))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input task-schedule))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input task-schedule))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schedule-expression))
      (common-lisp:list
       (common-lisp:cons "ScheduleExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input task-schedule))
   common-lisp:nil))
(common-lisp:deftype task-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (throughput (:copier common-lisp:nil)
      (:conc-name "struct-shape-throughput-"))
   (read common-lisp:nil :type
    (common-lisp:or non-negative-double common-lisp:null))
   (write common-lisp:nil :type
    (common-lisp:or non-negative-double common-lisp:null))
   (other common-lisp:nil :type
    (common-lisp:or non-negative-double common-lisp:null))
   (total common-lisp:nil :type
    (common-lisp:or non-negative-double common-lisp:null)))
 (common-lisp:export (common-lisp:list 'throughput 'make-throughput))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input throughput))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input throughput))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'read))
      (common-lisp:list
       (common-lisp:cons "Read"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'write))
      (common-lisp:list
       (common-lisp:cons "Write"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'other))
      (common-lisp:list
       (common-lisp:cons "Other"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'total))
      (common-lisp:list
       (common-lisp:cons "Total"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input throughput))
   common-lisp:nil))
(common-lisp:deftype time () 'common-lisp:string)
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:deftype transfer-mode () 'common-lisp:string)
(common-lisp:deftype uid () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or taggable-resource-arn common-lisp:null))
   (keys (common-lisp:error ":keys is required") :type
    (common-lisp:or tag-key-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'keys))
      (common-lisp:list
       (common-lisp:cons "Keys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-agent-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-agent-request-"))
   (agent-arn (common-lisp:error ":agent-arn is required") :type
    (common-lisp:or agent-arn common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or tag-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-agent-request 'make-update-agent-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-agent-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-agent-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-arn))
      (common-lisp:list
       (common-lisp:cons "AgentArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-agent-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-agent-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-agent-response-")))
 (common-lisp:export
  (common-lisp:list 'update-agent-response 'make-update-agent-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-agent-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-agent-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-agent-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-discovery-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-discovery-job-request-"))
   (discovery-job-arn (common-lisp:error ":discovery-job-arn is required")
    :type (common-lisp:or discovery-job-arn common-lisp:null))
   (collection-duration-minutes
    (common-lisp:error ":collection-duration-minutes is required") :type
    (common-lisp:or collection-duration-minutes common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-discovery-job-request
                    'make-update-discovery-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-discovery-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-discovery-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'discovery-job-arn))
      (common-lisp:list
       (common-lisp:cons "DiscoveryJobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'collection-duration-minutes))
      (common-lisp:list
       (common-lisp:cons "CollectionDurationMinutes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-discovery-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-discovery-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-discovery-job-response-")))
 (common-lisp:export
  (common-lisp:list 'update-discovery-job-response
                    'make-update-discovery-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-discovery-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-discovery-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-discovery-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-location-hdfs-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-location-hdfs-request-"))
   (location-arn (common-lisp:error ":location-arn is required") :type
    (common-lisp:or location-arn common-lisp:null))
   (subdirectory common-lisp:nil :type
    (common-lisp:or hdfs-subdirectory common-lisp:null))
   (name-nodes common-lisp:nil :type
    (common-lisp:or hdfs-name-node-list common-lisp:null))
   (block-size common-lisp:nil :type
    (common-lisp:or hdfs-block-size common-lisp:null))
   (replication-factor common-lisp:nil :type
    (common-lisp:or hdfs-replication-factor common-lisp:null))
   (kms-key-provider-uri common-lisp:nil :type
    (common-lisp:or kms-key-provider-uri common-lisp:null))
   (qop-configuration common-lisp:nil :type
    (common-lisp:or qop-configuration common-lisp:null))
   (authentication-type common-lisp:nil :type
    (common-lisp:or hdfs-authentication-type common-lisp:null))
   (simple-user common-lisp:nil :type
    (common-lisp:or hdfs-user common-lisp:null))
   (kerberos-principal common-lisp:nil :type
    (common-lisp:or kerberos-principal common-lisp:null))
   (kerberos-keytab common-lisp:nil :type
    (common-lisp:or kerberos-keytab-file common-lisp:null))
   (kerberos-krb5conf common-lisp:nil :type
    (common-lisp:or kerberos-krb5conf-file common-lisp:null))
   (agent-arns common-lisp:nil :type
    (common-lisp:or agent-arn-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-location-hdfs-request
                    'make-update-location-hdfs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-location-hdfs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-location-hdfs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subdirectory))
      (common-lisp:list
       (common-lisp:cons "Subdirectory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name-nodes))
      (common-lisp:list
       (common-lisp:cons "NameNodes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'block-size))
      (common-lisp:list
       (common-lisp:cons "BlockSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replication-factor))
      (common-lisp:list
       (common-lisp:cons "ReplicationFactor"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'kms-key-provider-uri))
      (common-lisp:list
       (common-lisp:cons "KmsKeyProviderUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'qop-configuration))
      (common-lisp:list
       (common-lisp:cons "QopConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authentication-type))
      (common-lisp:list
       (common-lisp:cons "AuthenticationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'simple-user))
      (common-lisp:list
       (common-lisp:cons "SimpleUser"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kerberos-principal))
      (common-lisp:list
       (common-lisp:cons "KerberosPrincipal"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kerberos-keytab))
      (common-lisp:list
       (common-lisp:cons "KerberosKeytab"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kerberos-krb5conf))
      (common-lisp:list
       (common-lisp:cons "KerberosKrb5Conf"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-arns))
      (common-lisp:list
       (common-lisp:cons "AgentArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-location-hdfs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-location-hdfs-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-location-hdfs-response-")))
 (common-lisp:export
  (common-lisp:list 'update-location-hdfs-response
                    'make-update-location-hdfs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-location-hdfs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-location-hdfs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-location-hdfs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-location-nfs-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-location-nfs-request-"))
   (location-arn (common-lisp:error ":location-arn is required") :type
    (common-lisp:or location-arn common-lisp:null))
   (subdirectory common-lisp:nil :type
    (common-lisp:or nfs-subdirectory common-lisp:null))
   (on-prem-config common-lisp:nil :type
    (common-lisp:or on-prem-config common-lisp:null))
   (mount-options common-lisp:nil :type
    (common-lisp:or nfs-mount-options common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-location-nfs-request
                    'make-update-location-nfs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-location-nfs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-location-nfs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subdirectory))
      (common-lisp:list
       (common-lisp:cons "Subdirectory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'on-prem-config))
      (common-lisp:list
       (common-lisp:cons "OnPremConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mount-options))
      (common-lisp:list
       (common-lisp:cons "MountOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-location-nfs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-location-nfs-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-location-nfs-response-")))
 (common-lisp:export
  (common-lisp:list 'update-location-nfs-response
                    'make-update-location-nfs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-location-nfs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-location-nfs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-location-nfs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-location-object-storage-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-location-object-storage-request-"))
   (location-arn (common-lisp:error ":location-arn is required") :type
    (common-lisp:or location-arn common-lisp:null))
   (server-port common-lisp:nil :type
    (common-lisp:or object-storage-server-port common-lisp:null))
   (server-protocol common-lisp:nil :type
    (common-lisp:or object-storage-server-protocol common-lisp:null))
   (subdirectory common-lisp:nil :type
    (common-lisp:or s3subdirectory common-lisp:null))
   (access-key common-lisp:nil :type
    (common-lisp:or object-storage-access-key common-lisp:null))
   (secret-key common-lisp:nil :type
    (common-lisp:or object-storage-secret-key common-lisp:null))
   (agent-arns common-lisp:nil :type
    (common-lisp:or agent-arn-list common-lisp:null))
   (server-certificate common-lisp:nil :type
    (common-lisp:or object-storage-certificate common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-location-object-storage-request
                    'make-update-location-object-storage-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-location-object-storage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-location-object-storage-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'server-port))
      (common-lisp:list
       (common-lisp:cons "ServerPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'server-protocol))
      (common-lisp:list
       (common-lisp:cons "ServerProtocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subdirectory))
      (common-lisp:list
       (common-lisp:cons "Subdirectory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-key))
      (common-lisp:list
       (common-lisp:cons "AccessKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'secret-key))
      (common-lisp:list
       (common-lisp:cons "SecretKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-arns))
      (common-lisp:list
       (common-lisp:cons "AgentArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'server-certificate))
      (common-lisp:list
       (common-lisp:cons "ServerCertificate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-location-object-storage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-location-object-storage-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-location-object-storage-response-")))
 (common-lisp:export
  (common-lisp:list 'update-location-object-storage-response
                    'make-update-location-object-storage-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-location-object-storage-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-location-object-storage-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-location-object-storage-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-location-smb-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-location-smb-request-"))
   (location-arn (common-lisp:error ":location-arn is required") :type
    (common-lisp:or location-arn common-lisp:null))
   (subdirectory common-lisp:nil :type
    (common-lisp:or smb-subdirectory common-lisp:null))
   (user common-lisp:nil :type (common-lisp:or smb-user common-lisp:null))
   (domain common-lisp:nil :type (common-lisp:or smb-domain common-lisp:null))
   (password common-lisp:nil :type
    (common-lisp:or smb-password common-lisp:null))
   (agent-arns common-lisp:nil :type
    (common-lisp:or agent-arn-list common-lisp:null))
   (mount-options common-lisp:nil :type
    (common-lisp:or smb-mount-options common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-location-smb-request
                    'make-update-location-smb-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-location-smb-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-location-smb-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subdirectory))
      (common-lisp:list
       (common-lisp:cons "Subdirectory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user))
      (common-lisp:list
       (common-lisp:cons "User"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain))
      (common-lisp:list
       (common-lisp:cons "Domain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'password))
      (common-lisp:list
       (common-lisp:cons "Password"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-arns))
      (common-lisp:list
       (common-lisp:cons "AgentArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mount-options))
      (common-lisp:list
       (common-lisp:cons "MountOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-location-smb-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-location-smb-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-location-smb-response-")))
 (common-lisp:export
  (common-lisp:list 'update-location-smb-response
                    'make-update-location-smb-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-location-smb-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-location-smb-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-location-smb-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-storage-system-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-storage-system-request-"))
   (storage-system-arn (common-lisp:error ":storage-system-arn is required")
    :type (common-lisp:or storage-system-arn common-lisp:null))
   (server-configuration common-lisp:nil :type
    (common-lisp:or discovery-server-configuration common-lisp:null))
   (agent-arns common-lisp:nil :type
    (common-lisp:or discovery-agent-arn-list common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (cloud-watch-log-group-arn common-lisp:nil :type
    (common-lisp:or log-group-arn common-lisp:null))
   (credentials common-lisp:nil :type
    (common-lisp:or credentials common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-storage-system-request
                    'make-update-storage-system-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-storage-system-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-storage-system-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'storage-system-arn))
      (common-lisp:list
       (common-lisp:cons "StorageSystemArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'server-configuration))
      (common-lisp:list
       (common-lisp:cons "ServerConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-arns))
      (common-lisp:list
       (common-lisp:cons "AgentArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cloud-watch-log-group-arn))
      (common-lisp:list
       (common-lisp:cons "CloudWatchLogGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'credentials))
      (common-lisp:list
       (common-lisp:cons "Credentials"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-storage-system-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-storage-system-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-storage-system-response-")))
 (common-lisp:export
  (common-lisp:list 'update-storage-system-response
                    'make-update-storage-system-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-storage-system-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-storage-system-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-storage-system-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-task-execution-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-task-execution-request-"))
   (task-execution-arn (common-lisp:error ":task-execution-arn is required")
    :type (common-lisp:or task-execution-arn common-lisp:null))
   (options (common-lisp:error ":options is required") :type
    (common-lisp:or options common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-task-execution-request
                    'make-update-task-execution-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-task-execution-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-task-execution-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-execution-arn))
      (common-lisp:list
       (common-lisp:cons "TaskExecutionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'options))
      (common-lisp:list
       (common-lisp:cons "Options"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-task-execution-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-task-execution-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-task-execution-response-")))
 (common-lisp:export
  (common-lisp:list 'update-task-execution-response
                    'make-update-task-execution-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-task-execution-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-task-execution-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-task-execution-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-task-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-task-request-"))
   (task-arn (common-lisp:error ":task-arn is required") :type
    (common-lisp:or task-arn common-lisp:null))
   (options common-lisp:nil :type (common-lisp:or options common-lisp:null))
   (excludes common-lisp:nil :type
    (common-lisp:or filter-list common-lisp:null))
   (schedule common-lisp:nil :type
    (common-lisp:or task-schedule common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or tag-value common-lisp:null))
   (cloud-watch-log-group-arn common-lisp:nil :type
    (common-lisp:or log-group-arn common-lisp:null))
   (includes common-lisp:nil :type
    (common-lisp:or filter-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-task-request 'make-update-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-task-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-arn))
      (common-lisp:list
       (common-lisp:cons "TaskArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'options))
      (common-lisp:list
       (common-lisp:cons "Options"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'excludes))
      (common-lisp:list
       (common-lisp:cons "Excludes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schedule))
      (common-lisp:list
       (common-lisp:cons "Schedule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cloud-watch-log-group-arn))
      (common-lisp:list
       (common-lisp:cons "CloudWatchLogGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'includes))
      (common-lisp:list
       (common-lisp:cons "Includes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-task-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-task-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-task-response-")))
 (common-lisp:export
  (common-lisp:list 'update-task-response 'make-update-task-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-task-response))
   common-lisp:nil))
(common-lisp:deftype verify-mode () 'common-lisp:string)
(common-lisp:deftype vpc-endpoint-id () 'common-lisp:string)
common-lisp:nil
common-lisp:nil
(common-lisp:progn
 (common-lisp:defun add-storage-system
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key server-configuration system-type
                     agent-arns cloud-watch-log-group-arn tags name
                     client-token credentials)
   (common-lisp:declare
    (common-lisp:ignorable server-configuration system-type agent-arns
     cloud-watch-log-group-arn tags name client-token credentials))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-add-storage-system-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "AddStorageSystem"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'add-storage-system))
(common-lisp:progn
 (common-lisp:defun cancel-task-execution
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key task-execution-arn)
   (common-lisp:declare (common-lisp:ignorable task-execution-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-cancel-task-execution-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "CancelTaskExecution"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'cancel-task-execution))
(common-lisp:progn
 (common-lisp:defun create-agent
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key activation-key agent-name tags
                     vpc-endpoint-id subnet-arns security-group-arns)
   (common-lisp:declare
    (common-lisp:ignorable activation-key agent-name tags vpc-endpoint-id
     subnet-arns security-group-arns))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-agent-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "CreateAgent"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-agent))
(common-lisp:progn
 (common-lisp:defun create-location-efs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key subdirectory efs-filesystem-arn ec2config
                     tags access-point-arn file-system-access-role-arn
                     in-transit-encryption)
   (common-lisp:declare
    (common-lisp:ignorable subdirectory efs-filesystem-arn ec2config tags
     access-point-arn file-system-access-role-arn in-transit-encryption))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-location-efs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "CreateLocationEfs"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-location-efs))
(common-lisp:progn
 (common-lisp:defun create-location-fsx-lustre
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key fsx-filesystem-arn security-group-arns
                     subdirectory tags)
   (common-lisp:declare
    (common-lisp:ignorable fsx-filesystem-arn security-group-arns subdirectory
     tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-location-fsx-lustre-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "CreateLocationFsxLustre"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-location-fsx-lustre))
(common-lisp:progn
 (common-lisp:defun create-location-fsx-ontap
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key protocol security-group-arns
                     storage-virtual-machine-arn subdirectory tags)
   (common-lisp:declare
    (common-lisp:ignorable protocol security-group-arns
     storage-virtual-machine-arn subdirectory tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-location-fsx-ontap-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "CreateLocationFsxOntap"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-location-fsx-ontap))
(common-lisp:progn
 (common-lisp:defun create-location-fsx-open-zfs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key fsx-filesystem-arn protocol
                     security-group-arns subdirectory tags)
   (common-lisp:declare
    (common-lisp:ignorable fsx-filesystem-arn protocol security-group-arns
     subdirectory tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-location-fsx-open-zfs-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "CreateLocationFsxOpenZfs"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-location-fsx-open-zfs))
(common-lisp:progn
 (common-lisp:defun create-location-fsx-windows
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key subdirectory fsx-filesystem-arn
                     security-group-arns tags user domain password)
   (common-lisp:declare
    (common-lisp:ignorable subdirectory fsx-filesystem-arn security-group-arns
     tags user domain password))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-location-fsx-windows-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "CreateLocationFsxWindows"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-location-fsx-windows))
(common-lisp:progn
 (common-lisp:defun create-location-hdfs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key subdirectory name-nodes block-size
                     replication-factor kms-key-provider-uri qop-configuration
                     authentication-type simple-user kerberos-principal
                     kerberos-keytab kerberos-krb5conf agent-arns tags)
   (common-lisp:declare
    (common-lisp:ignorable subdirectory name-nodes block-size
     replication-factor kms-key-provider-uri qop-configuration
     authentication-type simple-user kerberos-principal kerberos-keytab
     kerberos-krb5conf agent-arns tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-location-hdfs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "CreateLocationHdfs"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-location-hdfs))
(common-lisp:progn
 (common-lisp:defun create-location-nfs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key subdirectory server-hostname
                     on-prem-config mount-options tags)
   (common-lisp:declare
    (common-lisp:ignorable subdirectory server-hostname on-prem-config
     mount-options tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-location-nfs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "CreateLocationNfs"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-location-nfs))
(common-lisp:progn
 (common-lisp:defun create-location-object-storage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key server-hostname server-port
                     server-protocol subdirectory bucket-name access-key
                     secret-key agent-arns tags server-certificate)
   (common-lisp:declare
    (common-lisp:ignorable server-hostname server-port server-protocol
     subdirectory bucket-name access-key secret-key agent-arns tags
     server-certificate))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-location-object-storage-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "CreateLocationObjectStorage"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-location-object-storage))
(common-lisp:progn
 (common-lisp:defun create-location-s3
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key subdirectory s3bucket-arn s3storage-class
                     s3config agent-arns tags)
   (common-lisp:declare
    (common-lisp:ignorable subdirectory s3bucket-arn s3storage-class s3config
     agent-arns tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-location-s3request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "CreateLocationS3"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-location-s3))
(common-lisp:progn
 (common-lisp:defun create-location-smb
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key subdirectory server-hostname user domain
                     password agent-arns mount-options tags)
   (common-lisp:declare
    (common-lisp:ignorable subdirectory server-hostname user domain password
     agent-arns mount-options tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-location-smb-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "CreateLocationSmb"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-location-smb))
(common-lisp:progn
 (common-lisp:defun create-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key source-location-arn
                     destination-location-arn cloud-watch-log-group-arn name
                     options excludes schedule tags includes)
   (common-lisp:declare
    (common-lisp:ignorable source-location-arn destination-location-arn
     cloud-watch-log-group-arn name options excludes schedule tags includes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-task-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "CreateTask"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-task))
(common-lisp:progn
 (common-lisp:defun delete-agent
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key agent-arn)
   (common-lisp:declare (common-lisp:ignorable agent-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-agent-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DeleteAgent"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-agent))
(common-lisp:progn
 (common-lisp:defun delete-location
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key location-arn)
   (common-lisp:declare (common-lisp:ignorable location-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-location-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DeleteLocation"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-location))
(common-lisp:progn
 (common-lisp:defun delete-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key task-arn)
   (common-lisp:declare (common-lisp:ignorable task-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-task-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DeleteTask"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-task))
(common-lisp:progn
 (common-lisp:defun describe-agent
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key agent-arn)
   (common-lisp:declare (common-lisp:ignorable agent-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-agent-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DescribeAgent"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-agent))
(common-lisp:progn
 (common-lisp:defun describe-discovery-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key discovery-job-arn)
   (common-lisp:declare (common-lisp:ignorable discovery-job-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-discovery-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DescribeDiscoveryJob"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-discovery-job))
(common-lisp:progn
 (common-lisp:defun describe-location-efs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key location-arn)
   (common-lisp:declare (common-lisp:ignorable location-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-location-efs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DescribeLocationEfs"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-location-efs))
(common-lisp:progn
 (common-lisp:defun describe-location-fsx-lustre
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key location-arn)
   (common-lisp:declare (common-lisp:ignorable location-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-location-fsx-lustre-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DescribeLocationFsxLustre"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-location-fsx-lustre))
(common-lisp:progn
 (common-lisp:defun describe-location-fsx-ontap
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key location-arn)
   (common-lisp:declare (common-lisp:ignorable location-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-location-fsx-ontap-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DescribeLocationFsxOntap"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-location-fsx-ontap))
(common-lisp:progn
 (common-lisp:defun describe-location-fsx-open-zfs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key location-arn)
   (common-lisp:declare (common-lisp:ignorable location-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-location-fsx-open-zfs-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DescribeLocationFsxOpenZfs"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-location-fsx-open-zfs))
(common-lisp:progn
 (common-lisp:defun describe-location-fsx-windows
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key location-arn)
   (common-lisp:declare (common-lisp:ignorable location-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-location-fsx-windows-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DescribeLocationFsxWindows"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-location-fsx-windows))
(common-lisp:progn
 (common-lisp:defun describe-location-hdfs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key location-arn)
   (common-lisp:declare (common-lisp:ignorable location-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-location-hdfs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DescribeLocationHdfs"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-location-hdfs))
(common-lisp:progn
 (common-lisp:defun describe-location-nfs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key location-arn)
   (common-lisp:declare (common-lisp:ignorable location-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-location-nfs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DescribeLocationNfs"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-location-nfs))
(common-lisp:progn
 (common-lisp:defun describe-location-object-storage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key location-arn)
   (common-lisp:declare (common-lisp:ignorable location-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-location-object-storage-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DescribeLocationObjectStorage"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-location-object-storage))
(common-lisp:progn
 (common-lisp:defun describe-location-s3
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key location-arn)
   (common-lisp:declare (common-lisp:ignorable location-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-location-s3request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DescribeLocationS3"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-location-s3))
(common-lisp:progn
 (common-lisp:defun describe-location-smb
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key location-arn)
   (common-lisp:declare (common-lisp:ignorable location-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-location-smb-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DescribeLocationSmb"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-location-smb))
(common-lisp:progn
 (common-lisp:defun describe-storage-system
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key storage-system-arn)
   (common-lisp:declare (common-lisp:ignorable storage-system-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-storage-system-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DescribeStorageSystem"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-storage-system))
(common-lisp:progn
 (common-lisp:defun describe-storage-system-resource-metrics
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key discovery-job-arn resource-type
                     resource-id start-time end-time max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable discovery-job-arn resource-type resource-id
     start-time end-time max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-storage-system-resource-metrics-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DescribeStorageSystemResourceMetrics"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-storage-system-resource-metrics))
(common-lisp:progn
 (common-lisp:defun describe-storage-system-resources
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key discovery-job-arn resource-type
                     resource-ids filter max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable discovery-job-arn resource-type resource-ids filter
     max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-storage-system-resources-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DescribeStorageSystemResources"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-storage-system-resources))
(common-lisp:progn
 (common-lisp:defun describe-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key task-arn)
   (common-lisp:declare (common-lisp:ignorable task-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-task-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DescribeTask"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-task))
(common-lisp:progn
 (common-lisp:defun describe-task-execution
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key task-execution-arn)
   (common-lisp:declare (common-lisp:ignorable task-execution-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-task-execution-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DescribeTaskExecution"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-task-execution))
(common-lisp:progn
 (common-lisp:defun generate-recommendations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key discovery-job-arn resource-ids
                     resource-type)
   (common-lisp:declare
    (common-lisp:ignorable discovery-job-arn resource-ids resource-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-generate-recommendations-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "GenerateRecommendations"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'generate-recommendations))
(common-lisp:progn
 (common-lisp:defun list-agents
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-agents-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListAgents"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-agents))
(common-lisp:progn
 (common-lisp:defun list-discovery-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key storage-system-arn max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable storage-system-arn max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-discovery-jobs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListDiscoveryJobs"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-discovery-jobs))
(common-lisp:progn
 (common-lisp:defun list-locations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token filters)
   (common-lisp:declare (common-lisp:ignorable max-results next-token filters))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-locations-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListLocations"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-locations))
(common-lisp:progn
 (common-lisp:defun list-storage-systems
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-storage-systems-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListStorageSystems"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-storage-systems))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable resource-arn max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListTagsForResource"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun list-task-executions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key task-arn max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable task-arn max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-task-executions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListTaskExecutions"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-task-executions))
(common-lisp:progn
 (common-lisp:defun list-tasks
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token filters)
   (common-lisp:declare (common-lisp:ignorable max-results next-token filters))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tasks-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListTasks"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tasks))
(common-lisp:progn
 (common-lisp:defun remove-storage-system
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key storage-system-arn)
   (common-lisp:declare (common-lisp:ignorable storage-system-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-remove-storage-system-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "RemoveStorageSystem"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'remove-storage-system))
(common-lisp:progn
 (common-lisp:defun start-discovery-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key storage-system-arn
                     collection-duration-minutes client-token tags)
   (common-lisp:declare
    (common-lisp:ignorable storage-system-arn collection-duration-minutes
     client-token tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-discovery-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "StartDiscoveryJob"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-discovery-job))
(common-lisp:progn
 (common-lisp:defun start-task-execution
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key task-arn override-options includes
                     excludes tags)
   (common-lisp:declare
    (common-lisp:ignorable task-arn override-options includes excludes tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-task-execution-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "StartTaskExecution"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-task-execution))
(common-lisp:progn
 (common-lisp:defun stop-discovery-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key discovery-job-arn)
   (common-lisp:declare (common-lisp:ignorable discovery-job-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-stop-discovery-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "StopDiscoveryJob"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'stop-discovery-job))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "TagResource"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "UntagResource"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-agent
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key agent-arn name)
   (common-lisp:declare (common-lisp:ignorable agent-arn name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-agent-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "UpdateAgent"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-agent))
(common-lisp:progn
 (common-lisp:defun update-discovery-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key discovery-job-arn
                     collection-duration-minutes)
   (common-lisp:declare
    (common-lisp:ignorable discovery-job-arn collection-duration-minutes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-discovery-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "UpdateDiscoveryJob"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-discovery-job))
(common-lisp:progn
 (common-lisp:defun update-location-hdfs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key location-arn subdirectory name-nodes
                     block-size replication-factor kms-key-provider-uri
                     qop-configuration authentication-type simple-user
                     kerberos-principal kerberos-keytab kerberos-krb5conf
                     agent-arns)
   (common-lisp:declare
    (common-lisp:ignorable location-arn subdirectory name-nodes block-size
     replication-factor kms-key-provider-uri qop-configuration
     authentication-type simple-user kerberos-principal kerberos-keytab
     kerberos-krb5conf agent-arns))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-location-hdfs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "UpdateLocationHdfs"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-location-hdfs))
(common-lisp:progn
 (common-lisp:defun update-location-nfs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key location-arn subdirectory on-prem-config
                     mount-options)
   (common-lisp:declare
    (common-lisp:ignorable location-arn subdirectory on-prem-config
     mount-options))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-location-nfs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "UpdateLocationNfs"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-location-nfs))
(common-lisp:progn
 (common-lisp:defun update-location-object-storage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key location-arn server-port server-protocol
                     subdirectory access-key secret-key agent-arns
                     server-certificate)
   (common-lisp:declare
    (common-lisp:ignorable location-arn server-port server-protocol
     subdirectory access-key secret-key agent-arns server-certificate))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-location-object-storage-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "UpdateLocationObjectStorage"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-location-object-storage))
(common-lisp:progn
 (common-lisp:defun update-location-smb
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key location-arn subdirectory user domain
                     password agent-arns mount-options)
   (common-lisp:declare
    (common-lisp:ignorable location-arn subdirectory user domain password
     agent-arns mount-options))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-location-smb-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "UpdateLocationSmb"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-location-smb))
(common-lisp:progn
 (common-lisp:defun update-storage-system
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key storage-system-arn server-configuration
                     agent-arns name cloud-watch-log-group-arn credentials)
   (common-lisp:declare
    (common-lisp:ignorable storage-system-arn server-configuration agent-arns
     name cloud-watch-log-group-arn credentials))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-storage-system-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "UpdateStorageSystem"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-storage-system))
(common-lisp:progn
 (common-lisp:defun update-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key task-arn options excludes schedule name
                     cloud-watch-log-group-arn includes)
   (common-lisp:declare
    (common-lisp:ignorable task-arn options excludes schedule name
     cloud-watch-log-group-arn includes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-task-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "UpdateTask"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-task))
(common-lisp:progn
 (common-lisp:defun update-task-execution
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key task-execution-arn options)
   (common-lisp:declare (common-lisp:ignorable task-execution-arn options))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-task-execution-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "UpdateTaskExecution"
                                                        "2018-11-09"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-task-execution))
