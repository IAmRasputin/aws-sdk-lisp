;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/connectcampaigns/api
  (:use)
  (:nicknames #:aws/connectcampaigns)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/connectcampaigns/api)
(common-lisp:progn
 (common-lisp:defclass connectcampaigns-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "connectcampaigns"))
 (common-lisp:export 'connectcampaigns-request))
(common-lisp:progn
 (common-lisp:define-condition connectcampaigns-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'connectcampaigns-error))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("ConflictException" . conflict-exception)
    ("InternalServerException" . internal-server-exception)
    ("InvalidCampaignStateException" . invalid-campaign-state-exception)
    ("InvalidStateException" . invalid-state-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceQuotaExceededException" . service-quota-exceeded-exception)
    ("ThrottlingException" . throttling-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (connectcampaigns-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       access-denied-exception-message)
      (x-amz-error-type :initarg :x-amz-error-type :initform common-lisp:nil
       :reader access-denied-exception-x-amz-error-type)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-message
                    'access-denied-exception-x-amz-error-type)))
(common-lisp:progn
 (common-lisp:defstruct
     (answer-machine-detection-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-answer-machine-detection-config-"))
   (enable-answer-machine-detection
    (common-lisp:error ":enableanswermachinedetection is required") :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'answer-machine-detection-config
                    'make-answer-machine-detection-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          answer-machine-detection-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          answer-machine-detection-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enable-answer-machine-detection))
      (common-lisp:list
       (common-lisp:cons "enableAnswerMachineDetection"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          answer-machine-detection-config))
   common-lisp:nil))
(common-lisp:deftype arn () 'common-lisp:string)
(common-lisp:deftype attribute-name () 'common-lisp:string)
(common-lisp:deftype attribute-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype attributes () 'common-lisp:hash-table)
 (common-lisp:defun |make-attributes| (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype bandwidth-allocation () 'common-lisp:double-float)
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct
     (campaign (:copier common-lisp:nil) (:conc-name "struct-shape-campaign-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or campaign-arn common-lisp:null))
   (connect-instance-id (common-lisp:error ":connectinstanceid is required")
    :type (common-lisp:or instance-id common-lisp:null))
   (dialer-config (common-lisp:error ":dialerconfig is required") :type
    (common-lisp:or dialer-config common-lisp:null))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or campaign-id common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or campaign-name common-lisp:null))
   (outbound-call-config (common-lisp:error ":outboundcallconfig is required")
    :type (common-lisp:or outbound-call-config common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-map common-lisp:null)))
 (common-lisp:export (common-lisp:list 'campaign 'make-campaign))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input campaign))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input campaign))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connect-instance-id))
      (common-lisp:list
       (common-lisp:cons "connectInstanceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dialer-config))
      (common-lisp:list
       (common-lisp:cons "dialerConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'outbound-call-config))
      (common-lisp:list
       (common-lisp:cons "outboundCallConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input campaign))
   common-lisp:nil))
(common-lisp:deftype campaign-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (campaign-filters (:copier common-lisp:nil)
      (:conc-name "struct-shape-campaign-filters-"))
   (instance-id-filter common-lisp:nil :type
    (common-lisp:or instance-id-filter common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'campaign-filters 'make-campaign-filters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input campaign-filters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input campaign-filters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-id-filter))
      (common-lisp:list
       (common-lisp:cons "instanceIdFilter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input campaign-filters))
   common-lisp:nil))
(common-lisp:deftype campaign-id () 'common-lisp:string)
(common-lisp:deftype campaign-name () 'common-lisp:string)
(common-lisp:deftype campaign-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (campaign-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-campaign-summary-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or campaign-arn common-lisp:null))
   (connect-instance-id (common-lisp:error ":connectinstanceid is required")
    :type (common-lisp:or instance-id common-lisp:null))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or campaign-id common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or campaign-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'campaign-summary 'make-campaign-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input campaign-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input campaign-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connect-instance-id))
      (common-lisp:list
       (common-lisp:cons "connectInstanceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input campaign-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype campaign-summary-list ()
   '(trivial-types:proper-list campaign-summary))
 (common-lisp:defun |make-campaign-summary-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list campaign-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype client-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (connectcampaigns-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)
      (x-amz-error-type :initarg :x-amz-error-type :initform common-lisp:nil
       :reader conflict-exception-x-amz-error-type)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message
                    'conflict-exception-x-amz-error-type)))
(common-lisp:deftype contact-flow-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (create-campaign-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-campaign-request-"))
   (connect-instance-id (common-lisp:error ":connectinstanceid is required")
    :type (common-lisp:or instance-id common-lisp:null))
   (dialer-config (common-lisp:error ":dialerconfig is required") :type
    (common-lisp:or dialer-config common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or campaign-name common-lisp:null))
   (outbound-call-config (common-lisp:error ":outboundcallconfig is required")
    :type (common-lisp:or outbound-call-config common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-campaign-request 'make-create-campaign-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-campaign-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-campaign-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connect-instance-id))
      (common-lisp:list
       (common-lisp:cons "connectInstanceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dialer-config))
      (common-lisp:list
       (common-lisp:cons "dialerConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'outbound-call-config))
      (common-lisp:list
       (common-lisp:cons "outboundCallConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-campaign-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-campaign-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-campaign-response-"))
   (arn common-lisp:nil :type (common-lisp:or campaign-arn common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or campaign-id common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-campaign-response 'make-create-campaign-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-campaign-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-campaign-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-campaign-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-campaign-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-campaign-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or campaign-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-campaign-request 'make-delete-campaign-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-campaign-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-campaign-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-campaign-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-connect-instance-config-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-connect-instance-config-request-"))
   (connect-instance-id (common-lisp:error ":connectinstanceid is required")
    :type (common-lisp:or instance-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-connect-instance-config-request
                    'make-delete-connect-instance-config-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-connect-instance-config-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-connect-instance-config-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-connect-instance-config-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-instance-onboarding-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-instance-onboarding-job-request-"))
   (connect-instance-id (common-lisp:error ":connectinstanceid is required")
    :type (common-lisp:or instance-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-instance-onboarding-job-request
                    'make-delete-instance-onboarding-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-instance-onboarding-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-instance-onboarding-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-instance-onboarding-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-campaign-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-campaign-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or campaign-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-campaign-request
                    'make-describe-campaign-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-campaign-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-campaign-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-campaign-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-campaign-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-campaign-response-"))
   (campaign common-lisp:nil :type (common-lisp:or campaign common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-campaign-response
                    'make-describe-campaign-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-campaign-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-campaign-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'campaign))
      (common-lisp:list
       (common-lisp:cons "campaign"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-campaign-response))
   common-lisp:nil))
(common-lisp:deftype destination-phone-number () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (dial-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-dial-request-"))
   (attributes (common-lisp:error ":attributes is required") :type
    (common-lisp:or attributes common-lisp:null))
   (client-token (common-lisp:error ":clienttoken is required") :type
    (common-lisp:or client-token common-lisp:null))
   (expiration-time (common-lisp:error ":expirationtime is required") :type
    (common-lisp:or time-stamp common-lisp:null))
   (phone-number (common-lisp:error ":phonenumber is required") :type
    (common-lisp:or destination-phone-number common-lisp:null)))
 (common-lisp:export (common-lisp:list 'dial-request 'make-dial-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dial-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dial-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expiration-time))
      (common-lisp:list
       (common-lisp:cons "expirationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number))
      (common-lisp:list
       (common-lisp:cons "phoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dial-request))
   common-lisp:nil))
(common-lisp:deftype dial-request-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype dial-request-list ()
   '(trivial-types:proper-list dial-request))
 (common-lisp:defun |make-dial-request-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list dial-request))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (dialer-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-dialer-config-"))
   (predictive-dialer-config common-lisp:nil :type
    (common-lisp:or predictive-dialer-config common-lisp:null))
   (progressive-dialer-config common-lisp:nil :type
    (common-lisp:or progressive-dialer-config common-lisp:null)))
 (common-lisp:export (common-lisp:list 'dialer-config 'make-dialer-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dialer-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dialer-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'predictive-dialer-config))
      (common-lisp:list
       (common-lisp:cons "predictiveDialerConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'progressive-dialer-config))
      (common-lisp:list
       (common-lisp:cons "progressiveDialerConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dialer-config))
   common-lisp:nil))
(common-lisp:deftype enabled () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct
     (encryption-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-encryption-config-"))
   (enabled (common-lisp:error ":enabled is required") :type
    (common-lisp:or enabled common-lisp:null))
   (encryption-type common-lisp:nil :type
    (common-lisp:or encryption-type common-lisp:null))
   (key-arn common-lisp:nil :type
    (common-lisp:or encryption-key common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'encryption-config 'make-encryption-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input encryption-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input encryption-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption-type))
      (common-lisp:list
       (common-lisp:cons "encryptionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-arn))
      (common-lisp:list
       (common-lisp:cons "keyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input encryption-config))
   common-lisp:nil))
(common-lisp:deftype encryption-key () 'common-lisp:string)
(common-lisp:deftype encryption-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (failed-campaign-state-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-failed-campaign-state-response-"))
   (campaign-id common-lisp:nil :type
    (common-lisp:or campaign-id common-lisp:null))
   (failure-code common-lisp:nil :type
    (common-lisp:or get-campaign-state-batch-failure-code common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'failed-campaign-state-response
                    'make-failed-campaign-state-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          failed-campaign-state-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          failed-campaign-state-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'campaign-id))
      (common-lisp:list
       (common-lisp:cons "campaignId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failure-code))
      (common-lisp:list
       (common-lisp:cons "failureCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          failed-campaign-state-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype failed-campaign-state-response-list ()
   '(trivial-types:proper-list failed-campaign-state-response))
 (common-lisp:defun |make-failed-campaign-state-response-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            failed-campaign-state-response))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (failed-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-failed-request-"))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null))
   (failure-code common-lisp:nil :type
    (common-lisp:or failure-code common-lisp:null))
   (id common-lisp:nil :type
    (common-lisp:or dial-request-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'failed-request 'make-failed-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input failed-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input failed-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failure-code))
      (common-lisp:list
       (common-lisp:cons "failureCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input failed-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype failed-request-list ()
   '(trivial-types:proper-list failed-request))
 (common-lisp:defun |make-failed-request-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list failed-request))
   aws-sdk/generator/shape::members))
(common-lisp:deftype failure-code () 'common-lisp:string)
(common-lisp:deftype get-campaign-state-batch-failure-code ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (get-campaign-state-batch-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-campaign-state-batch-request-"))
   (campaign-ids (common-lisp:error ":campaignids is required") :type
    (common-lisp:or get-campaign-state-batch-request-campaign-ids-list
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-campaign-state-batch-request
                    'make-get-campaign-state-batch-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-state-batch-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-state-batch-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'campaign-ids))
      (common-lisp:list
       (common-lisp:cons "campaignIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-state-batch-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype get-campaign-state-batch-request-campaign-ids-list ()
   '(trivial-types:proper-list campaign-id))
 (common-lisp:defun |make-get-campaign-state-batch-request-campaign-ids-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list campaign-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (get-campaign-state-batch-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-campaign-state-batch-response-"))
   (failed-requests common-lisp:nil :type
    (common-lisp:or failed-campaign-state-response-list common-lisp:null))
   (successful-requests common-lisp:nil :type
    (common-lisp:or successful-campaign-state-response-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-campaign-state-batch-response
                    'make-get-campaign-state-batch-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-state-batch-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-state-batch-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failed-requests))
      (common-lisp:list
       (common-lisp:cons "failedRequests"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'successful-requests))
      (common-lisp:list
       (common-lisp:cons "successfulRequests"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-state-batch-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-campaign-state-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-campaign-state-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or campaign-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-campaign-state-request
                    'make-get-campaign-state-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-state-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-state-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-state-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-campaign-state-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-campaign-state-response-"))
   (state common-lisp:nil :type
    (common-lisp:or campaign-state common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-campaign-state-response
                    'make-get-campaign-state-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-state-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-state-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-state-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-connect-instance-config-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-connect-instance-config-request-"))
   (connect-instance-id (common-lisp:error ":connectinstanceid is required")
    :type (common-lisp:or instance-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-connect-instance-config-request
                    'make-get-connect-instance-config-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-connect-instance-config-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-connect-instance-config-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-connect-instance-config-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-connect-instance-config-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-connect-instance-config-response-"))
   (connect-instance-config common-lisp:nil :type
    (common-lisp:or instance-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-connect-instance-config-response
                    'make-get-connect-instance-config-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-connect-instance-config-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-connect-instance-config-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'connect-instance-config))
      (common-lisp:list
       (common-lisp:cons "connectInstanceConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-connect-instance-config-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-instance-onboarding-job-status-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-instance-onboarding-job-status-request-"))
   (connect-instance-id (common-lisp:error ":connectinstanceid is required")
    :type (common-lisp:or instance-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-instance-onboarding-job-status-request
                    'make-get-instance-onboarding-job-status-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-instance-onboarding-job-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-instance-onboarding-job-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-instance-onboarding-job-status-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-instance-onboarding-job-status-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-instance-onboarding-job-status-response-"))
   (connect-instance-onboarding-job-status common-lisp:nil :type
    (common-lisp:or instance-onboarding-job-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-instance-onboarding-job-status-response
                    'make-get-instance-onboarding-job-status-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-instance-onboarding-job-status-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-instance-onboarding-job-status-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'connect-instance-onboarding-job-status))
      (common-lisp:list
       (common-lisp:cons "connectInstanceOnboardingJobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-instance-onboarding-job-status-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (instance-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-instance-config-"))
   (connect-instance-id (common-lisp:error ":connectinstanceid is required")
    :type (common-lisp:or instance-id common-lisp:null))
   (encryption-config (common-lisp:error ":encryptionconfig is required") :type
    (common-lisp:or encryption-config common-lisp:null))
   (service-linked-role-arn
    (common-lisp:error ":servicelinkedrolearn is required") :type
    (common-lisp:or service-linked-role-arn common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance-config 'make-instance-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input instance-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input instance-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connect-instance-id))
      (common-lisp:list
       (common-lisp:cons "connectInstanceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption-config))
      (common-lisp:list
       (common-lisp:cons "encryptionConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'service-linked-role-arn))
      (common-lisp:list
       (common-lisp:cons "serviceLinkedRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input instance-config))
   common-lisp:nil))
(common-lisp:deftype instance-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (instance-id-filter (:copier common-lisp:nil)
      (:conc-name "struct-shape-instance-id-filter-"))
   (operator (common-lisp:error ":operator is required") :type
    (common-lisp:or instance-id-filter-operator common-lisp:null))
   (value (common-lisp:error ":value is required") :type
    (common-lisp:or instance-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-id-filter 'make-instance-id-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input instance-id-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input instance-id-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operator))
      (common-lisp:list
       (common-lisp:cons "operator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input instance-id-filter))
   common-lisp:nil))
(common-lisp:deftype instance-id-filter-operator () 'common-lisp:string)
(common-lisp:deftype instance-onboarding-job-failure-code ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (instance-onboarding-job-status (:copier common-lisp:nil)
      (:conc-name "struct-shape-instance-onboarding-job-status-"))
   (connect-instance-id (common-lisp:error ":connectinstanceid is required")
    :type (common-lisp:or instance-id common-lisp:null))
   (failure-code common-lisp:nil :type
    (common-lisp:or instance-onboarding-job-failure-code common-lisp:null))
   (status (common-lisp:error ":status is required") :type
    (common-lisp:or instance-onboarding-job-status-code common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-onboarding-job-status
                    'make-instance-onboarding-job-status))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          instance-onboarding-job-status))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          instance-onboarding-job-status))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connect-instance-id))
      (common-lisp:list
       (common-lisp:cons "connectInstanceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failure-code))
      (common-lisp:list
       (common-lisp:cons "failureCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          instance-onboarding-job-status))
   common-lisp:nil))
(common-lisp:deftype instance-onboarding-job-status-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (connectcampaigns-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-exception-message)
      (x-amz-error-type :initarg :x-amz-error-type :initform common-lisp:nil
       :reader internal-server-exception-x-amz-error-type)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-message
                    'internal-server-exception-x-amz-error-type)))
(common-lisp:progn
 (common-lisp:define-condition invalid-campaign-state-exception
     (connectcampaigns-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-campaign-state-exception-message)
      (state :initarg :state :initform common-lisp:nil :reader
       invalid-campaign-state-exception-state)
      (x-amz-error-type :initarg :x-amz-error-type :initform common-lisp:nil
       :reader invalid-campaign-state-exception-x-amz-error-type)))
 (common-lisp:export
  (common-lisp:list 'invalid-campaign-state-exception
                    'invalid-campaign-state-exception-message
                    'invalid-campaign-state-exception-state
                    'invalid-campaign-state-exception-x-amz-error-type)))
(common-lisp:progn
 (common-lisp:define-condition invalid-state-exception
     (connectcampaigns-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-state-exception-message)
      (x-amz-error-type :initarg :x-amz-error-type :initform common-lisp:nil
       :reader invalid-state-exception-x-amz-error-type)))
 (common-lisp:export
  (common-lisp:list 'invalid-state-exception 'invalid-state-exception-message
                    'invalid-state-exception-x-amz-error-type)))
(common-lisp:progn
 (common-lisp:defstruct
     (list-campaigns-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-campaigns-request-"))
   (filters common-lisp:nil :type
    (common-lisp:or campaign-filters common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-campaigns-request 'make-list-campaigns-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-campaigns-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-campaigns-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-campaigns-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-campaigns-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-campaigns-response-"))
   (campaign-summary-list common-lisp:nil :type
    (common-lisp:or campaign-summary-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-campaigns-response 'make-list-campaigns-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-campaigns-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-campaigns-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'campaign-summary-list))
      (common-lisp:list
       (common-lisp:cons "campaignSummaryList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-campaigns-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-request-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-response-"))
   (tags common-lisp:nil :type (common-lisp:or tag-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (outbound-call-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-outbound-call-config-"))
   (answer-machine-detection-config common-lisp:nil :type
    (common-lisp:or answer-machine-detection-config common-lisp:null))
   (connect-contact-flow-id
    (common-lisp:error ":connectcontactflowid is required") :type
    (common-lisp:or contact-flow-id common-lisp:null))
   (connect-queue-id (common-lisp:error ":connectqueueid is required") :type
    (common-lisp:or queue-id common-lisp:null))
   (connect-source-phone-number common-lisp:nil :type
    (common-lisp:or source-phone-number common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'outbound-call-config 'make-outbound-call-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input outbound-call-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input outbound-call-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'answer-machine-detection-config))
      (common-lisp:list
       (common-lisp:cons "answerMachineDetectionConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'connect-contact-flow-id))
      (common-lisp:list
       (common-lisp:cons "connectContactFlowId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connect-queue-id))
      (common-lisp:list
       (common-lisp:cons "connectQueueId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'connect-source-phone-number))
      (common-lisp:list
       (common-lisp:cons "connectSourcePhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input outbound-call-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (pause-campaign-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-pause-campaign-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or campaign-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'pause-campaign-request 'make-pause-campaign-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          pause-campaign-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          pause-campaign-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          pause-campaign-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (predictive-dialer-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-predictive-dialer-config-"))
   (bandwidth-allocation (common-lisp:error ":bandwidthallocation is required")
    :type (common-lisp:or bandwidth-allocation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'predictive-dialer-config 'make-predictive-dialer-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          predictive-dialer-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          predictive-dialer-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'bandwidth-allocation))
      (common-lisp:list
       (common-lisp:cons "bandwidthAllocation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          predictive-dialer-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (progressive-dialer-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-progressive-dialer-config-"))
   (bandwidth-allocation (common-lisp:error ":bandwidthallocation is required")
    :type (common-lisp:or bandwidth-allocation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'progressive-dialer-config
                    'make-progressive-dialer-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          progressive-dialer-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          progressive-dialer-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'bandwidth-allocation))
      (common-lisp:list
       (common-lisp:cons "bandwidthAllocation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          progressive-dialer-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-dial-request-batch-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-dial-request-batch-request-"))
   (dial-requests (common-lisp:error ":dialrequests is required") :type
    (common-lisp:or dial-request-list common-lisp:null))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or campaign-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-dial-request-batch-request
                    'make-put-dial-request-batch-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-dial-request-batch-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-dial-request-batch-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dial-requests))
      (common-lisp:list
       (common-lisp:cons "dialRequests"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-dial-request-batch-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-dial-request-batch-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-dial-request-batch-response-"))
   (failed-requests common-lisp:nil :type
    (common-lisp:or failed-request-list common-lisp:null))
   (successful-requests common-lisp:nil :type
    (common-lisp:or successful-request-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-dial-request-batch-response
                    'make-put-dial-request-batch-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-dial-request-batch-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-dial-request-batch-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failed-requests))
      (common-lisp:list
       (common-lisp:cons "failedRequests"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'successful-requests))
      (common-lisp:list
       (common-lisp:cons "successfulRequests"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-dial-request-batch-response))
   common-lisp:nil))
(common-lisp:deftype queue-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (connectcampaigns-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)
      (x-amz-error-type :initarg :x-amz-error-type :initform common-lisp:nil
       :reader resource-not-found-exception-x-amz-error-type)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message
                    'resource-not-found-exception-x-amz-error-type)))
(common-lisp:progn
 (common-lisp:defstruct
     (resume-campaign-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-resume-campaign-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or campaign-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resume-campaign-request 'make-resume-campaign-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          resume-campaign-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          resume-campaign-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          resume-campaign-request))
   common-lisp:nil))
(common-lisp:deftype service-linked-role-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition service-quota-exceeded-exception
     (connectcampaigns-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-quota-exceeded-exception-message)
      (x-amz-error-type :initarg :x-amz-error-type :initform common-lisp:nil
       :reader service-quota-exceeded-exception-x-amz-error-type)))
 (common-lisp:export
  (common-lisp:list 'service-quota-exceeded-exception
                    'service-quota-exceeded-exception-message
                    'service-quota-exceeded-exception-x-amz-error-type)))
(common-lisp:deftype source-phone-number () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (start-campaign-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-campaign-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or campaign-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-campaign-request 'make-start-campaign-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-campaign-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-campaign-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-campaign-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-instance-onboarding-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-instance-onboarding-job-request-"))
   (connect-instance-id (common-lisp:error ":connectinstanceid is required")
    :type (common-lisp:or instance-id common-lisp:null))
   (encryption-config (common-lisp:error ":encryptionconfig is required") :type
    (common-lisp:or encryption-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-instance-onboarding-job-request
                    'make-start-instance-onboarding-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-instance-onboarding-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-instance-onboarding-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption-config))
      (common-lisp:list
       (common-lisp:cons "encryptionConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-instance-onboarding-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-instance-onboarding-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-instance-onboarding-job-response-"))
   (connect-instance-onboarding-job-status common-lisp:nil :type
    (common-lisp:or instance-onboarding-job-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-instance-onboarding-job-response
                    'make-start-instance-onboarding-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-instance-onboarding-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-instance-onboarding-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'connect-instance-onboarding-job-status))
      (common-lisp:list
       (common-lisp:cons "connectInstanceOnboardingJobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-instance-onboarding-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-campaign-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-stop-campaign-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or campaign-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-campaign-request 'make-stop-campaign-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-campaign-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-campaign-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-campaign-request))
   common-lisp:nil))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (successful-campaign-state-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-successful-campaign-state-response-"))
   (campaign-id common-lisp:nil :type
    (common-lisp:or campaign-id common-lisp:null))
   (state common-lisp:nil :type
    (common-lisp:or campaign-state common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'successful-campaign-state-response
                    'make-successful-campaign-state-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          successful-campaign-state-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          successful-campaign-state-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'campaign-id))
      (common-lisp:list
       (common-lisp:cons "campaignId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          successful-campaign-state-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype successful-campaign-state-response-list ()
   '(trivial-types:proper-list successful-campaign-state-response))
 (common-lisp:defun |make-successful-campaign-state-response-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            successful-campaign-state-response))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (successful-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-successful-request-"))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null))
   (id common-lisp:nil :type
    (common-lisp:or dial-request-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'successful-request 'make-successful-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input successful-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input successful-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input successful-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype successful-request-list ()
   '(trivial-types:proper-list successful-request))
 (common-lisp:defun |make-successful-request-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list successful-request))
   aws-sdk/generator/shape::members))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun |make-tag-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-map () 'common-lisp:hash-table)
 (common-lisp:defun |make-tag-map| (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-request-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or arn common-lisp:null))
   (tags (common-lisp:error ":tags is required") :type
    (common-lisp:or tag-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (connectcampaigns-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       throttling-exception-message)
      (x-amz-error-type :initarg :x-amz-error-type :initform common-lisp:nil
       :reader throttling-exception-x-amz-error-type)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message
                    'throttling-exception-x-amz-error-type)))
(common-lisp:deftype time-stamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-request-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or arn common-lisp:null))
   (tag-keys (common-lisp:error ":tagkeys is required") :type
    (common-lisp:or tag-key-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-campaign-dialer-config-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-campaign-dialer-config-request-"))
   (dialer-config (common-lisp:error ":dialerconfig is required") :type
    (common-lisp:or dialer-config common-lisp:null))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or campaign-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-campaign-dialer-config-request
                    'make-update-campaign-dialer-config-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-campaign-dialer-config-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-campaign-dialer-config-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dialer-config))
      (common-lisp:list
       (common-lisp:cons "dialerConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-campaign-dialer-config-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-campaign-name-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-campaign-name-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or campaign-id common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or campaign-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-campaign-name-request
                    'make-update-campaign-name-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-campaign-name-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-campaign-name-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-campaign-name-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-campaign-outbound-call-config-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-update-campaign-outbound-call-config-request-"))
   (answer-machine-detection-config common-lisp:nil :type
    (common-lisp:or answer-machine-detection-config common-lisp:null))
   (connect-contact-flow-id common-lisp:nil :type
    (common-lisp:or contact-flow-id common-lisp:null))
   (connect-source-phone-number common-lisp:nil :type
    (common-lisp:or source-phone-number common-lisp:null))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or campaign-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-campaign-outbound-call-config-request
                    'make-update-campaign-outbound-call-config-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-campaign-outbound-call-config-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-campaign-outbound-call-config-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'answer-machine-detection-config))
      (common-lisp:list
       (common-lisp:cons "answerMachineDetectionConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'connect-contact-flow-id))
      (common-lisp:list
       (common-lisp:cons "connectContactFlowId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'connect-source-phone-number))
      (common-lisp:list
       (common-lisp:cons "connectSourcePhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-campaign-outbound-call-config-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (connectcampaigns-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       validation-exception-message)
      (x-amz-error-type :initarg :x-amz-error-type :initform common-lisp:nil
       :reader validation-exception-x-amz-error-type)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-message
                    'validation-exception-x-amz-error-type)))
(common-lisp:deftype xamazon-error-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun create-campaign
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key connect-instance-id dialer-config name
                     outbound-call-config tags)
   (common-lisp:declare
    (common-lisp:ignorable connect-instance-id dialer-config name
     outbound-call-config tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-campaign-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'connectcampaigns-request aws-sdk/generator/operation::input "PUT"
        "/campaigns" "CreateCampaign" "2021-01-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-campaign))
(common-lisp:progn
 (common-lisp:defun delete-campaign
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-campaign-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'connectcampaigns-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/campaigns/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input 'id))))
        "DeleteCampaign" "2021-01-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-campaign))
(common-lisp:progn
 (common-lisp:defun delete-connect-instance-config
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key connect-instance-id)
   (common-lisp:declare (common-lisp:ignorable connect-instance-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-connect-instance-config-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'connectcampaigns-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/connect-instance/~A/config"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'connect-instance-id))))
        "DeleteConnectInstanceConfig" "2021-01-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-connect-instance-config))
(common-lisp:progn
 (common-lisp:defun delete-instance-onboarding-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key connect-instance-id)
   (common-lisp:declare (common-lisp:ignorable connect-instance-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-instance-onboarding-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'connectcampaigns-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/connect-instance/~A/onboarding"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'connect-instance-id))))
        "DeleteInstanceOnboardingJob" "2021-01-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-instance-onboarding-job))
(common-lisp:progn
 (common-lisp:defun describe-campaign
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-campaign-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'connectcampaigns-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/campaigns/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input 'id))))
        "DescribeCampaign" "2021-01-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-campaign))
(common-lisp:progn
 (common-lisp:defun get-campaign-state
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-campaign-state-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'connectcampaigns-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/campaigns/~A/state"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input 'id))))
        "GetCampaignState" "2021-01-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-campaign-state))
(common-lisp:progn
 (common-lisp:defun get-campaign-state-batch
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key campaign-ids)
   (common-lisp:declare (common-lisp:ignorable campaign-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-campaign-state-batch-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'connectcampaigns-request aws-sdk/generator/operation::input "POST"
        "/campaigns-state" "GetCampaignStateBatch" "2021-01-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-campaign-state-batch))
(common-lisp:progn
 (common-lisp:defun get-connect-instance-config
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key connect-instance-id)
   (common-lisp:declare (common-lisp:ignorable connect-instance-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-connect-instance-config-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'connectcampaigns-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/connect-instance/~A/config"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'connect-instance-id))))
        "GetConnectInstanceConfig" "2021-01-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-connect-instance-config))
(common-lisp:progn
 (common-lisp:defun get-instance-onboarding-job-status
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key connect-instance-id)
   (common-lisp:declare (common-lisp:ignorable connect-instance-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-instance-onboarding-job-status-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'connectcampaigns-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/connect-instance/~A/onboarding"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'connect-instance-id))))
        "GetInstanceOnboardingJobStatus" "2021-01-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-instance-onboarding-job-status))
(common-lisp:progn
 (common-lisp:defun list-campaigns
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filters max-results next-token)
   (common-lisp:declare (common-lisp:ignorable filters max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-campaigns-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'connectcampaigns-request aws-sdk/generator/operation::input "POST"
        "/campaigns-summary" "ListCampaigns" "2021-01-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-campaigns))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'connectcampaigns-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input 'arn))))
        "ListTagsForResource" "2021-01-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun pause-campaign
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-pause-campaign-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'connectcampaigns-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/campaigns/~A/pause"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input 'id))))
        "PauseCampaign" "2021-01-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'pause-campaign))
(common-lisp:progn
 (common-lisp:defun put-dial-request-batch
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key dial-requests id)
   (common-lisp:declare (common-lisp:ignorable dial-requests id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-dial-request-batch-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'connectcampaigns-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/campaigns/~A/dial-requests"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input 'id))))
        "PutDialRequestBatch" "2021-01-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-dial-request-batch))
(common-lisp:progn
 (common-lisp:defun resume-campaign
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-resume-campaign-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'connectcampaigns-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/campaigns/~A/resume"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input 'id))))
        "ResumeCampaign" "2021-01-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'resume-campaign))
(common-lisp:progn
 (common-lisp:defun start-campaign
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-campaign-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'connectcampaigns-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/campaigns/~A/start"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input 'id))))
        "StartCampaign" "2021-01-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-campaign))
(common-lisp:progn
 (common-lisp:defun start-instance-onboarding-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key connect-instance-id encryption-config)
   (common-lisp:declare
    (common-lisp:ignorable connect-instance-id encryption-config))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-instance-onboarding-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'connectcampaigns-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/connect-instance/~A/onboarding"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'connect-instance-id))))
        "StartInstanceOnboardingJob" "2021-01-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-instance-onboarding-job))
(common-lisp:progn
 (common-lisp:defun stop-campaign
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-stop-campaign-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'connectcampaigns-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/campaigns/~A/stop"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input 'id))))
        "StopCampaign" "2021-01-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'stop-campaign))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn tags)
   (common-lisp:declare (common-lisp:ignorable arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'connectcampaigns-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input 'arn))))
        "TagResource" "2021-01-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'connectcampaigns-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input 'arn))))
        "UntagResource" "2021-01-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-campaign-dialer-config
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key dialer-config id)
   (common-lisp:declare (common-lisp:ignorable dialer-config id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-campaign-dialer-config-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'connectcampaigns-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/campaigns/~A/dialer-config"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input 'id))))
        "UpdateCampaignDialerConfig" "2021-01-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-campaign-dialer-config))
(common-lisp:progn
 (common-lisp:defun update-campaign-name
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id name)
   (common-lisp:declare (common-lisp:ignorable id name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-campaign-name-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'connectcampaigns-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/campaigns/~A/name"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input 'id))))
        "UpdateCampaignName" "2021-01-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-campaign-name))
(common-lisp:progn
 (common-lisp:defun update-campaign-outbound-call-config
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key answer-machine-detection-config
                     connect-contact-flow-id connect-source-phone-number id)
   (common-lisp:declare
    (common-lisp:ignorable answer-machine-detection-config
     connect-contact-flow-id connect-source-phone-number id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-campaign-outbound-call-config-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'connectcampaigns-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/campaigns/~A/outbound-call-config"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input 'id))))
        "UpdateCampaignOutboundCallConfig" "2021-01-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-campaign-outbound-call-config))
