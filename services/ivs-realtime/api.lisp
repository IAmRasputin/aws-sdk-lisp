;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/ivs-realtime/api
  (:use)
  (:nicknames #:aws/ivs-realtime)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/ivs-realtime/api)
(common-lisp:progn
 (common-lisp:defclass ivs-realtime-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "ivs-realtime" :protocol
                        :rest-json))
 (common-lisp:export 'ivs-realtime-request))
(common-lisp:progn
 (common-lisp:define-condition ivs-realtime-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'ivs-realtime-error))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("ConflictException" . conflict-exception)
    ("InternalServerException" . internal-server-exception)
    ("PendingVerification" . pending-verification)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceQuotaExceededException" . service-quota-exceeded-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (ivs-realtime-error)
     ((exception-message :initarg :|exceptionMessage| :initform common-lisp:nil
       :reader access-denied-exception-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception
                    'access-denied-exception-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (ivs-realtime-error)
     ((exception-message :initarg :|exceptionMessage| :initform common-lisp:nil
       :reader conflict-exception-exception-message)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-exception-message)))
(common-lisp:progn
 (common-lisp:defclass create-participant-token-request common-lisp:nil
                       ((user-id :initarg :|userId| :type
                         (common-lisp:or participant-token-user-id
                                         common-lisp:null)
                         :accessor %create-participant-token-request-user-id
                         :initform common-lisp:nil)
                        (stage-arn :initarg :|stageArn| :type
                         (common-lisp:or stage-arn common-lisp:null) :accessor
                         %create-participant-token-request-stage-arn :initform
                         (common-lisp:error ":stagearn is required"))
                        (duration :initarg :|duration| :type
                         (common-lisp:or participant-token-duration-minutes
                                         common-lisp:null)
                         :accessor %create-participant-token-request-duration
                         :initform common-lisp:nil)
                        (capabilities :initarg :|capabilities| :type
                         (common-lisp:or participant-token-capabilities
                                         common-lisp:null)
                         :accessor
                         %create-participant-token-request-capabilities
                         :initform common-lisp:nil)
                        (attributes :initarg :|attributes| :type
                         (common-lisp:or participant-token-attributes
                                         common-lisp:null)
                         :accessor %create-participant-token-request-attributes
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-participant-token-request
                    'make-create-participant-token-request))
 (common-lisp:defun make-create-participant-token-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key user-id stage-arn duration capabilities
                     attributes)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-participant-token-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-participant-token-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-participant-token-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'capabilities))
      (common-lisp:list
       (common-lisp:cons "capabilities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'duration))
      (common-lisp:list
       (common-lisp:cons "duration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-arn))
      (common-lisp:list
       (common-lisp:cons "stageArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-id))
      (common-lisp:list
       (common-lisp:cons "userId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-participant-token-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-participant-token-response common-lisp:nil
                       ((participant-token :initarg :|participantToken| :type
                         (common-lisp:or participant-token common-lisp:null)
                         :accessor
                         %create-participant-token-response-participant-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-participant-token-response
                    'make-create-participant-token-response))
 (common-lisp:defun make-create-participant-token-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key participant-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-participant-token-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-participant-token-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-participant-token-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'participant-token))
      (common-lisp:list
       (common-lisp:cons "participantToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-participant-token-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-stage-request common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         %create-stage-request-tags :initform common-lisp:nil)
                        (participant-token-configurations :initarg
                         :|participantTokenConfigurations| :type
                         (common-lisp:or participant-token-configurations
                                         common-lisp:null)
                         :accessor
                         %create-stage-request-participant-token-configurations
                         :initform common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or stage-name common-lisp:null) :accessor
                         %create-stage-request-name :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-stage-request 'make-create-stage-request))
 (common-lisp:defun make-create-stage-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags participant-token-configurations
                     name)
   (common-lisp:apply #'common-lisp:make-instance 'create-stage-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-stage-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'participant-token-configurations))
      (common-lisp:list
       (common-lisp:cons "participantTokenConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-stage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-stage-response common-lisp:nil
                       ((stage :initarg :|stage| :type
                         (common-lisp:or stage common-lisp:null) :accessor
                         %create-stage-response-stage :initform
                         common-lisp:nil)
                        (participant-tokens :initarg :|participantTokens| :type
                         (common-lisp:or participant-token-list
                                         common-lisp:null)
                         :accessor %create-stage-response-participant-tokens
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-stage-response 'make-create-stage-response))
 (common-lisp:defun make-create-stage-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key stage participant-tokens)
   (common-lisp:apply #'common-lisp:make-instance 'create-stage-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-stage-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-stage-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'participant-tokens))
      (common-lisp:list
       (common-lisp:cons "participantTokens"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage))
      (common-lisp:list
       (common-lisp:cons "stage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-stage-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-stage-request common-lisp:nil
                       ((arn :initarg :|arn| :type
                         (common-lisp:or stage-arn common-lisp:null) :accessor
                         %delete-stage-request-arn :initform
                         (common-lisp:error ":arn is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-stage-request 'make-delete-stage-request))
 (common-lisp:defun make-delete-stage-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key arn)
   (common-lisp:apply #'common-lisp:make-instance 'delete-stage-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-stage-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-stage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-stage-response common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'delete-stage-response 'make-delete-stage-response))
 (common-lisp:defun make-delete-stage-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'delete-stage-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-stage-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-stage-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-stage-response))
   common-lisp:nil))
(common-lisp:deftype disconnect-participant-reason () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass disconnect-participant-request common-lisp:nil
                       ((stage-arn :initarg :|stageArn| :type
                         (common-lisp:or stage-arn common-lisp:null) :accessor
                         %disconnect-participant-request-stage-arn :initform
                         (common-lisp:error ":stagearn is required"))
                        (reason :initarg :|reason| :type
                         (common-lisp:or disconnect-participant-reason
                                         common-lisp:null)
                         :accessor %disconnect-participant-request-reason
                         :initform common-lisp:nil)
                        (participant-id :initarg :|participantId| :type
                         (common-lisp:or participant-token-id common-lisp:null)
                         :accessor
                         %disconnect-participant-request-participant-id
                         :initform
                         (common-lisp:error ":participantid is required"))))
 (common-lisp:export
  (common-lisp:list 'disconnect-participant-request
                    'make-disconnect-participant-request))
 (common-lisp:defun make-disconnect-participant-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key stage-arn reason participant-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'disconnect-participant-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disconnect-participant-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disconnect-participant-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'participant-id))
      (common-lisp:list
       (common-lisp:cons "participantId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reason))
      (common-lisp:list
       (common-lisp:cons "reason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-arn))
      (common-lisp:list
       (common-lisp:cons "stageArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disconnect-participant-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disconnect-participant-response common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'disconnect-participant-response
                    'make-disconnect-participant-response))
 (common-lisp:defun make-disconnect-participant-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'disconnect-participant-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disconnect-participant-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disconnect-participant-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disconnect-participant-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-stage-request common-lisp:nil
                       ((arn :initarg :|arn| :type
                         (common-lisp:or stage-arn common-lisp:null) :accessor
                         %get-stage-request-arn :initform
                         (common-lisp:error ":arn is required"))))
 (common-lisp:export
  (common-lisp:list 'get-stage-request 'make-get-stage-request))
 (common-lisp:defun make-get-stage-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key arn)
   (common-lisp:apply #'common-lisp:make-instance 'get-stage-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-stage-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-stage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-stage-response common-lisp:nil
                       ((stage :initarg :|stage| :type
                         (common-lisp:or stage common-lisp:null) :accessor
                         %get-stage-response-stage :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-stage-response 'make-get-stage-response))
 (common-lisp:defun make-get-stage-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key stage)
   (common-lisp:apply #'common-lisp:make-instance 'get-stage-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-stage-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-stage-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage))
      (common-lisp:list
       (common-lisp:cons "stage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-stage-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (ivs-realtime-error)
     ((exception-message :initarg :|exceptionMessage| :initform common-lisp:nil
       :reader internal-server-exception-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-exception-message)))
(common-lisp:progn
 (common-lisp:defclass list-stages-request common-lisp:nil
                       ((next-token :initarg :|nextToken| :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor %list-stages-request-next-token :initform
                         common-lisp:nil)
                        (max-results :initarg :|maxResults| :type
                         (common-lisp:or max-stage-results common-lisp:null)
                         :accessor %list-stages-request-max-results :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-stages-request 'make-list-stages-request))
 (common-lisp:defun make-list-stages-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token max-results)
   (common-lisp:apply #'common-lisp:make-instance 'list-stages-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-stages-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-stages-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-stages-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-stages-response common-lisp:nil
                       ((stages :initarg :|stages| :type
                         (common-lisp:or stage-summary-list common-lisp:null)
                         :accessor %list-stages-response-stages :initform
                         (common-lisp:error ":stages is required"))
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor %list-stages-response-next-token :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-stages-response 'make-list-stages-response))
 (common-lisp:defun make-list-stages-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key stages next-token)
   (common-lisp:apply #'common-lisp:make-instance 'list-stages-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-stages-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-stages-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stages))
      (common-lisp:list
       (common-lisp:cons "stages"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-stages-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-request common-lisp:nil
                       ((resource-arn :initarg :|resourceArn| :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %list-tags-for-resource-request-resource-arn
                         :initform
                         (common-lisp:error ":resourcearn is required"))))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defun make-list-tags-for-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-response common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         %list-tags-for-resource-response-tags :initform
                         (common-lisp:error ":tags is required"))))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defun make-list-tags-for-resource-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:deftype max-stage-results () 'common-lisp:integer)
(common-lisp:deftype pagination-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass participant-token common-lisp:nil
                       ((user-id :initarg :|userId| :type
                         (common-lisp:or participant-token-user-id
                                         common-lisp:null)
                         :accessor %participant-token-user-id :initform
                         common-lisp:nil)
                        (token :initarg :|token| :type
                         (common-lisp:or participant-token-string
                                         common-lisp:null)
                         :accessor %participant-token-token :initform
                         common-lisp:nil)
                        (participant-id :initarg :|participantId| :type
                         (common-lisp:or participant-token-id common-lisp:null)
                         :accessor %participant-token-participant-id :initform
                         common-lisp:nil)
                        (expiration-time :initarg :|expirationTime| :type
                         (common-lisp:or participant-token-expiration-time
                                         common-lisp:null)
                         :accessor %participant-token-expiration-time :initform
                         common-lisp:nil)
                        (duration :initarg :|duration| :type
                         (common-lisp:or participant-token-duration-minutes
                                         common-lisp:null)
                         :accessor %participant-token-duration :initform
                         common-lisp:nil)
                        (capabilities :initarg :|capabilities| :type
                         (common-lisp:or participant-token-capabilities
                                         common-lisp:null)
                         :accessor %participant-token-capabilities :initform
                         common-lisp:nil)
                        (attributes :initarg :|attributes| :type
                         (common-lisp:or participant-token-attributes
                                         common-lisp:null)
                         :accessor %participant-token-attributes :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'participant-token 'make-participant-token))
 (common-lisp:defun make-participant-token
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key user-id token participant-id
                     expiration-time duration capabilities attributes)
   (common-lisp:apply #'common-lisp:make-instance 'participant-token
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input participant-token))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input participant-token))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'capabilities))
      (common-lisp:list
       (common-lisp:cons "capabilities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'duration))
      (common-lisp:list
       (common-lisp:cons "duration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expiration-time))
      (common-lisp:list
       (common-lisp:cons "expirationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'participant-id))
      (common-lisp:list
       (common-lisp:cons "participantId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'token))
      (common-lisp:list
       (common-lisp:cons "token"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-id))
      (common-lisp:list
       (common-lisp:cons "userId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input participant-token))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype participant-token-attributes () 'common-lisp:hash-table)
 (common-lisp:defun |make-participant-token-attributes|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype participant-token-capabilities ()
   '(trivial-types:proper-list participant-token-capability))
 (common-lisp:defun |make-participant-token-capabilities|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            participant-token-capability))
   aws-sdk/generator/shape::members))
(common-lisp:deftype participant-token-capability () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass participant-token-configuration common-lisp:nil
                       ((user-id :initarg :|userId| :type
                         (common-lisp:or participant-token-user-id
                                         common-lisp:null)
                         :accessor %participant-token-configuration-user-id
                         :initform common-lisp:nil)
                        (duration :initarg :|duration| :type
                         (common-lisp:or participant-token-duration-minutes
                                         common-lisp:null)
                         :accessor %participant-token-configuration-duration
                         :initform common-lisp:nil)
                        (capabilities :initarg :|capabilities| :type
                         (common-lisp:or participant-token-capabilities
                                         common-lisp:null)
                         :accessor
                         %participant-token-configuration-capabilities
                         :initform common-lisp:nil)
                        (attributes :initarg :|attributes| :type
                         (common-lisp:or participant-token-attributes
                                         common-lisp:null)
                         :accessor %participant-token-configuration-attributes
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'participant-token-configuration
                    'make-participant-token-configuration))
 (common-lisp:defun make-participant-token-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key user-id duration capabilities attributes)
   (common-lisp:apply #'common-lisp:make-instance
                      'participant-token-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          participant-token-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          participant-token-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'capabilities))
      (common-lisp:list
       (common-lisp:cons "capabilities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'duration))
      (common-lisp:list
       (common-lisp:cons "duration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-id))
      (common-lisp:list
       (common-lisp:cons "userId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          participant-token-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype participant-token-configurations ()
   '(trivial-types:proper-list participant-token-configuration))
 (common-lisp:defun |make-participant-token-configurations|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            participant-token-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:deftype participant-token-duration-minutes () 'common-lisp:integer)
(common-lisp:deftype participant-token-expiration-time () 'common-lisp:string)
(common-lisp:deftype participant-token-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype participant-token-list ()
   '(trivial-types:proper-list participant-token))
 (common-lisp:defun |make-participant-token-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list participant-token))
   aws-sdk/generator/shape::members))
(common-lisp:deftype participant-token-string () 'common-lisp:string)
(common-lisp:deftype participant-token-user-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition pending-verification
     (ivs-realtime-error)
     ((exception-message :initarg :|exceptionMessage| :initform common-lisp:nil
       :reader pending-verification-exception-message)))
 (common-lisp:export
  (common-lisp:list 'pending-verification
                    'pending-verification-exception-message)))
(common-lisp:deftype resource-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (ivs-realtime-error)
     ((exception-message :initarg :|exceptionMessage| :initform common-lisp:nil
       :reader resource-not-found-exception-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition service-quota-exceeded-exception
     (ivs-realtime-error)
     ((exception-message :initarg :|exceptionMessage| :initform common-lisp:nil
       :reader service-quota-exceeded-exception-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-quota-exceeded-exception
                    'service-quota-exceeded-exception-exception-message)))
(common-lisp:progn
 (common-lisp:defclass stage common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         %stage-tags :initform common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or stage-name common-lisp:null) :accessor
                         %stage-name :initform common-lisp:nil)
                        (arn :initarg :|arn| :type
                         (common-lisp:or stage-arn common-lisp:null) :accessor
                         %stage-arn :initform
                         (common-lisp:error ":arn is required"))
                        (active-session-id :initarg :|activeSessionId| :type
                         (common-lisp:or stage-session-id common-lisp:null)
                         :accessor %stage-active-session-id :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'stage 'make-stage))
 (common-lisp:defun make-stage
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags name arn active-session-id)
   (common-lisp:apply #'common-lisp:make-instance 'stage
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stage))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stage))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'active-session-id))
      (common-lisp:list
       (common-lisp:cons "activeSessionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stage))
   common-lisp:nil))
(common-lisp:deftype stage-arn () 'common-lisp:string)
(common-lisp:deftype stage-name () 'common-lisp:string)
(common-lisp:deftype stage-session-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass stage-summary common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         %stage-summary-tags :initform common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or stage-name common-lisp:null) :accessor
                         %stage-summary-name :initform common-lisp:nil)
                        (arn :initarg :|arn| :type
                         (common-lisp:or stage-arn common-lisp:null) :accessor
                         %stage-summary-arn :initform
                         (common-lisp:error ":arn is required"))
                        (active-session-id :initarg :|activeSessionId| :type
                         (common-lisp:or stage-session-id common-lisp:null)
                         :accessor %stage-summary-active-session-id :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'stage-summary 'make-stage-summary))
 (common-lisp:defun make-stage-summary
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags name arn active-session-id)
   (common-lisp:apply #'common-lisp:make-instance 'stage-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stage-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stage-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'active-session-id))
      (common-lisp:list
       (common-lisp:cons "activeSessionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stage-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype stage-summary-list ()
   '(trivial-types:proper-list stage-summary))
 (common-lisp:defun |make-stage-summary-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list stage-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun |make-tag-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass tag-resource-request common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         %tag-resource-request-tags :initform
                         (common-lisp:error ":tags is required"))
                        (resource-arn :initarg :|resourceArn| :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %tag-resource-request-resource-arn :initform
                         (common-lisp:error ":resourcearn is required"))))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defun make-tag-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags resource-arn)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-resource-response common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defun make-tag-resource-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tags () 'common-lisp:hash-table)
 (common-lisp:defun |make-tags| (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass untag-resource-request common-lisp:nil
                       ((tag-keys :initarg :|tagKeys| :type
                         (common-lisp:or tag-key-list common-lisp:null)
                         :accessor %untag-resource-request-tag-keys :initform
                         (common-lisp:error ":tagkeys is required"))
                        (resource-arn :initarg :|resourceArn| :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %untag-resource-request-resource-arn
                         :initform
                         (common-lisp:error ":resourcearn is required"))))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defun make-untag-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tag-keys resource-arn)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass untag-resource-response common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defun make-untag-resource-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-stage-request common-lisp:nil
                       ((name :initarg :|name| :type
                         (common-lisp:or stage-name common-lisp:null) :accessor
                         %update-stage-request-name :initform common-lisp:nil)
                        (arn :initarg :|arn| :type
                         (common-lisp:or stage-arn common-lisp:null) :accessor
                         %update-stage-request-arn :initform
                         (common-lisp:error ":arn is required"))))
 (common-lisp:export
  (common-lisp:list 'update-stage-request 'make-update-stage-request))
 (common-lisp:defun make-update-stage-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key name arn)
   (common-lisp:apply #'common-lisp:make-instance 'update-stage-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-stage-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-stage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-stage-response common-lisp:nil
                       ((stage :initarg :|stage| :type
                         (common-lisp:or stage common-lisp:null) :accessor
                         %update-stage-response-stage :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-stage-response 'make-update-stage-response))
 (common-lisp:defun make-update-stage-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key stage)
   (common-lisp:apply #'common-lisp:make-instance 'update-stage-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-stage-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-stage-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage))
      (common-lisp:list
       (common-lisp:cons "stage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-stage-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (ivs-realtime-error)
     ((exception-message :initarg :|exceptionMessage| :initform common-lisp:nil
       :reader validation-exception-exception-message)))
 (common-lisp:export
  (common-lisp:list 'validation-exception
                    'validation-exception-exception-message)))
(common-lisp:deftype |errorMessage| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun create-participant-token
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key attributes capabilities duration
                     stage-arn user-id)
   (common-lisp:declare
    (common-lisp:ignorable attributes capabilities duration stage-arn user-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-participant-token-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ivs-realtime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/CreateParticipantToken"
                                                        "CreateParticipantToken"
                                                        "2020-07-14"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-participant-token))
(common-lisp:progn
 (common-lisp:defun create-stage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name participant-token-configurations
                     tags)
   (common-lisp:declare
    (common-lisp:ignorable name participant-token-configurations tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-stage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ivs-realtime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/CreateStage"
                                                        "CreateStage"
                                                        "2020-07-14"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-stage))
(common-lisp:progn
 (common-lisp:defun delete-stage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-stage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ivs-realtime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/DeleteStage"
                                                        "DeleteStage"
                                                        "2020-07-14"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-stage))
(common-lisp:progn
 (common-lisp:defun disconnect-participant
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key participant-id reason stage-arn)
   (common-lisp:declare
    (common-lisp:ignorable participant-id reason stage-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-disconnect-participant-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ivs-realtime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/DisconnectParticipant"
                                                        "DisconnectParticipant"
                                                        "2020-07-14"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'disconnect-participant))
(common-lisp:progn
 (common-lisp:defun get-stage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-stage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ivs-realtime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/GetStage" "GetStage"
                                                        "2020-07-14"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-stage))
(common-lisp:progn
 (common-lisp:defun list-stages
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-stages-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ivs-realtime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/ListStages"
                                                        "ListStages"
                                                        "2020-07-14"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-stages))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ivs-realtime-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "ListTagsForResource"
                                                        "2020-07-14"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ivs-realtime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "TagResource"
                                                        "2020-07-14"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ivs-realtime-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "UntagResource"
                                                        "2020-07-14"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-stage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn name)
   (common-lisp:declare (common-lisp:ignorable arn name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-stage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ivs-realtime-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/UpdateStage"
                                                        "UpdateStage"
                                                        "2020-07-14"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-stage))
