;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/compute-optimizer/api
  (:use)
  (:nicknames #:aws/compute-optimizer)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/compute-optimizer/api)
(common-lisp:progn
 (common-lisp:defclass compute-optimizer-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "compute-optimizer"))
 (common-lisp:export 'compute-optimizer-request))
(common-lisp:progn
 (common-lisp:define-condition compute-optimizer-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'compute-optimizer-error))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("InternalServerException" . internal-server-exception)
    ("InvalidParameterValueException" . invalid-parameter-value-exception)
    ("LimitExceededException" . limit-exceeded-exception)
    ("MissingAuthenticationToken" . missing-authentication-token)
    ("OptInRequiredException" . opt-in-required-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceUnavailableException" . service-unavailable-exception)
    ("ThrottlingException" . throttling-exception)))
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (compute-optimizer-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       access-denied-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (account-enrollment-status (:copier common-lisp:nil)
      (:conc-name "struct-shape-account-enrollment-status-"))
   (account-id common-lisp:nil :type
    (common-lisp:or account-id common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or status common-lisp:null))
   (status-reason common-lisp:nil :type
    (common-lisp:or status-reason common-lisp:null))
   (last-updated-timestamp common-lisp:nil :type
    (common-lisp:or last-updated-timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'account-enrollment-status
                    'make-account-enrollment-status))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          account-enrollment-status))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          account-enrollment-status))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-reason))
      (common-lisp:list
       (common-lisp:cons "statusReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          account-enrollment-status))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype account-enrollment-statuses ()
   '(trivial-types:proper-list account-enrollment-status))
 (common-lisp:defun |make-account-enrollment-statuses|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            account-enrollment-status))
   aws-sdk/generator/shape::members))
(common-lisp:deftype account-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype account-ids () '(trivial-types:proper-list account-id))
 (common-lisp:defun |make-account-ids|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list account-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype auto-scaling-configuration () 'common-lisp:string)
(common-lisp:deftype auto-scaling-group-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype auto-scaling-group-arns ()
   '(trivial-types:proper-list auto-scaling-group-arn))
 (common-lisp:defun |make-auto-scaling-group-arns|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list auto-scaling-group-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (auto-scaling-group-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-auto-scaling-group-configuration-"))
   (desired-capacity common-lisp:nil :type
    (common-lisp:or desired-capacity common-lisp:null))
   (min-size common-lisp:nil :type (common-lisp:or min-size common-lisp:null))
   (max-size common-lisp:nil :type (common-lisp:or max-size common-lisp:null))
   (instance-type common-lisp:nil :type
    (common-lisp:or instance-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'auto-scaling-group-configuration
                    'make-auto-scaling-group-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          auto-scaling-group-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          auto-scaling-group-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'desired-capacity))
      (common-lisp:list
       (common-lisp:cons "desiredCapacity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'min-size))
      (common-lisp:list
       (common-lisp:cons "minSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-size))
      (common-lisp:list
       (common-lisp:cons "maxSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-type))
      (common-lisp:list
       (common-lisp:cons "instanceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          auto-scaling-group-configuration))
   common-lisp:nil))
(common-lisp:deftype auto-scaling-group-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (auto-scaling-group-recommendation (:copier common-lisp:nil)
      (:conc-name "struct-shape-auto-scaling-group-recommendation-"))
   (account-id common-lisp:nil :type
    (common-lisp:or account-id common-lisp:null))
   (auto-scaling-group-arn common-lisp:nil :type
    (common-lisp:or auto-scaling-group-arn common-lisp:null))
   (auto-scaling-group-name common-lisp:nil :type
    (common-lisp:or auto-scaling-group-name common-lisp:null))
   (finding common-lisp:nil :type (common-lisp:or finding common-lisp:null))
   (utilization-metrics common-lisp:nil :type
    (common-lisp:or utilization-metrics common-lisp:null))
   (look-back-period-in-days common-lisp:nil :type
    (common-lisp:or look-back-period-in-days common-lisp:null))
   (current-configuration common-lisp:nil :type
    (common-lisp:or auto-scaling-group-configuration common-lisp:null))
   (recommendation-options common-lisp:nil :type
    (common-lisp:or auto-scaling-group-recommendation-options
                    common-lisp:null))
   (last-refresh-timestamp common-lisp:nil :type
    (common-lisp:or last-refresh-timestamp common-lisp:null))
   (current-performance-risk common-lisp:nil :type
    (common-lisp:or current-performance-risk common-lisp:null))
   (effective-recommendation-preferences common-lisp:nil :type
    (common-lisp:or effective-recommendation-preferences common-lisp:null))
   (inferred-workload-types common-lisp:nil :type
    (common-lisp:or inferred-workload-types common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'auto-scaling-group-recommendation
                    'make-auto-scaling-group-recommendation))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          auto-scaling-group-recommendation))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          auto-scaling-group-recommendation))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'auto-scaling-group-arn))
      (common-lisp:list
       (common-lisp:cons "autoScalingGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'auto-scaling-group-name))
      (common-lisp:list
       (common-lisp:cons "autoScalingGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'finding))
      (common-lisp:list
       (common-lisp:cons "finding"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'utilization-metrics))
      (common-lisp:list
       (common-lisp:cons "utilizationMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'look-back-period-in-days))
      (common-lisp:list
       (common-lisp:cons "lookBackPeriodInDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'current-configuration))
      (common-lisp:list
       (common-lisp:cons "currentConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-options))
      (common-lisp:list
       (common-lisp:cons "recommendationOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-refresh-timestamp))
      (common-lisp:list
       (common-lisp:cons "lastRefreshTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'current-performance-risk))
      (common-lisp:list
       (common-lisp:cons "currentPerformanceRisk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'effective-recommendation-preferences))
      (common-lisp:list
       (common-lisp:cons "effectiveRecommendationPreferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'inferred-workload-types))
      (common-lisp:list
       (common-lisp:cons "inferredWorkloadTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          auto-scaling-group-recommendation))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (auto-scaling-group-recommendation-option (:copier common-lisp:nil)
      (:conc-name "struct-shape-auto-scaling-group-recommendation-option-"))
   (configuration common-lisp:nil :type
    (common-lisp:or auto-scaling-group-configuration common-lisp:null))
   (projected-utilization-metrics common-lisp:nil :type
    (common-lisp:or projected-utilization-metrics common-lisp:null))
   (performance-risk common-lisp:nil :type
    (common-lisp:or performance-risk common-lisp:null))
   (rank common-lisp:nil :type (common-lisp:or rank common-lisp:null))
   (savings-opportunity common-lisp:nil :type
    (common-lisp:or savings-opportunity common-lisp:null))
   (migration-effort common-lisp:nil :type
    (common-lisp:or migration-effort common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'auto-scaling-group-recommendation-option
                    'make-auto-scaling-group-recommendation-option))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          auto-scaling-group-recommendation-option))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          auto-scaling-group-recommendation-option))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration))
      (common-lisp:list
       (common-lisp:cons "configuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'projected-utilization-metrics))
      (common-lisp:list
       (common-lisp:cons "projectedUtilizationMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'performance-risk))
      (common-lisp:list
       (common-lisp:cons "performanceRisk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rank))
      (common-lisp:list
       (common-lisp:cons "rank"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'savings-opportunity))
      (common-lisp:list
       (common-lisp:cons "savingsOpportunity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'migration-effort))
      (common-lisp:list
       (common-lisp:cons "migrationEffort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          auto-scaling-group-recommendation-option))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype auto-scaling-group-recommendation-options ()
   '(trivial-types:proper-list auto-scaling-group-recommendation-option))
 (common-lisp:defun |make-auto-scaling-group-recommendation-options|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            auto-scaling-group-recommendation-option))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype auto-scaling-group-recommendations ()
   '(trivial-types:proper-list auto-scaling-group-recommendation))
 (common-lisp:defun |make-auto-scaling-group-recommendations|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            auto-scaling-group-recommendation))
   aws-sdk/generator/shape::members))
(common-lisp:deftype code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (container-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-container-configuration-"))
   (container-name common-lisp:nil :type
    (common-lisp:or container-name common-lisp:null))
   (memory-size-configuration common-lisp:nil :type
    (common-lisp:or memory-size-configuration common-lisp:null))
   (cpu common-lisp:nil :type (common-lisp:or nullable-cpu common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'container-configuration 'make-container-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          container-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          container-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-name))
      (common-lisp:list
       (common-lisp:cons "containerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'memory-size-configuration))
      (common-lisp:list
       (common-lisp:cons "memorySizeConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cpu))
      (common-lisp:list
       (common-lisp:cons "cpu"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          container-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype container-configurations ()
   '(trivial-types:proper-list container-configuration))
 (common-lisp:defun |make-container-configurations|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list container-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:deftype container-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (container-recommendation (:copier common-lisp:nil)
      (:conc-name "struct-shape-container-recommendation-"))
   (container-name common-lisp:nil :type
    (common-lisp:or container-name common-lisp:null))
   (memory-size-configuration common-lisp:nil :type
    (common-lisp:or memory-size-configuration common-lisp:null))
   (cpu common-lisp:nil :type (common-lisp:or nullable-cpu common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'container-recommendation 'make-container-recommendation))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          container-recommendation))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          container-recommendation))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-name))
      (common-lisp:list
       (common-lisp:cons "containerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'memory-size-configuration))
      (common-lisp:list
       (common-lisp:cons "memorySizeConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cpu))
      (common-lisp:list
       (common-lisp:cons "cpu"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          container-recommendation))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype container-recommendations ()
   '(trivial-types:proper-list container-recommendation))
 (common-lisp:defun |make-container-recommendations|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            container-recommendation))
   aws-sdk/generator/shape::members))
(common-lisp:deftype cpu-size () 'common-lisp:integer)
(common-lisp:deftype cpu-vendor-architecture () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype cpu-vendor-architectures ()
   '(trivial-types:proper-list cpu-vendor-architecture))
 (common-lisp:defun |make-cpu-vendor-architectures|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list cpu-vendor-architecture))
   aws-sdk/generator/shape::members))
(common-lisp:deftype creation-timestamp () 'common-lisp:string)
(common-lisp:deftype currency () 'common-lisp:string)
(common-lisp:deftype current-instance-type () 'common-lisp:string)
(common-lisp:deftype current-performance-risk () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (current-performance-risk-ratings (:copier common-lisp:nil)
      (:conc-name "struct-shape-current-performance-risk-ratings-"))
   (high common-lisp:nil :type (common-lisp:or high common-lisp:null))
   (medium common-lisp:nil :type (common-lisp:or medium common-lisp:null))
   (low common-lisp:nil :type (common-lisp:or low common-lisp:null))
   (very-low common-lisp:nil :type (common-lisp:or very-low common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'current-performance-risk-ratings
                    'make-current-performance-risk-ratings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          current-performance-risk-ratings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          current-performance-risk-ratings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'high))
      (common-lisp:list
       (common-lisp:cons "high"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'medium))
      (common-lisp:list
       (common-lisp:cons "medium"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'low))
      (common-lisp:list
       (common-lisp:cons "low"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'very-low))
      (common-lisp:list
       (common-lisp:cons "veryLow"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          current-performance-risk-ratings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-recommendation-preferences-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-recommendation-preferences-request-"))
   (resource-type (common-lisp:error ":resourcetype is required") :type
    (common-lisp:or resource-type common-lisp:null))
   (scope common-lisp:nil :type (common-lisp:or scope common-lisp:null))
   (recommendation-preference-names
    (common-lisp:error ":recommendationpreferencenames is required") :type
    (common-lisp:or recommendation-preference-names common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-recommendation-preferences-request
                    'make-delete-recommendation-preferences-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-recommendation-preferences-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-recommendation-preferences-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "resourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scope))
      (common-lisp:list
       (common-lisp:cons "scope"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-preference-names))
      (common-lisp:list
       (common-lisp:cons "recommendationPreferenceNames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-recommendation-preferences-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-recommendation-preferences-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-recommendation-preferences-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-recommendation-preferences-response
                    'make-delete-recommendation-preferences-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-recommendation-preferences-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-recommendation-preferences-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-recommendation-preferences-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-recommendation-export-jobs-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-recommendation-export-jobs-request-"))
   (job-ids common-lisp:nil :type (common-lisp:or job-ids common-lisp:null))
   (filters common-lisp:nil :type
    (common-lisp:or job-filters common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-recommendation-export-jobs-request
                    'make-describe-recommendation-export-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-recommendation-export-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-recommendation-export-jobs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-ids))
      (common-lisp:list
       (common-lisp:cons "jobIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-recommendation-export-jobs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-recommendation-export-jobs-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-describe-recommendation-export-jobs-response-"))
   (recommendation-export-jobs common-lisp:nil :type
    (common-lisp:or recommendation-export-jobs common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-recommendation-export-jobs-response
                    'make-describe-recommendation-export-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-recommendation-export-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-recommendation-export-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-export-jobs))
      (common-lisp:list
       (common-lisp:cons "recommendationExportJobs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-recommendation-export-jobs-response))
   common-lisp:nil))
(common-lisp:deftype desired-capacity () 'common-lisp:integer)
(common-lisp:deftype destination-bucket () 'common-lisp:string)
(common-lisp:deftype destination-key () 'common-lisp:string)
(common-lisp:deftype destination-key-prefix () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (ebsfilter (:copier common-lisp:nil)
      (:conc-name "struct-shape-ebsfilter-"))
   (name common-lisp:nil :type
    (common-lisp:or ebsfilter-name common-lisp:null))
   (values common-lisp:nil :type
    (common-lisp:or filter-values common-lisp:null)))
 (common-lisp:export (common-lisp:list 'ebsfilter 'make-ebsfilter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input ebsfilter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input ebsfilter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input ebsfilter))
   common-lisp:nil))
(common-lisp:deftype ebsfilter-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype ebsfilters () '(trivial-types:proper-list ebsfilter))
 (common-lisp:defun |make-ebsfilters|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ebsfilter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype ebsfinding () 'common-lisp:string)
(common-lisp:deftype ebsmetric-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (ebsutilization-metric (:copier common-lisp:nil)
      (:conc-name "struct-shape-ebsutilization-metric-"))
   (name common-lisp:nil :type
    (common-lisp:or ebsmetric-name common-lisp:null))
   (statistic common-lisp:nil :type
    (common-lisp:or metric-statistic common-lisp:null))
   (value common-lisp:nil :type
    (common-lisp:or metric-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'ebsutilization-metric 'make-ebsutilization-metric))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ebsutilization-metric))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ebsutilization-metric))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'statistic))
      (common-lisp:list
       (common-lisp:cons "statistic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ebsutilization-metric))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype ebsutilization-metrics ()
   '(trivial-types:proper-list ebsutilization-metric))
 (common-lisp:defun |make-ebsutilization-metrics|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ebsutilization-metric))
   aws-sdk/generator/shape::members))
(common-lisp:deftype ecsservice-launch-type () 'common-lisp:string)
(common-lisp:deftype ecsservice-metric-name () 'common-lisp:string)
(common-lisp:deftype ecsservice-metric-statistic () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (ecsservice-projected-metric (:copier common-lisp:nil)
      (:conc-name "struct-shape-ecsservice-projected-metric-"))
   (name common-lisp:nil :type
    (common-lisp:or ecsservice-metric-name common-lisp:null))
   (timestamps common-lisp:nil :type
    (common-lisp:or timestamps common-lisp:null))
   (upper-bound-values common-lisp:nil :type
    (common-lisp:or metric-values common-lisp:null))
   (lower-bound-values common-lisp:nil :type
    (common-lisp:or metric-values common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'ecsservice-projected-metric
                    'make-ecsservice-projected-metric))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-projected-metric))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-projected-metric))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timestamps))
      (common-lisp:list
       (common-lisp:cons "timestamps"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'upper-bound-values))
      (common-lisp:list
       (common-lisp:cons "upperBoundValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lower-bound-values))
      (common-lisp:list
       (common-lisp:cons "lowerBoundValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-projected-metric))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype ecsservice-projected-metrics ()
   '(trivial-types:proper-list ecsservice-projected-metric))
 (common-lisp:defun |make-ecsservice-projected-metrics|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            ecsservice-projected-metric))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (ecsservice-projected-utilization-metric (:copier common-lisp:nil)
      (:conc-name "struct-shape-ecsservice-projected-utilization-metric-"))
   (name common-lisp:nil :type
    (common-lisp:or ecsservice-metric-name common-lisp:null))
   (statistic common-lisp:nil :type
    (common-lisp:or ecsservice-metric-statistic common-lisp:null))
   (lower-bound-value common-lisp:nil :type
    (common-lisp:or lower-bound-value common-lisp:null))
   (upper-bound-value common-lisp:nil :type
    (common-lisp:or upper-bound-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'ecsservice-projected-utilization-metric
                    'make-ecsservice-projected-utilization-metric))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-projected-utilization-metric))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-projected-utilization-metric))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'statistic))
      (common-lisp:list
       (common-lisp:cons "statistic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lower-bound-value))
      (common-lisp:list
       (common-lisp:cons "lowerBoundValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'upper-bound-value))
      (common-lisp:list
       (common-lisp:cons "upperBoundValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-projected-utilization-metric))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype ecsservice-projected-utilization-metrics ()
   '(trivial-types:proper-list ecsservice-projected-utilization-metric))
 (common-lisp:defun |make-ecsservice-projected-utilization-metrics|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            ecsservice-projected-utilization-metric))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (ecsservice-recommendation (:copier common-lisp:nil)
      (:conc-name "struct-shape-ecsservice-recommendation-"))
   (service-arn common-lisp:nil :type
    (common-lisp:or service-arn common-lisp:null))
   (account-id common-lisp:nil :type
    (common-lisp:or account-id common-lisp:null))
   (current-service-configuration common-lisp:nil :type
    (common-lisp:or service-configuration common-lisp:null))
   (utilization-metrics common-lisp:nil :type
    (common-lisp:or ecsservice-utilization-metrics common-lisp:null))
   (lookback-period-in-days common-lisp:nil :type
    (common-lisp:or look-back-period-in-days common-lisp:null))
   (launch-type common-lisp:nil :type
    (common-lisp:or ecsservice-launch-type common-lisp:null))
   (last-refresh-timestamp common-lisp:nil :type
    (common-lisp:or last-refresh-timestamp common-lisp:null))
   (finding common-lisp:nil :type
    (common-lisp:or ecsservice-recommendation-finding common-lisp:null))
   (finding-reason-codes common-lisp:nil :type
    (common-lisp:or ecsservice-recommendation-finding-reason-codes
                    common-lisp:null))
   (service-recommendation-options common-lisp:nil :type
    (common-lisp:or ecsservice-recommendation-options common-lisp:null))
   (current-performance-risk common-lisp:nil :type
    (common-lisp:or current-performance-risk common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'ecsservice-recommendation
                    'make-ecsservice-recommendation))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-recommendation))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-recommendation))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-arn))
      (common-lisp:list
       (common-lisp:cons "serviceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'current-service-configuration))
      (common-lisp:list
       (common-lisp:cons "currentServiceConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'utilization-metrics))
      (common-lisp:list
       (common-lisp:cons "utilizationMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'lookback-period-in-days))
      (common-lisp:list
       (common-lisp:cons "lookbackPeriodInDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'launch-type))
      (common-lisp:list
       (common-lisp:cons "launchType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-refresh-timestamp))
      (common-lisp:list
       (common-lisp:cons "lastRefreshTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'finding))
      (common-lisp:list
       (common-lisp:cons "finding"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'finding-reason-codes))
      (common-lisp:list
       (common-lisp:cons "findingReasonCodes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'service-recommendation-options))
      (common-lisp:list
       (common-lisp:cons "serviceRecommendationOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'current-performance-risk))
      (common-lisp:list
       (common-lisp:cons "currentPerformanceRisk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-recommendation))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (ecsservice-recommendation-filter (:copier common-lisp:nil)
      (:conc-name "struct-shape-ecsservice-recommendation-filter-"))
   (name common-lisp:nil :type
    (common-lisp:or ecsservice-recommendation-filter-name common-lisp:null))
   (values common-lisp:nil :type
    (common-lisp:or filter-values common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'ecsservice-recommendation-filter
                    'make-ecsservice-recommendation-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-recommendation-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-recommendation-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-recommendation-filter))
   common-lisp:nil))
(common-lisp:deftype ecsservice-recommendation-filter-name ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype ecsservice-recommendation-filters ()
   '(trivial-types:proper-list ecsservice-recommendation-filter))
 (common-lisp:defun |make-ecsservice-recommendation-filters|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            ecsservice-recommendation-filter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype ecsservice-recommendation-finding () 'common-lisp:string)
(common-lisp:deftype ecsservice-recommendation-finding-reason-code ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype ecsservice-recommendation-finding-reason-codes ()
   '(trivial-types:proper-list ecsservice-recommendation-finding-reason-code))
 (common-lisp:defun |make-ecsservice-recommendation-finding-reason-codes|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            ecsservice-recommendation-finding-reason-code))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (ecsservice-recommendation-option (:copier common-lisp:nil)
      (:conc-name "struct-shape-ecsservice-recommendation-option-"))
   (memory common-lisp:nil :type
    (common-lisp:or nullable-memory common-lisp:null))
   (cpu common-lisp:nil :type (common-lisp:or nullable-cpu common-lisp:null))
   (savings-opportunity common-lisp:nil :type
    (common-lisp:or savings-opportunity common-lisp:null))
   (projected-utilization-metrics common-lisp:nil :type
    (common-lisp:or ecsservice-projected-utilization-metrics common-lisp:null))
   (container-recommendations common-lisp:nil :type
    (common-lisp:or container-recommendations common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'ecsservice-recommendation-option
                    'make-ecsservice-recommendation-option))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-recommendation-option))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-recommendation-option))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'memory))
      (common-lisp:list
       (common-lisp:cons "memory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cpu))
      (common-lisp:list
       (common-lisp:cons "cpu"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'savings-opportunity))
      (common-lisp:list
       (common-lisp:cons "savingsOpportunity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'projected-utilization-metrics))
      (common-lisp:list
       (common-lisp:cons "projectedUtilizationMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'container-recommendations))
      (common-lisp:list
       (common-lisp:cons "containerRecommendations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-recommendation-option))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype ecsservice-recommendation-options ()
   '(trivial-types:proper-list ecsservice-recommendation-option))
 (common-lisp:defun |make-ecsservice-recommendation-options|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            ecsservice-recommendation-option))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype ecsservice-recommendations ()
   '(trivial-types:proper-list ecsservice-recommendation))
 (common-lisp:defun |make-ecsservice-recommendations|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            ecsservice-recommendation))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (ecsservice-recommended-option-projected-metric (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-ecsservice-recommended-option-projected-metric-"))
   (recommended-cpu-units common-lisp:nil :type
    (common-lisp:or cpu-size common-lisp:null))
   (recommended-memory-size common-lisp:nil :type
    (common-lisp:or memory-size common-lisp:null))
   (projected-metrics common-lisp:nil :type
    (common-lisp:or ecsservice-projected-metrics common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'ecsservice-recommended-option-projected-metric
                    'make-ecsservice-recommended-option-projected-metric))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-recommended-option-projected-metric))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-recommended-option-projected-metric))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommended-cpu-units))
      (common-lisp:list
       (common-lisp:cons "recommendedCpuUnits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommended-memory-size))
      (common-lisp:list
       (common-lisp:cons "recommendedMemorySize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'projected-metrics))
      (common-lisp:list
       (common-lisp:cons "projectedMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-recommended-option-projected-metric))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype ecsservice-recommended-option-projected-metrics ()
   '(trivial-types:proper-list ecsservice-recommended-option-projected-metric))
 (common-lisp:defun |make-ecsservice-recommended-option-projected-metrics|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            ecsservice-recommended-option-projected-metric))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (ecsservice-utilization-metric (:copier common-lisp:nil)
      (:conc-name "struct-shape-ecsservice-utilization-metric-"))
   (name common-lisp:nil :type
    (common-lisp:or ecsservice-metric-name common-lisp:null))
   (statistic common-lisp:nil :type
    (common-lisp:or ecsservice-metric-statistic common-lisp:null))
   (value common-lisp:nil :type
    (common-lisp:or metric-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'ecsservice-utilization-metric
                    'make-ecsservice-utilization-metric))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-utilization-metric))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-utilization-metric))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'statistic))
      (common-lisp:list
       (common-lisp:cons "statistic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-utilization-metric))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype ecsservice-utilization-metrics ()
   '(trivial-types:proper-list ecsservice-utilization-metric))
 (common-lisp:defun |make-ecsservice-utilization-metrics|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            ecsservice-utilization-metric))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (effective-recommendation-preferences (:copier common-lisp:nil)
      (:conc-name "struct-shape-effective-recommendation-preferences-"))
   (cpu-vendor-architectures common-lisp:nil :type
    (common-lisp:or cpu-vendor-architectures common-lisp:null))
   (enhanced-infrastructure-metrics common-lisp:nil :type
    (common-lisp:or enhanced-infrastructure-metrics common-lisp:null))
   (inferred-workload-types common-lisp:nil :type
    (common-lisp:or inferred-workload-types-preference common-lisp:null))
   (external-metrics-preference common-lisp:nil :type
    (common-lisp:or external-metrics-preference common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'effective-recommendation-preferences
                    'make-effective-recommendation-preferences))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          effective-recommendation-preferences))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          effective-recommendation-preferences))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cpu-vendor-architectures))
      (common-lisp:list
       (common-lisp:cons "cpuVendorArchitectures"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enhanced-infrastructure-metrics))
      (common-lisp:list
       (common-lisp:cons "enhancedInfrastructureMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'inferred-workload-types))
      (common-lisp:list
       (common-lisp:cons "inferredWorkloadTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'external-metrics-preference))
      (common-lisp:list
       (common-lisp:cons "externalMetricsPreference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          effective-recommendation-preferences))
   common-lisp:nil))
(common-lisp:deftype enhanced-infrastructure-metrics () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (enrollment-filter (:copier common-lisp:nil)
      (:conc-name "struct-shape-enrollment-filter-"))
   (name common-lisp:nil :type
    (common-lisp:or enrollment-filter-name common-lisp:null))
   (values common-lisp:nil :type
    (common-lisp:or filter-values common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'enrollment-filter 'make-enrollment-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input enrollment-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input enrollment-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input enrollment-filter))
   common-lisp:nil))
(common-lisp:deftype enrollment-filter-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype enrollment-filters ()
   '(trivial-types:proper-list enrollment-filter))
 (common-lisp:defun |make-enrollment-filters|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list enrollment-filter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype error-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (estimated-monthly-savings (:copier common-lisp:nil)
      (:conc-name "struct-shape-estimated-monthly-savings-"))
   (currency common-lisp:nil :type (common-lisp:or currency common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'estimated-monthly-savings
                    'make-estimated-monthly-savings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          estimated-monthly-savings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          estimated-monthly-savings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'currency))
      (common-lisp:list
       (common-lisp:cons "currency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          estimated-monthly-savings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (export-auto-scaling-group-recommendations-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-export-auto-scaling-group-recommendations-request-"))
   (account-ids common-lisp:nil :type
    (common-lisp:or account-ids common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filters common-lisp:null))
   (fields-to-export common-lisp:nil :type
    (common-lisp:or exportable-auto-scaling-group-fields common-lisp:null))
   (s3destination-config (common-lisp:error ":s3destinationconfig is required")
    :type (common-lisp:or s3destination-config common-lisp:null))
   (file-format common-lisp:nil :type
    (common-lisp:or file-format common-lisp:null))
   (include-member-accounts common-lisp:nil :type
    (common-lisp:or include-member-accounts common-lisp:null))
   (recommendation-preferences common-lisp:nil :type
    (common-lisp:or recommendation-preferences common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'export-auto-scaling-group-recommendations-request
                    'make-export-auto-scaling-group-recommendations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          export-auto-scaling-group-recommendations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          export-auto-scaling-group-recommendations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "accountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fields-to-export))
      (common-lisp:list
       (common-lisp:cons "fieldsToExport"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           's3destination-config))
      (common-lisp:list
       (common-lisp:cons "s3DestinationConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-format))
      (common-lisp:list
       (common-lisp:cons "fileFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'include-member-accounts))
      (common-lisp:list
       (common-lisp:cons "includeMemberAccounts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-preferences))
      (common-lisp:list
       (common-lisp:cons "recommendationPreferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          export-auto-scaling-group-recommendations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (export-auto-scaling-group-recommendations-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-export-auto-scaling-group-recommendations-response-"))
   (job-id common-lisp:nil :type (common-lisp:or job-id common-lisp:null))
   (s3destination common-lisp:nil :type
    (common-lisp:or s3destination common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'export-auto-scaling-group-recommendations-response
                    'make-export-auto-scaling-group-recommendations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          export-auto-scaling-group-recommendations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          export-auto-scaling-group-recommendations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "jobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3destination))
      (common-lisp:list
       (common-lisp:cons "s3Destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          export-auto-scaling-group-recommendations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (export-destination (:copier common-lisp:nil)
      (:conc-name "struct-shape-export-destination-"))
   (s3 common-lisp:nil :type (common-lisp:or s3destination common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'export-destination 'make-export-destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input export-destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input export-destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3))
      (common-lisp:list
       (common-lisp:cons "s3"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input export-destination))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (export-ebsvolume-recommendations-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-export-ebsvolume-recommendations-request-"))
   (account-ids common-lisp:nil :type
    (common-lisp:or account-ids common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or ebsfilters common-lisp:null))
   (fields-to-export common-lisp:nil :type
    (common-lisp:or exportable-volume-fields common-lisp:null))
   (s3destination-config (common-lisp:error ":s3destinationconfig is required")
    :type (common-lisp:or s3destination-config common-lisp:null))
   (file-format common-lisp:nil :type
    (common-lisp:or file-format common-lisp:null))
   (include-member-accounts common-lisp:nil :type
    (common-lisp:or include-member-accounts common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'export-ebsvolume-recommendations-request
                    'make-export-ebsvolume-recommendations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          export-ebsvolume-recommendations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          export-ebsvolume-recommendations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "accountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fields-to-export))
      (common-lisp:list
       (common-lisp:cons "fieldsToExport"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           's3destination-config))
      (common-lisp:list
       (common-lisp:cons "s3DestinationConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-format))
      (common-lisp:list
       (common-lisp:cons "fileFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'include-member-accounts))
      (common-lisp:list
       (common-lisp:cons "includeMemberAccounts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          export-ebsvolume-recommendations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (export-ebsvolume-recommendations-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-export-ebsvolume-recommendations-response-"))
   (job-id common-lisp:nil :type (common-lisp:or job-id common-lisp:null))
   (s3destination common-lisp:nil :type
    (common-lisp:or s3destination common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'export-ebsvolume-recommendations-response
                    'make-export-ebsvolume-recommendations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          export-ebsvolume-recommendations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          export-ebsvolume-recommendations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "jobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3destination))
      (common-lisp:list
       (common-lisp:cons "s3Destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          export-ebsvolume-recommendations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (export-ec2instance-recommendations-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-export-ec2instance-recommendations-request-"))
   (account-ids common-lisp:nil :type
    (common-lisp:or account-ids common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filters common-lisp:null))
   (fields-to-export common-lisp:nil :type
    (common-lisp:or exportable-instance-fields common-lisp:null))
   (s3destination-config (common-lisp:error ":s3destinationconfig is required")
    :type (common-lisp:or s3destination-config common-lisp:null))
   (file-format common-lisp:nil :type
    (common-lisp:or file-format common-lisp:null))
   (include-member-accounts common-lisp:nil :type
    (common-lisp:or include-member-accounts common-lisp:null))
   (recommendation-preferences common-lisp:nil :type
    (common-lisp:or recommendation-preferences common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'export-ec2instance-recommendations-request
                    'make-export-ec2instance-recommendations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          export-ec2instance-recommendations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          export-ec2instance-recommendations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "accountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fields-to-export))
      (common-lisp:list
       (common-lisp:cons "fieldsToExport"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           's3destination-config))
      (common-lisp:list
       (common-lisp:cons "s3DestinationConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-format))
      (common-lisp:list
       (common-lisp:cons "fileFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'include-member-accounts))
      (common-lisp:list
       (common-lisp:cons "includeMemberAccounts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-preferences))
      (common-lisp:list
       (common-lisp:cons "recommendationPreferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          export-ec2instance-recommendations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (export-ec2instance-recommendations-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-export-ec2instance-recommendations-response-"))
   (job-id common-lisp:nil :type (common-lisp:or job-id common-lisp:null))
   (s3destination common-lisp:nil :type
    (common-lisp:or s3destination common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'export-ec2instance-recommendations-response
                    'make-export-ec2instance-recommendations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          export-ec2instance-recommendations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          export-ec2instance-recommendations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "jobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3destination))
      (common-lisp:list
       (common-lisp:cons "s3Destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          export-ec2instance-recommendations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (export-ecsservice-recommendations-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-export-ecsservice-recommendations-request-"))
   (account-ids common-lisp:nil :type
    (common-lisp:or account-ids common-lisp:null))
   (filters common-lisp:nil :type
    (common-lisp:or ecsservice-recommendation-filters common-lisp:null))
   (fields-to-export common-lisp:nil :type
    (common-lisp:or exportable-ecsservice-fields common-lisp:null))
   (s3destination-config (common-lisp:error ":s3destinationconfig is required")
    :type (common-lisp:or s3destination-config common-lisp:null))
   (file-format common-lisp:nil :type
    (common-lisp:or file-format common-lisp:null))
   (include-member-accounts common-lisp:nil :type
    (common-lisp:or include-member-accounts common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'export-ecsservice-recommendations-request
                    'make-export-ecsservice-recommendations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          export-ecsservice-recommendations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          export-ecsservice-recommendations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "accountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fields-to-export))
      (common-lisp:list
       (common-lisp:cons "fieldsToExport"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           's3destination-config))
      (common-lisp:list
       (common-lisp:cons "s3DestinationConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-format))
      (common-lisp:list
       (common-lisp:cons "fileFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'include-member-accounts))
      (common-lisp:list
       (common-lisp:cons "includeMemberAccounts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          export-ecsservice-recommendations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (export-ecsservice-recommendations-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-export-ecsservice-recommendations-response-"))
   (job-id common-lisp:nil :type (common-lisp:or job-id common-lisp:null))
   (s3destination common-lisp:nil :type
    (common-lisp:or s3destination common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'export-ecsservice-recommendations-response
                    'make-export-ecsservice-recommendations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          export-ecsservice-recommendations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          export-ecsservice-recommendations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "jobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3destination))
      (common-lisp:list
       (common-lisp:cons "s3Destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          export-ecsservice-recommendations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (export-lambda-function-recommendations-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-export-lambda-function-recommendations-request-"))
   (account-ids common-lisp:nil :type
    (common-lisp:or account-ids common-lisp:null))
   (filters common-lisp:nil :type
    (common-lisp:or lambda-function-recommendation-filters common-lisp:null))
   (fields-to-export common-lisp:nil :type
    (common-lisp:or exportable-lambda-function-fields common-lisp:null))
   (s3destination-config (common-lisp:error ":s3destinationconfig is required")
    :type (common-lisp:or s3destination-config common-lisp:null))
   (file-format common-lisp:nil :type
    (common-lisp:or file-format common-lisp:null))
   (include-member-accounts common-lisp:nil :type
    (common-lisp:or include-member-accounts common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'export-lambda-function-recommendations-request
                    'make-export-lambda-function-recommendations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          export-lambda-function-recommendations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          export-lambda-function-recommendations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "accountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fields-to-export))
      (common-lisp:list
       (common-lisp:cons "fieldsToExport"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           's3destination-config))
      (common-lisp:list
       (common-lisp:cons "s3DestinationConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-format))
      (common-lisp:list
       (common-lisp:cons "fileFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'include-member-accounts))
      (common-lisp:list
       (common-lisp:cons "includeMemberAccounts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          export-lambda-function-recommendations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (export-lambda-function-recommendations-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-export-lambda-function-recommendations-response-"))
   (job-id common-lisp:nil :type (common-lisp:or job-id common-lisp:null))
   (s3destination common-lisp:nil :type
    (common-lisp:or s3destination common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'export-lambda-function-recommendations-response
                    'make-export-lambda-function-recommendations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          export-lambda-function-recommendations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          export-lambda-function-recommendations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "jobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3destination))
      (common-lisp:list
       (common-lisp:cons "s3Destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          export-lambda-function-recommendations-response))
   common-lisp:nil))
(common-lisp:deftype exportable-auto-scaling-group-field () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype exportable-auto-scaling-group-fields ()
   '(trivial-types:proper-list exportable-auto-scaling-group-field))
 (common-lisp:defun |make-exportable-auto-scaling-group-fields|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            exportable-auto-scaling-group-field))
   aws-sdk/generator/shape::members))
(common-lisp:deftype exportable-ecsservice-field () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype exportable-ecsservice-fields ()
   '(trivial-types:proper-list exportable-ecsservice-field))
 (common-lisp:defun |make-exportable-ecsservice-fields|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            exportable-ecsservice-field))
   aws-sdk/generator/shape::members))
(common-lisp:deftype exportable-instance-field () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype exportable-instance-fields ()
   '(trivial-types:proper-list exportable-instance-field))
 (common-lisp:defun |make-exportable-instance-fields|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            exportable-instance-field))
   aws-sdk/generator/shape::members))
(common-lisp:deftype exportable-lambda-function-field () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype exportable-lambda-function-fields ()
   '(trivial-types:proper-list exportable-lambda-function-field))
 (common-lisp:defun |make-exportable-lambda-function-fields|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            exportable-lambda-function-field))
   aws-sdk/generator/shape::members))
(common-lisp:deftype exportable-volume-field () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype exportable-volume-fields ()
   '(trivial-types:proper-list exportable-volume-field))
 (common-lisp:defun |make-exportable-volume-fields|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list exportable-volume-field))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (external-metrics-preference (:copier common-lisp:nil)
      (:conc-name "struct-shape-external-metrics-preference-"))
   (source common-lisp:nil :type
    (common-lisp:or external-metrics-source common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'external-metrics-preference
                    'make-external-metrics-preference))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          external-metrics-preference))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          external-metrics-preference))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source))
      (common-lisp:list
       (common-lisp:cons "source"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          external-metrics-preference))
   common-lisp:nil))
(common-lisp:deftype external-metrics-source () 'common-lisp:string)
(common-lisp:deftype failure-reason () 'common-lisp:string)
(common-lisp:deftype file-format () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (filter (:copier common-lisp:nil) (:conc-name "struct-shape-filter-"))
   (name common-lisp:nil :type (common-lisp:or filter-name common-lisp:null))
   (values common-lisp:nil :type
    (common-lisp:or filter-values common-lisp:null)))
 (common-lisp:export (common-lisp:list 'filter 'make-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input filter))
   common-lisp:nil))
(common-lisp:deftype filter-name () 'common-lisp:string)
(common-lisp:deftype filter-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype filter-values ()
   '(trivial-types:proper-list filter-value))
 (common-lisp:defun |make-filter-values|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list filter-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype filters () '(trivial-types:proper-list filter))
 (common-lisp:defun |make-filters|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list filter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype finding () 'common-lisp:string)
(common-lisp:deftype finding-reason-code () 'common-lisp:string)
(common-lisp:deftype function-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype function-arns ()
   '(trivial-types:proper-list function-arn))
 (common-lisp:defun |make-function-arns|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list function-arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype function-version () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (get-auto-scaling-group-recommendations-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-auto-scaling-group-recommendations-request-"))
   (account-ids common-lisp:nil :type
    (common-lisp:or account-ids common-lisp:null))
   (auto-scaling-group-arns common-lisp:nil :type
    (common-lisp:or auto-scaling-group-arns common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filters common-lisp:null))
   (recommendation-preferences common-lisp:nil :type
    (common-lisp:or recommendation-preferences common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-auto-scaling-group-recommendations-request
                    'make-get-auto-scaling-group-recommendations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-auto-scaling-group-recommendations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-auto-scaling-group-recommendations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "accountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'auto-scaling-group-arns))
      (common-lisp:list
       (common-lisp:cons "autoScalingGroupArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-preferences))
      (common-lisp:list
       (common-lisp:cons "recommendationPreferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-auto-scaling-group-recommendations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-auto-scaling-group-recommendations-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-auto-scaling-group-recommendations-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (auto-scaling-group-recommendations common-lisp:nil :type
    (common-lisp:or auto-scaling-group-recommendations common-lisp:null))
   (errors common-lisp:nil :type
    (common-lisp:or get-recommendation-errors common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-auto-scaling-group-recommendations-response
                    'make-get-auto-scaling-group-recommendations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-auto-scaling-group-recommendations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-auto-scaling-group-recommendations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'auto-scaling-group-recommendations))
      (common-lisp:list
       (common-lisp:cons "autoScalingGroupRecommendations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'errors))
      (common-lisp:list
       (common-lisp:cons "errors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-auto-scaling-group-recommendations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-ebsvolume-recommendations-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-ebsvolume-recommendations-request-"))
   (volume-arns common-lisp:nil :type
    (common-lisp:or volume-arns common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or ebsfilters common-lisp:null))
   (account-ids common-lisp:nil :type
    (common-lisp:or account-ids common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-ebsvolume-recommendations-request
                    'make-get-ebsvolume-recommendations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-ebsvolume-recommendations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-ebsvolume-recommendations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arns))
      (common-lisp:list
       (common-lisp:cons "volumeArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "accountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-ebsvolume-recommendations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-ebsvolume-recommendations-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-ebsvolume-recommendations-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (volume-recommendations common-lisp:nil :type
    (common-lisp:or volume-recommendations common-lisp:null))
   (errors common-lisp:nil :type
    (common-lisp:or get-recommendation-errors common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-ebsvolume-recommendations-response
                    'make-get-ebsvolume-recommendations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-ebsvolume-recommendations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-ebsvolume-recommendations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'volume-recommendations))
      (common-lisp:list
       (common-lisp:cons "volumeRecommendations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'errors))
      (common-lisp:list
       (common-lisp:cons "errors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-ebsvolume-recommendations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-ec2instance-recommendations-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-ec2instance-recommendations-request-"))
   (instance-arns common-lisp:nil :type
    (common-lisp:or instance-arns common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (filters common-lisp:nil :type (common-lisp:or filters common-lisp:null))
   (account-ids common-lisp:nil :type
    (common-lisp:or account-ids common-lisp:null))
   (recommendation-preferences common-lisp:nil :type
    (common-lisp:or recommendation-preferences common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-ec2instance-recommendations-request
                    'make-get-ec2instance-recommendations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-ec2instance-recommendations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-ec2instance-recommendations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arns))
      (common-lisp:list
       (common-lisp:cons "instanceArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "accountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-preferences))
      (common-lisp:list
       (common-lisp:cons "recommendationPreferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-ec2instance-recommendations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-ec2instance-recommendations-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-ec2instance-recommendations-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (instance-recommendations common-lisp:nil :type
    (common-lisp:or instance-recommendations common-lisp:null))
   (errors common-lisp:nil :type
    (common-lisp:or get-recommendation-errors common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-ec2instance-recommendations-response
                    'make-get-ec2instance-recommendations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-ec2instance-recommendations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-ec2instance-recommendations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'instance-recommendations))
      (common-lisp:list
       (common-lisp:cons "instanceRecommendations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'errors))
      (common-lisp:list
       (common-lisp:cons "errors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-ec2instance-recommendations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-ec2recommendation-projected-metrics-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-ec2recommendation-projected-metrics-request-"))
   (instance-arn (common-lisp:error ":instancearn is required") :type
    (common-lisp:or instance-arn common-lisp:null))
   (stat (common-lisp:error ":stat is required") :type
    (common-lisp:or metric-statistic common-lisp:null))
   (period (common-lisp:error ":period is required") :type
    (common-lisp:or period common-lisp:null))
   (start-time (common-lisp:error ":starttime is required") :type
    (common-lisp:or timestamp common-lisp:null))
   (end-time (common-lisp:error ":endtime is required") :type
    (common-lisp:or timestamp common-lisp:null))
   (recommendation-preferences common-lisp:nil :type
    (common-lisp:or recommendation-preferences common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-ec2recommendation-projected-metrics-request
                    'make-get-ec2recommendation-projected-metrics-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-ec2recommendation-projected-metrics-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-ec2recommendation-projected-metrics-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "instanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stat))
      (common-lisp:list
       (common-lisp:cons "stat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'period))
      (common-lisp:list
       (common-lisp:cons "period"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "startTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "endTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-preferences))
      (common-lisp:list
       (common-lisp:cons "recommendationPreferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-ec2recommendation-projected-metrics-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-ec2recommendation-projected-metrics-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-ec2recommendation-projected-metrics-response-"))
   (recommended-option-projected-metrics common-lisp:nil :type
    (common-lisp:or recommended-option-projected-metrics common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-ec2recommendation-projected-metrics-response
                    'make-get-ec2recommendation-projected-metrics-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-ec2recommendation-projected-metrics-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-ec2recommendation-projected-metrics-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommended-option-projected-metrics))
      (common-lisp:list
       (common-lisp:cons "recommendedOptionProjectedMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-ec2recommendation-projected-metrics-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-ecsservice-recommendation-projected-metrics-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-ecsservice-recommendation-projected-metrics-request-"))
   (service-arn (common-lisp:error ":servicearn is required") :type
    (common-lisp:or service-arn common-lisp:null))
   (stat (common-lisp:error ":stat is required") :type
    (common-lisp:or metric-statistic common-lisp:null))
   (period (common-lisp:error ":period is required") :type
    (common-lisp:or period common-lisp:null))
   (start-time (common-lisp:error ":starttime is required") :type
    (common-lisp:or timestamp common-lisp:null))
   (end-time (common-lisp:error ":endtime is required") :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-ecsservice-recommendation-projected-metrics-request
                    'make-get-ecsservice-recommendation-projected-metrics-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-ecsservice-recommendation-projected-metrics-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-ecsservice-recommendation-projected-metrics-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-arn))
      (common-lisp:list
       (common-lisp:cons "serviceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stat))
      (common-lisp:list
       (common-lisp:cons "stat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'period))
      (common-lisp:list
       (common-lisp:cons "period"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "startTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "endTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-ecsservice-recommendation-projected-metrics-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-ecsservice-recommendation-projected-metrics-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-ecsservice-recommendation-projected-metrics-response-"))
   (recommended-option-projected-metrics common-lisp:nil :type
    (common-lisp:or ecsservice-recommended-option-projected-metrics
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-ecsservice-recommendation-projected-metrics-response
                    'make-get-ecsservice-recommendation-projected-metrics-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-ecsservice-recommendation-projected-metrics-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-ecsservice-recommendation-projected-metrics-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommended-option-projected-metrics))
      (common-lisp:list
       (common-lisp:cons "recommendedOptionProjectedMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-ecsservice-recommendation-projected-metrics-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-ecsservice-recommendations-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-ecsservice-recommendations-request-"))
   (service-arns common-lisp:nil :type
    (common-lisp:or service-arns common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (filters common-lisp:nil :type
    (common-lisp:or ecsservice-recommendation-filters common-lisp:null))
   (account-ids common-lisp:nil :type
    (common-lisp:or account-ids common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-ecsservice-recommendations-request
                    'make-get-ecsservice-recommendations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-ecsservice-recommendations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-ecsservice-recommendations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-arns))
      (common-lisp:list
       (common-lisp:cons "serviceArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "accountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-ecsservice-recommendations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-ecsservice-recommendations-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-ecsservice-recommendations-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (ecs-service-recommendations common-lisp:nil :type
    (common-lisp:or ecsservice-recommendations common-lisp:null))
   (errors common-lisp:nil :type
    (common-lisp:or get-recommendation-errors common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-ecsservice-recommendations-response
                    'make-get-ecsservice-recommendations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-ecsservice-recommendations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-ecsservice-recommendations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ecs-service-recommendations))
      (common-lisp:list
       (common-lisp:cons "ecsServiceRecommendations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'errors))
      (common-lisp:list
       (common-lisp:cons "errors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-ecsservice-recommendations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-effective-recommendation-preferences-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-effective-recommendation-preferences-request-"))
   (resource-arn (common-lisp:error ":resourcearn is required") :type
    (common-lisp:or resource-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-effective-recommendation-preferences-request
                    'make-get-effective-recommendation-preferences-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-effective-recommendation-preferences-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-effective-recommendation-preferences-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "resourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-effective-recommendation-preferences-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-effective-recommendation-preferences-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-effective-recommendation-preferences-response-"))
   (enhanced-infrastructure-metrics common-lisp:nil :type
    (common-lisp:or enhanced-infrastructure-metrics common-lisp:null))
   (external-metrics-preference common-lisp:nil :type
    (common-lisp:or external-metrics-preference common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-effective-recommendation-preferences-response
                    'make-get-effective-recommendation-preferences-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-effective-recommendation-preferences-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-effective-recommendation-preferences-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enhanced-infrastructure-metrics))
      (common-lisp:list
       (common-lisp:cons "enhancedInfrastructureMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'external-metrics-preference))
      (common-lisp:list
       (common-lisp:cons "externalMetricsPreference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-effective-recommendation-preferences-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-enrollment-status-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-enrollment-status-request-")))
 (common-lisp:export
  (common-lisp:list 'get-enrollment-status-request
                    'make-get-enrollment-status-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-enrollment-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-enrollment-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-enrollment-status-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-enrollment-status-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-enrollment-status-response-"))
   (status common-lisp:nil :type (common-lisp:or status common-lisp:null))
   (status-reason common-lisp:nil :type
    (common-lisp:or status-reason common-lisp:null))
   (member-accounts-enrolled common-lisp:nil :type
    (common-lisp:or member-accounts-enrolled common-lisp:null))
   (last-updated-timestamp common-lisp:nil :type
    (common-lisp:or last-updated-timestamp common-lisp:null))
   (number-of-member-accounts-opted-in common-lisp:nil :type
    (common-lisp:or number-of-member-accounts-opted-in common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-enrollment-status-response
                    'make-get-enrollment-status-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-enrollment-status-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-enrollment-status-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-reason))
      (common-lisp:list
       (common-lisp:cons "statusReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'member-accounts-enrolled))
      (common-lisp:list
       (common-lisp:cons "memberAccountsEnrolled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-of-member-accounts-opted-in))
      (common-lisp:list
       (common-lisp:cons "numberOfMemberAccountsOptedIn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-enrollment-status-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-enrollment-statuses-for-organization-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-enrollment-statuses-for-organization-request-"))
   (filters common-lisp:nil :type
    (common-lisp:or enrollment-filters common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-enrollment-statuses-for-organization-request
                    'make-get-enrollment-statuses-for-organization-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-enrollment-statuses-for-organization-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-enrollment-statuses-for-organization-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-enrollment-statuses-for-organization-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-enrollment-statuses-for-organization-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-enrollment-statuses-for-organization-response-"))
   (account-enrollment-statuses common-lisp:nil :type
    (common-lisp:or account-enrollment-statuses common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-enrollment-statuses-for-organization-response
                    'make-get-enrollment-statuses-for-organization-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-enrollment-statuses-for-organization-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-enrollment-statuses-for-organization-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'account-enrollment-statuses))
      (common-lisp:list
       (common-lisp:cons "accountEnrollmentStatuses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-enrollment-statuses-for-organization-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-lambda-function-recommendations-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-lambda-function-recommendations-request-"))
   (function-arns common-lisp:nil :type
    (common-lisp:or function-arns common-lisp:null))
   (account-ids common-lisp:nil :type
    (common-lisp:or account-ids common-lisp:null))
   (filters common-lisp:nil :type
    (common-lisp:or lambda-function-recommendation-filters common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-lambda-function-recommendations-request
                    'make-get-lambda-function-recommendations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-lambda-function-recommendations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-lambda-function-recommendations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'function-arns))
      (common-lisp:list
       (common-lisp:cons "functionArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "accountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-lambda-function-recommendations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-lambda-function-recommendations-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-lambda-function-recommendations-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (lambda-function-recommendations common-lisp:nil :type
    (common-lisp:or lambda-function-recommendations common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-lambda-function-recommendations-response
                    'make-get-lambda-function-recommendations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-lambda-function-recommendations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-lambda-function-recommendations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'lambda-function-recommendations))
      (common-lisp:list
       (common-lisp:cons "lambdaFunctionRecommendations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-lambda-function-recommendations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-recommendation-error (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-recommendation-error-"))
   (identifier common-lisp:nil :type
    (common-lisp:or identifier common-lisp:null))
   (code common-lisp:nil :type (common-lisp:or code common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-recommendation-error 'make-get-recommendation-error))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-error))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-error))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identifier))
      (common-lisp:list
       (common-lisp:cons "identifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'code))
      (common-lisp:list
       (common-lisp:cons "code"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-error))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype get-recommendation-errors ()
   '(trivial-types:proper-list get-recommendation-error))
 (common-lisp:defun |make-get-recommendation-errors|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            get-recommendation-error))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (get-recommendation-preferences-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-recommendation-preferences-request-"))
   (resource-type (common-lisp:error ":resourcetype is required") :type
    (common-lisp:or resource-type common-lisp:null))
   (scope common-lisp:nil :type (common-lisp:or scope common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-recommendation-preferences-request
                    'make-get-recommendation-preferences-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-preferences-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-preferences-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "resourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scope))
      (common-lisp:list
       (common-lisp:cons "scope"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-preferences-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-recommendation-preferences-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-recommendation-preferences-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (recommendation-preferences-details common-lisp:nil :type
    (common-lisp:or recommendation-preferences-details common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-recommendation-preferences-response
                    'make-get-recommendation-preferences-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-preferences-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-preferences-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-preferences-details))
      (common-lisp:list
       (common-lisp:cons "recommendationPreferencesDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-preferences-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-recommendation-summaries-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-recommendation-summaries-request-"))
   (account-ids common-lisp:nil :type
    (common-lisp:or account-ids common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-recommendation-summaries-request
                    'make-get-recommendation-summaries-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-summaries-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-summaries-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "accountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-summaries-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-recommendation-summaries-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-recommendation-summaries-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (recommendation-summaries common-lisp:nil :type
    (common-lisp:or recommendation-summaries common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-recommendation-summaries-response
                    'make-get-recommendation-summaries-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-summaries-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-summaries-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-summaries))
      (common-lisp:list
       (common-lisp:cons "recommendationSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-summaries-response))
   common-lisp:nil))
(common-lisp:deftype high () 'common-lisp:integer)
(common-lisp:deftype identifier () 'common-lisp:string)
(common-lisp:deftype include-member-accounts () 'common-lisp:boolean)
(common-lisp:deftype inferred-workload-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype inferred-workload-types ()
   '(trivial-types:proper-list inferred-workload-type))
 (common-lisp:defun |make-inferred-workload-types|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list inferred-workload-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype inferred-workload-types-preference () 'common-lisp:string)
(common-lisp:deftype instance-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype instance-arns ()
   '(trivial-types:proper-list instance-arn))
 (common-lisp:defun |make-instance-arns|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list instance-arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype instance-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (instance-recommendation (:copier common-lisp:nil)
      (:conc-name "struct-shape-instance-recommendation-"))
   (instance-arn common-lisp:nil :type
    (common-lisp:or instance-arn common-lisp:null))
   (account-id common-lisp:nil :type
    (common-lisp:or account-id common-lisp:null))
   (instance-name common-lisp:nil :type
    (common-lisp:or instance-name common-lisp:null))
   (current-instance-type common-lisp:nil :type
    (common-lisp:or current-instance-type common-lisp:null))
   (finding common-lisp:nil :type (common-lisp:or finding common-lisp:null))
   (finding-reason-codes common-lisp:nil :type
    (common-lisp:or instance-recommendation-finding-reason-codes
                    common-lisp:null))
   (utilization-metrics common-lisp:nil :type
    (common-lisp:or utilization-metrics common-lisp:null))
   (look-back-period-in-days common-lisp:nil :type
    (common-lisp:or look-back-period-in-days common-lisp:null))
   (recommendation-options common-lisp:nil :type
    (common-lisp:or recommendation-options common-lisp:null))
   (recommendation-sources common-lisp:nil :type
    (common-lisp:or recommendation-sources common-lisp:null))
   (last-refresh-timestamp common-lisp:nil :type
    (common-lisp:or last-refresh-timestamp common-lisp:null))
   (current-performance-risk common-lisp:nil :type
    (common-lisp:or current-performance-risk common-lisp:null))
   (effective-recommendation-preferences common-lisp:nil :type
    (common-lisp:or effective-recommendation-preferences common-lisp:null))
   (inferred-workload-types common-lisp:nil :type
    (common-lisp:or inferred-workload-types common-lisp:null))
   (instance-state common-lisp:nil :type
    (common-lisp:or instance-state common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-recommendation 'make-instance-recommendation))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          instance-recommendation))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          instance-recommendation))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "instanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-name))
      (common-lisp:list
       (common-lisp:cons "instanceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'current-instance-type))
      (common-lisp:list
       (common-lisp:cons "currentInstanceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'finding))
      (common-lisp:list
       (common-lisp:cons "finding"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'finding-reason-codes))
      (common-lisp:list
       (common-lisp:cons "findingReasonCodes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'utilization-metrics))
      (common-lisp:list
       (common-lisp:cons "utilizationMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'look-back-period-in-days))
      (common-lisp:list
       (common-lisp:cons "lookBackPeriodInDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-options))
      (common-lisp:list
       (common-lisp:cons "recommendationOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-sources))
      (common-lisp:list
       (common-lisp:cons "recommendationSources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-refresh-timestamp))
      (common-lisp:list
       (common-lisp:cons "lastRefreshTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'current-performance-risk))
      (common-lisp:list
       (common-lisp:cons "currentPerformanceRisk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'effective-recommendation-preferences))
      (common-lisp:list
       (common-lisp:cons "effectiveRecommendationPreferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'inferred-workload-types))
      (common-lisp:list
       (common-lisp:cons "inferredWorkloadTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-state))
      (common-lisp:list
       (common-lisp:cons "instanceState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          instance-recommendation))
   common-lisp:nil))
(common-lisp:deftype instance-recommendation-finding-reason-code ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype instance-recommendation-finding-reason-codes ()
   '(trivial-types:proper-list instance-recommendation-finding-reason-code))
 (common-lisp:defun |make-instance-recommendation-finding-reason-codes|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            instance-recommendation-finding-reason-code))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (instance-recommendation-option (:copier common-lisp:nil)
      (:conc-name "struct-shape-instance-recommendation-option-"))
   (instance-type common-lisp:nil :type
    (common-lisp:or instance-type common-lisp:null))
   (projected-utilization-metrics common-lisp:nil :type
    (common-lisp:or projected-utilization-metrics common-lisp:null))
   (platform-differences common-lisp:nil :type
    (common-lisp:or platform-differences common-lisp:null))
   (performance-risk common-lisp:nil :type
    (common-lisp:or performance-risk common-lisp:null))
   (rank common-lisp:nil :type (common-lisp:or rank common-lisp:null))
   (savings-opportunity common-lisp:nil :type
    (common-lisp:or savings-opportunity common-lisp:null))
   (migration-effort common-lisp:nil :type
    (common-lisp:or migration-effort common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-recommendation-option
                    'make-instance-recommendation-option))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          instance-recommendation-option))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          instance-recommendation-option))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-type))
      (common-lisp:list
       (common-lisp:cons "instanceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'projected-utilization-metrics))
      (common-lisp:list
       (common-lisp:cons "projectedUtilizationMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'platform-differences))
      (common-lisp:list
       (common-lisp:cons "platformDifferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'performance-risk))
      (common-lisp:list
       (common-lisp:cons "performanceRisk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rank))
      (common-lisp:list
       (common-lisp:cons "rank"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'savings-opportunity))
      (common-lisp:list
       (common-lisp:cons "savingsOpportunity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'migration-effort))
      (common-lisp:list
       (common-lisp:cons "migrationEffort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          instance-recommendation-option))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype instance-recommendations ()
   '(trivial-types:proper-list instance-recommendation))
 (common-lisp:defun |make-instance-recommendations|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list instance-recommendation))
   aws-sdk/generator/shape::members))
(common-lisp:deftype instance-state () 'common-lisp:string)
(common-lisp:deftype instance-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (compute-optimizer-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-parameter-value-exception
     (compute-optimizer-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-parameter-value-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-parameter-value-exception
                    'invalid-parameter-value-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (job-filter (:copier common-lisp:nil)
      (:conc-name "struct-shape-job-filter-"))
   (name common-lisp:nil :type
    (common-lisp:or job-filter-name common-lisp:null))
   (values common-lisp:nil :type
    (common-lisp:or filter-values common-lisp:null)))
 (common-lisp:export (common-lisp:list 'job-filter 'make-job-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input job-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input job-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input job-filter))
   common-lisp:nil))
(common-lisp:deftype job-filter-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype job-filters () '(trivial-types:proper-list job-filter))
 (common-lisp:defun |make-job-filters|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list job-filter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype job-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype job-ids () '(trivial-types:proper-list job-id))
 (common-lisp:defun |make-job-ids|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list job-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype job-status () 'common-lisp:string)
(common-lisp:deftype lambda-function-memory-metric-name () 'common-lisp:string)
(common-lisp:deftype lambda-function-memory-metric-statistic ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (lambda-function-memory-projected-metric (:copier common-lisp:nil)
      (:conc-name "struct-shape-lambda-function-memory-projected-metric-"))
   (name common-lisp:nil :type
    (common-lisp:or lambda-function-memory-metric-name common-lisp:null))
   (statistic common-lisp:nil :type
    (common-lisp:or lambda-function-memory-metric-statistic common-lisp:null))
   (value common-lisp:nil :type
    (common-lisp:or metric-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lambda-function-memory-projected-metric
                    'make-lambda-function-memory-projected-metric))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-memory-projected-metric))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-memory-projected-metric))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'statistic))
      (common-lisp:list
       (common-lisp:cons "statistic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-memory-projected-metric))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype lambda-function-memory-projected-metrics ()
   '(trivial-types:proper-list lambda-function-memory-projected-metric))
 (common-lisp:defun |make-lambda-function-memory-projected-metrics|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            lambda-function-memory-projected-metric))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (lambda-function-memory-recommendation-option (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-lambda-function-memory-recommendation-option-"))
   (rank common-lisp:nil :type (common-lisp:or rank common-lisp:null))
   (memory-size common-lisp:nil :type
    (common-lisp:or memory-size common-lisp:null))
   (projected-utilization-metrics common-lisp:nil :type
    (common-lisp:or lambda-function-memory-projected-metrics common-lisp:null))
   (savings-opportunity common-lisp:nil :type
    (common-lisp:or savings-opportunity common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lambda-function-memory-recommendation-option
                    'make-lambda-function-memory-recommendation-option))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-memory-recommendation-option))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-memory-recommendation-option))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rank))
      (common-lisp:list
       (common-lisp:cons "rank"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'memory-size))
      (common-lisp:list
       (common-lisp:cons "memorySize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'projected-utilization-metrics))
      (common-lisp:list
       (common-lisp:cons "projectedUtilizationMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'savings-opportunity))
      (common-lisp:list
       (common-lisp:cons "savingsOpportunity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-memory-recommendation-option))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype lambda-function-memory-recommendation-options ()
   '(trivial-types:proper-list lambda-function-memory-recommendation-option))
 (common-lisp:defun |make-lambda-function-memory-recommendation-options|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            lambda-function-memory-recommendation-option))
   aws-sdk/generator/shape::members))
(common-lisp:deftype lambda-function-metric-name () 'common-lisp:string)
(common-lisp:deftype lambda-function-metric-statistic () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (lambda-function-recommendation (:copier common-lisp:nil)
      (:conc-name "struct-shape-lambda-function-recommendation-"))
   (function-arn common-lisp:nil :type
    (common-lisp:or function-arn common-lisp:null))
   (function-version common-lisp:nil :type
    (common-lisp:or function-version common-lisp:null))
   (account-id common-lisp:nil :type
    (common-lisp:or account-id common-lisp:null))
   (current-memory-size common-lisp:nil :type
    (common-lisp:or memory-size common-lisp:null))
   (number-of-invocations common-lisp:nil :type
    (common-lisp:or number-of-invocations common-lisp:null))
   (utilization-metrics common-lisp:nil :type
    (common-lisp:or lambda-function-utilization-metrics common-lisp:null))
   (lookback-period-in-days common-lisp:nil :type
    (common-lisp:or look-back-period-in-days common-lisp:null))
   (last-refresh-timestamp common-lisp:nil :type
    (common-lisp:or last-refresh-timestamp common-lisp:null))
   (finding common-lisp:nil :type
    (common-lisp:or lambda-function-recommendation-finding common-lisp:null))
   (finding-reason-codes common-lisp:nil :type
    (common-lisp:or lambda-function-recommendation-finding-reason-codes
                    common-lisp:null))
   (memory-size-recommendation-options common-lisp:nil :type
    (common-lisp:or lambda-function-memory-recommendation-options
                    common-lisp:null))
   (current-performance-risk common-lisp:nil :type
    (common-lisp:or current-performance-risk common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lambda-function-recommendation
                    'make-lambda-function-recommendation))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-recommendation))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-recommendation))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'function-arn))
      (common-lisp:list
       (common-lisp:cons "functionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'function-version))
      (common-lisp:list
       (common-lisp:cons "functionVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'current-memory-size))
      (common-lisp:list
       (common-lisp:cons "currentMemorySize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-of-invocations))
      (common-lisp:list
       (common-lisp:cons "numberOfInvocations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'utilization-metrics))
      (common-lisp:list
       (common-lisp:cons "utilizationMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'lookback-period-in-days))
      (common-lisp:list
       (common-lisp:cons "lookbackPeriodInDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-refresh-timestamp))
      (common-lisp:list
       (common-lisp:cons "lastRefreshTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'finding))
      (common-lisp:list
       (common-lisp:cons "finding"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'finding-reason-codes))
      (common-lisp:list
       (common-lisp:cons "findingReasonCodes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'memory-size-recommendation-options))
      (common-lisp:list
       (common-lisp:cons "memorySizeRecommendationOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'current-performance-risk))
      (common-lisp:list
       (common-lisp:cons "currentPerformanceRisk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-recommendation))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (lambda-function-recommendation-filter (:copier common-lisp:nil)
      (:conc-name "struct-shape-lambda-function-recommendation-filter-"))
   (name common-lisp:nil :type
    (common-lisp:or lambda-function-recommendation-filter-name
                    common-lisp:null))
   (values common-lisp:nil :type
    (common-lisp:or filter-values common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lambda-function-recommendation-filter
                    'make-lambda-function-recommendation-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-recommendation-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-recommendation-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-recommendation-filter))
   common-lisp:nil))
(common-lisp:deftype lambda-function-recommendation-filter-name ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype lambda-function-recommendation-filters ()
   '(trivial-types:proper-list lambda-function-recommendation-filter))
 (common-lisp:defun |make-lambda-function-recommendation-filters|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            lambda-function-recommendation-filter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype lambda-function-recommendation-finding ()
  'common-lisp:string)
(common-lisp:deftype lambda-function-recommendation-finding-reason-code ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype lambda-function-recommendation-finding-reason-codes ()
   '(trivial-types:proper-list
     lambda-function-recommendation-finding-reason-code))
 (common-lisp:defun |make-lambda-function-recommendation-finding-reason-codes|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            lambda-function-recommendation-finding-reason-code))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype lambda-function-recommendations ()
   '(trivial-types:proper-list lambda-function-recommendation))
 (common-lisp:defun |make-lambda-function-recommendations|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            lambda-function-recommendation))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (lambda-function-utilization-metric (:copier common-lisp:nil)
      (:conc-name "struct-shape-lambda-function-utilization-metric-"))
   (name common-lisp:nil :type
    (common-lisp:or lambda-function-metric-name common-lisp:null))
   (statistic common-lisp:nil :type
    (common-lisp:or lambda-function-metric-statistic common-lisp:null))
   (value common-lisp:nil :type
    (common-lisp:or metric-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lambda-function-utilization-metric
                    'make-lambda-function-utilization-metric))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-utilization-metric))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-utilization-metric))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'statistic))
      (common-lisp:list
       (common-lisp:cons "statistic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-utilization-metric))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype lambda-function-utilization-metrics ()
   '(trivial-types:proper-list lambda-function-utilization-metric))
 (common-lisp:defun |make-lambda-function-utilization-metrics|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            lambda-function-utilization-metric))
   aws-sdk/generator/shape::members))
(common-lisp:deftype last-refresh-timestamp () 'common-lisp:string)
(common-lisp:deftype last-updated-timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition limit-exceeded-exception
     (compute-optimizer-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       limit-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception
                    'limit-exceeded-exception-message)))
(common-lisp:deftype look-back-period-in-days () 'common-lisp:double-float)
(common-lisp:deftype low () 'common-lisp:integer)
(common-lisp:deftype lower-bound-value () 'common-lisp:double-float)
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype max-size () 'common-lisp:integer)
(common-lisp:deftype medium () 'common-lisp:integer)
(common-lisp:deftype member-accounts-enrolled () 'common-lisp:boolean)
(common-lisp:deftype memory-size () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (memory-size-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-memory-size-configuration-"))
   (memory common-lisp:nil :type
    (common-lisp:or nullable-memory common-lisp:null))
   (memory-reservation common-lisp:nil :type
    (common-lisp:or nullable-memory-reservation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'memory-size-configuration
                    'make-memory-size-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          memory-size-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          memory-size-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'memory))
      (common-lisp:list
       (common-lisp:cons "memory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'memory-reservation))
      (common-lisp:list
       (common-lisp:cons "memoryReservation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          memory-size-configuration))
   common-lisp:nil))
(common-lisp:deftype message () 'common-lisp:string)
(common-lisp:deftype metadata-key () 'common-lisp:string)
(common-lisp:deftype metric-name () 'common-lisp:string)
(common-lisp:deftype metric-statistic () 'common-lisp:string)
(common-lisp:deftype metric-value () 'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:deftype metric-values ()
   '(trivial-types:proper-list metric-value))
 (common-lisp:defun |make-metric-values|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list metric-value))
   aws-sdk/generator/shape::members))
(common-lisp:deftype migration-effort () 'common-lisp:string)
(common-lisp:deftype min-size () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition missing-authentication-token
     (compute-optimizer-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       missing-authentication-token-message)))
 (common-lisp:export
  (common-lisp:list 'missing-authentication-token
                    'missing-authentication-token-message)))
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:deftype nullable-cpu () 'common-lisp:integer)
(common-lisp:deftype nullable-memory () 'common-lisp:integer)
(common-lisp:deftype nullable-memory-reservation () 'common-lisp:integer)
(common-lisp:deftype number-of-invocations () 'common-lisp:integer)
(common-lisp:deftype number-of-member-accounts-opted-in () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition opt-in-required-exception
     (compute-optimizer-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       opt-in-required-exception-message)))
 (common-lisp:export
  (common-lisp:list 'opt-in-required-exception
                    'opt-in-required-exception-message)))
(common-lisp:deftype performance-risk () 'common-lisp:double-float)
(common-lisp:deftype period () 'common-lisp:integer)
(common-lisp:deftype platform-difference () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype platform-differences ()
   '(trivial-types:proper-list platform-difference))
 (common-lisp:defun |make-platform-differences|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list platform-difference))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (projected-metric (:copier common-lisp:nil)
      (:conc-name "struct-shape-projected-metric-"))
   (name common-lisp:nil :type (common-lisp:or metric-name common-lisp:null))
   (timestamps common-lisp:nil :type
    (common-lisp:or timestamps common-lisp:null))
   (values common-lisp:nil :type
    (common-lisp:or metric-values common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'projected-metric 'make-projected-metric))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input projected-metric))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input projected-metric))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timestamps))
      (common-lisp:list
       (common-lisp:cons "timestamps"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input projected-metric))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype projected-metrics ()
   '(trivial-types:proper-list projected-metric))
 (common-lisp:defun |make-projected-metrics|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list projected-metric))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype projected-utilization-metrics ()
   '(trivial-types:proper-list utilization-metric))
 (common-lisp:defun |make-projected-utilization-metrics|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list utilization-metric))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (put-recommendation-preferences-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-recommendation-preferences-request-"))
   (resource-type (common-lisp:error ":resourcetype is required") :type
    (common-lisp:or resource-type common-lisp:null))
   (scope common-lisp:nil :type (common-lisp:or scope common-lisp:null))
   (enhanced-infrastructure-metrics common-lisp:nil :type
    (common-lisp:or enhanced-infrastructure-metrics common-lisp:null))
   (inferred-workload-types common-lisp:nil :type
    (common-lisp:or inferred-workload-types-preference common-lisp:null))
   (external-metrics-preference common-lisp:nil :type
    (common-lisp:or external-metrics-preference common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-recommendation-preferences-request
                    'make-put-recommendation-preferences-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-recommendation-preferences-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-recommendation-preferences-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "resourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scope))
      (common-lisp:list
       (common-lisp:cons "scope"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enhanced-infrastructure-metrics))
      (common-lisp:list
       (common-lisp:cons "enhancedInfrastructureMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'inferred-workload-types))
      (common-lisp:list
       (common-lisp:cons "inferredWorkloadTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'external-metrics-preference))
      (common-lisp:list
       (common-lisp:cons "externalMetricsPreference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-recommendation-preferences-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-recommendation-preferences-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-recommendation-preferences-response-")))
 (common-lisp:export
  (common-lisp:list 'put-recommendation-preferences-response
                    'make-put-recommendation-preferences-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-recommendation-preferences-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-recommendation-preferences-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-recommendation-preferences-response))
   common-lisp:nil))
(common-lisp:deftype rank () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype reason-code-summaries ()
   '(trivial-types:proper-list reason-code-summary))
 (common-lisp:defun |make-reason-code-summaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list reason-code-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (reason-code-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-reason-code-summary-"))
   (name common-lisp:nil :type
    (common-lisp:or finding-reason-code common-lisp:null))
   (value common-lisp:nil :type
    (common-lisp:or summary-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'reason-code-summary 'make-reason-code-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input reason-code-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input reason-code-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input reason-code-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (recommendation-export-job (:copier common-lisp:nil)
      (:conc-name "struct-shape-recommendation-export-job-"))
   (job-id common-lisp:nil :type (common-lisp:or job-id common-lisp:null))
   (destination common-lisp:nil :type
    (common-lisp:or export-destination common-lisp:null))
   (resource-type common-lisp:nil :type
    (common-lisp:or resource-type common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or job-status common-lisp:null))
   (creation-timestamp common-lisp:nil :type
    (common-lisp:or creation-timestamp common-lisp:null))
   (last-updated-timestamp common-lisp:nil :type
    (common-lisp:or last-updated-timestamp common-lisp:null))
   (failure-reason common-lisp:nil :type
    (common-lisp:or failure-reason common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'recommendation-export-job
                    'make-recommendation-export-job))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-export-job))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-export-job))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "jobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination))
      (common-lisp:list
       (common-lisp:cons "destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "resourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "creationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failure-reason))
      (common-lisp:list
       (common-lisp:cons "failureReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-export-job))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype recommendation-export-jobs ()
   '(trivial-types:proper-list recommendation-export-job))
 (common-lisp:defun |make-recommendation-export-jobs|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            recommendation-export-job))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype recommendation-options ()
   '(trivial-types:proper-list instance-recommendation-option))
 (common-lisp:defun |make-recommendation-options|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            instance-recommendation-option))
   aws-sdk/generator/shape::members))
(common-lisp:deftype recommendation-preference-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype recommendation-preference-names ()
   '(trivial-types:proper-list recommendation-preference-name))
 (common-lisp:defun |make-recommendation-preference-names|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            recommendation-preference-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (recommendation-preferences (:copier common-lisp:nil)
      (:conc-name "struct-shape-recommendation-preferences-"))
   (cpu-vendor-architectures common-lisp:nil :type
    (common-lisp:or cpu-vendor-architectures common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'recommendation-preferences
                    'make-recommendation-preferences))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-preferences))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-preferences))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cpu-vendor-architectures))
      (common-lisp:list
       (common-lisp:cons "cpuVendorArchitectures"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-preferences))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (recommendation-preferences-detail (:copier common-lisp:nil)
      (:conc-name "struct-shape-recommendation-preferences-detail-"))
   (scope common-lisp:nil :type (common-lisp:or scope common-lisp:null))
   (resource-type common-lisp:nil :type
    (common-lisp:or resource-type common-lisp:null))
   (enhanced-infrastructure-metrics common-lisp:nil :type
    (common-lisp:or enhanced-infrastructure-metrics common-lisp:null))
   (inferred-workload-types common-lisp:nil :type
    (common-lisp:or inferred-workload-types-preference common-lisp:null))
   (external-metrics-preference common-lisp:nil :type
    (common-lisp:or external-metrics-preference common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'recommendation-preferences-detail
                    'make-recommendation-preferences-detail))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-preferences-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-preferences-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scope))
      (common-lisp:list
       (common-lisp:cons "scope"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "resourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enhanced-infrastructure-metrics))
      (common-lisp:list
       (common-lisp:cons "enhancedInfrastructureMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'inferred-workload-types))
      (common-lisp:list
       (common-lisp:cons "inferredWorkloadTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'external-metrics-preference))
      (common-lisp:list
       (common-lisp:cons "externalMetricsPreference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-preferences-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype recommendation-preferences-details ()
   '(trivial-types:proper-list recommendation-preferences-detail))
 (common-lisp:defun |make-recommendation-preferences-details|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            recommendation-preferences-detail))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (recommendation-source (:copier common-lisp:nil)
      (:conc-name "struct-shape-recommendation-source-"))
   (recommendation-source-arn common-lisp:nil :type
    (common-lisp:or recommendation-source-arn common-lisp:null))
   (recommendation-source-type common-lisp:nil :type
    (common-lisp:or recommendation-source-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'recommendation-source 'make-recommendation-source))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-source))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-source))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-source-arn))
      (common-lisp:list
       (common-lisp:cons "recommendationSourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-source-type))
      (common-lisp:list
       (common-lisp:cons "recommendationSourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-source))
   common-lisp:nil))
(common-lisp:deftype recommendation-source-arn () 'common-lisp:string)
(common-lisp:deftype recommendation-source-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype recommendation-sources ()
   '(trivial-types:proper-list recommendation-source))
 (common-lisp:defun |make-recommendation-sources|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list recommendation-source))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype recommendation-summaries ()
   '(trivial-types:proper-list recommendation-summary))
 (common-lisp:defun |make-recommendation-summaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list recommendation-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (recommendation-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-recommendation-summary-"))
   (summaries common-lisp:nil :type
    (common-lisp:or summaries common-lisp:null))
   (recommendation-resource-type common-lisp:nil :type
    (common-lisp:or recommendation-source-type common-lisp:null))
   (account-id common-lisp:nil :type
    (common-lisp:or account-id common-lisp:null))
   (savings-opportunity common-lisp:nil :type
    (common-lisp:or savings-opportunity common-lisp:null))
   (current-performance-risk-ratings common-lisp:nil :type
    (common-lisp:or current-performance-risk-ratings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'recommendation-summary 'make-recommendation-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'summaries))
      (common-lisp:list
       (common-lisp:cons "summaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-resource-type))
      (common-lisp:list
       (common-lisp:cons "recommendationResourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'savings-opportunity))
      (common-lisp:list
       (common-lisp:cons "savingsOpportunity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'current-performance-risk-ratings))
      (common-lisp:list
       (common-lisp:cons "currentPerformanceRiskRatings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-summary))
   common-lisp:nil))
(common-lisp:deftype recommended-instance-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (recommended-option-projected-metric (:copier common-lisp:nil)
      (:conc-name "struct-shape-recommended-option-projected-metric-"))
   (recommended-instance-type common-lisp:nil :type
    (common-lisp:or recommended-instance-type common-lisp:null))
   (rank common-lisp:nil :type (common-lisp:or rank common-lisp:null))
   (projected-metrics common-lisp:nil :type
    (common-lisp:or projected-metrics common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'recommended-option-projected-metric
                    'make-recommended-option-projected-metric))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          recommended-option-projected-metric))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          recommended-option-projected-metric))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommended-instance-type))
      (common-lisp:list
       (common-lisp:cons "recommendedInstanceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rank))
      (common-lisp:list
       (common-lisp:cons "rank"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'projected-metrics))
      (common-lisp:list
       (common-lisp:cons "projectedMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          recommended-option-projected-metric))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype recommended-option-projected-metrics ()
   '(trivial-types:proper-list recommended-option-projected-metric))
 (common-lisp:defun |make-recommended-option-projected-metrics|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            recommended-option-projected-metric))
   aws-sdk/generator/shape::members))
(common-lisp:deftype resource-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (compute-optimizer-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:deftype resource-type () 'common-lisp:string)
(common-lisp:deftype root-volume () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct
     (s3destination (:copier common-lisp:nil)
      (:conc-name "struct-shape-s3destination-"))
   (bucket common-lisp:nil :type
    (common-lisp:or destination-bucket common-lisp:null))
   (key common-lisp:nil :type
    (common-lisp:or destination-key common-lisp:null))
   (metadata-key common-lisp:nil :type
    (common-lisp:or metadata-key common-lisp:null)))
 (common-lisp:export (common-lisp:list 's3destination 'make-s3destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input s3destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input s3destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket))
      (common-lisp:list
       (common-lisp:cons "bucket"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata-key))
      (common-lisp:list
       (common-lisp:cons "metadataKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input s3destination))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (s3destination-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-s3destination-config-"))
   (bucket common-lisp:nil :type
    (common-lisp:or destination-bucket common-lisp:null))
   (key-prefix common-lisp:nil :type
    (common-lisp:or destination-key-prefix common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 's3destination-config 'make-s3destination-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input s3destination-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input s3destination-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket))
      (common-lisp:list
       (common-lisp:cons "bucket"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-prefix))
      (common-lisp:list
       (common-lisp:cons "keyPrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input s3destination-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (savings-opportunity (:copier common-lisp:nil)
      (:conc-name "struct-shape-savings-opportunity-"))
   (savings-opportunity-percentage common-lisp:nil :type
    (common-lisp:or savings-opportunity-percentage common-lisp:null))
   (estimated-monthly-savings common-lisp:nil :type
    (common-lisp:or estimated-monthly-savings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'savings-opportunity 'make-savings-opportunity))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input savings-opportunity))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input savings-opportunity))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'savings-opportunity-percentage))
      (common-lisp:list
       (common-lisp:cons "savingsOpportunityPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'estimated-monthly-savings))
      (common-lisp:list
       (common-lisp:cons "estimatedMonthlySavings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input savings-opportunity))
   common-lisp:nil))
(common-lisp:deftype savings-opportunity-percentage ()
  'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:defstruct
     (scope (:copier common-lisp:nil) (:conc-name "struct-shape-scope-"))
   (name common-lisp:nil :type (common-lisp:or scope-name common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or scope-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'scope 'make-scope))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input scope))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input scope))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input scope))
   common-lisp:nil))
(common-lisp:deftype scope-name () 'common-lisp:string)
(common-lisp:deftype scope-value () 'common-lisp:string)
(common-lisp:deftype service-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype service-arns () '(trivial-types:proper-list service-arn))
 (common-lisp:defun |make-service-arns|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list service-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (service-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-service-configuration-"))
   (memory common-lisp:nil :type
    (common-lisp:or nullable-memory common-lisp:null))
   (cpu common-lisp:nil :type (common-lisp:or nullable-cpu common-lisp:null))
   (container-configurations common-lisp:nil :type
    (common-lisp:or container-configurations common-lisp:null))
   (auto-scaling-configuration common-lisp:nil :type
    (common-lisp:or auto-scaling-configuration common-lisp:null))
   (task-definition-arn common-lisp:nil :type
    (common-lisp:or task-definition-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'service-configuration 'make-service-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          service-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          service-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'memory))
      (common-lisp:list
       (common-lisp:cons "memory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cpu))
      (common-lisp:list
       (common-lisp:cons "cpu"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'container-configurations))
      (common-lisp:list
       (common-lisp:cons "containerConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'auto-scaling-configuration))
      (common-lisp:list
       (common-lisp:cons "autoScalingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-definition-arn))
      (common-lisp:list
       (common-lisp:cons "taskDefinitionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          service-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition service-unavailable-exception
     (compute-optimizer-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-unavailable-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-unavailable-exception
                    'service-unavailable-exception-message)))
(common-lisp:deftype status () 'common-lisp:string)
(common-lisp:deftype status-reason () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype summaries () '(trivial-types:proper-list summary))
 (common-lisp:defun |make-summaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (summary (:copier common-lisp:nil) (:conc-name "struct-shape-summary-"))
   (name common-lisp:nil :type (common-lisp:or finding common-lisp:null))
   (value common-lisp:nil :type
    (common-lisp:or summary-value common-lisp:null))
   (reason-code-summaries common-lisp:nil :type
    (common-lisp:or reason-code-summaries common-lisp:null)))
 (common-lisp:export (common-lisp:list 'summary 'make-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'reason-code-summaries))
      (common-lisp:list
       (common-lisp:cons "reasonCodeSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input summary))
   common-lisp:nil))
(common-lisp:deftype summary-value () 'common-lisp:double-float)
(common-lisp:deftype task-definition-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (compute-optimizer-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       throttling-exception-message)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message)))
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype timestamps () '(trivial-types:proper-list timestamp))
 (common-lisp:defun |make-timestamps|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list timestamp))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (update-enrollment-status-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-enrollment-status-request-"))
   (status (common-lisp:error ":status is required") :type
    (common-lisp:or status common-lisp:null))
   (include-member-accounts common-lisp:nil :type
    (common-lisp:or include-member-accounts common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-enrollment-status-request
                    'make-update-enrollment-status-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-enrollment-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-enrollment-status-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'include-member-accounts))
      (common-lisp:list
       (common-lisp:cons "includeMemberAccounts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-enrollment-status-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-enrollment-status-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-enrollment-status-response-"))
   (status common-lisp:nil :type (common-lisp:or status common-lisp:null))
   (status-reason common-lisp:nil :type
    (common-lisp:or status-reason common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-enrollment-status-response
                    'make-update-enrollment-status-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-enrollment-status-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-enrollment-status-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-reason))
      (common-lisp:list
       (common-lisp:cons "statusReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-enrollment-status-response))
   common-lisp:nil))
(common-lisp:deftype upper-bound-value () 'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:defstruct
     (utilization-metric (:copier common-lisp:nil)
      (:conc-name "struct-shape-utilization-metric-"))
   (name common-lisp:nil :type (common-lisp:or metric-name common-lisp:null))
   (statistic common-lisp:nil :type
    (common-lisp:or metric-statistic common-lisp:null))
   (value common-lisp:nil :type
    (common-lisp:or metric-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'utilization-metric 'make-utilization-metric))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input utilization-metric))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input utilization-metric))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'statistic))
      (common-lisp:list
       (common-lisp:cons "statistic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input utilization-metric))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype utilization-metrics ()
   '(trivial-types:proper-list utilization-metric))
 (common-lisp:defun |make-utilization-metrics|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list utilization-metric))
   aws-sdk/generator/shape::members))
(common-lisp:deftype value () 'common-lisp:double-float)
(common-lisp:deftype very-low () 'common-lisp:integer)
(common-lisp:deftype volume-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype volume-arns () '(trivial-types:proper-list volume-arn))
 (common-lisp:defun |make-volume-arns|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list volume-arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype volume-baseline-iops () 'common-lisp:integer)
(common-lisp:deftype volume-baseline-throughput () 'common-lisp:integer)
(common-lisp:deftype volume-burst-iops () 'common-lisp:integer)
(common-lisp:deftype volume-burst-throughput () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (volume-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-volume-configuration-"))
   (volume-type common-lisp:nil :type
    (common-lisp:or volume-type common-lisp:null))
   (volume-size common-lisp:nil :type
    (common-lisp:or volume-size common-lisp:null))
   (volume-baseline-iops common-lisp:nil :type
    (common-lisp:or volume-baseline-iops common-lisp:null))
   (volume-burst-iops common-lisp:nil :type
    (common-lisp:or volume-burst-iops common-lisp:null))
   (volume-baseline-throughput common-lisp:nil :type
    (common-lisp:or volume-baseline-throughput common-lisp:null))
   (volume-burst-throughput common-lisp:nil :type
    (common-lisp:or volume-burst-throughput common-lisp:null))
   (root-volume common-lisp:nil :type
    (common-lisp:or root-volume common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'volume-configuration 'make-volume-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input volume-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input volume-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-type))
      (common-lisp:list
       (common-lisp:cons "volumeType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-size))
      (common-lisp:list
       (common-lisp:cons "volumeSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'volume-baseline-iops))
      (common-lisp:list
       (common-lisp:cons "volumeBaselineIOPS"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-burst-iops))
      (common-lisp:list
       (common-lisp:cons "volumeBurstIOPS"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'volume-baseline-throughput))
      (common-lisp:list
       (common-lisp:cons "volumeBaselineThroughput"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'volume-burst-throughput))
      (common-lisp:list
       (common-lisp:cons "volumeBurstThroughput"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'root-volume))
      (common-lisp:list
       (common-lisp:cons "rootVolume"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input volume-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (volume-recommendation (:copier common-lisp:nil)
      (:conc-name "struct-shape-volume-recommendation-"))
   (volume-arn common-lisp:nil :type
    (common-lisp:or volume-arn common-lisp:null))
   (account-id common-lisp:nil :type
    (common-lisp:or account-id common-lisp:null))
   (current-configuration common-lisp:nil :type
    (common-lisp:or volume-configuration common-lisp:null))
   (finding common-lisp:nil :type (common-lisp:or ebsfinding common-lisp:null))
   (utilization-metrics common-lisp:nil :type
    (common-lisp:or ebsutilization-metrics common-lisp:null))
   (look-back-period-in-days common-lisp:nil :type
    (common-lisp:or look-back-period-in-days common-lisp:null))
   (volume-recommendation-options common-lisp:nil :type
    (common-lisp:or volume-recommendation-options common-lisp:null))
   (last-refresh-timestamp common-lisp:nil :type
    (common-lisp:or last-refresh-timestamp common-lisp:null))
   (current-performance-risk common-lisp:nil :type
    (common-lisp:or current-performance-risk common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'volume-recommendation 'make-volume-recommendation))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          volume-recommendation))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          volume-recommendation))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arn))
      (common-lisp:list
       (common-lisp:cons "volumeArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'current-configuration))
      (common-lisp:list
       (common-lisp:cons "currentConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'finding))
      (common-lisp:list
       (common-lisp:cons "finding"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'utilization-metrics))
      (common-lisp:list
       (common-lisp:cons "utilizationMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'look-back-period-in-days))
      (common-lisp:list
       (common-lisp:cons "lookBackPeriodInDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'volume-recommendation-options))
      (common-lisp:list
       (common-lisp:cons "volumeRecommendationOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-refresh-timestamp))
      (common-lisp:list
       (common-lisp:cons "lastRefreshTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'current-performance-risk))
      (common-lisp:list
       (common-lisp:cons "currentPerformanceRisk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          volume-recommendation))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (volume-recommendation-option (:copier common-lisp:nil)
      (:conc-name "struct-shape-volume-recommendation-option-"))
   (configuration common-lisp:nil :type
    (common-lisp:or volume-configuration common-lisp:null))
   (performance-risk common-lisp:nil :type
    (common-lisp:or performance-risk common-lisp:null))
   (rank common-lisp:nil :type (common-lisp:or rank common-lisp:null))
   (savings-opportunity common-lisp:nil :type
    (common-lisp:or savings-opportunity common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'volume-recommendation-option
                    'make-volume-recommendation-option))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          volume-recommendation-option))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          volume-recommendation-option))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration))
      (common-lisp:list
       (common-lisp:cons "configuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'performance-risk))
      (common-lisp:list
       (common-lisp:cons "performanceRisk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rank))
      (common-lisp:list
       (common-lisp:cons "rank"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'savings-opportunity))
      (common-lisp:list
       (common-lisp:cons "savingsOpportunity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          volume-recommendation-option))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype volume-recommendation-options ()
   '(trivial-types:proper-list volume-recommendation-option))
 (common-lisp:defun |make-volume-recommendation-options|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            volume-recommendation-option))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype volume-recommendations ()
   '(trivial-types:proper-list volume-recommendation))
 (common-lisp:defun |make-volume-recommendations|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list volume-recommendation))
   aws-sdk/generator/shape::members))
(common-lisp:deftype volume-size () 'common-lisp:integer)
(common-lisp:deftype volume-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun delete-recommendation-preferences
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-type scope
                     recommendation-preference-names)
   (common-lisp:declare
    (common-lisp:ignorable resource-type scope
     recommendation-preference-names))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-recommendation-preferences-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        "/" "DeleteRecommendationPreferences" "2019-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-recommendation-preferences))
(common-lisp:progn
 (common-lisp:defun describe-recommendation-export-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-ids filters next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable job-ids filters next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-recommendation-export-jobs-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        "/" "DescribeRecommendationExportJobs" "2019-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-recommendation-export-jobs))
(common-lisp:progn
 (common-lisp:defun export-auto-scaling-group-recommendations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-ids filters fields-to-export
                     s3destination-config file-format include-member-accounts
                     recommendation-preferences)
   (common-lisp:declare
    (common-lisp:ignorable account-ids filters fields-to-export
     s3destination-config file-format include-member-accounts
     recommendation-preferences))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-export-auto-scaling-group-recommendations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        "/" "ExportAutoScalingGroupRecommendations" "2019-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'export-auto-scaling-group-recommendations))
(common-lisp:progn
 (common-lisp:defun export-ebsvolume-recommendations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-ids filters fields-to-export
                     s3destination-config file-format include-member-accounts)
   (common-lisp:declare
    (common-lisp:ignorable account-ids filters fields-to-export
     s3destination-config file-format include-member-accounts))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-export-ebsvolume-recommendations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        "/" "ExportEBSVolumeRecommendations" "2019-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'export-ebsvolume-recommendations))
(common-lisp:progn
 (common-lisp:defun export-ec2instance-recommendations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-ids filters fields-to-export
                     s3destination-config file-format include-member-accounts
                     recommendation-preferences)
   (common-lisp:declare
    (common-lisp:ignorable account-ids filters fields-to-export
     s3destination-config file-format include-member-accounts
     recommendation-preferences))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-export-ec2instance-recommendations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        "/" "ExportEC2InstanceRecommendations" "2019-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'export-ec2instance-recommendations))
(common-lisp:progn
 (common-lisp:defun export-ecsservice-recommendations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-ids filters fields-to-export
                     s3destination-config file-format include-member-accounts)
   (common-lisp:declare
    (common-lisp:ignorable account-ids filters fields-to-export
     s3destination-config file-format include-member-accounts))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-export-ecsservice-recommendations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        "/" "ExportECSServiceRecommendations" "2019-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'export-ecsservice-recommendations))
(common-lisp:progn
 (common-lisp:defun export-lambda-function-recommendations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-ids filters fields-to-export
                     s3destination-config file-format include-member-accounts)
   (common-lisp:declare
    (common-lisp:ignorable account-ids filters fields-to-export
     s3destination-config file-format include-member-accounts))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-export-lambda-function-recommendations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        "/" "ExportLambdaFunctionRecommendations" "2019-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'export-lambda-function-recommendations))
(common-lisp:progn
 (common-lisp:defun get-auto-scaling-group-recommendations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-ids auto-scaling-group-arns
                     next-token max-results filters recommendation-preferences)
   (common-lisp:declare
    (common-lisp:ignorable account-ids auto-scaling-group-arns next-token
     max-results filters recommendation-preferences))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-auto-scaling-group-recommendations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        "/" "GetAutoScalingGroupRecommendations" "2019-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-auto-scaling-group-recommendations))
(common-lisp:progn
 (common-lisp:defun get-ebsvolume-recommendations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key volume-arns next-token max-results
                     filters account-ids)
   (common-lisp:declare
    (common-lisp:ignorable volume-arns next-token max-results filters
     account-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-ebsvolume-recommendations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        "/" "GetEBSVolumeRecommendations" "2019-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-ebsvolume-recommendations))
(common-lisp:progn
 (common-lisp:defun get-ec2instance-recommendations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arns next-token max-results
                     filters account-ids recommendation-preferences)
   (common-lisp:declare
    (common-lisp:ignorable instance-arns next-token max-results filters
     account-ids recommendation-preferences))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-ec2instance-recommendations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        "/" "GetEC2InstanceRecommendations" "2019-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-ec2instance-recommendations))
(common-lisp:progn
 (common-lisp:defun get-ec2recommendation-projected-metrics
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn stat period start-time
                     end-time recommendation-preferences)
   (common-lisp:declare
    (common-lisp:ignorable instance-arn stat period start-time end-time
     recommendation-preferences))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-ec2recommendation-projected-metrics-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        "/" "GetEC2RecommendationProjectedMetrics" "2019-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-ec2recommendation-projected-metrics))
(common-lisp:progn
 (common-lisp:defun get-ecsservice-recommendation-projected-metrics
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key service-arn stat period start-time
                     end-time)
   (common-lisp:declare
    (common-lisp:ignorable service-arn stat period start-time end-time))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-ecsservice-recommendation-projected-metrics-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        "/" "GetECSServiceRecommendationProjectedMetrics" "2019-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-ecsservice-recommendation-projected-metrics))
(common-lisp:progn
 (common-lisp:defun get-ecsservice-recommendations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key service-arns next-token max-results
                     filters account-ids)
   (common-lisp:declare
    (common-lisp:ignorable service-arns next-token max-results filters
     account-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-ecsservice-recommendations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        "/" "GetECSServiceRecommendations" "2019-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-ecsservice-recommendations))
(common-lisp:progn
 (common-lisp:defun get-effective-recommendation-preferences
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-effective-recommendation-preferences-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        "/" "GetEffectiveRecommendationPreferences" "2019-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-effective-recommendation-preferences))
(common-lisp:progn
 (common-lisp:defun get-enrollment-status ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'compute-optimizer-request :method "POST" :path
                                "/" :params
                                `(("Action" ,@"GetEnrollmentStatus")
                                  ("Version" ,@"2019-11-01"))))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-enrollment-status))
(common-lisp:progn
 (common-lisp:defun get-enrollment-statuses-for-organization
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filters next-token max-results)
   (common-lisp:declare (common-lisp:ignorable filters next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-enrollment-statuses-for-organization-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        "/" "GetEnrollmentStatusesForOrganization" "2019-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-enrollment-statuses-for-organization))
(common-lisp:progn
 (common-lisp:defun get-lambda-function-recommendations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key function-arns account-ids filters
                     next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable function-arns account-ids filters next-token
     max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-lambda-function-recommendations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        "/" "GetLambdaFunctionRecommendations" "2019-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-lambda-function-recommendations))
(common-lisp:progn
 (common-lisp:defun get-recommendation-preferences
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-type scope next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable resource-type scope next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-recommendation-preferences-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        "/" "GetRecommendationPreferences" "2019-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-recommendation-preferences))
(common-lisp:progn
 (common-lisp:defun get-recommendation-summaries
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-ids next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable account-ids next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-recommendation-summaries-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        "/" "GetRecommendationSummaries" "2019-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-recommendation-summaries))
(common-lisp:progn
 (common-lisp:defun put-recommendation-preferences
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-type scope
                     enhanced-infrastructure-metrics inferred-workload-types
                     external-metrics-preference)
   (common-lisp:declare
    (common-lisp:ignorable resource-type scope enhanced-infrastructure-metrics
     inferred-workload-types external-metrics-preference))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-recommendation-preferences-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        "/" "PutRecommendationPreferences" "2019-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-recommendation-preferences))
(common-lisp:progn
 (common-lisp:defun update-enrollment-status
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key status include-member-accounts)
   (common-lisp:declare (common-lisp:ignorable status include-member-accounts))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-enrollment-status-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        "/" "UpdateEnrollmentStatus" "2019-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-enrollment-status))
