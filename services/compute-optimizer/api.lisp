;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/compute-optimizer/api
  (:use)
  (:nicknames #:aws/compute-optimizer)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/compute-optimizer/api)
(common-lisp:progn
 (common-lisp:defclass compute-optimizer-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "compute-optimizer"
                        :protocol :json))
 (common-lisp:export 'compute-optimizer-request))
(common-lisp:progn
 (common-lisp:define-condition compute-optimizer-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'compute-optimizer-error))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("InternalServerException" . internal-server-exception)
    ("InvalidParameterValueException" . invalid-parameter-value-exception)
    ("LimitExceededException" . limit-exceeded-exception)
    ("MissingAuthenticationToken" . missing-authentication-token)
    ("OptInRequiredException" . opt-in-required-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceUnavailableException" . service-unavailable-exception)
    ("ThrottlingException" . throttling-exception)))
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (compute-optimizer-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       access-denied-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-message)))
(common-lisp:progn
 (common-lisp:defclass account-enrollment-status common-lisp:nil
                       ((last-updated-timestamp :initarg
                         :|lastUpdatedTimestamp| :type
                         (common-lisp:or last-updated-timestamp
                                         common-lisp:null)
                         :accessor
                         %account-enrollment-status-last-updated-timestamp
                         :initform common-lisp:nil)
                        (status-reason :initarg :|statusReason| :type
                         (common-lisp:or status-reason common-lisp:null)
                         :accessor %account-enrollment-status-status-reason
                         :initform common-lisp:nil)
                        (status :initarg :|status| :type
                         (common-lisp:or status common-lisp:null) :accessor
                         %account-enrollment-status-status :initform
                         common-lisp:nil)
                        (account-id :initarg :|accountId| :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         %account-enrollment-status-account-id :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'account-enrollment-status
                    'make-account-enrollment-status))
 (common-lisp:defun make-account-enrollment-status
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key last-updated-timestamp status-reason
                     status account-id)
   (common-lisp:apply #'common-lisp:make-instance 'account-enrollment-status
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          account-enrollment-status))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          account-enrollment-status))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-reason))
      (common-lisp:list
       (common-lisp:cons "statusReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          account-enrollment-status))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype account-enrollment-statuses ()
   '(trivial-types:proper-list account-enrollment-status))
 (common-lisp:defun |make-account-enrollment-statuses|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            account-enrollment-status))
   aws-sdk/generator/shape::members))
(common-lisp:deftype account-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype account-ids () '(trivial-types:proper-list account-id))
 (common-lisp:defun |make-account-ids|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list account-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype auto-scaling-configuration () 'common-lisp:string)
(common-lisp:deftype auto-scaling-group-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype auto-scaling-group-arns ()
   '(trivial-types:proper-list auto-scaling-group-arn))
 (common-lisp:defun |make-auto-scaling-group-arns|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list auto-scaling-group-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass auto-scaling-group-configuration common-lisp:nil
                       ((instance-type :initarg :|instanceType| :type
                         (common-lisp:or instance-type common-lisp:null)
                         :accessor
                         %auto-scaling-group-configuration-instance-type
                         :initform common-lisp:nil)
                        (max-size :initarg :|maxSize| :type
                         (common-lisp:or max-size common-lisp:null) :accessor
                         %auto-scaling-group-configuration-max-size :initform
                         common-lisp:nil)
                        (min-size :initarg :|minSize| :type
                         (common-lisp:or min-size common-lisp:null) :accessor
                         %auto-scaling-group-configuration-min-size :initform
                         common-lisp:nil)
                        (desired-capacity :initarg :|desiredCapacity| :type
                         (common-lisp:or desired-capacity common-lisp:null)
                         :accessor
                         %auto-scaling-group-configuration-desired-capacity
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'auto-scaling-group-configuration
                    'make-auto-scaling-group-configuration))
 (common-lisp:defun make-auto-scaling-group-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key instance-type max-size min-size
                     desired-capacity)
   (common-lisp:apply #'common-lisp:make-instance
                      'auto-scaling-group-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          auto-scaling-group-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          auto-scaling-group-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'desired-capacity))
      (common-lisp:list
       (common-lisp:cons "desiredCapacity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'min-size))
      (common-lisp:list
       (common-lisp:cons "minSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-size))
      (common-lisp:list
       (common-lisp:cons "maxSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-type))
      (common-lisp:list
       (common-lisp:cons "instanceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          auto-scaling-group-configuration))
   common-lisp:nil))
(common-lisp:deftype auto-scaling-group-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass auto-scaling-group-recommendation common-lisp:nil
                       ((inferred-workload-types :initarg
                         :|inferredWorkloadTypes| :type
                         (common-lisp:or inferred-workload-types
                                         common-lisp:null)
                         :accessor
                         %auto-scaling-group-recommendation-inferred-workload-types
                         :initform common-lisp:nil)
                        (effective-recommendation-preferences :initarg
                         :|effectiveRecommendationPreferences| :type
                         (common-lisp:or effective-recommendation-preferences
                                         common-lisp:null)
                         :accessor
                         %auto-scaling-group-recommendation-effective-recommendation-preferences
                         :initform common-lisp:nil)
                        (current-performance-risk :initarg
                         :|currentPerformanceRisk| :type
                         (common-lisp:or current-performance-risk
                                         common-lisp:null)
                         :accessor
                         %auto-scaling-group-recommendation-current-performance-risk
                         :initform common-lisp:nil)
                        (last-refresh-timestamp :initarg
                         :|lastRefreshTimestamp| :type
                         (common-lisp:or last-refresh-timestamp
                                         common-lisp:null)
                         :accessor
                         %auto-scaling-group-recommendation-last-refresh-timestamp
                         :initform common-lisp:nil)
                        (recommendation-options :initarg
                         :|recommendationOptions| :type
                         (common-lisp:or
                          auto-scaling-group-recommendation-options
                          common-lisp:null)
                         :accessor
                         %auto-scaling-group-recommendation-recommendation-options
                         :initform common-lisp:nil)
                        (current-configuration :initarg :|currentConfiguration|
                         :type
                         (common-lisp:or auto-scaling-group-configuration
                                         common-lisp:null)
                         :accessor
                         %auto-scaling-group-recommendation-current-configuration
                         :initform common-lisp:nil)
                        (look-back-period-in-days :initarg
                         :|lookBackPeriodInDays| :type
                         (common-lisp:or look-back-period-in-days
                                         common-lisp:null)
                         :accessor
                         %auto-scaling-group-recommendation-look-back-period-in-days
                         :initform common-lisp:nil)
                        (utilization-metrics :initarg :|utilizationMetrics|
                         :type
                         (common-lisp:or utilization-metrics common-lisp:null)
                         :accessor
                         %auto-scaling-group-recommendation-utilization-metrics
                         :initform common-lisp:nil)
                        (finding :initarg :|finding| :type
                         (common-lisp:or finding common-lisp:null) :accessor
                         %auto-scaling-group-recommendation-finding :initform
                         common-lisp:nil)
                        (auto-scaling-group-name :initarg
                         :|autoScalingGroupName| :type
                         (common-lisp:or auto-scaling-group-name
                                         common-lisp:null)
                         :accessor
                         %auto-scaling-group-recommendation-auto-scaling-group-name
                         :initform common-lisp:nil)
                        (auto-scaling-group-arn :initarg :|autoScalingGroupArn|
                         :type
                         (common-lisp:or auto-scaling-group-arn
                                         common-lisp:null)
                         :accessor
                         %auto-scaling-group-recommendation-auto-scaling-group-arn
                         :initform common-lisp:nil)
                        (account-id :initarg :|accountId| :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         %auto-scaling-group-recommendation-account-id
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'auto-scaling-group-recommendation
                    'make-auto-scaling-group-recommendation))
 (common-lisp:defun make-auto-scaling-group-recommendation
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key inferred-workload-types
                     effective-recommendation-preferences
                     current-performance-risk last-refresh-timestamp
                     recommendation-options current-configuration
                     look-back-period-in-days utilization-metrics finding
                     auto-scaling-group-name auto-scaling-group-arn account-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'auto-scaling-group-recommendation
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          auto-scaling-group-recommendation))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          auto-scaling-group-recommendation))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'auto-scaling-group-arn))
      (common-lisp:list
       (common-lisp:cons "autoScalingGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'auto-scaling-group-name))
      (common-lisp:list
       (common-lisp:cons "autoScalingGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'finding))
      (common-lisp:list
       (common-lisp:cons "finding"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'utilization-metrics))
      (common-lisp:list
       (common-lisp:cons "utilizationMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'look-back-period-in-days))
      (common-lisp:list
       (common-lisp:cons "lookBackPeriodInDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'current-configuration))
      (common-lisp:list
       (common-lisp:cons "currentConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-options))
      (common-lisp:list
       (common-lisp:cons "recommendationOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-refresh-timestamp))
      (common-lisp:list
       (common-lisp:cons "lastRefreshTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'current-performance-risk))
      (common-lisp:list
       (common-lisp:cons "currentPerformanceRisk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'effective-recommendation-preferences))
      (common-lisp:list
       (common-lisp:cons "effectiveRecommendationPreferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'inferred-workload-types))
      (common-lisp:list
       (common-lisp:cons "inferredWorkloadTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          auto-scaling-group-recommendation))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass auto-scaling-group-recommendation-option common-lisp:nil
                       ((migration-effort :initarg :|migrationEffort| :type
                         (common-lisp:or migration-effort common-lisp:null)
                         :accessor
                         %auto-scaling-group-recommendation-option-migration-effort
                         :initform common-lisp:nil)
                        (savings-opportunity :initarg :|savingsOpportunity|
                         :type
                         (common-lisp:or savings-opportunity common-lisp:null)
                         :accessor
                         %auto-scaling-group-recommendation-option-savings-opportunity
                         :initform common-lisp:nil)
                        (rank :initarg :|rank| :type
                         (common-lisp:or rank common-lisp:null) :accessor
                         %auto-scaling-group-recommendation-option-rank
                         :initform common-lisp:nil)
                        (performance-risk :initarg :|performanceRisk| :type
                         (common-lisp:or performance-risk common-lisp:null)
                         :accessor
                         %auto-scaling-group-recommendation-option-performance-risk
                         :initform common-lisp:nil)
                        (projected-utilization-metrics :initarg
                         :|projectedUtilizationMetrics| :type
                         (common-lisp:or projected-utilization-metrics
                                         common-lisp:null)
                         :accessor
                         %auto-scaling-group-recommendation-option-projected-utilization-metrics
                         :initform common-lisp:nil)
                        (configuration :initarg :|configuration| :type
                         (common-lisp:or auto-scaling-group-configuration
                                         common-lisp:null)
                         :accessor
                         %auto-scaling-group-recommendation-option-configuration
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'auto-scaling-group-recommendation-option
                    'make-auto-scaling-group-recommendation-option))
 (common-lisp:defun make-auto-scaling-group-recommendation-option
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key migration-effort savings-opportunity rank
                     performance-risk projected-utilization-metrics
                     configuration)
   (common-lisp:apply #'common-lisp:make-instance
                      'auto-scaling-group-recommendation-option
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          auto-scaling-group-recommendation-option))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          auto-scaling-group-recommendation-option))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration))
      (common-lisp:list
       (common-lisp:cons "configuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'projected-utilization-metrics))
      (common-lisp:list
       (common-lisp:cons "projectedUtilizationMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'performance-risk))
      (common-lisp:list
       (common-lisp:cons "performanceRisk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rank))
      (common-lisp:list
       (common-lisp:cons "rank"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'savings-opportunity))
      (common-lisp:list
       (common-lisp:cons "savingsOpportunity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'migration-effort))
      (common-lisp:list
       (common-lisp:cons "migrationEffort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          auto-scaling-group-recommendation-option))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype auto-scaling-group-recommendation-options ()
   '(trivial-types:proper-list auto-scaling-group-recommendation-option))
 (common-lisp:defun |make-auto-scaling-group-recommendation-options|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            auto-scaling-group-recommendation-option))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype auto-scaling-group-recommendations ()
   '(trivial-types:proper-list auto-scaling-group-recommendation))
 (common-lisp:defun |make-auto-scaling-group-recommendations|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            auto-scaling-group-recommendation))
   aws-sdk/generator/shape::members))
(common-lisp:deftype code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass container-configuration common-lisp:nil
                       ((cpu :initarg :|cpu| :type
                         (common-lisp:or nullable-cpu common-lisp:null)
                         :accessor %container-configuration-cpu :initform
                         common-lisp:nil)
                        (memory-size-configuration :initarg
                         :|memorySizeConfiguration| :type
                         (common-lisp:or memory-size-configuration
                                         common-lisp:null)
                         :accessor
                         %container-configuration-memory-size-configuration
                         :initform common-lisp:nil)
                        (container-name :initarg :|containerName| :type
                         (common-lisp:or container-name common-lisp:null)
                         :accessor %container-configuration-container-name
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'container-configuration 'make-container-configuration))
 (common-lisp:defun make-container-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key cpu memory-size-configuration
                     container-name)
   (common-lisp:apply #'common-lisp:make-instance 'container-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          container-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          container-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-name))
      (common-lisp:list
       (common-lisp:cons "containerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'memory-size-configuration))
      (common-lisp:list
       (common-lisp:cons "memorySizeConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cpu))
      (common-lisp:list
       (common-lisp:cons "cpu"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          container-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype container-configurations ()
   '(trivial-types:proper-list container-configuration))
 (common-lisp:defun |make-container-configurations|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list container-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:deftype container-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass container-recommendation common-lisp:nil
                       ((cpu :initarg :|cpu| :type
                         (common-lisp:or nullable-cpu common-lisp:null)
                         :accessor %container-recommendation-cpu :initform
                         common-lisp:nil)
                        (memory-size-configuration :initarg
                         :|memorySizeConfiguration| :type
                         (common-lisp:or memory-size-configuration
                                         common-lisp:null)
                         :accessor
                         %container-recommendation-memory-size-configuration
                         :initform common-lisp:nil)
                        (container-name :initarg :|containerName| :type
                         (common-lisp:or container-name common-lisp:null)
                         :accessor %container-recommendation-container-name
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'container-recommendation 'make-container-recommendation))
 (common-lisp:defun make-container-recommendation
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key cpu memory-size-configuration
                     container-name)
   (common-lisp:apply #'common-lisp:make-instance 'container-recommendation
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          container-recommendation))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          container-recommendation))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-name))
      (common-lisp:list
       (common-lisp:cons "containerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'memory-size-configuration))
      (common-lisp:list
       (common-lisp:cons "memorySizeConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cpu))
      (common-lisp:list
       (common-lisp:cons "cpu"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          container-recommendation))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype container-recommendations ()
   '(trivial-types:proper-list container-recommendation))
 (common-lisp:defun |make-container-recommendations|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            container-recommendation))
   aws-sdk/generator/shape::members))
(common-lisp:deftype cpu-size () 'common-lisp:integer)
(common-lisp:deftype cpu-vendor-architecture () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype cpu-vendor-architectures ()
   '(trivial-types:proper-list cpu-vendor-architecture))
 (common-lisp:defun |make-cpu-vendor-architectures|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list cpu-vendor-architecture))
   aws-sdk/generator/shape::members))
(common-lisp:deftype creation-timestamp () 'common-lisp:string)
(common-lisp:deftype currency () 'common-lisp:string)
(common-lisp:deftype current-instance-type () 'common-lisp:string)
(common-lisp:deftype current-performance-risk () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass current-performance-risk-ratings common-lisp:nil
                       ((very-low :initarg :|veryLow| :type
                         (common-lisp:or very-low common-lisp:null) :accessor
                         %current-performance-risk-ratings-very-low :initform
                         common-lisp:nil)
                        (low :initarg :|low| :type
                         (common-lisp:or low common-lisp:null) :accessor
                         %current-performance-risk-ratings-low :initform
                         common-lisp:nil)
                        (medium :initarg :|medium| :type
                         (common-lisp:or medium common-lisp:null) :accessor
                         %current-performance-risk-ratings-medium :initform
                         common-lisp:nil)
                        (high :initarg :|high| :type
                         (common-lisp:or high common-lisp:null) :accessor
                         %current-performance-risk-ratings-high :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'current-performance-risk-ratings
                    'make-current-performance-risk-ratings))
 (common-lisp:defun make-current-performance-risk-ratings
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key very-low low medium high)
   (common-lisp:apply #'common-lisp:make-instance
                      'current-performance-risk-ratings
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          current-performance-risk-ratings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          current-performance-risk-ratings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'high))
      (common-lisp:list
       (common-lisp:cons "high"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'medium))
      (common-lisp:list
       (common-lisp:cons "medium"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'low))
      (common-lisp:list
       (common-lisp:cons "low"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'very-low))
      (common-lisp:list
       (common-lisp:cons "veryLow"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          current-performance-risk-ratings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-recommendation-preferences-request
                       common-lisp:nil
                       ((recommendation-preference-names :initarg
                         :|recommendationPreferenceNames| :type
                         (common-lisp:or recommendation-preference-names
                                         common-lisp:null)
                         :accessor
                         %delete-recommendation-preferences-request-recommendation-preference-names
                         :initform
                         (common-lisp:error
                          ":recommendationpreferencenames is required"))
                        (scope :initarg :|scope| :type
                         (common-lisp:or scope common-lisp:null) :accessor
                         %delete-recommendation-preferences-request-scope
                         :initform common-lisp:nil)
                        (resource-type :initarg :|resourceType| :type
                         (common-lisp:or resource-type common-lisp:null)
                         :accessor
                         %delete-recommendation-preferences-request-resource-type
                         :initform
                         (common-lisp:error ":resourcetype is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-recommendation-preferences-request
                    'make-delete-recommendation-preferences-request))
 (common-lisp:defun make-delete-recommendation-preferences-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key recommendation-preference-names scope
                     resource-type)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-recommendation-preferences-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-recommendation-preferences-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-recommendation-preferences-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "resourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scope))
      (common-lisp:list
       (common-lisp:cons "scope"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-preference-names))
      (common-lisp:list
       (common-lisp:cons "recommendationPreferenceNames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-recommendation-preferences-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-recommendation-preferences-response
                       common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'delete-recommendation-preferences-response
                    'make-delete-recommendation-preferences-response))
 (common-lisp:defun make-delete-recommendation-preferences-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-recommendation-preferences-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-recommendation-preferences-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-recommendation-preferences-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-recommendation-preferences-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-recommendation-export-jobs-request
                       common-lisp:nil
                       ((max-results :initarg :|maxResults| :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         %describe-recommendation-export-jobs-request-max-results
                         :initform common-lisp:nil)
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %describe-recommendation-export-jobs-request-next-token
                         :initform common-lisp:nil)
                        (filters :initarg :|filters| :type
                         (common-lisp:or job-filters common-lisp:null)
                         :accessor
                         %describe-recommendation-export-jobs-request-filters
                         :initform common-lisp:nil)
                        (job-ids :initarg :|jobIds| :type
                         (common-lisp:or job-ids common-lisp:null) :accessor
                         %describe-recommendation-export-jobs-request-job-ids
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'describe-recommendation-export-jobs-request
                    'make-describe-recommendation-export-jobs-request))
 (common-lisp:defun make-describe-recommendation-export-jobs-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key max-results next-token filters job-ids)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-recommendation-export-jobs-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-recommendation-export-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-recommendation-export-jobs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-ids))
      (common-lisp:list
       (common-lisp:cons "jobIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-recommendation-export-jobs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-recommendation-export-jobs-response
                       common-lisp:nil
                       ((next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %describe-recommendation-export-jobs-response-next-token
                         :initform common-lisp:nil)
                        (recommendation-export-jobs :initarg
                         :|recommendationExportJobs| :type
                         (common-lisp:or recommendation-export-jobs
                                         common-lisp:null)
                         :accessor
                         %describe-recommendation-export-jobs-response-recommendation-export-jobs
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'describe-recommendation-export-jobs-response
                    'make-describe-recommendation-export-jobs-response))
 (common-lisp:defun make-describe-recommendation-export-jobs-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token recommendation-export-jobs)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-recommendation-export-jobs-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-recommendation-export-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-recommendation-export-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-export-jobs))
      (common-lisp:list
       (common-lisp:cons "recommendationExportJobs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-recommendation-export-jobs-response))
   common-lisp:nil))
(common-lisp:deftype desired-capacity () 'common-lisp:integer)
(common-lisp:deftype destination-bucket () 'common-lisp:string)
(common-lisp:deftype destination-key () 'common-lisp:string)
(common-lisp:deftype destination-key-prefix () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass ebsfilter common-lisp:nil
                       ((values :initarg :|values| :type
                         (common-lisp:or filter-values common-lisp:null)
                         :accessor %ebsfilter-values :initform common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or ebsfilter-name common-lisp:null)
                         :accessor %ebsfilter-name :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'ebsfilter 'make-ebsfilter))
 (common-lisp:defun make-ebsfilter
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key values name)
   (common-lisp:apply #'common-lisp:make-instance 'ebsfilter
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input ebsfilter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input ebsfilter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input ebsfilter))
   common-lisp:nil))
(common-lisp:deftype ebsfilter-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype ebsfilters () '(trivial-types:proper-list ebsfilter))
 (common-lisp:defun |make-ebsfilters|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ebsfilter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype ebsfinding () 'common-lisp:string)
(common-lisp:deftype ebsmetric-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass ebsutilization-metric common-lisp:nil
                       ((value :initarg :|value| :type
                         (common-lisp:or metric-value common-lisp:null)
                         :accessor %ebsutilization-metric-value :initform
                         common-lisp:nil)
                        (statistic :initarg :|statistic| :type
                         (common-lisp:or metric-statistic common-lisp:null)
                         :accessor %ebsutilization-metric-statistic :initform
                         common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or ebsmetric-name common-lisp:null)
                         :accessor %ebsutilization-metric-name :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'ebsutilization-metric 'make-ebsutilization-metric))
 (common-lisp:defun make-ebsutilization-metric
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key value statistic name)
   (common-lisp:apply #'common-lisp:make-instance 'ebsutilization-metric
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ebsutilization-metric))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ebsutilization-metric))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'statistic))
      (common-lisp:list
       (common-lisp:cons "statistic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ebsutilization-metric))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype ebsutilization-metrics ()
   '(trivial-types:proper-list ebsutilization-metric))
 (common-lisp:defun |make-ebsutilization-metrics|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ebsutilization-metric))
   aws-sdk/generator/shape::members))
(common-lisp:deftype ecsservice-launch-type () 'common-lisp:string)
(common-lisp:deftype ecsservice-metric-name () 'common-lisp:string)
(common-lisp:deftype ecsservice-metric-statistic () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass ecsservice-projected-metric common-lisp:nil
                       ((lower-bound-values :initarg :|lowerBoundValues| :type
                         (common-lisp:or metric-values common-lisp:null)
                         :accessor
                         %ecsservice-projected-metric-lower-bound-values
                         :initform common-lisp:nil)
                        (upper-bound-values :initarg :|upperBoundValues| :type
                         (common-lisp:or metric-values common-lisp:null)
                         :accessor
                         %ecsservice-projected-metric-upper-bound-values
                         :initform common-lisp:nil)
                        (timestamps :initarg :|timestamps| :type
                         (common-lisp:or timestamps common-lisp:null) :accessor
                         %ecsservice-projected-metric-timestamps :initform
                         common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or ecsservice-metric-name
                                         common-lisp:null)
                         :accessor %ecsservice-projected-metric-name :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'ecsservice-projected-metric
                    'make-ecsservice-projected-metric))
 (common-lisp:defun make-ecsservice-projected-metric
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key lower-bound-values upper-bound-values
                     timestamps name)
   (common-lisp:apply #'common-lisp:make-instance 'ecsservice-projected-metric
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-projected-metric))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-projected-metric))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timestamps))
      (common-lisp:list
       (common-lisp:cons "timestamps"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'upper-bound-values))
      (common-lisp:list
       (common-lisp:cons "upperBoundValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lower-bound-values))
      (common-lisp:list
       (common-lisp:cons "lowerBoundValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-projected-metric))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype ecsservice-projected-metrics ()
   '(trivial-types:proper-list ecsservice-projected-metric))
 (common-lisp:defun |make-ecsservice-projected-metrics|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            ecsservice-projected-metric))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass ecsservice-projected-utilization-metric common-lisp:nil
                       ((upper-bound-value :initarg :|upperBoundValue| :type
                         (common-lisp:or upper-bound-value common-lisp:null)
                         :accessor
                         %ecsservice-projected-utilization-metric-upper-bound-value
                         :initform common-lisp:nil)
                        (lower-bound-value :initarg :|lowerBoundValue| :type
                         (common-lisp:or lower-bound-value common-lisp:null)
                         :accessor
                         %ecsservice-projected-utilization-metric-lower-bound-value
                         :initform common-lisp:nil)
                        (statistic :initarg :|statistic| :type
                         (common-lisp:or ecsservice-metric-statistic
                                         common-lisp:null)
                         :accessor
                         %ecsservice-projected-utilization-metric-statistic
                         :initform common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or ecsservice-metric-name
                                         common-lisp:null)
                         :accessor
                         %ecsservice-projected-utilization-metric-name
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'ecsservice-projected-utilization-metric
                    'make-ecsservice-projected-utilization-metric))
 (common-lisp:defun make-ecsservice-projected-utilization-metric
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key upper-bound-value lower-bound-value
                     statistic name)
   (common-lisp:apply #'common-lisp:make-instance
                      'ecsservice-projected-utilization-metric
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-projected-utilization-metric))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-projected-utilization-metric))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'statistic))
      (common-lisp:list
       (common-lisp:cons "statistic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lower-bound-value))
      (common-lisp:list
       (common-lisp:cons "lowerBoundValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'upper-bound-value))
      (common-lisp:list
       (common-lisp:cons "upperBoundValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-projected-utilization-metric))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype ecsservice-projected-utilization-metrics ()
   '(trivial-types:proper-list ecsservice-projected-utilization-metric))
 (common-lisp:defun |make-ecsservice-projected-utilization-metrics|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            ecsservice-projected-utilization-metric))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass ecsservice-recommendation common-lisp:nil
                       ((current-performance-risk :initarg
                         :|currentPerformanceRisk| :type
                         (common-lisp:or current-performance-risk
                                         common-lisp:null)
                         :accessor
                         %ecsservice-recommendation-current-performance-risk
                         :initform common-lisp:nil)
                        (service-recommendation-options :initarg
                         :|serviceRecommendationOptions| :type
                         (common-lisp:or ecsservice-recommendation-options
                                         common-lisp:null)
                         :accessor
                         %ecsservice-recommendation-service-recommendation-options
                         :initform common-lisp:nil)
                        (finding-reason-codes :initarg :|findingReasonCodes|
                         :type
                         (common-lisp:or
                          ecsservice-recommendation-finding-reason-codes
                          common-lisp:null)
                         :accessor
                         %ecsservice-recommendation-finding-reason-codes
                         :initform common-lisp:nil)
                        (finding :initarg :|finding| :type
                         (common-lisp:or ecsservice-recommendation-finding
                                         common-lisp:null)
                         :accessor %ecsservice-recommendation-finding :initform
                         common-lisp:nil)
                        (last-refresh-timestamp :initarg
                         :|lastRefreshTimestamp| :type
                         (common-lisp:or last-refresh-timestamp
                                         common-lisp:null)
                         :accessor
                         %ecsservice-recommendation-last-refresh-timestamp
                         :initform common-lisp:nil)
                        (launch-type :initarg :|launchType| :type
                         (common-lisp:or ecsservice-launch-type
                                         common-lisp:null)
                         :accessor %ecsservice-recommendation-launch-type
                         :initform common-lisp:nil)
                        (lookback-period-in-days :initarg
                         :|lookbackPeriodInDays| :type
                         (common-lisp:or look-back-period-in-days
                                         common-lisp:null)
                         :accessor
                         %ecsservice-recommendation-lookback-period-in-days
                         :initform common-lisp:nil)
                        (utilization-metrics :initarg :|utilizationMetrics|
                         :type
                         (common-lisp:or ecsservice-utilization-metrics
                                         common-lisp:null)
                         :accessor
                         %ecsservice-recommendation-utilization-metrics
                         :initform common-lisp:nil)
                        (current-service-configuration :initarg
                         :|currentServiceConfiguration| :type
                         (common-lisp:or service-configuration
                                         common-lisp:null)
                         :accessor
                         %ecsservice-recommendation-current-service-configuration
                         :initform common-lisp:nil)
                        (account-id :initarg :|accountId| :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         %ecsservice-recommendation-account-id :initform
                         common-lisp:nil)
                        (service-arn :initarg :|serviceArn| :type
                         (common-lisp:or service-arn common-lisp:null)
                         :accessor %ecsservice-recommendation-service-arn
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'ecsservice-recommendation
                    'make-ecsservice-recommendation))
 (common-lisp:defun make-ecsservice-recommendation
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key current-performance-risk
                     service-recommendation-options finding-reason-codes
                     finding last-refresh-timestamp launch-type
                     lookback-period-in-days utilization-metrics
                     current-service-configuration account-id service-arn)
   (common-lisp:apply #'common-lisp:make-instance 'ecsservice-recommendation
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-recommendation))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-recommendation))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-arn))
      (common-lisp:list
       (common-lisp:cons "serviceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'current-service-configuration))
      (common-lisp:list
       (common-lisp:cons "currentServiceConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'utilization-metrics))
      (common-lisp:list
       (common-lisp:cons "utilizationMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'lookback-period-in-days))
      (common-lisp:list
       (common-lisp:cons "lookbackPeriodInDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'launch-type))
      (common-lisp:list
       (common-lisp:cons "launchType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-refresh-timestamp))
      (common-lisp:list
       (common-lisp:cons "lastRefreshTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'finding))
      (common-lisp:list
       (common-lisp:cons "finding"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'finding-reason-codes))
      (common-lisp:list
       (common-lisp:cons "findingReasonCodes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'service-recommendation-options))
      (common-lisp:list
       (common-lisp:cons "serviceRecommendationOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'current-performance-risk))
      (common-lisp:list
       (common-lisp:cons "currentPerformanceRisk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-recommendation))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass ecsservice-recommendation-filter common-lisp:nil
                       ((values :initarg :|values| :type
                         (common-lisp:or filter-values common-lisp:null)
                         :accessor %ecsservice-recommendation-filter-values
                         :initform common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or ecsservice-recommendation-filter-name
                                         common-lisp:null)
                         :accessor %ecsservice-recommendation-filter-name
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'ecsservice-recommendation-filter
                    'make-ecsservice-recommendation-filter))
 (common-lisp:defun make-ecsservice-recommendation-filter
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key values name)
   (common-lisp:apply #'common-lisp:make-instance
                      'ecsservice-recommendation-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-recommendation-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-recommendation-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-recommendation-filter))
   common-lisp:nil))
(common-lisp:deftype ecsservice-recommendation-filter-name ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype ecsservice-recommendation-filters ()
   '(trivial-types:proper-list ecsservice-recommendation-filter))
 (common-lisp:defun |make-ecsservice-recommendation-filters|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            ecsservice-recommendation-filter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype ecsservice-recommendation-finding () 'common-lisp:string)
(common-lisp:deftype ecsservice-recommendation-finding-reason-code ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype ecsservice-recommendation-finding-reason-codes ()
   '(trivial-types:proper-list ecsservice-recommendation-finding-reason-code))
 (common-lisp:defun |make-ecsservice-recommendation-finding-reason-codes|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            ecsservice-recommendation-finding-reason-code))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass ecsservice-recommendation-option common-lisp:nil
                       ((container-recommendations :initarg
                         :|containerRecommendations| :type
                         (common-lisp:or container-recommendations
                                         common-lisp:null)
                         :accessor
                         %ecsservice-recommendation-option-container-recommendations
                         :initform common-lisp:nil)
                        (projected-utilization-metrics :initarg
                         :|projectedUtilizationMetrics| :type
                         (common-lisp:or
                          ecsservice-projected-utilization-metrics
                          common-lisp:null)
                         :accessor
                         %ecsservice-recommendation-option-projected-utilization-metrics
                         :initform common-lisp:nil)
                        (savings-opportunity :initarg :|savingsOpportunity|
                         :type
                         (common-lisp:or savings-opportunity common-lisp:null)
                         :accessor
                         %ecsservice-recommendation-option-savings-opportunity
                         :initform common-lisp:nil)
                        (cpu :initarg :|cpu| :type
                         (common-lisp:or nullable-cpu common-lisp:null)
                         :accessor %ecsservice-recommendation-option-cpu
                         :initform common-lisp:nil)
                        (memory :initarg :|memory| :type
                         (common-lisp:or nullable-memory common-lisp:null)
                         :accessor %ecsservice-recommendation-option-memory
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'ecsservice-recommendation-option
                    'make-ecsservice-recommendation-option))
 (common-lisp:defun make-ecsservice-recommendation-option
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key container-recommendations
                     projected-utilization-metrics savings-opportunity cpu
                     memory)
   (common-lisp:apply #'common-lisp:make-instance
                      'ecsservice-recommendation-option
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-recommendation-option))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-recommendation-option))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'memory))
      (common-lisp:list
       (common-lisp:cons "memory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cpu))
      (common-lisp:list
       (common-lisp:cons "cpu"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'savings-opportunity))
      (common-lisp:list
       (common-lisp:cons "savingsOpportunity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'projected-utilization-metrics))
      (common-lisp:list
       (common-lisp:cons "projectedUtilizationMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'container-recommendations))
      (common-lisp:list
       (common-lisp:cons "containerRecommendations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-recommendation-option))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype ecsservice-recommendation-options ()
   '(trivial-types:proper-list ecsservice-recommendation-option))
 (common-lisp:defun |make-ecsservice-recommendation-options|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            ecsservice-recommendation-option))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype ecsservice-recommendations ()
   '(trivial-types:proper-list ecsservice-recommendation))
 (common-lisp:defun |make-ecsservice-recommendations|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            ecsservice-recommendation))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass ecsservice-recommended-option-projected-metric
                       common-lisp:nil
                       ((projected-metrics :initarg :|projectedMetrics| :type
                         (common-lisp:or ecsservice-projected-metrics
                                         common-lisp:null)
                         :accessor
                         %ecsservice-recommended-option-projected-metric-projected-metrics
                         :initform common-lisp:nil)
                        (recommended-memory-size :initarg
                         :|recommendedMemorySize| :type
                         (common-lisp:or memory-size common-lisp:null)
                         :accessor
                         %ecsservice-recommended-option-projected-metric-recommended-memory-size
                         :initform common-lisp:nil)
                        (recommended-cpu-units :initarg :|recommendedCpuUnits|
                         :type (common-lisp:or cpu-size common-lisp:null)
                         :accessor
                         %ecsservice-recommended-option-projected-metric-recommended-cpu-units
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'ecsservice-recommended-option-projected-metric
                    'make-ecsservice-recommended-option-projected-metric))
 (common-lisp:defun make-ecsservice-recommended-option-projected-metric
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key projected-metrics recommended-memory-size
                     recommended-cpu-units)
   (common-lisp:apply #'common-lisp:make-instance
                      'ecsservice-recommended-option-projected-metric
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-recommended-option-projected-metric))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-recommended-option-projected-metric))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommended-cpu-units))
      (common-lisp:list
       (common-lisp:cons "recommendedCpuUnits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommended-memory-size))
      (common-lisp:list
       (common-lisp:cons "recommendedMemorySize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'projected-metrics))
      (common-lisp:list
       (common-lisp:cons "projectedMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-recommended-option-projected-metric))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype ecsservice-recommended-option-projected-metrics ()
   '(trivial-types:proper-list ecsservice-recommended-option-projected-metric))
 (common-lisp:defun |make-ecsservice-recommended-option-projected-metrics|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            ecsservice-recommended-option-projected-metric))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass ecsservice-utilization-metric common-lisp:nil
                       ((value :initarg :|value| :type
                         (common-lisp:or metric-value common-lisp:null)
                         :accessor %ecsservice-utilization-metric-value
                         :initform common-lisp:nil)
                        (statistic :initarg :|statistic| :type
                         (common-lisp:or ecsservice-metric-statistic
                                         common-lisp:null)
                         :accessor %ecsservice-utilization-metric-statistic
                         :initform common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or ecsservice-metric-name
                                         common-lisp:null)
                         :accessor %ecsservice-utilization-metric-name
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'ecsservice-utilization-metric
                    'make-ecsservice-utilization-metric))
 (common-lisp:defun make-ecsservice-utilization-metric
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key value statistic name)
   (common-lisp:apply #'common-lisp:make-instance
                      'ecsservice-utilization-metric
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-utilization-metric))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-utilization-metric))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'statistic))
      (common-lisp:list
       (common-lisp:cons "statistic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-utilization-metric))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype ecsservice-utilization-metrics ()
   '(trivial-types:proper-list ecsservice-utilization-metric))
 (common-lisp:defun |make-ecsservice-utilization-metrics|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            ecsservice-utilization-metric))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass effective-recommendation-preferences common-lisp:nil
                       ((external-metrics-preference :initarg
                         :|externalMetricsPreference| :type
                         (common-lisp:or external-metrics-preference
                                         common-lisp:null)
                         :accessor
                         %effective-recommendation-preferences-external-metrics-preference
                         :initform common-lisp:nil)
                        (inferred-workload-types :initarg
                         :|inferredWorkloadTypes| :type
                         (common-lisp:or inferred-workload-types-preference
                                         common-lisp:null)
                         :accessor
                         %effective-recommendation-preferences-inferred-workload-types
                         :initform common-lisp:nil)
                        (enhanced-infrastructure-metrics :initarg
                         :|enhancedInfrastructureMetrics| :type
                         (common-lisp:or enhanced-infrastructure-metrics
                                         common-lisp:null)
                         :accessor
                         %effective-recommendation-preferences-enhanced-infrastructure-metrics
                         :initform common-lisp:nil)
                        (cpu-vendor-architectures :initarg
                         :|cpuVendorArchitectures| :type
                         (common-lisp:or cpu-vendor-architectures
                                         common-lisp:null)
                         :accessor
                         %effective-recommendation-preferences-cpu-vendor-architectures
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'effective-recommendation-preferences
                    'make-effective-recommendation-preferences))
 (common-lisp:defun make-effective-recommendation-preferences
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key external-metrics-preference
                     inferred-workload-types enhanced-infrastructure-metrics
                     cpu-vendor-architectures)
   (common-lisp:apply #'common-lisp:make-instance
                      'effective-recommendation-preferences
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          effective-recommendation-preferences))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          effective-recommendation-preferences))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cpu-vendor-architectures))
      (common-lisp:list
       (common-lisp:cons "cpuVendorArchitectures"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enhanced-infrastructure-metrics))
      (common-lisp:list
       (common-lisp:cons "enhancedInfrastructureMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'inferred-workload-types))
      (common-lisp:list
       (common-lisp:cons "inferredWorkloadTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'external-metrics-preference))
      (common-lisp:list
       (common-lisp:cons "externalMetricsPreference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          effective-recommendation-preferences))
   common-lisp:nil))
(common-lisp:deftype enhanced-infrastructure-metrics () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass enrollment-filter common-lisp:nil
                       ((values :initarg :|values| :type
                         (common-lisp:or filter-values common-lisp:null)
                         :accessor %enrollment-filter-values :initform
                         common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or enrollment-filter-name
                                         common-lisp:null)
                         :accessor %enrollment-filter-name :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'enrollment-filter 'make-enrollment-filter))
 (common-lisp:defun make-enrollment-filter
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key values name)
   (common-lisp:apply #'common-lisp:make-instance 'enrollment-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input enrollment-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input enrollment-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input enrollment-filter))
   common-lisp:nil))
(common-lisp:deftype enrollment-filter-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype enrollment-filters ()
   '(trivial-types:proper-list enrollment-filter))
 (common-lisp:defun |make-enrollment-filters|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list enrollment-filter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype error-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass estimated-monthly-savings common-lisp:nil
                       ((value :initarg :|value| :type
                         (common-lisp:or value common-lisp:null) :accessor
                         %estimated-monthly-savings-value :initform
                         common-lisp:nil)
                        (currency :initarg :|currency| :type
                         (common-lisp:or currency common-lisp:null) :accessor
                         %estimated-monthly-savings-currency :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'estimated-monthly-savings
                    'make-estimated-monthly-savings))
 (common-lisp:defun make-estimated-monthly-savings
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key value currency)
   (common-lisp:apply #'common-lisp:make-instance 'estimated-monthly-savings
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          estimated-monthly-savings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          estimated-monthly-savings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'currency))
      (common-lisp:list
       (common-lisp:cons "currency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          estimated-monthly-savings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass export-auto-scaling-group-recommendations-request
                       common-lisp:nil
                       ((recommendation-preferences :initarg
                         :|recommendationPreferences| :type
                         (common-lisp:or recommendation-preferences
                                         common-lisp:null)
                         :accessor
                         %export-auto-scaling-group-recommendations-request-recommendation-preferences
                         :initform common-lisp:nil)
                        (include-member-accounts :initarg
                         :|includeMemberAccounts| :type
                         (common-lisp:or include-member-accounts
                                         common-lisp:null)
                         :accessor
                         %export-auto-scaling-group-recommendations-request-include-member-accounts
                         :initform common-lisp:nil)
                        (file-format :initarg :|fileFormat| :type
                         (common-lisp:or file-format common-lisp:null)
                         :accessor
                         %export-auto-scaling-group-recommendations-request-file-format
                         :initform common-lisp:nil)
                        (s3destination-config :initarg :|s3DestinationConfig|
                         :type
                         (common-lisp:or s3destination-config common-lisp:null)
                         :accessor
                         %export-auto-scaling-group-recommendations-request-s3destination-config
                         :initform
                         (common-lisp:error
                          ":s3destinationconfig is required"))
                        (fields-to-export :initarg :|fieldsToExport| :type
                         (common-lisp:or exportable-auto-scaling-group-fields
                                         common-lisp:null)
                         :accessor
                         %export-auto-scaling-group-recommendations-request-fields-to-export
                         :initform common-lisp:nil)
                        (filters :initarg :|filters| :type
                         (common-lisp:or filters common-lisp:null) :accessor
                         %export-auto-scaling-group-recommendations-request-filters
                         :initform common-lisp:nil)
                        (account-ids :initarg :|accountIds| :type
                         (common-lisp:or account-ids common-lisp:null)
                         :accessor
                         %export-auto-scaling-group-recommendations-request-account-ids
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'export-auto-scaling-group-recommendations-request
                    'make-export-auto-scaling-group-recommendations-request))
 (common-lisp:defun make-export-auto-scaling-group-recommendations-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key recommendation-preferences
                     include-member-accounts file-format s3destination-config
                     fields-to-export filters account-ids)
   (common-lisp:apply #'common-lisp:make-instance
                      'export-auto-scaling-group-recommendations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          export-auto-scaling-group-recommendations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          export-auto-scaling-group-recommendations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "accountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fields-to-export))
      (common-lisp:list
       (common-lisp:cons "fieldsToExport"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           's3destination-config))
      (common-lisp:list
       (common-lisp:cons "s3DestinationConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-format))
      (common-lisp:list
       (common-lisp:cons "fileFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'include-member-accounts))
      (common-lisp:list
       (common-lisp:cons "includeMemberAccounts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-preferences))
      (common-lisp:list
       (common-lisp:cons "recommendationPreferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          export-auto-scaling-group-recommendations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass export-auto-scaling-group-recommendations-response
                       common-lisp:nil
                       ((s3destination :initarg :|s3Destination| :type
                         (common-lisp:or s3destination common-lisp:null)
                         :accessor
                         %export-auto-scaling-group-recommendations-response-s3destination
                         :initform common-lisp:nil)
                        (job-id :initarg :|jobId| :type
                         (common-lisp:or job-id common-lisp:null) :accessor
                         %export-auto-scaling-group-recommendations-response-job-id
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'export-auto-scaling-group-recommendations-response
                    'make-export-auto-scaling-group-recommendations-response))
 (common-lisp:defun make-export-auto-scaling-group-recommendations-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key s3destination job-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'export-auto-scaling-group-recommendations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          export-auto-scaling-group-recommendations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          export-auto-scaling-group-recommendations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "jobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3destination))
      (common-lisp:list
       (common-lisp:cons "s3Destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          export-auto-scaling-group-recommendations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass export-destination common-lisp:nil
                       ((s3 :initarg :|s3| :type
                         (common-lisp:or s3destination common-lisp:null)
                         :accessor %export-destination-s3 :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'export-destination 'make-export-destination))
 (common-lisp:defun make-export-destination
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key s3)
   (common-lisp:apply #'common-lisp:make-instance 'export-destination
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input export-destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input export-destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3))
      (common-lisp:list
       (common-lisp:cons "s3"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input export-destination))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass export-ebsvolume-recommendations-request common-lisp:nil
                       ((include-member-accounts :initarg
                         :|includeMemberAccounts| :type
                         (common-lisp:or include-member-accounts
                                         common-lisp:null)
                         :accessor
                         %export-ebsvolume-recommendations-request-include-member-accounts
                         :initform common-lisp:nil)
                        (file-format :initarg :|fileFormat| :type
                         (common-lisp:or file-format common-lisp:null)
                         :accessor
                         %export-ebsvolume-recommendations-request-file-format
                         :initform common-lisp:nil)
                        (s3destination-config :initarg :|s3DestinationConfig|
                         :type
                         (common-lisp:or s3destination-config common-lisp:null)
                         :accessor
                         %export-ebsvolume-recommendations-request-s3destination-config
                         :initform
                         (common-lisp:error
                          ":s3destinationconfig is required"))
                        (fields-to-export :initarg :|fieldsToExport| :type
                         (common-lisp:or exportable-volume-fields
                                         common-lisp:null)
                         :accessor
                         %export-ebsvolume-recommendations-request-fields-to-export
                         :initform common-lisp:nil)
                        (filters :initarg :|filters| :type
                         (common-lisp:or ebsfilters common-lisp:null) :accessor
                         %export-ebsvolume-recommendations-request-filters
                         :initform common-lisp:nil)
                        (account-ids :initarg :|accountIds| :type
                         (common-lisp:or account-ids common-lisp:null)
                         :accessor
                         %export-ebsvolume-recommendations-request-account-ids
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'export-ebsvolume-recommendations-request
                    'make-export-ebsvolume-recommendations-request))
 (common-lisp:defun make-export-ebsvolume-recommendations-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key include-member-accounts file-format
                     s3destination-config fields-to-export filters account-ids)
   (common-lisp:apply #'common-lisp:make-instance
                      'export-ebsvolume-recommendations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          export-ebsvolume-recommendations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          export-ebsvolume-recommendations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "accountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fields-to-export))
      (common-lisp:list
       (common-lisp:cons "fieldsToExport"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           's3destination-config))
      (common-lisp:list
       (common-lisp:cons "s3DestinationConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-format))
      (common-lisp:list
       (common-lisp:cons "fileFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'include-member-accounts))
      (common-lisp:list
       (common-lisp:cons "includeMemberAccounts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          export-ebsvolume-recommendations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass export-ebsvolume-recommendations-response
                       common-lisp:nil
                       ((s3destination :initarg :|s3Destination| :type
                         (common-lisp:or s3destination common-lisp:null)
                         :accessor
                         %export-ebsvolume-recommendations-response-s3destination
                         :initform common-lisp:nil)
                        (job-id :initarg :|jobId| :type
                         (common-lisp:or job-id common-lisp:null) :accessor
                         %export-ebsvolume-recommendations-response-job-id
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'export-ebsvolume-recommendations-response
                    'make-export-ebsvolume-recommendations-response))
 (common-lisp:defun make-export-ebsvolume-recommendations-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key s3destination job-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'export-ebsvolume-recommendations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          export-ebsvolume-recommendations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          export-ebsvolume-recommendations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "jobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3destination))
      (common-lisp:list
       (common-lisp:cons "s3Destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          export-ebsvolume-recommendations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass export-ec2instance-recommendations-request
                       common-lisp:nil
                       ((recommendation-preferences :initarg
                         :|recommendationPreferences| :type
                         (common-lisp:or recommendation-preferences
                                         common-lisp:null)
                         :accessor
                         %export-ec2instance-recommendations-request-recommendation-preferences
                         :initform common-lisp:nil)
                        (include-member-accounts :initarg
                         :|includeMemberAccounts| :type
                         (common-lisp:or include-member-accounts
                                         common-lisp:null)
                         :accessor
                         %export-ec2instance-recommendations-request-include-member-accounts
                         :initform common-lisp:nil)
                        (file-format :initarg :|fileFormat| :type
                         (common-lisp:or file-format common-lisp:null)
                         :accessor
                         %export-ec2instance-recommendations-request-file-format
                         :initform common-lisp:nil)
                        (s3destination-config :initarg :|s3DestinationConfig|
                         :type
                         (common-lisp:or s3destination-config common-lisp:null)
                         :accessor
                         %export-ec2instance-recommendations-request-s3destination-config
                         :initform
                         (common-lisp:error
                          ":s3destinationconfig is required"))
                        (fields-to-export :initarg :|fieldsToExport| :type
                         (common-lisp:or exportable-instance-fields
                                         common-lisp:null)
                         :accessor
                         %export-ec2instance-recommendations-request-fields-to-export
                         :initform common-lisp:nil)
                        (filters :initarg :|filters| :type
                         (common-lisp:or filters common-lisp:null) :accessor
                         %export-ec2instance-recommendations-request-filters
                         :initform common-lisp:nil)
                        (account-ids :initarg :|accountIds| :type
                         (common-lisp:or account-ids common-lisp:null)
                         :accessor
                         %export-ec2instance-recommendations-request-account-ids
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'export-ec2instance-recommendations-request
                    'make-export-ec2instance-recommendations-request))
 (common-lisp:defun make-export-ec2instance-recommendations-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key recommendation-preferences
                     include-member-accounts file-format s3destination-config
                     fields-to-export filters account-ids)
   (common-lisp:apply #'common-lisp:make-instance
                      'export-ec2instance-recommendations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          export-ec2instance-recommendations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          export-ec2instance-recommendations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "accountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fields-to-export))
      (common-lisp:list
       (common-lisp:cons "fieldsToExport"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           's3destination-config))
      (common-lisp:list
       (common-lisp:cons "s3DestinationConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-format))
      (common-lisp:list
       (common-lisp:cons "fileFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'include-member-accounts))
      (common-lisp:list
       (common-lisp:cons "includeMemberAccounts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-preferences))
      (common-lisp:list
       (common-lisp:cons "recommendationPreferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          export-ec2instance-recommendations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass export-ec2instance-recommendations-response
                       common-lisp:nil
                       ((s3destination :initarg :|s3Destination| :type
                         (common-lisp:or s3destination common-lisp:null)
                         :accessor
                         %export-ec2instance-recommendations-response-s3destination
                         :initform common-lisp:nil)
                        (job-id :initarg :|jobId| :type
                         (common-lisp:or job-id common-lisp:null) :accessor
                         %export-ec2instance-recommendations-response-job-id
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'export-ec2instance-recommendations-response
                    'make-export-ec2instance-recommendations-response))
 (common-lisp:defun make-export-ec2instance-recommendations-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key s3destination job-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'export-ec2instance-recommendations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          export-ec2instance-recommendations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          export-ec2instance-recommendations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "jobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3destination))
      (common-lisp:list
       (common-lisp:cons "s3Destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          export-ec2instance-recommendations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass export-ecsservice-recommendations-request
                       common-lisp:nil
                       ((include-member-accounts :initarg
                         :|includeMemberAccounts| :type
                         (common-lisp:or include-member-accounts
                                         common-lisp:null)
                         :accessor
                         %export-ecsservice-recommendations-request-include-member-accounts
                         :initform common-lisp:nil)
                        (file-format :initarg :|fileFormat| :type
                         (common-lisp:or file-format common-lisp:null)
                         :accessor
                         %export-ecsservice-recommendations-request-file-format
                         :initform common-lisp:nil)
                        (s3destination-config :initarg :|s3DestinationConfig|
                         :type
                         (common-lisp:or s3destination-config common-lisp:null)
                         :accessor
                         %export-ecsservice-recommendations-request-s3destination-config
                         :initform
                         (common-lisp:error
                          ":s3destinationconfig is required"))
                        (fields-to-export :initarg :|fieldsToExport| :type
                         (common-lisp:or exportable-ecsservice-fields
                                         common-lisp:null)
                         :accessor
                         %export-ecsservice-recommendations-request-fields-to-export
                         :initform common-lisp:nil)
                        (filters :initarg :|filters| :type
                         (common-lisp:or ecsservice-recommendation-filters
                                         common-lisp:null)
                         :accessor
                         %export-ecsservice-recommendations-request-filters
                         :initform common-lisp:nil)
                        (account-ids :initarg :|accountIds| :type
                         (common-lisp:or account-ids common-lisp:null)
                         :accessor
                         %export-ecsservice-recommendations-request-account-ids
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'export-ecsservice-recommendations-request
                    'make-export-ecsservice-recommendations-request))
 (common-lisp:defun make-export-ecsservice-recommendations-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key include-member-accounts file-format
                     s3destination-config fields-to-export filters account-ids)
   (common-lisp:apply #'common-lisp:make-instance
                      'export-ecsservice-recommendations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          export-ecsservice-recommendations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          export-ecsservice-recommendations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "accountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fields-to-export))
      (common-lisp:list
       (common-lisp:cons "fieldsToExport"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           's3destination-config))
      (common-lisp:list
       (common-lisp:cons "s3DestinationConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-format))
      (common-lisp:list
       (common-lisp:cons "fileFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'include-member-accounts))
      (common-lisp:list
       (common-lisp:cons "includeMemberAccounts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          export-ecsservice-recommendations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass export-ecsservice-recommendations-response
                       common-lisp:nil
                       ((s3destination :initarg :|s3Destination| :type
                         (common-lisp:or s3destination common-lisp:null)
                         :accessor
                         %export-ecsservice-recommendations-response-s3destination
                         :initform common-lisp:nil)
                        (job-id :initarg :|jobId| :type
                         (common-lisp:or job-id common-lisp:null) :accessor
                         %export-ecsservice-recommendations-response-job-id
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'export-ecsservice-recommendations-response
                    'make-export-ecsservice-recommendations-response))
 (common-lisp:defun make-export-ecsservice-recommendations-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key s3destination job-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'export-ecsservice-recommendations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          export-ecsservice-recommendations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          export-ecsservice-recommendations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "jobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3destination))
      (common-lisp:list
       (common-lisp:cons "s3Destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          export-ecsservice-recommendations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass export-lambda-function-recommendations-request
                       common-lisp:nil
                       ((include-member-accounts :initarg
                         :|includeMemberAccounts| :type
                         (common-lisp:or include-member-accounts
                                         common-lisp:null)
                         :accessor
                         %export-lambda-function-recommendations-request-include-member-accounts
                         :initform common-lisp:nil)
                        (file-format :initarg :|fileFormat| :type
                         (common-lisp:or file-format common-lisp:null)
                         :accessor
                         %export-lambda-function-recommendations-request-file-format
                         :initform common-lisp:nil)
                        (s3destination-config :initarg :|s3DestinationConfig|
                         :type
                         (common-lisp:or s3destination-config common-lisp:null)
                         :accessor
                         %export-lambda-function-recommendations-request-s3destination-config
                         :initform
                         (common-lisp:error
                          ":s3destinationconfig is required"))
                        (fields-to-export :initarg :|fieldsToExport| :type
                         (common-lisp:or exportable-lambda-function-fields
                                         common-lisp:null)
                         :accessor
                         %export-lambda-function-recommendations-request-fields-to-export
                         :initform common-lisp:nil)
                        (filters :initarg :|filters| :type
                         (common-lisp:or lambda-function-recommendation-filters
                                         common-lisp:null)
                         :accessor
                         %export-lambda-function-recommendations-request-filters
                         :initform common-lisp:nil)
                        (account-ids :initarg :|accountIds| :type
                         (common-lisp:or account-ids common-lisp:null)
                         :accessor
                         %export-lambda-function-recommendations-request-account-ids
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'export-lambda-function-recommendations-request
                    'make-export-lambda-function-recommendations-request))
 (common-lisp:defun make-export-lambda-function-recommendations-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key include-member-accounts file-format
                     s3destination-config fields-to-export filters account-ids)
   (common-lisp:apply #'common-lisp:make-instance
                      'export-lambda-function-recommendations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          export-lambda-function-recommendations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          export-lambda-function-recommendations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "accountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fields-to-export))
      (common-lisp:list
       (common-lisp:cons "fieldsToExport"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           's3destination-config))
      (common-lisp:list
       (common-lisp:cons "s3DestinationConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-format))
      (common-lisp:list
       (common-lisp:cons "fileFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'include-member-accounts))
      (common-lisp:list
       (common-lisp:cons "includeMemberAccounts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          export-lambda-function-recommendations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass export-lambda-function-recommendations-response
                       common-lisp:nil
                       ((s3destination :initarg :|s3Destination| :type
                         (common-lisp:or s3destination common-lisp:null)
                         :accessor
                         %export-lambda-function-recommendations-response-s3destination
                         :initform common-lisp:nil)
                        (job-id :initarg :|jobId| :type
                         (common-lisp:or job-id common-lisp:null) :accessor
                         %export-lambda-function-recommendations-response-job-id
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'export-lambda-function-recommendations-response
                    'make-export-lambda-function-recommendations-response))
 (common-lisp:defun make-export-lambda-function-recommendations-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key s3destination job-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'export-lambda-function-recommendations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          export-lambda-function-recommendations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          export-lambda-function-recommendations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "jobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3destination))
      (common-lisp:list
       (common-lisp:cons "s3Destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          export-lambda-function-recommendations-response))
   common-lisp:nil))
(common-lisp:deftype exportable-auto-scaling-group-field () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype exportable-auto-scaling-group-fields ()
   '(trivial-types:proper-list exportable-auto-scaling-group-field))
 (common-lisp:defun |make-exportable-auto-scaling-group-fields|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            exportable-auto-scaling-group-field))
   aws-sdk/generator/shape::members))
(common-lisp:deftype exportable-ecsservice-field () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype exportable-ecsservice-fields ()
   '(trivial-types:proper-list exportable-ecsservice-field))
 (common-lisp:defun |make-exportable-ecsservice-fields|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            exportable-ecsservice-field))
   aws-sdk/generator/shape::members))
(common-lisp:deftype exportable-instance-field () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype exportable-instance-fields ()
   '(trivial-types:proper-list exportable-instance-field))
 (common-lisp:defun |make-exportable-instance-fields|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            exportable-instance-field))
   aws-sdk/generator/shape::members))
(common-lisp:deftype exportable-lambda-function-field () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype exportable-lambda-function-fields ()
   '(trivial-types:proper-list exportable-lambda-function-field))
 (common-lisp:defun |make-exportable-lambda-function-fields|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            exportable-lambda-function-field))
   aws-sdk/generator/shape::members))
(common-lisp:deftype exportable-volume-field () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype exportable-volume-fields ()
   '(trivial-types:proper-list exportable-volume-field))
 (common-lisp:defun |make-exportable-volume-fields|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list exportable-volume-field))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass external-metrics-preference common-lisp:nil
                       ((source :initarg :|source| :type
                         (common-lisp:or external-metrics-source
                                         common-lisp:null)
                         :accessor %external-metrics-preference-source
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'external-metrics-preference
                    'make-external-metrics-preference))
 (common-lisp:defun make-external-metrics-preference
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key source)
   (common-lisp:apply #'common-lisp:make-instance 'external-metrics-preference
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          external-metrics-preference))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          external-metrics-preference))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source))
      (common-lisp:list
       (common-lisp:cons "source"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          external-metrics-preference))
   common-lisp:nil))
(common-lisp:deftype external-metrics-source () 'common-lisp:string)
(common-lisp:deftype failure-reason () 'common-lisp:string)
(common-lisp:deftype file-format () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass filter common-lisp:nil
                       ((values :initarg :|values| :type
                         (common-lisp:or filter-values common-lisp:null)
                         :accessor %filter-values :initform common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or filter-name common-lisp:null)
                         :accessor %filter-name :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'filter 'make-filter))
 (common-lisp:defun make-filter
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key values name)
   (common-lisp:apply #'common-lisp:make-instance 'filter
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input filter))
   common-lisp:nil))
(common-lisp:deftype filter-name () 'common-lisp:string)
(common-lisp:deftype filter-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype filter-values ()
   '(trivial-types:proper-list filter-value))
 (common-lisp:defun |make-filter-values|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list filter-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype filters () '(trivial-types:proper-list filter))
 (common-lisp:defun |make-filters|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list filter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype finding () 'common-lisp:string)
(common-lisp:deftype finding-reason-code () 'common-lisp:string)
(common-lisp:deftype function-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype function-arns ()
   '(trivial-types:proper-list function-arn))
 (common-lisp:defun |make-function-arns|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list function-arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype function-version () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass get-auto-scaling-group-recommendations-request
                       common-lisp:nil
                       ((recommendation-preferences :initarg
                         :|recommendationPreferences| :type
                         (common-lisp:or recommendation-preferences
                                         common-lisp:null)
                         :accessor
                         %get-auto-scaling-group-recommendations-request-recommendation-preferences
                         :initform common-lisp:nil)
                        (filters :initarg :|filters| :type
                         (common-lisp:or filters common-lisp:null) :accessor
                         %get-auto-scaling-group-recommendations-request-filters
                         :initform common-lisp:nil)
                        (max-results :initarg :|maxResults| :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         %get-auto-scaling-group-recommendations-request-max-results
                         :initform common-lisp:nil)
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %get-auto-scaling-group-recommendations-request-next-token
                         :initform common-lisp:nil)
                        (auto-scaling-group-arns :initarg
                         :|autoScalingGroupArns| :type
                         (common-lisp:or auto-scaling-group-arns
                                         common-lisp:null)
                         :accessor
                         %get-auto-scaling-group-recommendations-request-auto-scaling-group-arns
                         :initform common-lisp:nil)
                        (account-ids :initarg :|accountIds| :type
                         (common-lisp:or account-ids common-lisp:null)
                         :accessor
                         %get-auto-scaling-group-recommendations-request-account-ids
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-auto-scaling-group-recommendations-request
                    'make-get-auto-scaling-group-recommendations-request))
 (common-lisp:defun make-get-auto-scaling-group-recommendations-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key recommendation-preferences filters
                     max-results next-token auto-scaling-group-arns
                     account-ids)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-auto-scaling-group-recommendations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-auto-scaling-group-recommendations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-auto-scaling-group-recommendations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "accountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'auto-scaling-group-arns))
      (common-lisp:list
       (common-lisp:cons "autoScalingGroupArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-preferences))
      (common-lisp:list
       (common-lisp:cons "recommendationPreferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-auto-scaling-group-recommendations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-auto-scaling-group-recommendations-response
                       common-lisp:nil
                       ((errors :initarg :|errors| :type
                         (common-lisp:or get-recommendation-errors
                                         common-lisp:null)
                         :accessor
                         %get-auto-scaling-group-recommendations-response-errors
                         :initform common-lisp:nil)
                        (auto-scaling-group-recommendations :initarg
                         :|autoScalingGroupRecommendations| :type
                         (common-lisp:or auto-scaling-group-recommendations
                                         common-lisp:null)
                         :accessor
                         %get-auto-scaling-group-recommendations-response-auto-scaling-group-recommendations
                         :initform common-lisp:nil)
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %get-auto-scaling-group-recommendations-response-next-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-auto-scaling-group-recommendations-response
                    'make-get-auto-scaling-group-recommendations-response))
 (common-lisp:defun make-get-auto-scaling-group-recommendations-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key errors auto-scaling-group-recommendations
                     next-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-auto-scaling-group-recommendations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-auto-scaling-group-recommendations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-auto-scaling-group-recommendations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'auto-scaling-group-recommendations))
      (common-lisp:list
       (common-lisp:cons "autoScalingGroupRecommendations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'errors))
      (common-lisp:list
       (common-lisp:cons "errors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-auto-scaling-group-recommendations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-ebsvolume-recommendations-request common-lisp:nil
                       ((account-ids :initarg :|accountIds| :type
                         (common-lisp:or account-ids common-lisp:null)
                         :accessor
                         %get-ebsvolume-recommendations-request-account-ids
                         :initform common-lisp:nil)
                        (filters :initarg :|filters| :type
                         (common-lisp:or ebsfilters common-lisp:null) :accessor
                         %get-ebsvolume-recommendations-request-filters
                         :initform common-lisp:nil)
                        (max-results :initarg :|maxResults| :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         %get-ebsvolume-recommendations-request-max-results
                         :initform common-lisp:nil)
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %get-ebsvolume-recommendations-request-next-token
                         :initform common-lisp:nil)
                        (volume-arns :initarg :|volumeArns| :type
                         (common-lisp:or volume-arns common-lisp:null)
                         :accessor
                         %get-ebsvolume-recommendations-request-volume-arns
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-ebsvolume-recommendations-request
                    'make-get-ebsvolume-recommendations-request))
 (common-lisp:defun make-get-ebsvolume-recommendations-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key account-ids filters max-results
                     next-token volume-arns)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-ebsvolume-recommendations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-ebsvolume-recommendations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-ebsvolume-recommendations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arns))
      (common-lisp:list
       (common-lisp:cons "volumeArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "accountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-ebsvolume-recommendations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-ebsvolume-recommendations-response common-lisp:nil
                       ((errors :initarg :|errors| :type
                         (common-lisp:or get-recommendation-errors
                                         common-lisp:null)
                         :accessor
                         %get-ebsvolume-recommendations-response-errors
                         :initform common-lisp:nil)
                        (volume-recommendations :initarg
                         :|volumeRecommendations| :type
                         (common-lisp:or volume-recommendations
                                         common-lisp:null)
                         :accessor
                         %get-ebsvolume-recommendations-response-volume-recommendations
                         :initform common-lisp:nil)
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %get-ebsvolume-recommendations-response-next-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-ebsvolume-recommendations-response
                    'make-get-ebsvolume-recommendations-response))
 (common-lisp:defun make-get-ebsvolume-recommendations-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key errors volume-recommendations next-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-ebsvolume-recommendations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-ebsvolume-recommendations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-ebsvolume-recommendations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'volume-recommendations))
      (common-lisp:list
       (common-lisp:cons "volumeRecommendations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'errors))
      (common-lisp:list
       (common-lisp:cons "errors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-ebsvolume-recommendations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-ec2instance-recommendations-request common-lisp:nil
                       ((recommendation-preferences :initarg
                         :|recommendationPreferences| :type
                         (common-lisp:or recommendation-preferences
                                         common-lisp:null)
                         :accessor
                         %get-ec2instance-recommendations-request-recommendation-preferences
                         :initform common-lisp:nil)
                        (account-ids :initarg :|accountIds| :type
                         (common-lisp:or account-ids common-lisp:null)
                         :accessor
                         %get-ec2instance-recommendations-request-account-ids
                         :initform common-lisp:nil)
                        (filters :initarg :|filters| :type
                         (common-lisp:or filters common-lisp:null) :accessor
                         %get-ec2instance-recommendations-request-filters
                         :initform common-lisp:nil)
                        (max-results :initarg :|maxResults| :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         %get-ec2instance-recommendations-request-max-results
                         :initform common-lisp:nil)
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %get-ec2instance-recommendations-request-next-token
                         :initform common-lisp:nil)
                        (instance-arns :initarg :|instanceArns| :type
                         (common-lisp:or instance-arns common-lisp:null)
                         :accessor
                         %get-ec2instance-recommendations-request-instance-arns
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-ec2instance-recommendations-request
                    'make-get-ec2instance-recommendations-request))
 (common-lisp:defun make-get-ec2instance-recommendations-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key recommendation-preferences account-ids
                     filters max-results next-token instance-arns)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-ec2instance-recommendations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-ec2instance-recommendations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-ec2instance-recommendations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arns))
      (common-lisp:list
       (common-lisp:cons "instanceArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "accountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-preferences))
      (common-lisp:list
       (common-lisp:cons "recommendationPreferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-ec2instance-recommendations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-ec2instance-recommendations-response common-lisp:nil
                       ((errors :initarg :|errors| :type
                         (common-lisp:or get-recommendation-errors
                                         common-lisp:null)
                         :accessor
                         %get-ec2instance-recommendations-response-errors
                         :initform common-lisp:nil)
                        (instance-recommendations :initarg
                         :|instanceRecommendations| :type
                         (common-lisp:or instance-recommendations
                                         common-lisp:null)
                         :accessor
                         %get-ec2instance-recommendations-response-instance-recommendations
                         :initform common-lisp:nil)
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %get-ec2instance-recommendations-response-next-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-ec2instance-recommendations-response
                    'make-get-ec2instance-recommendations-response))
 (common-lisp:defun make-get-ec2instance-recommendations-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key errors instance-recommendations
                     next-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-ec2instance-recommendations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-ec2instance-recommendations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-ec2instance-recommendations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'instance-recommendations))
      (common-lisp:list
       (common-lisp:cons "instanceRecommendations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'errors))
      (common-lisp:list
       (common-lisp:cons "errors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-ec2instance-recommendations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-ec2recommendation-projected-metrics-request
                       common-lisp:nil
                       ((recommendation-preferences :initarg
                         :|recommendationPreferences| :type
                         (common-lisp:or recommendation-preferences
                                         common-lisp:null)
                         :accessor
                         %get-ec2recommendation-projected-metrics-request-recommendation-preferences
                         :initform common-lisp:nil)
                        (end-time :initarg :|endTime| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %get-ec2recommendation-projected-metrics-request-end-time
                         :initform (common-lisp:error ":endtime is required"))
                        (start-time :initarg :|startTime| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %get-ec2recommendation-projected-metrics-request-start-time
                         :initform
                         (common-lisp:error ":starttime is required"))
                        (period :initarg :|period| :type
                         (common-lisp:or period common-lisp:null) :accessor
                         %get-ec2recommendation-projected-metrics-request-period
                         :initform (common-lisp:error ":period is required"))
                        (stat :initarg :|stat| :type
                         (common-lisp:or metric-statistic common-lisp:null)
                         :accessor
                         %get-ec2recommendation-projected-metrics-request-stat
                         :initform (common-lisp:error ":stat is required"))
                        (instance-arn :initarg :|instanceArn| :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor
                         %get-ec2recommendation-projected-metrics-request-instance-arn
                         :initform
                         (common-lisp:error ":instancearn is required"))))
 (common-lisp:export
  (common-lisp:list 'get-ec2recommendation-projected-metrics-request
                    'make-get-ec2recommendation-projected-metrics-request))
 (common-lisp:defun make-get-ec2recommendation-projected-metrics-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key recommendation-preferences end-time
                     start-time period stat instance-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-ec2recommendation-projected-metrics-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-ec2recommendation-projected-metrics-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-ec2recommendation-projected-metrics-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "instanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stat))
      (common-lisp:list
       (common-lisp:cons "stat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'period))
      (common-lisp:list
       (common-lisp:cons "period"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "startTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "endTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-preferences))
      (common-lisp:list
       (common-lisp:cons "recommendationPreferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-ec2recommendation-projected-metrics-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-ec2recommendation-projected-metrics-response
                       common-lisp:nil
                       ((recommended-option-projected-metrics :initarg
                         :|recommendedOptionProjectedMetrics| :type
                         (common-lisp:or recommended-option-projected-metrics
                                         common-lisp:null)
                         :accessor
                         %get-ec2recommendation-projected-metrics-response-recommended-option-projected-metrics
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-ec2recommendation-projected-metrics-response
                    'make-get-ec2recommendation-projected-metrics-response))
 (common-lisp:defun make-get-ec2recommendation-projected-metrics-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key recommended-option-projected-metrics)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-ec2recommendation-projected-metrics-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-ec2recommendation-projected-metrics-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-ec2recommendation-projected-metrics-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommended-option-projected-metrics))
      (common-lisp:list
       (common-lisp:cons "recommendedOptionProjectedMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-ec2recommendation-projected-metrics-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-ecsservice-recommendation-projected-metrics-request
                       common-lisp:nil
                       ((end-time :initarg :|endTime| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %get-ecsservice-recommendation-projected-metrics-request-end-time
                         :initform (common-lisp:error ":endtime is required"))
                        (start-time :initarg :|startTime| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %get-ecsservice-recommendation-projected-metrics-request-start-time
                         :initform
                         (common-lisp:error ":starttime is required"))
                        (period :initarg :|period| :type
                         (common-lisp:or period common-lisp:null) :accessor
                         %get-ecsservice-recommendation-projected-metrics-request-period
                         :initform (common-lisp:error ":period is required"))
                        (stat :initarg :|stat| :type
                         (common-lisp:or metric-statistic common-lisp:null)
                         :accessor
                         %get-ecsservice-recommendation-projected-metrics-request-stat
                         :initform (common-lisp:error ":stat is required"))
                        (service-arn :initarg :|serviceArn| :type
                         (common-lisp:or service-arn common-lisp:null)
                         :accessor
                         %get-ecsservice-recommendation-projected-metrics-request-service-arn
                         :initform
                         (common-lisp:error ":servicearn is required"))))
 (common-lisp:export
  (common-lisp:list 'get-ecsservice-recommendation-projected-metrics-request
                    'make-get-ecsservice-recommendation-projected-metrics-request))
 (common-lisp:defun make-get-ecsservice-recommendation-projected-metrics-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key end-time start-time period stat
                     service-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-ecsservice-recommendation-projected-metrics-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-ecsservice-recommendation-projected-metrics-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-ecsservice-recommendation-projected-metrics-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-arn))
      (common-lisp:list
       (common-lisp:cons "serviceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stat))
      (common-lisp:list
       (common-lisp:cons "stat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'period))
      (common-lisp:list
       (common-lisp:cons "period"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "startTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "endTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-ecsservice-recommendation-projected-metrics-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-ecsservice-recommendation-projected-metrics-response
                       common-lisp:nil
                       ((recommended-option-projected-metrics :initarg
                         :|recommendedOptionProjectedMetrics| :type
                         (common-lisp:or
                          ecsservice-recommended-option-projected-metrics
                          common-lisp:null)
                         :accessor
                         %get-ecsservice-recommendation-projected-metrics-response-recommended-option-projected-metrics
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-ecsservice-recommendation-projected-metrics-response
                    'make-get-ecsservice-recommendation-projected-metrics-response))
 (common-lisp:defun make-get-ecsservice-recommendation-projected-metrics-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key recommended-option-projected-metrics)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-ecsservice-recommendation-projected-metrics-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-ecsservice-recommendation-projected-metrics-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-ecsservice-recommendation-projected-metrics-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommended-option-projected-metrics))
      (common-lisp:list
       (common-lisp:cons "recommendedOptionProjectedMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-ecsservice-recommendation-projected-metrics-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-ecsservice-recommendations-request common-lisp:nil
                       ((account-ids :initarg :|accountIds| :type
                         (common-lisp:or account-ids common-lisp:null)
                         :accessor
                         %get-ecsservice-recommendations-request-account-ids
                         :initform common-lisp:nil)
                        (filters :initarg :|filters| :type
                         (common-lisp:or ecsservice-recommendation-filters
                                         common-lisp:null)
                         :accessor
                         %get-ecsservice-recommendations-request-filters
                         :initform common-lisp:nil)
                        (max-results :initarg :|maxResults| :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         %get-ecsservice-recommendations-request-max-results
                         :initform common-lisp:nil)
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %get-ecsservice-recommendations-request-next-token
                         :initform common-lisp:nil)
                        (service-arns :initarg :|serviceArns| :type
                         (common-lisp:or service-arns common-lisp:null)
                         :accessor
                         %get-ecsservice-recommendations-request-service-arns
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-ecsservice-recommendations-request
                    'make-get-ecsservice-recommendations-request))
 (common-lisp:defun make-get-ecsservice-recommendations-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key account-ids filters max-results
                     next-token service-arns)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-ecsservice-recommendations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-ecsservice-recommendations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-ecsservice-recommendations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-arns))
      (common-lisp:list
       (common-lisp:cons "serviceArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "accountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-ecsservice-recommendations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-ecsservice-recommendations-response common-lisp:nil
                       ((errors :initarg :|errors| :type
                         (common-lisp:or get-recommendation-errors
                                         common-lisp:null)
                         :accessor
                         %get-ecsservice-recommendations-response-errors
                         :initform common-lisp:nil)
                        (ecs-service-recommendations :initarg
                         :|ecsServiceRecommendations| :type
                         (common-lisp:or ecsservice-recommendations
                                         common-lisp:null)
                         :accessor
                         %get-ecsservice-recommendations-response-ecs-service-recommendations
                         :initform common-lisp:nil)
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %get-ecsservice-recommendations-response-next-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-ecsservice-recommendations-response
                    'make-get-ecsservice-recommendations-response))
 (common-lisp:defun make-get-ecsservice-recommendations-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key errors ecs-service-recommendations
                     next-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-ecsservice-recommendations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-ecsservice-recommendations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-ecsservice-recommendations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ecs-service-recommendations))
      (common-lisp:list
       (common-lisp:cons "ecsServiceRecommendations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'errors))
      (common-lisp:list
       (common-lisp:cons "errors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-ecsservice-recommendations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-effective-recommendation-preferences-request
                       common-lisp:nil
                       ((resource-arn :initarg :|resourceArn| :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         %get-effective-recommendation-preferences-request-resource-arn
                         :initform
                         (common-lisp:error ":resourcearn is required"))))
 (common-lisp:export
  (common-lisp:list 'get-effective-recommendation-preferences-request
                    'make-get-effective-recommendation-preferences-request))
 (common-lisp:defun make-get-effective-recommendation-preferences-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-effective-recommendation-preferences-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-effective-recommendation-preferences-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-effective-recommendation-preferences-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "resourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-effective-recommendation-preferences-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-effective-recommendation-preferences-response
                       common-lisp:nil
                       ((external-metrics-preference :initarg
                         :|externalMetricsPreference| :type
                         (common-lisp:or external-metrics-preference
                                         common-lisp:null)
                         :accessor
                         %get-effective-recommendation-preferences-response-external-metrics-preference
                         :initform common-lisp:nil)
                        (enhanced-infrastructure-metrics :initarg
                         :|enhancedInfrastructureMetrics| :type
                         (common-lisp:or enhanced-infrastructure-metrics
                                         common-lisp:null)
                         :accessor
                         %get-effective-recommendation-preferences-response-enhanced-infrastructure-metrics
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-effective-recommendation-preferences-response
                    'make-get-effective-recommendation-preferences-response))
 (common-lisp:defun make-get-effective-recommendation-preferences-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key external-metrics-preference
                     enhanced-infrastructure-metrics)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-effective-recommendation-preferences-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-effective-recommendation-preferences-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-effective-recommendation-preferences-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enhanced-infrastructure-metrics))
      (common-lisp:list
       (common-lisp:cons "enhancedInfrastructureMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'external-metrics-preference))
      (common-lisp:list
       (common-lisp:cons "externalMetricsPreference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-effective-recommendation-preferences-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-enrollment-status-request common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'get-enrollment-status-request
                    'make-get-enrollment-status-request))
 (common-lisp:defun make-get-enrollment-status-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-enrollment-status-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-enrollment-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-enrollment-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-enrollment-status-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-enrollment-status-response common-lisp:nil
                       ((number-of-member-accounts-opted-in :initarg
                         :|numberOfMemberAccountsOptedIn| :type
                         (common-lisp:or number-of-member-accounts-opted-in
                                         common-lisp:null)
                         :accessor
                         %get-enrollment-status-response-number-of-member-accounts-opted-in
                         :initform common-lisp:nil)
                        (last-updated-timestamp :initarg
                         :|lastUpdatedTimestamp| :type
                         (common-lisp:or last-updated-timestamp
                                         common-lisp:null)
                         :accessor
                         %get-enrollment-status-response-last-updated-timestamp
                         :initform common-lisp:nil)
                        (member-accounts-enrolled :initarg
                         :|memberAccountsEnrolled| :type
                         (common-lisp:or member-accounts-enrolled
                                         common-lisp:null)
                         :accessor
                         %get-enrollment-status-response-member-accounts-enrolled
                         :initform common-lisp:nil)
                        (status-reason :initarg :|statusReason| :type
                         (common-lisp:or status-reason common-lisp:null)
                         :accessor
                         %get-enrollment-status-response-status-reason
                         :initform common-lisp:nil)
                        (status :initarg :|status| :type
                         (common-lisp:or status common-lisp:null) :accessor
                         %get-enrollment-status-response-status :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-enrollment-status-response
                    'make-get-enrollment-status-response))
 (common-lisp:defun make-get-enrollment-status-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key number-of-member-accounts-opted-in
                     last-updated-timestamp member-accounts-enrolled
                     status-reason status)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-enrollment-status-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-enrollment-status-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-enrollment-status-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-reason))
      (common-lisp:list
       (common-lisp:cons "statusReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'member-accounts-enrolled))
      (common-lisp:list
       (common-lisp:cons "memberAccountsEnrolled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-of-member-accounts-opted-in))
      (common-lisp:list
       (common-lisp:cons "numberOfMemberAccountsOptedIn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-enrollment-status-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-enrollment-statuses-for-organization-request
                       common-lisp:nil
                       ((max-results :initarg :|maxResults| :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         %get-enrollment-statuses-for-organization-request-max-results
                         :initform common-lisp:nil)
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %get-enrollment-statuses-for-organization-request-next-token
                         :initform common-lisp:nil)
                        (filters :initarg :|filters| :type
                         (common-lisp:or enrollment-filters common-lisp:null)
                         :accessor
                         %get-enrollment-statuses-for-organization-request-filters
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-enrollment-statuses-for-organization-request
                    'make-get-enrollment-statuses-for-organization-request))
 (common-lisp:defun make-get-enrollment-statuses-for-organization-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key max-results next-token filters)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-enrollment-statuses-for-organization-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-enrollment-statuses-for-organization-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-enrollment-statuses-for-organization-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-enrollment-statuses-for-organization-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-enrollment-statuses-for-organization-response
                       common-lisp:nil
                       ((next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %get-enrollment-statuses-for-organization-response-next-token
                         :initform common-lisp:nil)
                        (account-enrollment-statuses :initarg
                         :|accountEnrollmentStatuses| :type
                         (common-lisp:or account-enrollment-statuses
                                         common-lisp:null)
                         :accessor
                         %get-enrollment-statuses-for-organization-response-account-enrollment-statuses
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-enrollment-statuses-for-organization-response
                    'make-get-enrollment-statuses-for-organization-response))
 (common-lisp:defun make-get-enrollment-statuses-for-organization-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token account-enrollment-statuses)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-enrollment-statuses-for-organization-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-enrollment-statuses-for-organization-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-enrollment-statuses-for-organization-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'account-enrollment-statuses))
      (common-lisp:list
       (common-lisp:cons "accountEnrollmentStatuses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-enrollment-statuses-for-organization-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-lambda-function-recommendations-request
                       common-lisp:nil
                       ((max-results :initarg :|maxResults| :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         %get-lambda-function-recommendations-request-max-results
                         :initform common-lisp:nil)
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %get-lambda-function-recommendations-request-next-token
                         :initform common-lisp:nil)
                        (filters :initarg :|filters| :type
                         (common-lisp:or lambda-function-recommendation-filters
                                         common-lisp:null)
                         :accessor
                         %get-lambda-function-recommendations-request-filters
                         :initform common-lisp:nil)
                        (account-ids :initarg :|accountIds| :type
                         (common-lisp:or account-ids common-lisp:null)
                         :accessor
                         %get-lambda-function-recommendations-request-account-ids
                         :initform common-lisp:nil)
                        (function-arns :initarg :|functionArns| :type
                         (common-lisp:or function-arns common-lisp:null)
                         :accessor
                         %get-lambda-function-recommendations-request-function-arns
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-lambda-function-recommendations-request
                    'make-get-lambda-function-recommendations-request))
 (common-lisp:defun make-get-lambda-function-recommendations-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key max-results next-token filters
                     account-ids function-arns)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-lambda-function-recommendations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-lambda-function-recommendations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-lambda-function-recommendations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'function-arns))
      (common-lisp:list
       (common-lisp:cons "functionArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "accountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-lambda-function-recommendations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-lambda-function-recommendations-response
                       common-lisp:nil
                       ((lambda-function-recommendations :initarg
                         :|lambdaFunctionRecommendations| :type
                         (common-lisp:or lambda-function-recommendations
                                         common-lisp:null)
                         :accessor
                         %get-lambda-function-recommendations-response-lambda-function-recommendations
                         :initform common-lisp:nil)
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %get-lambda-function-recommendations-response-next-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-lambda-function-recommendations-response
                    'make-get-lambda-function-recommendations-response))
 (common-lisp:defun make-get-lambda-function-recommendations-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key lambda-function-recommendations
                     next-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-lambda-function-recommendations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-lambda-function-recommendations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-lambda-function-recommendations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'lambda-function-recommendations))
      (common-lisp:list
       (common-lisp:cons "lambdaFunctionRecommendations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-lambda-function-recommendations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-recommendation-error common-lisp:nil
                       ((message :initarg :|message| :type
                         (common-lisp:or message common-lisp:null) :accessor
                         %get-recommendation-error-message :initform
                         common-lisp:nil)
                        (code :initarg :|code| :type
                         (common-lisp:or code common-lisp:null) :accessor
                         %get-recommendation-error-code :initform
                         common-lisp:nil)
                        (identifier :initarg :|identifier| :type
                         (common-lisp:or identifier common-lisp:null) :accessor
                         %get-recommendation-error-identifier :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-recommendation-error 'make-get-recommendation-error))
 (common-lisp:defun make-get-recommendation-error
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key message code identifier)
   (common-lisp:apply #'common-lisp:make-instance 'get-recommendation-error
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-error))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-error))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identifier))
      (common-lisp:list
       (common-lisp:cons "identifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'code))
      (common-lisp:list
       (common-lisp:cons "code"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-error))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype get-recommendation-errors ()
   '(trivial-types:proper-list get-recommendation-error))
 (common-lisp:defun |make-get-recommendation-errors|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            get-recommendation-error))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass get-recommendation-preferences-request common-lisp:nil
                       ((max-results :initarg :|maxResults| :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         %get-recommendation-preferences-request-max-results
                         :initform common-lisp:nil)
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %get-recommendation-preferences-request-next-token
                         :initform common-lisp:nil)
                        (scope :initarg :|scope| :type
                         (common-lisp:or scope common-lisp:null) :accessor
                         %get-recommendation-preferences-request-scope
                         :initform common-lisp:nil)
                        (resource-type :initarg :|resourceType| :type
                         (common-lisp:or resource-type common-lisp:null)
                         :accessor
                         %get-recommendation-preferences-request-resource-type
                         :initform
                         (common-lisp:error ":resourcetype is required"))))
 (common-lisp:export
  (common-lisp:list 'get-recommendation-preferences-request
                    'make-get-recommendation-preferences-request))
 (common-lisp:defun make-get-recommendation-preferences-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key max-results next-token scope
                     resource-type)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-recommendation-preferences-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-preferences-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-preferences-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "resourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scope))
      (common-lisp:list
       (common-lisp:cons "scope"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-preferences-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-recommendation-preferences-response common-lisp:nil
                       ((recommendation-preferences-details :initarg
                         :|recommendationPreferencesDetails| :type
                         (common-lisp:or recommendation-preferences-details
                                         common-lisp:null)
                         :accessor
                         %get-recommendation-preferences-response-recommendation-preferences-details
                         :initform common-lisp:nil)
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %get-recommendation-preferences-response-next-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-recommendation-preferences-response
                    'make-get-recommendation-preferences-response))
 (common-lisp:defun make-get-recommendation-preferences-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key recommendation-preferences-details
                     next-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-recommendation-preferences-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-preferences-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-preferences-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-preferences-details))
      (common-lisp:list
       (common-lisp:cons "recommendationPreferencesDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-preferences-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-recommendation-summaries-request common-lisp:nil
                       ((max-results :initarg :|maxResults| :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         %get-recommendation-summaries-request-max-results
                         :initform common-lisp:nil)
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %get-recommendation-summaries-request-next-token
                         :initform common-lisp:nil)
                        (account-ids :initarg :|accountIds| :type
                         (common-lisp:or account-ids common-lisp:null)
                         :accessor
                         %get-recommendation-summaries-request-account-ids
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-recommendation-summaries-request
                    'make-get-recommendation-summaries-request))
 (common-lisp:defun make-get-recommendation-summaries-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key max-results next-token account-ids)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-recommendation-summaries-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-summaries-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-summaries-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "accountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-summaries-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-recommendation-summaries-response common-lisp:nil
                       ((recommendation-summaries :initarg
                         :|recommendationSummaries| :type
                         (common-lisp:or recommendation-summaries
                                         common-lisp:null)
                         :accessor
                         %get-recommendation-summaries-response-recommendation-summaries
                         :initform common-lisp:nil)
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %get-recommendation-summaries-response-next-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-recommendation-summaries-response
                    'make-get-recommendation-summaries-response))
 (common-lisp:defun make-get-recommendation-summaries-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key recommendation-summaries next-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-recommendation-summaries-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-summaries-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-summaries-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-summaries))
      (common-lisp:list
       (common-lisp:cons "recommendationSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-summaries-response))
   common-lisp:nil))
(common-lisp:deftype high () 'common-lisp:integer)
(common-lisp:deftype identifier () 'common-lisp:string)
(common-lisp:deftype include-member-accounts () 'common-lisp:boolean)
(common-lisp:deftype inferred-workload-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype inferred-workload-types ()
   '(trivial-types:proper-list inferred-workload-type))
 (common-lisp:defun |make-inferred-workload-types|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list inferred-workload-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype inferred-workload-types-preference () 'common-lisp:string)
(common-lisp:deftype instance-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype instance-arns ()
   '(trivial-types:proper-list instance-arn))
 (common-lisp:defun |make-instance-arns|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list instance-arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype instance-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass instance-recommendation common-lisp:nil
                       ((instance-state :initarg :|instanceState| :type
                         (common-lisp:or instance-state common-lisp:null)
                         :accessor %instance-recommendation-instance-state
                         :initform common-lisp:nil)
                        (inferred-workload-types :initarg
                         :|inferredWorkloadTypes| :type
                         (common-lisp:or inferred-workload-types
                                         common-lisp:null)
                         :accessor
                         %instance-recommendation-inferred-workload-types
                         :initform common-lisp:nil)
                        (effective-recommendation-preferences :initarg
                         :|effectiveRecommendationPreferences| :type
                         (common-lisp:or effective-recommendation-preferences
                                         common-lisp:null)
                         :accessor
                         %instance-recommendation-effective-recommendation-preferences
                         :initform common-lisp:nil)
                        (current-performance-risk :initarg
                         :|currentPerformanceRisk| :type
                         (common-lisp:or current-performance-risk
                                         common-lisp:null)
                         :accessor
                         %instance-recommendation-current-performance-risk
                         :initform common-lisp:nil)
                        (last-refresh-timestamp :initarg
                         :|lastRefreshTimestamp| :type
                         (common-lisp:or last-refresh-timestamp
                                         common-lisp:null)
                         :accessor
                         %instance-recommendation-last-refresh-timestamp
                         :initform common-lisp:nil)
                        (recommendation-sources :initarg
                         :|recommendationSources| :type
                         (common-lisp:or recommendation-sources
                                         common-lisp:null)
                         :accessor
                         %instance-recommendation-recommendation-sources
                         :initform common-lisp:nil)
                        (recommendation-options :initarg
                         :|recommendationOptions| :type
                         (common-lisp:or recommendation-options
                                         common-lisp:null)
                         :accessor
                         %instance-recommendation-recommendation-options
                         :initform common-lisp:nil)
                        (look-back-period-in-days :initarg
                         :|lookBackPeriodInDays| :type
                         (common-lisp:or look-back-period-in-days
                                         common-lisp:null)
                         :accessor
                         %instance-recommendation-look-back-period-in-days
                         :initform common-lisp:nil)
                        (utilization-metrics :initarg :|utilizationMetrics|
                         :type
                         (common-lisp:or utilization-metrics common-lisp:null)
                         :accessor %instance-recommendation-utilization-metrics
                         :initform common-lisp:nil)
                        (finding-reason-codes :initarg :|findingReasonCodes|
                         :type
                         (common-lisp:or
                          instance-recommendation-finding-reason-codes
                          common-lisp:null)
                         :accessor
                         %instance-recommendation-finding-reason-codes
                         :initform common-lisp:nil)
                        (finding :initarg :|finding| :type
                         (common-lisp:or finding common-lisp:null) :accessor
                         %instance-recommendation-finding :initform
                         common-lisp:nil)
                        (current-instance-type :initarg :|currentInstanceType|
                         :type
                         (common-lisp:or current-instance-type
                                         common-lisp:null)
                         :accessor
                         %instance-recommendation-current-instance-type
                         :initform common-lisp:nil)
                        (instance-name :initarg :|instanceName| :type
                         (common-lisp:or instance-name common-lisp:null)
                         :accessor %instance-recommendation-instance-name
                         :initform common-lisp:nil)
                        (account-id :initarg :|accountId| :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         %instance-recommendation-account-id :initform
                         common-lisp:nil)
                        (instance-arn :initarg :|instanceArn| :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor %instance-recommendation-instance-arn
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'instance-recommendation 'make-instance-recommendation))
 (common-lisp:defun make-instance-recommendation
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key instance-state inferred-workload-types
                     effective-recommendation-preferences
                     current-performance-risk last-refresh-timestamp
                     recommendation-sources recommendation-options
                     look-back-period-in-days utilization-metrics
                     finding-reason-codes finding current-instance-type
                     instance-name account-id instance-arn)
   (common-lisp:apply #'common-lisp:make-instance 'instance-recommendation
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          instance-recommendation))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          instance-recommendation))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "instanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-name))
      (common-lisp:list
       (common-lisp:cons "instanceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'current-instance-type))
      (common-lisp:list
       (common-lisp:cons "currentInstanceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'finding))
      (common-lisp:list
       (common-lisp:cons "finding"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'finding-reason-codes))
      (common-lisp:list
       (common-lisp:cons "findingReasonCodes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'utilization-metrics))
      (common-lisp:list
       (common-lisp:cons "utilizationMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'look-back-period-in-days))
      (common-lisp:list
       (common-lisp:cons "lookBackPeriodInDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-options))
      (common-lisp:list
       (common-lisp:cons "recommendationOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-sources))
      (common-lisp:list
       (common-lisp:cons "recommendationSources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-refresh-timestamp))
      (common-lisp:list
       (common-lisp:cons "lastRefreshTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'current-performance-risk))
      (common-lisp:list
       (common-lisp:cons "currentPerformanceRisk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'effective-recommendation-preferences))
      (common-lisp:list
       (common-lisp:cons "effectiveRecommendationPreferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'inferred-workload-types))
      (common-lisp:list
       (common-lisp:cons "inferredWorkloadTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-state))
      (common-lisp:list
       (common-lisp:cons "instanceState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          instance-recommendation))
   common-lisp:nil))
(common-lisp:deftype instance-recommendation-finding-reason-code ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype instance-recommendation-finding-reason-codes ()
   '(trivial-types:proper-list instance-recommendation-finding-reason-code))
 (common-lisp:defun |make-instance-recommendation-finding-reason-codes|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            instance-recommendation-finding-reason-code))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass instance-recommendation-option common-lisp:nil
                       ((migration-effort :initarg :|migrationEffort| :type
                         (common-lisp:or migration-effort common-lisp:null)
                         :accessor
                         %instance-recommendation-option-migration-effort
                         :initform common-lisp:nil)
                        (savings-opportunity :initarg :|savingsOpportunity|
                         :type
                         (common-lisp:or savings-opportunity common-lisp:null)
                         :accessor
                         %instance-recommendation-option-savings-opportunity
                         :initform common-lisp:nil)
                        (rank :initarg :|rank| :type
                         (common-lisp:or rank common-lisp:null) :accessor
                         %instance-recommendation-option-rank :initform
                         common-lisp:nil)
                        (performance-risk :initarg :|performanceRisk| :type
                         (common-lisp:or performance-risk common-lisp:null)
                         :accessor
                         %instance-recommendation-option-performance-risk
                         :initform common-lisp:nil)
                        (platform-differences :initarg :|platformDifferences|
                         :type
                         (common-lisp:or platform-differences common-lisp:null)
                         :accessor
                         %instance-recommendation-option-platform-differences
                         :initform common-lisp:nil)
                        (projected-utilization-metrics :initarg
                         :|projectedUtilizationMetrics| :type
                         (common-lisp:or projected-utilization-metrics
                                         common-lisp:null)
                         :accessor
                         %instance-recommendation-option-projected-utilization-metrics
                         :initform common-lisp:nil)
                        (instance-type :initarg :|instanceType| :type
                         (common-lisp:or instance-type common-lisp:null)
                         :accessor
                         %instance-recommendation-option-instance-type
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'instance-recommendation-option
                    'make-instance-recommendation-option))
 (common-lisp:defun make-instance-recommendation-option
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key migration-effort savings-opportunity rank
                     performance-risk platform-differences
                     projected-utilization-metrics instance-type)
   (common-lisp:apply #'common-lisp:make-instance
                      'instance-recommendation-option
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          instance-recommendation-option))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          instance-recommendation-option))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-type))
      (common-lisp:list
       (common-lisp:cons "instanceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'projected-utilization-metrics))
      (common-lisp:list
       (common-lisp:cons "projectedUtilizationMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'platform-differences))
      (common-lisp:list
       (common-lisp:cons "platformDifferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'performance-risk))
      (common-lisp:list
       (common-lisp:cons "performanceRisk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rank))
      (common-lisp:list
       (common-lisp:cons "rank"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'savings-opportunity))
      (common-lisp:list
       (common-lisp:cons "savingsOpportunity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'migration-effort))
      (common-lisp:list
       (common-lisp:cons "migrationEffort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          instance-recommendation-option))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype instance-recommendations ()
   '(trivial-types:proper-list instance-recommendation))
 (common-lisp:defun |make-instance-recommendations|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list instance-recommendation))
   aws-sdk/generator/shape::members))
(common-lisp:deftype instance-state () 'common-lisp:string)
(common-lisp:deftype instance-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (compute-optimizer-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       internal-server-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-parameter-value-exception
     (compute-optimizer-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       invalid-parameter-value-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-parameter-value-exception
                    'invalid-parameter-value-exception-message)))
(common-lisp:progn
 (common-lisp:defclass job-filter common-lisp:nil
                       ((values :initarg :|values| :type
                         (common-lisp:or filter-values common-lisp:null)
                         :accessor %job-filter-values :initform
                         common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or job-filter-name common-lisp:null)
                         :accessor %job-filter-name :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'job-filter 'make-job-filter))
 (common-lisp:defun make-job-filter
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key values name)
   (common-lisp:apply #'common-lisp:make-instance 'job-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input job-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input job-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input job-filter))
   common-lisp:nil))
(common-lisp:deftype job-filter-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype job-filters () '(trivial-types:proper-list job-filter))
 (common-lisp:defun |make-job-filters|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list job-filter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype job-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype job-ids () '(trivial-types:proper-list job-id))
 (common-lisp:defun |make-job-ids|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list job-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype job-status () 'common-lisp:string)
(common-lisp:deftype lambda-function-memory-metric-name () 'common-lisp:string)
(common-lisp:deftype lambda-function-memory-metric-statistic ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass lambda-function-memory-projected-metric common-lisp:nil
                       ((value :initarg :|value| :type
                         (common-lisp:or metric-value common-lisp:null)
                         :accessor
                         %lambda-function-memory-projected-metric-value
                         :initform common-lisp:nil)
                        (statistic :initarg :|statistic| :type
                         (common-lisp:or
                          lambda-function-memory-metric-statistic
                          common-lisp:null)
                         :accessor
                         %lambda-function-memory-projected-metric-statistic
                         :initform common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or lambda-function-memory-metric-name
                                         common-lisp:null)
                         :accessor
                         %lambda-function-memory-projected-metric-name
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'lambda-function-memory-projected-metric
                    'make-lambda-function-memory-projected-metric))
 (common-lisp:defun make-lambda-function-memory-projected-metric
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key value statistic name)
   (common-lisp:apply #'common-lisp:make-instance
                      'lambda-function-memory-projected-metric
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-memory-projected-metric))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-memory-projected-metric))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'statistic))
      (common-lisp:list
       (common-lisp:cons "statistic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-memory-projected-metric))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype lambda-function-memory-projected-metrics ()
   '(trivial-types:proper-list lambda-function-memory-projected-metric))
 (common-lisp:defun |make-lambda-function-memory-projected-metrics|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            lambda-function-memory-projected-metric))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass lambda-function-memory-recommendation-option
                       common-lisp:nil
                       ((savings-opportunity :initarg :|savingsOpportunity|
                         :type
                         (common-lisp:or savings-opportunity common-lisp:null)
                         :accessor
                         %lambda-function-memory-recommendation-option-savings-opportunity
                         :initform common-lisp:nil)
                        (projected-utilization-metrics :initarg
                         :|projectedUtilizationMetrics| :type
                         (common-lisp:or
                          lambda-function-memory-projected-metrics
                          common-lisp:null)
                         :accessor
                         %lambda-function-memory-recommendation-option-projected-utilization-metrics
                         :initform common-lisp:nil)
                        (memory-size :initarg :|memorySize| :type
                         (common-lisp:or memory-size common-lisp:null)
                         :accessor
                         %lambda-function-memory-recommendation-option-memory-size
                         :initform common-lisp:nil)
                        (rank :initarg :|rank| :type
                         (common-lisp:or rank common-lisp:null) :accessor
                         %lambda-function-memory-recommendation-option-rank
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'lambda-function-memory-recommendation-option
                    'make-lambda-function-memory-recommendation-option))
 (common-lisp:defun make-lambda-function-memory-recommendation-option
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key savings-opportunity
                     projected-utilization-metrics memory-size rank)
   (common-lisp:apply #'common-lisp:make-instance
                      'lambda-function-memory-recommendation-option
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-memory-recommendation-option))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-memory-recommendation-option))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rank))
      (common-lisp:list
       (common-lisp:cons "rank"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'memory-size))
      (common-lisp:list
       (common-lisp:cons "memorySize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'projected-utilization-metrics))
      (common-lisp:list
       (common-lisp:cons "projectedUtilizationMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'savings-opportunity))
      (common-lisp:list
       (common-lisp:cons "savingsOpportunity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-memory-recommendation-option))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype lambda-function-memory-recommendation-options ()
   '(trivial-types:proper-list lambda-function-memory-recommendation-option))
 (common-lisp:defun |make-lambda-function-memory-recommendation-options|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            lambda-function-memory-recommendation-option))
   aws-sdk/generator/shape::members))
(common-lisp:deftype lambda-function-metric-name () 'common-lisp:string)
(common-lisp:deftype lambda-function-metric-statistic () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass lambda-function-recommendation common-lisp:nil
                       ((current-performance-risk :initarg
                         :|currentPerformanceRisk| :type
                         (common-lisp:or current-performance-risk
                                         common-lisp:null)
                         :accessor
                         %lambda-function-recommendation-current-performance-risk
                         :initform common-lisp:nil)
                        (memory-size-recommendation-options :initarg
                         :|memorySizeRecommendationOptions| :type
                         (common-lisp:or
                          lambda-function-memory-recommendation-options
                          common-lisp:null)
                         :accessor
                         %lambda-function-recommendation-memory-size-recommendation-options
                         :initform common-lisp:nil)
                        (finding-reason-codes :initarg :|findingReasonCodes|
                         :type
                         (common-lisp:or
                          lambda-function-recommendation-finding-reason-codes
                          common-lisp:null)
                         :accessor
                         %lambda-function-recommendation-finding-reason-codes
                         :initform common-lisp:nil)
                        (finding :initarg :|finding| :type
                         (common-lisp:or lambda-function-recommendation-finding
                                         common-lisp:null)
                         :accessor %lambda-function-recommendation-finding
                         :initform common-lisp:nil)
                        (last-refresh-timestamp :initarg
                         :|lastRefreshTimestamp| :type
                         (common-lisp:or last-refresh-timestamp
                                         common-lisp:null)
                         :accessor
                         %lambda-function-recommendation-last-refresh-timestamp
                         :initform common-lisp:nil)
                        (lookback-period-in-days :initarg
                         :|lookbackPeriodInDays| :type
                         (common-lisp:or look-back-period-in-days
                                         common-lisp:null)
                         :accessor
                         %lambda-function-recommendation-lookback-period-in-days
                         :initform common-lisp:nil)
                        (utilization-metrics :initarg :|utilizationMetrics|
                         :type
                         (common-lisp:or lambda-function-utilization-metrics
                                         common-lisp:null)
                         :accessor
                         %lambda-function-recommendation-utilization-metrics
                         :initform common-lisp:nil)
                        (number-of-invocations :initarg :|numberOfInvocations|
                         :type
                         (common-lisp:or number-of-invocations
                                         common-lisp:null)
                         :accessor
                         %lambda-function-recommendation-number-of-invocations
                         :initform common-lisp:nil)
                        (current-memory-size :initarg :|currentMemorySize|
                         :type (common-lisp:or memory-size common-lisp:null)
                         :accessor
                         %lambda-function-recommendation-current-memory-size
                         :initform common-lisp:nil)
                        (account-id :initarg :|accountId| :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         %lambda-function-recommendation-account-id :initform
                         common-lisp:nil)
                        (function-version :initarg :|functionVersion| :type
                         (common-lisp:or function-version common-lisp:null)
                         :accessor
                         %lambda-function-recommendation-function-version
                         :initform common-lisp:nil)
                        (function-arn :initarg :|functionArn| :type
                         (common-lisp:or function-arn common-lisp:null)
                         :accessor %lambda-function-recommendation-function-arn
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'lambda-function-recommendation
                    'make-lambda-function-recommendation))
 (common-lisp:defun make-lambda-function-recommendation
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key current-performance-risk
                     memory-size-recommendation-options finding-reason-codes
                     finding last-refresh-timestamp lookback-period-in-days
                     utilization-metrics number-of-invocations
                     current-memory-size account-id function-version
                     function-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'lambda-function-recommendation
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-recommendation))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-recommendation))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'function-arn))
      (common-lisp:list
       (common-lisp:cons "functionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'function-version))
      (common-lisp:list
       (common-lisp:cons "functionVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'current-memory-size))
      (common-lisp:list
       (common-lisp:cons "currentMemorySize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-of-invocations))
      (common-lisp:list
       (common-lisp:cons "numberOfInvocations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'utilization-metrics))
      (common-lisp:list
       (common-lisp:cons "utilizationMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'lookback-period-in-days))
      (common-lisp:list
       (common-lisp:cons "lookbackPeriodInDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-refresh-timestamp))
      (common-lisp:list
       (common-lisp:cons "lastRefreshTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'finding))
      (common-lisp:list
       (common-lisp:cons "finding"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'finding-reason-codes))
      (common-lisp:list
       (common-lisp:cons "findingReasonCodes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'memory-size-recommendation-options))
      (common-lisp:list
       (common-lisp:cons "memorySizeRecommendationOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'current-performance-risk))
      (common-lisp:list
       (common-lisp:cons "currentPerformanceRisk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-recommendation))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass lambda-function-recommendation-filter common-lisp:nil
                       ((values :initarg :|values| :type
                         (common-lisp:or filter-values common-lisp:null)
                         :accessor
                         %lambda-function-recommendation-filter-values
                         :initform common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or
                          lambda-function-recommendation-filter-name
                          common-lisp:null)
                         :accessor %lambda-function-recommendation-filter-name
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'lambda-function-recommendation-filter
                    'make-lambda-function-recommendation-filter))
 (common-lisp:defun make-lambda-function-recommendation-filter
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key values name)
   (common-lisp:apply #'common-lisp:make-instance
                      'lambda-function-recommendation-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-recommendation-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-recommendation-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-recommendation-filter))
   common-lisp:nil))
(common-lisp:deftype lambda-function-recommendation-filter-name ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype lambda-function-recommendation-filters ()
   '(trivial-types:proper-list lambda-function-recommendation-filter))
 (common-lisp:defun |make-lambda-function-recommendation-filters|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            lambda-function-recommendation-filter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype lambda-function-recommendation-finding ()
  'common-lisp:string)
(common-lisp:deftype lambda-function-recommendation-finding-reason-code ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype lambda-function-recommendation-finding-reason-codes ()
   '(trivial-types:proper-list
     lambda-function-recommendation-finding-reason-code))
 (common-lisp:defun |make-lambda-function-recommendation-finding-reason-codes|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            lambda-function-recommendation-finding-reason-code))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype lambda-function-recommendations ()
   '(trivial-types:proper-list lambda-function-recommendation))
 (common-lisp:defun |make-lambda-function-recommendations|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            lambda-function-recommendation))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass lambda-function-utilization-metric common-lisp:nil
                       ((value :initarg :|value| :type
                         (common-lisp:or metric-value common-lisp:null)
                         :accessor %lambda-function-utilization-metric-value
                         :initform common-lisp:nil)
                        (statistic :initarg :|statistic| :type
                         (common-lisp:or lambda-function-metric-statistic
                                         common-lisp:null)
                         :accessor
                         %lambda-function-utilization-metric-statistic
                         :initform common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or lambda-function-metric-name
                                         common-lisp:null)
                         :accessor %lambda-function-utilization-metric-name
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'lambda-function-utilization-metric
                    'make-lambda-function-utilization-metric))
 (common-lisp:defun make-lambda-function-utilization-metric
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key value statistic name)
   (common-lisp:apply #'common-lisp:make-instance
                      'lambda-function-utilization-metric
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-utilization-metric))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-utilization-metric))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'statistic))
      (common-lisp:list
       (common-lisp:cons "statistic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-utilization-metric))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype lambda-function-utilization-metrics ()
   '(trivial-types:proper-list lambda-function-utilization-metric))
 (common-lisp:defun |make-lambda-function-utilization-metrics|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            lambda-function-utilization-metric))
   aws-sdk/generator/shape::members))
(common-lisp:deftype last-refresh-timestamp () 'common-lisp:string)
(common-lisp:deftype last-updated-timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition limit-exceeded-exception
     (compute-optimizer-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       limit-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception
                    'limit-exceeded-exception-message)))
(common-lisp:deftype look-back-period-in-days () 'common-lisp:double-float)
(common-lisp:deftype low () 'common-lisp:integer)
(common-lisp:deftype lower-bound-value () 'common-lisp:double-float)
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype max-size () 'common-lisp:integer)
(common-lisp:deftype medium () 'common-lisp:integer)
(common-lisp:deftype member-accounts-enrolled () 'common-lisp:boolean)
(common-lisp:deftype memory-size () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass memory-size-configuration common-lisp:nil
                       ((memory-reservation :initarg :|memoryReservation| :type
                         (common-lisp:or nullable-memory-reservation
                                         common-lisp:null)
                         :accessor
                         %memory-size-configuration-memory-reservation
                         :initform common-lisp:nil)
                        (memory :initarg :|memory| :type
                         (common-lisp:or nullable-memory common-lisp:null)
                         :accessor %memory-size-configuration-memory :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'memory-size-configuration
                    'make-memory-size-configuration))
 (common-lisp:defun make-memory-size-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key memory-reservation memory)
   (common-lisp:apply #'common-lisp:make-instance 'memory-size-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          memory-size-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          memory-size-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'memory))
      (common-lisp:list
       (common-lisp:cons "memory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'memory-reservation))
      (common-lisp:list
       (common-lisp:cons "memoryReservation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          memory-size-configuration))
   common-lisp:nil))
(common-lisp:deftype message () 'common-lisp:string)
(common-lisp:deftype metadata-key () 'common-lisp:string)
(common-lisp:deftype metric-name () 'common-lisp:string)
(common-lisp:deftype metric-statistic () 'common-lisp:string)
(common-lisp:deftype metric-value () 'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:deftype metric-values ()
   '(trivial-types:proper-list metric-value))
 (common-lisp:defun |make-metric-values|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list metric-value))
   aws-sdk/generator/shape::members))
(common-lisp:deftype migration-effort () 'common-lisp:string)
(common-lisp:deftype min-size () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition missing-authentication-token
     (compute-optimizer-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       missing-authentication-token-message)))
 (common-lisp:export
  (common-lisp:list 'missing-authentication-token
                    'missing-authentication-token-message)))
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:deftype nullable-cpu () 'common-lisp:integer)
(common-lisp:deftype nullable-memory () 'common-lisp:integer)
(common-lisp:deftype nullable-memory-reservation () 'common-lisp:integer)
(common-lisp:deftype number-of-invocations () 'common-lisp:integer)
(common-lisp:deftype number-of-member-accounts-opted-in () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition opt-in-required-exception
     (compute-optimizer-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       opt-in-required-exception-message)))
 (common-lisp:export
  (common-lisp:list 'opt-in-required-exception
                    'opt-in-required-exception-message)))
(common-lisp:deftype performance-risk () 'common-lisp:double-float)
(common-lisp:deftype period () 'common-lisp:integer)
(common-lisp:deftype platform-difference () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype platform-differences ()
   '(trivial-types:proper-list platform-difference))
 (common-lisp:defun |make-platform-differences|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list platform-difference))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass projected-metric common-lisp:nil
                       ((values :initarg :|values| :type
                         (common-lisp:or metric-values common-lisp:null)
                         :accessor %projected-metric-values :initform
                         common-lisp:nil)
                        (timestamps :initarg :|timestamps| :type
                         (common-lisp:or timestamps common-lisp:null) :accessor
                         %projected-metric-timestamps :initform
                         common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or metric-name common-lisp:null)
                         :accessor %projected-metric-name :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'projected-metric 'make-projected-metric))
 (common-lisp:defun make-projected-metric
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key values timestamps name)
   (common-lisp:apply #'common-lisp:make-instance 'projected-metric
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input projected-metric))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input projected-metric))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timestamps))
      (common-lisp:list
       (common-lisp:cons "timestamps"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input projected-metric))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype projected-metrics ()
   '(trivial-types:proper-list projected-metric))
 (common-lisp:defun |make-projected-metrics|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list projected-metric))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype projected-utilization-metrics ()
   '(trivial-types:proper-list utilization-metric))
 (common-lisp:defun |make-projected-utilization-metrics|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list utilization-metric))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass put-recommendation-preferences-request common-lisp:nil
                       ((external-metrics-preference :initarg
                         :|externalMetricsPreference| :type
                         (common-lisp:or external-metrics-preference
                                         common-lisp:null)
                         :accessor
                         %put-recommendation-preferences-request-external-metrics-preference
                         :initform common-lisp:nil)
                        (inferred-workload-types :initarg
                         :|inferredWorkloadTypes| :type
                         (common-lisp:or inferred-workload-types-preference
                                         common-lisp:null)
                         :accessor
                         %put-recommendation-preferences-request-inferred-workload-types
                         :initform common-lisp:nil)
                        (enhanced-infrastructure-metrics :initarg
                         :|enhancedInfrastructureMetrics| :type
                         (common-lisp:or enhanced-infrastructure-metrics
                                         common-lisp:null)
                         :accessor
                         %put-recommendation-preferences-request-enhanced-infrastructure-metrics
                         :initform common-lisp:nil)
                        (scope :initarg :|scope| :type
                         (common-lisp:or scope common-lisp:null) :accessor
                         %put-recommendation-preferences-request-scope
                         :initform common-lisp:nil)
                        (resource-type :initarg :|resourceType| :type
                         (common-lisp:or resource-type common-lisp:null)
                         :accessor
                         %put-recommendation-preferences-request-resource-type
                         :initform
                         (common-lisp:error ":resourcetype is required"))))
 (common-lisp:export
  (common-lisp:list 'put-recommendation-preferences-request
                    'make-put-recommendation-preferences-request))
 (common-lisp:defun make-put-recommendation-preferences-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key external-metrics-preference
                     inferred-workload-types enhanced-infrastructure-metrics
                     scope resource-type)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-recommendation-preferences-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-recommendation-preferences-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-recommendation-preferences-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "resourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scope))
      (common-lisp:list
       (common-lisp:cons "scope"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enhanced-infrastructure-metrics))
      (common-lisp:list
       (common-lisp:cons "enhancedInfrastructureMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'inferred-workload-types))
      (common-lisp:list
       (common-lisp:cons "inferredWorkloadTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'external-metrics-preference))
      (common-lisp:list
       (common-lisp:cons "externalMetricsPreference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-recommendation-preferences-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-recommendation-preferences-response common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'put-recommendation-preferences-response
                    'make-put-recommendation-preferences-response))
 (common-lisp:defun make-put-recommendation-preferences-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-recommendation-preferences-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-recommendation-preferences-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-recommendation-preferences-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-recommendation-preferences-response))
   common-lisp:nil))
(common-lisp:deftype rank () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype reason-code-summaries ()
   '(trivial-types:proper-list reason-code-summary))
 (common-lisp:defun |make-reason-code-summaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list reason-code-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass reason-code-summary common-lisp:nil
                       ((value :initarg :|value| :type
                         (common-lisp:or summary-value common-lisp:null)
                         :accessor %reason-code-summary-value :initform
                         common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or finding-reason-code common-lisp:null)
                         :accessor %reason-code-summary-name :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'reason-code-summary 'make-reason-code-summary))
 (common-lisp:defun make-reason-code-summary
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key value name)
   (common-lisp:apply #'common-lisp:make-instance 'reason-code-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input reason-code-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input reason-code-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input reason-code-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass recommendation-export-job common-lisp:nil
                       ((failure-reason :initarg :|failureReason| :type
                         (common-lisp:or failure-reason common-lisp:null)
                         :accessor %recommendation-export-job-failure-reason
                         :initform common-lisp:nil)
                        (last-updated-timestamp :initarg
                         :|lastUpdatedTimestamp| :type
                         (common-lisp:or last-updated-timestamp
                                         common-lisp:null)
                         :accessor
                         %recommendation-export-job-last-updated-timestamp
                         :initform common-lisp:nil)
                        (creation-timestamp :initarg :|creationTimestamp| :type
                         (common-lisp:or creation-timestamp common-lisp:null)
                         :accessor
                         %recommendation-export-job-creation-timestamp
                         :initform common-lisp:nil)
                        (status :initarg :|status| :type
                         (common-lisp:or job-status common-lisp:null) :accessor
                         %recommendation-export-job-status :initform
                         common-lisp:nil)
                        (resource-type :initarg :|resourceType| :type
                         (common-lisp:or resource-type common-lisp:null)
                         :accessor %recommendation-export-job-resource-type
                         :initform common-lisp:nil)
                        (destination :initarg :|destination| :type
                         (common-lisp:or export-destination common-lisp:null)
                         :accessor %recommendation-export-job-destination
                         :initform common-lisp:nil)
                        (job-id :initarg :|jobId| :type
                         (common-lisp:or job-id common-lisp:null) :accessor
                         %recommendation-export-job-job-id :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'recommendation-export-job
                    'make-recommendation-export-job))
 (common-lisp:defun make-recommendation-export-job
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key failure-reason last-updated-timestamp
                     creation-timestamp status resource-type destination
                     job-id)
   (common-lisp:apply #'common-lisp:make-instance 'recommendation-export-job
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-export-job))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-export-job))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "jobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination))
      (common-lisp:list
       (common-lisp:cons "destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "resourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "creationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failure-reason))
      (common-lisp:list
       (common-lisp:cons "failureReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-export-job))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype recommendation-export-jobs ()
   '(trivial-types:proper-list recommendation-export-job))
 (common-lisp:defun |make-recommendation-export-jobs|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            recommendation-export-job))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype recommendation-options ()
   '(trivial-types:proper-list instance-recommendation-option))
 (common-lisp:defun |make-recommendation-options|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            instance-recommendation-option))
   aws-sdk/generator/shape::members))
(common-lisp:deftype recommendation-preference-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype recommendation-preference-names ()
   '(trivial-types:proper-list recommendation-preference-name))
 (common-lisp:defun |make-recommendation-preference-names|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            recommendation-preference-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass recommendation-preferences common-lisp:nil
                       ((cpu-vendor-architectures :initarg
                         :|cpuVendorArchitectures| :type
                         (common-lisp:or cpu-vendor-architectures
                                         common-lisp:null)
                         :accessor
                         %recommendation-preferences-cpu-vendor-architectures
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'recommendation-preferences
                    'make-recommendation-preferences))
 (common-lisp:defun make-recommendation-preferences
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key cpu-vendor-architectures)
   (common-lisp:apply #'common-lisp:make-instance 'recommendation-preferences
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-preferences))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-preferences))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cpu-vendor-architectures))
      (common-lisp:list
       (common-lisp:cons "cpuVendorArchitectures"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-preferences))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass recommendation-preferences-detail common-lisp:nil
                       ((external-metrics-preference :initarg
                         :|externalMetricsPreference| :type
                         (common-lisp:or external-metrics-preference
                                         common-lisp:null)
                         :accessor
                         %recommendation-preferences-detail-external-metrics-preference
                         :initform common-lisp:nil)
                        (inferred-workload-types :initarg
                         :|inferredWorkloadTypes| :type
                         (common-lisp:or inferred-workload-types-preference
                                         common-lisp:null)
                         :accessor
                         %recommendation-preferences-detail-inferred-workload-types
                         :initform common-lisp:nil)
                        (enhanced-infrastructure-metrics :initarg
                         :|enhancedInfrastructureMetrics| :type
                         (common-lisp:or enhanced-infrastructure-metrics
                                         common-lisp:null)
                         :accessor
                         %recommendation-preferences-detail-enhanced-infrastructure-metrics
                         :initform common-lisp:nil)
                        (resource-type :initarg :|resourceType| :type
                         (common-lisp:or resource-type common-lisp:null)
                         :accessor
                         %recommendation-preferences-detail-resource-type
                         :initform common-lisp:nil)
                        (scope :initarg :|scope| :type
                         (common-lisp:or scope common-lisp:null) :accessor
                         %recommendation-preferences-detail-scope :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'recommendation-preferences-detail
                    'make-recommendation-preferences-detail))
 (common-lisp:defun make-recommendation-preferences-detail
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key external-metrics-preference
                     inferred-workload-types enhanced-infrastructure-metrics
                     resource-type scope)
   (common-lisp:apply #'common-lisp:make-instance
                      'recommendation-preferences-detail
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-preferences-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-preferences-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scope))
      (common-lisp:list
       (common-lisp:cons "scope"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "resourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enhanced-infrastructure-metrics))
      (common-lisp:list
       (common-lisp:cons "enhancedInfrastructureMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'inferred-workload-types))
      (common-lisp:list
       (common-lisp:cons "inferredWorkloadTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'external-metrics-preference))
      (common-lisp:list
       (common-lisp:cons "externalMetricsPreference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-preferences-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype recommendation-preferences-details ()
   '(trivial-types:proper-list recommendation-preferences-detail))
 (common-lisp:defun |make-recommendation-preferences-details|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            recommendation-preferences-detail))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass recommendation-source common-lisp:nil
                       ((recommendation-source-type :initarg
                         :|recommendationSourceType| :type
                         (common-lisp:or recommendation-source-type
                                         common-lisp:null)
                         :accessor
                         %recommendation-source-recommendation-source-type
                         :initform common-lisp:nil)
                        (recommendation-source-arn :initarg
                         :|recommendationSourceArn| :type
                         (common-lisp:or recommendation-source-arn
                                         common-lisp:null)
                         :accessor
                         %recommendation-source-recommendation-source-arn
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'recommendation-source 'make-recommendation-source))
 (common-lisp:defun make-recommendation-source
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key recommendation-source-type
                     recommendation-source-arn)
   (common-lisp:apply #'common-lisp:make-instance 'recommendation-source
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-source))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-source))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-source-arn))
      (common-lisp:list
       (common-lisp:cons "recommendationSourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-source-type))
      (common-lisp:list
       (common-lisp:cons "recommendationSourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-source))
   common-lisp:nil))
(common-lisp:deftype recommendation-source-arn () 'common-lisp:string)
(common-lisp:deftype recommendation-source-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype recommendation-sources ()
   '(trivial-types:proper-list recommendation-source))
 (common-lisp:defun |make-recommendation-sources|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list recommendation-source))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype recommendation-summaries ()
   '(trivial-types:proper-list recommendation-summary))
 (common-lisp:defun |make-recommendation-summaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list recommendation-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass recommendation-summary common-lisp:nil
                       ((current-performance-risk-ratings :initarg
                         :|currentPerformanceRiskRatings| :type
                         (common-lisp:or current-performance-risk-ratings
                                         common-lisp:null)
                         :accessor
                         %recommendation-summary-current-performance-risk-ratings
                         :initform common-lisp:nil)
                        (savings-opportunity :initarg :|savingsOpportunity|
                         :type
                         (common-lisp:or savings-opportunity common-lisp:null)
                         :accessor %recommendation-summary-savings-opportunity
                         :initform common-lisp:nil)
                        (account-id :initarg :|accountId| :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         %recommendation-summary-account-id :initform
                         common-lisp:nil)
                        (recommendation-resource-type :initarg
                         :|recommendationResourceType| :type
                         (common-lisp:or recommendation-source-type
                                         common-lisp:null)
                         :accessor
                         %recommendation-summary-recommendation-resource-type
                         :initform common-lisp:nil)
                        (summaries :initarg :|summaries| :type
                         (common-lisp:or summaries common-lisp:null) :accessor
                         %recommendation-summary-summaries :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'recommendation-summary 'make-recommendation-summary))
 (common-lisp:defun make-recommendation-summary
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key current-performance-risk-ratings
                     savings-opportunity account-id
                     recommendation-resource-type summaries)
   (common-lisp:apply #'common-lisp:make-instance 'recommendation-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'summaries))
      (common-lisp:list
       (common-lisp:cons "summaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-resource-type))
      (common-lisp:list
       (common-lisp:cons "recommendationResourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'savings-opportunity))
      (common-lisp:list
       (common-lisp:cons "savingsOpportunity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'current-performance-risk-ratings))
      (common-lisp:list
       (common-lisp:cons "currentPerformanceRiskRatings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-summary))
   common-lisp:nil))
(common-lisp:deftype recommended-instance-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass recommended-option-projected-metric common-lisp:nil
                       ((projected-metrics :initarg :|projectedMetrics| :type
                         (common-lisp:or projected-metrics common-lisp:null)
                         :accessor
                         %recommended-option-projected-metric-projected-metrics
                         :initform common-lisp:nil)
                        (rank :initarg :|rank| :type
                         (common-lisp:or rank common-lisp:null) :accessor
                         %recommended-option-projected-metric-rank :initform
                         common-lisp:nil)
                        (recommended-instance-type :initarg
                         :|recommendedInstanceType| :type
                         (common-lisp:or recommended-instance-type
                                         common-lisp:null)
                         :accessor
                         %recommended-option-projected-metric-recommended-instance-type
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'recommended-option-projected-metric
                    'make-recommended-option-projected-metric))
 (common-lisp:defun make-recommended-option-projected-metric
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key projected-metrics rank
                     recommended-instance-type)
   (common-lisp:apply #'common-lisp:make-instance
                      'recommended-option-projected-metric
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          recommended-option-projected-metric))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          recommended-option-projected-metric))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommended-instance-type))
      (common-lisp:list
       (common-lisp:cons "recommendedInstanceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rank))
      (common-lisp:list
       (common-lisp:cons "rank"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'projected-metrics))
      (common-lisp:list
       (common-lisp:cons "projectedMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          recommended-option-projected-metric))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype recommended-option-projected-metrics ()
   '(trivial-types:proper-list recommended-option-projected-metric))
 (common-lisp:defun |make-recommended-option-projected-metrics|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            recommended-option-projected-metric))
   aws-sdk/generator/shape::members))
(common-lisp:deftype resource-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (compute-optimizer-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:deftype resource-type () 'common-lisp:string)
(common-lisp:deftype root-volume () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defclass s3destination common-lisp:nil
                       ((metadata-key :initarg :|metadataKey| :type
                         (common-lisp:or metadata-key common-lisp:null)
                         :accessor %s3destination-metadata-key :initform
                         common-lisp:nil)
                        (key :initarg :|key| :type
                         (common-lisp:or destination-key common-lisp:null)
                         :accessor %s3destination-key :initform
                         common-lisp:nil)
                        (bucket :initarg :|bucket| :type
                         (common-lisp:or destination-bucket common-lisp:null)
                         :accessor %s3destination-bucket :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 's3destination 'make-s3destination))
 (common-lisp:defun make-s3destination
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key metadata-key key bucket)
   (common-lisp:apply #'common-lisp:make-instance 's3destination
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input s3destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input s3destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket))
      (common-lisp:list
       (common-lisp:cons "bucket"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata-key))
      (common-lisp:list
       (common-lisp:cons "metadataKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input s3destination))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass s3destination-config common-lisp:nil
                       ((key-prefix :initarg :|keyPrefix| :type
                         (common-lisp:or destination-key-prefix
                                         common-lisp:null)
                         :accessor %s3destination-config-key-prefix :initform
                         common-lisp:nil)
                        (bucket :initarg :|bucket| :type
                         (common-lisp:or destination-bucket common-lisp:null)
                         :accessor %s3destination-config-bucket :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 's3destination-config 'make-s3destination-config))
 (common-lisp:defun make-s3destination-config
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key key-prefix bucket)
   (common-lisp:apply #'common-lisp:make-instance 's3destination-config
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input s3destination-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input s3destination-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket))
      (common-lisp:list
       (common-lisp:cons "bucket"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-prefix))
      (common-lisp:list
       (common-lisp:cons "keyPrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input s3destination-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass savings-opportunity common-lisp:nil
                       ((estimated-monthly-savings :initarg
                         :|estimatedMonthlySavings| :type
                         (common-lisp:or estimated-monthly-savings
                                         common-lisp:null)
                         :accessor
                         %savings-opportunity-estimated-monthly-savings
                         :initform common-lisp:nil)
                        (savings-opportunity-percentage :initarg
                         :|savingsOpportunityPercentage| :type
                         (common-lisp:or savings-opportunity-percentage
                                         common-lisp:null)
                         :accessor
                         %savings-opportunity-savings-opportunity-percentage
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'savings-opportunity 'make-savings-opportunity))
 (common-lisp:defun make-savings-opportunity
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key estimated-monthly-savings
                     savings-opportunity-percentage)
   (common-lisp:apply #'common-lisp:make-instance 'savings-opportunity
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input savings-opportunity))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input savings-opportunity))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'savings-opportunity-percentage))
      (common-lisp:list
       (common-lisp:cons "savingsOpportunityPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'estimated-monthly-savings))
      (common-lisp:list
       (common-lisp:cons "estimatedMonthlySavings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input savings-opportunity))
   common-lisp:nil))
(common-lisp:deftype savings-opportunity-percentage ()
  'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:defclass scope common-lisp:nil
                       ((value :initarg :|value| :type
                         (common-lisp:or scope-value common-lisp:null)
                         :accessor %scope-value :initform common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or scope-name common-lisp:null) :accessor
                         %scope-name :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'scope 'make-scope))
 (common-lisp:defun make-scope
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key value name)
   (common-lisp:apply #'common-lisp:make-instance 'scope
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input scope))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input scope))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input scope))
   common-lisp:nil))
(common-lisp:deftype scope-name () 'common-lisp:string)
(common-lisp:deftype scope-value () 'common-lisp:string)
(common-lisp:deftype service-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype service-arns () '(trivial-types:proper-list service-arn))
 (common-lisp:defun |make-service-arns|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list service-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass service-configuration common-lisp:nil
                       ((task-definition-arn :initarg :|taskDefinitionArn|
                         :type
                         (common-lisp:or task-definition-arn common-lisp:null)
                         :accessor %service-configuration-task-definition-arn
                         :initform common-lisp:nil)
                        (auto-scaling-configuration :initarg
                         :|autoScalingConfiguration| :type
                         (common-lisp:or auto-scaling-configuration
                                         common-lisp:null)
                         :accessor
                         %service-configuration-auto-scaling-configuration
                         :initform common-lisp:nil)
                        (container-configurations :initarg
                         :|containerConfigurations| :type
                         (common-lisp:or container-configurations
                                         common-lisp:null)
                         :accessor
                         %service-configuration-container-configurations
                         :initform common-lisp:nil)
                        (cpu :initarg :|cpu| :type
                         (common-lisp:or nullable-cpu common-lisp:null)
                         :accessor %service-configuration-cpu :initform
                         common-lisp:nil)
                        (memory :initarg :|memory| :type
                         (common-lisp:or nullable-memory common-lisp:null)
                         :accessor %service-configuration-memory :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'service-configuration 'make-service-configuration))
 (common-lisp:defun make-service-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key task-definition-arn
                     auto-scaling-configuration container-configurations cpu
                     memory)
   (common-lisp:apply #'common-lisp:make-instance 'service-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          service-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          service-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'memory))
      (common-lisp:list
       (common-lisp:cons "memory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cpu))
      (common-lisp:list
       (common-lisp:cons "cpu"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'container-configurations))
      (common-lisp:list
       (common-lisp:cons "containerConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'auto-scaling-configuration))
      (common-lisp:list
       (common-lisp:cons "autoScalingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-definition-arn))
      (common-lisp:list
       (common-lisp:cons "taskDefinitionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          service-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition service-unavailable-exception
     (compute-optimizer-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       service-unavailable-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-unavailable-exception
                    'service-unavailable-exception-message)))
(common-lisp:deftype status () 'common-lisp:string)
(common-lisp:deftype status-reason () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype summaries () '(trivial-types:proper-list summary))
 (common-lisp:defun |make-summaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass summary common-lisp:nil
                       ((reason-code-summaries :initarg :|reasonCodeSummaries|
                         :type
                         (common-lisp:or reason-code-summaries
                                         common-lisp:null)
                         :accessor %summary-reason-code-summaries :initform
                         common-lisp:nil)
                        (value :initarg :|value| :type
                         (common-lisp:or summary-value common-lisp:null)
                         :accessor %summary-value :initform common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or finding common-lisp:null) :accessor
                         %summary-name :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'summary 'make-summary))
 (common-lisp:defun make-summary
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key reason-code-summaries value name)
   (common-lisp:apply #'common-lisp:make-instance 'summary
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'reason-code-summaries))
      (common-lisp:list
       (common-lisp:cons "reasonCodeSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input summary))
   common-lisp:nil))
(common-lisp:deftype summary-value () 'common-lisp:double-float)
(common-lisp:deftype task-definition-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (compute-optimizer-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       throttling-exception-message)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message)))
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype timestamps () '(trivial-types:proper-list timestamp))
 (common-lisp:defun |make-timestamps|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list timestamp))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass update-enrollment-status-request common-lisp:nil
                       ((include-member-accounts :initarg
                         :|includeMemberAccounts| :type
                         (common-lisp:or include-member-accounts
                                         common-lisp:null)
                         :accessor
                         %update-enrollment-status-request-include-member-accounts
                         :initform common-lisp:nil)
                        (status :initarg :|status| :type
                         (common-lisp:or status common-lisp:null) :accessor
                         %update-enrollment-status-request-status :initform
                         (common-lisp:error ":status is required"))))
 (common-lisp:export
  (common-lisp:list 'update-enrollment-status-request
                    'make-update-enrollment-status-request))
 (common-lisp:defun make-update-enrollment-status-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key include-member-accounts status)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-enrollment-status-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-enrollment-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-enrollment-status-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'include-member-accounts))
      (common-lisp:list
       (common-lisp:cons "includeMemberAccounts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-enrollment-status-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-enrollment-status-response common-lisp:nil
                       ((status-reason :initarg :|statusReason| :type
                         (common-lisp:or status-reason common-lisp:null)
                         :accessor
                         %update-enrollment-status-response-status-reason
                         :initform common-lisp:nil)
                        (status :initarg :|status| :type
                         (common-lisp:or status common-lisp:null) :accessor
                         %update-enrollment-status-response-status :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-enrollment-status-response
                    'make-update-enrollment-status-response))
 (common-lisp:defun make-update-enrollment-status-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key status-reason status)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-enrollment-status-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-enrollment-status-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-enrollment-status-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-reason))
      (common-lisp:list
       (common-lisp:cons "statusReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-enrollment-status-response))
   common-lisp:nil))
(common-lisp:deftype upper-bound-value () 'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:defclass utilization-metric common-lisp:nil
                       ((value :initarg :|value| :type
                         (common-lisp:or metric-value common-lisp:null)
                         :accessor %utilization-metric-value :initform
                         common-lisp:nil)
                        (statistic :initarg :|statistic| :type
                         (common-lisp:or metric-statistic common-lisp:null)
                         :accessor %utilization-metric-statistic :initform
                         common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or metric-name common-lisp:null)
                         :accessor %utilization-metric-name :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'utilization-metric 'make-utilization-metric))
 (common-lisp:defun make-utilization-metric
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key value statistic name)
   (common-lisp:apply #'common-lisp:make-instance 'utilization-metric
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input utilization-metric))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input utilization-metric))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'statistic))
      (common-lisp:list
       (common-lisp:cons "statistic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input utilization-metric))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype utilization-metrics ()
   '(trivial-types:proper-list utilization-metric))
 (common-lisp:defun |make-utilization-metrics|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list utilization-metric))
   aws-sdk/generator/shape::members))
(common-lisp:deftype value () 'common-lisp:double-float)
(common-lisp:deftype very-low () 'common-lisp:integer)
(common-lisp:deftype volume-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype volume-arns () '(trivial-types:proper-list volume-arn))
 (common-lisp:defun |make-volume-arns|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list volume-arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype volume-baseline-iops () 'common-lisp:integer)
(common-lisp:deftype volume-baseline-throughput () 'common-lisp:integer)
(common-lisp:deftype volume-burst-iops () 'common-lisp:integer)
(common-lisp:deftype volume-burst-throughput () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass volume-configuration common-lisp:nil
                       ((root-volume :initarg :|rootVolume| :type
                         (common-lisp:or root-volume common-lisp:null)
                         :accessor %volume-configuration-root-volume :initform
                         common-lisp:nil)
                        (volume-burst-throughput :initarg
                         :|volumeBurstThroughput| :type
                         (common-lisp:or volume-burst-throughput
                                         common-lisp:null)
                         :accessor
                         %volume-configuration-volume-burst-throughput
                         :initform common-lisp:nil)
                        (volume-baseline-throughput :initarg
                         :|volumeBaselineThroughput| :type
                         (common-lisp:or volume-baseline-throughput
                                         common-lisp:null)
                         :accessor
                         %volume-configuration-volume-baseline-throughput
                         :initform common-lisp:nil)
                        (volume-burst-iops :initarg :|volumeBurstIOPS| :type
                         (common-lisp:or volume-burst-iops common-lisp:null)
                         :accessor %volume-configuration-volume-burst-iops
                         :initform common-lisp:nil)
                        (volume-baseline-iops :initarg :|volumeBaselineIOPS|
                         :type
                         (common-lisp:or volume-baseline-iops common-lisp:null)
                         :accessor %volume-configuration-volume-baseline-iops
                         :initform common-lisp:nil)
                        (volume-size :initarg :|volumeSize| :type
                         (common-lisp:or volume-size common-lisp:null)
                         :accessor %volume-configuration-volume-size :initform
                         common-lisp:nil)
                        (volume-type :initarg :|volumeType| :type
                         (common-lisp:or volume-type common-lisp:null)
                         :accessor %volume-configuration-volume-type :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'volume-configuration 'make-volume-configuration))
 (common-lisp:defun make-volume-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key root-volume volume-burst-throughput
                     volume-baseline-throughput volume-burst-iops
                     volume-baseline-iops volume-size volume-type)
   (common-lisp:apply #'common-lisp:make-instance 'volume-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input volume-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input volume-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-type))
      (common-lisp:list
       (common-lisp:cons "volumeType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-size))
      (common-lisp:list
       (common-lisp:cons "volumeSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'volume-baseline-iops))
      (common-lisp:list
       (common-lisp:cons "volumeBaselineIOPS"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-burst-iops))
      (common-lisp:list
       (common-lisp:cons "volumeBurstIOPS"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'volume-baseline-throughput))
      (common-lisp:list
       (common-lisp:cons "volumeBaselineThroughput"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'volume-burst-throughput))
      (common-lisp:list
       (common-lisp:cons "volumeBurstThroughput"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'root-volume))
      (common-lisp:list
       (common-lisp:cons "rootVolume"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input volume-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass volume-recommendation common-lisp:nil
                       ((current-performance-risk :initarg
                         :|currentPerformanceRisk| :type
                         (common-lisp:or current-performance-risk
                                         common-lisp:null)
                         :accessor
                         %volume-recommendation-current-performance-risk
                         :initform common-lisp:nil)
                        (last-refresh-timestamp :initarg
                         :|lastRefreshTimestamp| :type
                         (common-lisp:or last-refresh-timestamp
                                         common-lisp:null)
                         :accessor
                         %volume-recommendation-last-refresh-timestamp
                         :initform common-lisp:nil)
                        (volume-recommendation-options :initarg
                         :|volumeRecommendationOptions| :type
                         (common-lisp:or volume-recommendation-options
                                         common-lisp:null)
                         :accessor
                         %volume-recommendation-volume-recommendation-options
                         :initform common-lisp:nil)
                        (look-back-period-in-days :initarg
                         :|lookBackPeriodInDays| :type
                         (common-lisp:or look-back-period-in-days
                                         common-lisp:null)
                         :accessor
                         %volume-recommendation-look-back-period-in-days
                         :initform common-lisp:nil)
                        (utilization-metrics :initarg :|utilizationMetrics|
                         :type
                         (common-lisp:or ebsutilization-metrics
                                         common-lisp:null)
                         :accessor %volume-recommendation-utilization-metrics
                         :initform common-lisp:nil)
                        (finding :initarg :|finding| :type
                         (common-lisp:or ebsfinding common-lisp:null) :accessor
                         %volume-recommendation-finding :initform
                         common-lisp:nil)
                        (current-configuration :initarg :|currentConfiguration|
                         :type
                         (common-lisp:or volume-configuration common-lisp:null)
                         :accessor %volume-recommendation-current-configuration
                         :initform common-lisp:nil)
                        (account-id :initarg :|accountId| :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         %volume-recommendation-account-id :initform
                         common-lisp:nil)
                        (volume-arn :initarg :|volumeArn| :type
                         (common-lisp:or volume-arn common-lisp:null) :accessor
                         %volume-recommendation-volume-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'volume-recommendation 'make-volume-recommendation))
 (common-lisp:defun make-volume-recommendation
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key current-performance-risk
                     last-refresh-timestamp volume-recommendation-options
                     look-back-period-in-days utilization-metrics finding
                     current-configuration account-id volume-arn)
   (common-lisp:apply #'common-lisp:make-instance 'volume-recommendation
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          volume-recommendation))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          volume-recommendation))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arn))
      (common-lisp:list
       (common-lisp:cons "volumeArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'current-configuration))
      (common-lisp:list
       (common-lisp:cons "currentConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'finding))
      (common-lisp:list
       (common-lisp:cons "finding"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'utilization-metrics))
      (common-lisp:list
       (common-lisp:cons "utilizationMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'look-back-period-in-days))
      (common-lisp:list
       (common-lisp:cons "lookBackPeriodInDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'volume-recommendation-options))
      (common-lisp:list
       (common-lisp:cons "volumeRecommendationOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-refresh-timestamp))
      (common-lisp:list
       (common-lisp:cons "lastRefreshTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'current-performance-risk))
      (common-lisp:list
       (common-lisp:cons "currentPerformanceRisk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          volume-recommendation))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass volume-recommendation-option common-lisp:nil
                       ((savings-opportunity :initarg :|savingsOpportunity|
                         :type
                         (common-lisp:or savings-opportunity common-lisp:null)
                         :accessor
                         %volume-recommendation-option-savings-opportunity
                         :initform common-lisp:nil)
                        (rank :initarg :|rank| :type
                         (common-lisp:or rank common-lisp:null) :accessor
                         %volume-recommendation-option-rank :initform
                         common-lisp:nil)
                        (performance-risk :initarg :|performanceRisk| :type
                         (common-lisp:or performance-risk common-lisp:null)
                         :accessor
                         %volume-recommendation-option-performance-risk
                         :initform common-lisp:nil)
                        (configuration :initarg :|configuration| :type
                         (common-lisp:or volume-configuration common-lisp:null)
                         :accessor %volume-recommendation-option-configuration
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'volume-recommendation-option
                    'make-volume-recommendation-option))
 (common-lisp:defun make-volume-recommendation-option
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key savings-opportunity rank performance-risk
                     configuration)
   (common-lisp:apply #'common-lisp:make-instance 'volume-recommendation-option
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          volume-recommendation-option))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          volume-recommendation-option))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration))
      (common-lisp:list
       (common-lisp:cons "configuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'performance-risk))
      (common-lisp:list
       (common-lisp:cons "performanceRisk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rank))
      (common-lisp:list
       (common-lisp:cons "rank"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'savings-opportunity))
      (common-lisp:list
       (common-lisp:cons "savingsOpportunity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          volume-recommendation-option))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype volume-recommendation-options ()
   '(trivial-types:proper-list volume-recommendation-option))
 (common-lisp:defun |make-volume-recommendation-options|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            volume-recommendation-option))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype volume-recommendations ()
   '(trivial-types:proper-list volume-recommendation))
 (common-lisp:defun |make-volume-recommendations|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list volume-recommendation))
   aws-sdk/generator/shape::members))
(common-lisp:deftype volume-size () 'common-lisp:integer)
(common-lisp:deftype volume-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun delete-recommendation-preferences
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-type scope
                     recommendation-preference-names)
   (common-lisp:declare
    (common-lisp:ignorable resource-type scope
     recommendation-preference-names))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-recommendation-preferences-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        :json "/" "DeleteRecommendationPreferences" "2019-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-recommendation-preferences))
(common-lisp:progn
 (common-lisp:defun describe-recommendation-export-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-ids filters next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable job-ids filters next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-recommendation-export-jobs-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        :json "/" "DescribeRecommendationExportJobs" "2019-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-recommendation-export-jobs))
(common-lisp:progn
 (common-lisp:defun export-auto-scaling-group-recommendations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-ids filters fields-to-export
                     s3destination-config file-format include-member-accounts
                     recommendation-preferences)
   (common-lisp:declare
    (common-lisp:ignorable account-ids filters fields-to-export
     s3destination-config file-format include-member-accounts
     recommendation-preferences))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-export-auto-scaling-group-recommendations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        :json "/" "ExportAutoScalingGroupRecommendations" "2019-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'export-auto-scaling-group-recommendations))
(common-lisp:progn
 (common-lisp:defun export-ebsvolume-recommendations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-ids filters fields-to-export
                     s3destination-config file-format include-member-accounts)
   (common-lisp:declare
    (common-lisp:ignorable account-ids filters fields-to-export
     s3destination-config file-format include-member-accounts))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-export-ebsvolume-recommendations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        :json "/" "ExportEBSVolumeRecommendations" "2019-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'export-ebsvolume-recommendations))
(common-lisp:progn
 (common-lisp:defun export-ec2instance-recommendations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-ids filters fields-to-export
                     s3destination-config file-format include-member-accounts
                     recommendation-preferences)
   (common-lisp:declare
    (common-lisp:ignorable account-ids filters fields-to-export
     s3destination-config file-format include-member-accounts
     recommendation-preferences))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-export-ec2instance-recommendations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        :json "/" "ExportEC2InstanceRecommendations" "2019-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'export-ec2instance-recommendations))
(common-lisp:progn
 (common-lisp:defun export-ecsservice-recommendations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-ids filters fields-to-export
                     s3destination-config file-format include-member-accounts)
   (common-lisp:declare
    (common-lisp:ignorable account-ids filters fields-to-export
     s3destination-config file-format include-member-accounts))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-export-ecsservice-recommendations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        :json "/" "ExportECSServiceRecommendations" "2019-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'export-ecsservice-recommendations))
(common-lisp:progn
 (common-lisp:defun export-lambda-function-recommendations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-ids filters fields-to-export
                     s3destination-config file-format include-member-accounts)
   (common-lisp:declare
    (common-lisp:ignorable account-ids filters fields-to-export
     s3destination-config file-format include-member-accounts))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-export-lambda-function-recommendations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        :json "/" "ExportLambdaFunctionRecommendations" "2019-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'export-lambda-function-recommendations))
(common-lisp:progn
 (common-lisp:defun get-auto-scaling-group-recommendations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-ids auto-scaling-group-arns
                     next-token max-results filters recommendation-preferences)
   (common-lisp:declare
    (common-lisp:ignorable account-ids auto-scaling-group-arns next-token
     max-results filters recommendation-preferences))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-auto-scaling-group-recommendations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        :json "/" "GetAutoScalingGroupRecommendations" "2019-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-auto-scaling-group-recommendations))
(common-lisp:progn
 (common-lisp:defun get-ebsvolume-recommendations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key volume-arns next-token max-results
                     filters account-ids)
   (common-lisp:declare
    (common-lisp:ignorable volume-arns next-token max-results filters
     account-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-ebsvolume-recommendations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        :json "/" "GetEBSVolumeRecommendations" "2019-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-ebsvolume-recommendations))
(common-lisp:progn
 (common-lisp:defun get-ec2instance-recommendations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arns next-token max-results
                     filters account-ids recommendation-preferences)
   (common-lisp:declare
    (common-lisp:ignorable instance-arns next-token max-results filters
     account-ids recommendation-preferences))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-ec2instance-recommendations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        :json "/" "GetEC2InstanceRecommendations" "2019-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-ec2instance-recommendations))
(common-lisp:progn
 (common-lisp:defun get-ec2recommendation-projected-metrics
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn stat period start-time
                     end-time recommendation-preferences)
   (common-lisp:declare
    (common-lisp:ignorable instance-arn stat period start-time end-time
     recommendation-preferences))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-ec2recommendation-projected-metrics-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        :json "/" "GetEC2RecommendationProjectedMetrics" "2019-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-ec2recommendation-projected-metrics))
(common-lisp:progn
 (common-lisp:defun get-ecsservice-recommendation-projected-metrics
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key service-arn stat period start-time
                     end-time)
   (common-lisp:declare
    (common-lisp:ignorable service-arn stat period start-time end-time))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-ecsservice-recommendation-projected-metrics-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        :json "/" "GetECSServiceRecommendationProjectedMetrics" "2019-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-ecsservice-recommendation-projected-metrics))
(common-lisp:progn
 (common-lisp:defun get-ecsservice-recommendations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key service-arns next-token max-results
                     filters account-ids)
   (common-lisp:declare
    (common-lisp:ignorable service-arns next-token max-results filters
     account-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-ecsservice-recommendations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        :json "/" "GetECSServiceRecommendations" "2019-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-ecsservice-recommendations))
(common-lisp:progn
 (common-lisp:defun get-effective-recommendation-preferences
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-effective-recommendation-preferences-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        :json "/" "GetEffectiveRecommendationPreferences" "2019-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-effective-recommendation-preferences))
(common-lisp:progn
 (common-lisp:defun get-enrollment-status ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'compute-optimizer-request :method "POST" :path
                                "/" :protocol :json :operation
                                "GetEnrollmentStatus" :params
                                `(("Action" ,@"GetEnrollmentStatus")
                                  ("Version" ,@"2019-11-01"))))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-enrollment-status))
(common-lisp:progn
 (common-lisp:defun get-enrollment-statuses-for-organization
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filters next-token max-results)
   (common-lisp:declare (common-lisp:ignorable filters next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-enrollment-statuses-for-organization-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        :json "/" "GetEnrollmentStatusesForOrganization" "2019-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-enrollment-statuses-for-organization))
(common-lisp:progn
 (common-lisp:defun get-lambda-function-recommendations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key function-arns account-ids filters
                     next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable function-arns account-ids filters next-token
     max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-lambda-function-recommendations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        :json "/" "GetLambdaFunctionRecommendations" "2019-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-lambda-function-recommendations))
(common-lisp:progn
 (common-lisp:defun get-recommendation-preferences
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-type scope next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable resource-type scope next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-recommendation-preferences-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        :json "/" "GetRecommendationPreferences" "2019-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-recommendation-preferences))
(common-lisp:progn
 (common-lisp:defun get-recommendation-summaries
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-ids next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable account-ids next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-recommendation-summaries-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        :json "/" "GetRecommendationSummaries" "2019-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-recommendation-summaries))
(common-lisp:progn
 (common-lisp:defun put-recommendation-preferences
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-type scope
                     enhanced-infrastructure-metrics inferred-workload-types
                     external-metrics-preference)
   (common-lisp:declare
    (common-lisp:ignorable resource-type scope enhanced-infrastructure-metrics
     inferred-workload-types external-metrics-preference))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-recommendation-preferences-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        :json "/" "PutRecommendationPreferences" "2019-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-recommendation-preferences))
(common-lisp:progn
 (common-lisp:defun update-enrollment-status
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key status include-member-accounts)
   (common-lisp:declare (common-lisp:ignorable status include-member-accounts))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-enrollment-status-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        :json "/" "UpdateEnrollmentStatus" "2019-11-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-enrollment-status))
