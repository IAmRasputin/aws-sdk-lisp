;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/billingconductor/api
  (:use)
  (:nicknames #:aws/billingconductor)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/billingconductor/api)
(common-lisp:progn
 (common-lisp:defclass billingconductor-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "billingconductor" :protocol
                        :rest-json))
 (common-lisp:export 'billingconductor-request))
(common-lisp:progn
 (common-lisp:define-condition billingconductor-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'billingconductor-error))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("ConflictException" . conflict-exception)
    ("InternalServerException" . internal-server-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceLimitExceededException" . service-limit-exceeded-exception)
    ("ThrottlingException" . throttling-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:deftype awscost () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (billingconductor-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       access-denied-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-message)))
(common-lisp:progn
 (common-lisp:deftype account-associations-list ()
   '(trivial-types:proper-list account-associations-list-element))
 (common-lisp:defun |make-account-associations-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            account-associations-list-element))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (account-associations-list-element (:copier common-lisp:nil)
      (:conc-name "struct-shape-account-associations-list-element-"))
   (account-id common-lisp:nil :type
    (common-lisp:or account-id common-lisp:null))
   (billing-group-arn common-lisp:nil :type
    (common-lisp:or billing-group-arn common-lisp:null))
   (account-name common-lisp:nil :type
    (common-lisp:or account-name common-lisp:null))
   (account-email common-lisp:nil :type
    (common-lisp:or account-email common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'account-associations-list-element
                    'make-account-associations-list-element))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          account-associations-list-element))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          account-associations-list-element))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-group-arn))
      (common-lisp:list
       (common-lisp:cons "BillingGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-name))
      (common-lisp:list
       (common-lisp:cons "AccountName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-email))
      (common-lisp:list
       (common-lisp:cons "AccountEmail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          account-associations-list-element))
   common-lisp:nil))
(common-lisp:deftype account-email () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (account-grouping (:copier common-lisp:nil)
      (:conc-name "struct-shape-account-grouping-"))
   (linked-account-ids (common-lisp:error ":linked-account-ids is required")
    :type (common-lisp:or account-id-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'account-grouping 'make-account-grouping))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input account-grouping))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input account-grouping))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'linked-account-ids))
      (common-lisp:list
       (common-lisp:cons "LinkedAccountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input account-grouping))
   common-lisp:nil))
(common-lisp:deftype account-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype account-id-filter-list ()
   '(trivial-types:proper-list account-id))
 (common-lisp:defun |make-account-id-filter-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list account-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype account-id-list ()
   '(trivial-types:proper-list account-id))
 (common-lisp:defun |make-account-id-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list account-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype account-name () 'common-lisp:string)
(common-lisp:deftype arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (associate-accounts-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-associate-accounts-input-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or billing-group-arn common-lisp:null))
   (account-ids (common-lisp:error ":account-ids is required") :type
    (common-lisp:or account-id-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'associate-accounts-input 'make-associate-accounts-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-accounts-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-accounts-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "AccountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-accounts-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-accounts-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-associate-accounts-output-"))
   (arn common-lisp:nil :type
    (common-lisp:or billing-group-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'associate-accounts-output
                    'make-associate-accounts-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-accounts-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-accounts-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-accounts-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-pricing-rules-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-associate-pricing-rules-input-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or pricing-plan-arn common-lisp:null))
   (pricing-rule-arns (common-lisp:error ":pricing-rule-arns is required")
    :type (common-lisp:or pricing-rule-arns-non-empty-input common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'associate-pricing-rules-input
                    'make-associate-pricing-rules-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-pricing-rules-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-pricing-rules-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pricing-rule-arns))
      (common-lisp:list
       (common-lisp:cons "PricingRuleArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-pricing-rules-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-pricing-rules-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-associate-pricing-rules-output-"))
   (arn common-lisp:nil :type
    (common-lisp:or pricing-plan-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'associate-pricing-rules-output
                    'make-associate-pricing-rules-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-pricing-rules-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-pricing-rules-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-pricing-rules-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-resource-error (:copier common-lisp:nil)
      (:conc-name "struct-shape-associate-resource-error-"))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (reason common-lisp:nil :type
    (common-lisp:or associate-resource-error-reason common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'associate-resource-error 'make-associate-resource-error))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-resource-error))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-resource-error))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reason))
      (common-lisp:list
       (common-lisp:cons "Reason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-resource-error))
   common-lisp:nil))
(common-lisp:deftype associate-resource-error-reason () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (associate-resource-response-element (:copier common-lisp:nil)
      (:conc-name "struct-shape-associate-resource-response-element-"))
   (arn common-lisp:nil :type
    (common-lisp:or custom-line-item-association-element common-lisp:null))
   (error common-lisp:nil :type
    (common-lisp:or associate-resource-error common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'associate-resource-response-element
                    'make-associate-resource-response-element))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-resource-response-element))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-resource-response-element))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "Error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-resource-response-element))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype associate-resources-response-list ()
   '(trivial-types:proper-list associate-resource-response-element))
 (common-lisp:defun |make-associate-resources-response-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            associate-resource-response-element))
   aws-sdk/generator/shape::members))
(common-lisp:deftype association () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (batch-associate-resources-to-custom-line-item-input
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-batch-associate-resources-to-custom-line-item-input-"))
   (target-arn (common-lisp:error ":target-arn is required") :type
    (common-lisp:or custom-line-item-arn common-lisp:null))
   (resource-arns (common-lisp:error ":resource-arns is required") :type
    (common-lisp:or custom-line-item-batch-associations-list common-lisp:null))
   (billing-period-range common-lisp:nil :type
    (common-lisp:or custom-line-item-billing-period-range common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-associate-resources-to-custom-line-item-input
                    'make-batch-associate-resources-to-custom-line-item-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-associate-resources-to-custom-line-item-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-associate-resources-to-custom-line-item-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-arn))
      (common-lisp:list
       (common-lisp:cons "TargetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arns))
      (common-lisp:list
       (common-lisp:cons "ResourceArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'billing-period-range))
      (common-lisp:list
       (common-lisp:cons "BillingPeriodRange"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-associate-resources-to-custom-line-item-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-associate-resources-to-custom-line-item-output
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-batch-associate-resources-to-custom-line-item-output-"))
   (successfully-associated-resources common-lisp:nil :type
    (common-lisp:or associate-resources-response-list common-lisp:null))
   (failed-associated-resources common-lisp:nil :type
    (common-lisp:or associate-resources-response-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-associate-resources-to-custom-line-item-output
                    'make-batch-associate-resources-to-custom-line-item-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-associate-resources-to-custom-line-item-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-associate-resources-to-custom-line-item-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'successfully-associated-resources))
      (common-lisp:list
       (common-lisp:cons "SuccessfullyAssociatedResources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'failed-associated-resources))
      (common-lisp:list
       (common-lisp:cons "FailedAssociatedResources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-associate-resources-to-custom-line-item-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-disassociate-resources-from-custom-line-item-input
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-batch-disassociate-resources-from-custom-line-item-input-"))
   (target-arn (common-lisp:error ":target-arn is required") :type
    (common-lisp:or custom-line-item-arn common-lisp:null))
   (resource-arns (common-lisp:error ":resource-arns is required") :type
    (common-lisp:or custom-line-item-batch-disassociations-list
                    common-lisp:null))
   (billing-period-range common-lisp:nil :type
    (common-lisp:or custom-line-item-billing-period-range common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-disassociate-resources-from-custom-line-item-input
                    'make-batch-disassociate-resources-from-custom-line-item-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-disassociate-resources-from-custom-line-item-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-disassociate-resources-from-custom-line-item-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-arn))
      (common-lisp:list
       (common-lisp:cons "TargetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arns))
      (common-lisp:list
       (common-lisp:cons "ResourceArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'billing-period-range))
      (common-lisp:list
       (common-lisp:cons "BillingPeriodRange"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-disassociate-resources-from-custom-line-item-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-disassociate-resources-from-custom-line-item-output
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-batch-disassociate-resources-from-custom-line-item-output-"))
   (successfully-disassociated-resources common-lisp:nil :type
    (common-lisp:or disassociate-resources-response-list common-lisp:null))
   (failed-disassociated-resources common-lisp:nil :type
    (common-lisp:or disassociate-resources-response-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-disassociate-resources-from-custom-line-item-output
                    'make-batch-disassociate-resources-from-custom-line-item-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-disassociate-resources-from-custom-line-item-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-disassociate-resources-from-custom-line-item-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'successfully-disassociated-resources))
      (common-lisp:list
       (common-lisp:cons "SuccessfullyDisassociatedResources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'failed-disassociated-resources))
      (common-lisp:list
       (common-lisp:cons "FailedDisassociatedResources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-disassociate-resources-from-custom-line-item-output))
   common-lisp:nil))
(common-lisp:deftype billing-entity () 'common-lisp:string)
(common-lisp:deftype billing-group-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype billing-group-arn-list ()
   '(trivial-types:proper-list billing-group-arn))
 (common-lisp:defun |make-billing-group-arn-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list billing-group-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (billing-group-cost-report-element (:copier common-lisp:nil)
      (:conc-name "struct-shape-billing-group-cost-report-element-"))
   (arn common-lisp:nil :type
    (common-lisp:or billing-group-arn common-lisp:null))
   (awscost common-lisp:nil :type (common-lisp:or awscost common-lisp:null))
   (proforma-cost common-lisp:nil :type
    (common-lisp:or proforma-cost common-lisp:null))
   (margin common-lisp:nil :type (common-lisp:or margin common-lisp:null))
   (margin-percentage common-lisp:nil :type
    (common-lisp:or margin-percentage common-lisp:null))
   (currency common-lisp:nil :type (common-lisp:or currency common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'billing-group-cost-report-element
                    'make-billing-group-cost-report-element))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          billing-group-cost-report-element))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          billing-group-cost-report-element))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'awscost))
      (common-lisp:list
       (common-lisp:cons "AWSCost"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'proforma-cost))
      (common-lisp:list
       (common-lisp:cons "ProformaCost"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'margin))
      (common-lisp:list
       (common-lisp:cons "Margin"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'margin-percentage))
      (common-lisp:list
       (common-lisp:cons "MarginPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'currency))
      (common-lisp:list
       (common-lisp:cons "Currency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          billing-group-cost-report-element))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype billing-group-cost-report-list ()
   '(trivial-types:proper-list billing-group-cost-report-element))
 (common-lisp:defun |make-billing-group-cost-report-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            billing-group-cost-report-element))
   aws-sdk/generator/shape::members))
(common-lisp:deftype billing-group-description () 'common-lisp:string)
(common-lisp:deftype billing-group-full-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype billing-group-list ()
   '(trivial-types:proper-list billing-group-list-element))
 (common-lisp:defun |make-billing-group-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            billing-group-list-element))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (billing-group-list-element (:copier common-lisp:nil)
      (:conc-name "struct-shape-billing-group-list-element-"))
   (name common-lisp:nil :type
    (common-lisp:or billing-group-name common-lisp:null))
   (arn common-lisp:nil :type
    (common-lisp:or billing-group-arn common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or billing-group-description common-lisp:null))
   (primary-account-id common-lisp:nil :type
    (common-lisp:or account-id common-lisp:null))
   (computation-preference common-lisp:nil :type
    (common-lisp:or computation-preference common-lisp:null))
   (size common-lisp:nil :type
    (common-lisp:or number-of-accounts common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or instant common-lisp:null))
   (last-modified-time common-lisp:nil :type
    (common-lisp:or instant common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or billing-group-status common-lisp:null))
   (status-reason common-lisp:nil :type
    (common-lisp:or billing-group-status-reason common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'billing-group-list-element
                    'make-billing-group-list-element))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          billing-group-list-element))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          billing-group-list-element))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'primary-account-id))
      (common-lisp:list
       (common-lisp:cons "PrimaryAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'computation-preference))
      (common-lisp:list
       (common-lisp:cons "ComputationPreference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'size))
      (common-lisp:list
       (common-lisp:cons "Size"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-reason))
      (common-lisp:list
       (common-lisp:cons "StatusReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          billing-group-list-element))
   common-lisp:nil))
(common-lisp:deftype billing-group-name () 'common-lisp:string)
(common-lisp:deftype billing-group-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype billing-group-status-list ()
   '(trivial-types:proper-list billing-group-status))
 (common-lisp:defun |make-billing-group-status-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list billing-group-status))
   aws-sdk/generator/shape::members))
(common-lisp:deftype billing-group-status-reason () 'common-lisp:string)
(common-lisp:deftype billing-period () 'common-lisp:string)
(common-lisp:deftype client-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (computation-preference (:copier common-lisp:nil)
      (:conc-name "struct-shape-computation-preference-"))
   (pricing-plan-arn (common-lisp:error ":pricing-plan-arn is required") :type
    (common-lisp:or pricing-plan-full-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'computation-preference 'make-computation-preference))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          computation-preference))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          computation-preference))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pricing-plan-arn))
      (common-lisp:list
       (common-lisp:cons "PricingPlanArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          computation-preference))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (billingconductor-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)
      (resource-id :initarg :resource-id :initform common-lisp:nil :reader
       conflict-exception-resource-id)
      (resource-type :initarg :resource-type :initform common-lisp:nil :reader
       conflict-exception-resource-type)
      (reason :initarg :reason :initform common-lisp:nil :reader
       conflict-exception-reason)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message
                    'conflict-exception-resource-id
                    'conflict-exception-resource-type
                    'conflict-exception-reason)))
(common-lisp:deftype conflict-exception-reason () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (create-billing-group-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-billing-group-input-"))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or billing-group-name common-lisp:null))
   (account-grouping (common-lisp:error ":account-grouping is required") :type
    (common-lisp:or account-grouping common-lisp:null))
   (computation-preference
    (common-lisp:error ":computation-preference is required") :type
    (common-lisp:or computation-preference common-lisp:null))
   (primary-account-id common-lisp:nil :type
    (common-lisp:or account-id common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or billing-group-description common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-billing-group-input
                    'make-create-billing-group-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-billing-group-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:cons "X-Amzn-Client-Token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-billing-group-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-grouping))
      (common-lisp:list
       (common-lisp:cons "AccountGrouping"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'computation-preference))
      (common-lisp:list
       (common-lisp:cons "ComputationPreference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'primary-account-id))
      (common-lisp:list
       (common-lisp:cons "PrimaryAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-billing-group-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-billing-group-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-billing-group-output-"))
   (arn common-lisp:nil :type
    (common-lisp:or billing-group-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-billing-group-output
                    'make-create-billing-group-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-billing-group-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-billing-group-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-billing-group-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-custom-line-item-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-custom-line-item-input-"))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or custom-line-item-name common-lisp:null))
   (description (common-lisp:error ":description is required") :type
    (common-lisp:or custom-line-item-description common-lisp:null))
   (billing-group-arn (common-lisp:error ":billing-group-arn is required")
    :type (common-lisp:or billing-group-arn common-lisp:null))
   (billing-period-range common-lisp:nil :type
    (common-lisp:or custom-line-item-billing-period-range common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-map common-lisp:null))
   (charge-details (common-lisp:error ":charge-details is required") :type
    (common-lisp:or custom-line-item-charge-details common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-custom-line-item-input
                    'make-create-custom-line-item-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-custom-line-item-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:cons "X-Amzn-Client-Token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-custom-line-item-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-group-arn))
      (common-lisp:list
       (common-lisp:cons "BillingGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'billing-period-range))
      (common-lisp:list
       (common-lisp:cons "BillingPeriodRange"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'charge-details))
      (common-lisp:list
       (common-lisp:cons "ChargeDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-custom-line-item-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-custom-line-item-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-custom-line-item-output-"))
   (arn common-lisp:nil :type
    (common-lisp:or custom-line-item-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-custom-line-item-output
                    'make-create-custom-line-item-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-custom-line-item-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-custom-line-item-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-custom-line-item-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-free-tier-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-free-tier-config-"))
   (activated (common-lisp:error ":activated is required") :type
    (common-lisp:or tiering-activated common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-free-tier-config 'make-create-free-tier-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-free-tier-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-free-tier-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'activated))
      (common-lisp:list
       (common-lisp:cons "Activated"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-free-tier-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-pricing-plan-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-pricing-plan-input-"))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or pricing-plan-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or pricing-plan-description common-lisp:null))
   (pricing-rule-arns common-lisp:nil :type
    (common-lisp:or pricing-rule-arns-input common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-pricing-plan-input
                    'make-create-pricing-plan-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-pricing-plan-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:cons "X-Amzn-Client-Token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-pricing-plan-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pricing-rule-arns))
      (common-lisp:list
       (common-lisp:cons "PricingRuleArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-pricing-plan-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-pricing-plan-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-pricing-plan-output-"))
   (arn common-lisp:nil :type
    (common-lisp:or pricing-plan-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-pricing-plan-output
                    'make-create-pricing-plan-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-pricing-plan-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-pricing-plan-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-pricing-plan-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-pricing-rule-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-pricing-rule-input-"))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or pricing-rule-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or pricing-rule-description common-lisp:null))
   (scope (common-lisp:error ":scope is required") :type
    (common-lisp:or pricing-rule-scope common-lisp:null))
   (type (common-lisp:error ":type is required") :type
    (common-lisp:or pricing-rule-type common-lisp:null))
   (modifier-percentage common-lisp:nil :type
    (common-lisp:or modifier-percentage common-lisp:null))
   (service common-lisp:nil :type (common-lisp:or service common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-map common-lisp:null))
   (billing-entity common-lisp:nil :type
    (common-lisp:or billing-entity common-lisp:null))
   (tiering common-lisp:nil :type
    (common-lisp:or create-tiering-input common-lisp:null))
   (usage-type common-lisp:nil :type
    (common-lisp:or usage-type common-lisp:null))
   (operation common-lisp:nil :type
    (common-lisp:or operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-pricing-rule-input
                    'make-create-pricing-rule-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-pricing-rule-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:cons "X-Amzn-Client-Token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-pricing-rule-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scope))
      (common-lisp:list
       (common-lisp:cons "Scope"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'modifier-percentage))
      (common-lisp:list
       (common-lisp:cons "ModifierPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service))
      (common-lisp:list
       (common-lisp:cons "Service"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-entity))
      (common-lisp:list
       (common-lisp:cons "BillingEntity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tiering))
      (common-lisp:list
       (common-lisp:cons "Tiering"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'usage-type))
      (common-lisp:list
       (common-lisp:cons "UsageType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "Operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-pricing-rule-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-pricing-rule-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-pricing-rule-output-"))
   (arn common-lisp:nil :type
    (common-lisp:or pricing-rule-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-pricing-rule-output
                    'make-create-pricing-rule-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-pricing-rule-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-pricing-rule-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-pricing-rule-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-tiering-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-tiering-input-"))
   (free-tier (common-lisp:error ":free-tier is required") :type
    (common-lisp:or create-free-tier-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-tiering-input 'make-create-tiering-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-tiering-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-tiering-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'free-tier))
      (common-lisp:list
       (common-lisp:cons "FreeTier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-tiering-input))
   common-lisp:nil))
(common-lisp:deftype currency () 'common-lisp:string)
(common-lisp:deftype currency-code () 'common-lisp:string)
(common-lisp:deftype custom-line-item-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype custom-line-item-arns ()
   '(trivial-types:proper-list custom-line-item-arn))
 (common-lisp:defun |make-custom-line-item-arns|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list custom-line-item-arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype custom-line-item-association-element ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype custom-line-item-associations-list ()
   '(trivial-types:proper-list custom-line-item-association-element))
 (common-lisp:defun |make-custom-line-item-associations-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            custom-line-item-association-element))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype custom-line-item-batch-associations-list ()
   '(trivial-types:proper-list custom-line-item-association-element))
 (common-lisp:defun |make-custom-line-item-batch-associations-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            custom-line-item-association-element))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype custom-line-item-batch-disassociations-list ()
   '(trivial-types:proper-list custom-line-item-association-element))
 (common-lisp:defun |make-custom-line-item-batch-disassociations-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            custom-line-item-association-element))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (custom-line-item-billing-period-range (:copier common-lisp:nil)
      (:conc-name "struct-shape-custom-line-item-billing-period-range-"))
   (inclusive-start-billing-period
    (common-lisp:error ":inclusive-start-billing-period is required") :type
    (common-lisp:or billing-period common-lisp:null))
   (exclusive-end-billing-period common-lisp:nil :type
    (common-lisp:or billing-period common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'custom-line-item-billing-period-range
                    'make-custom-line-item-billing-period-range))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          custom-line-item-billing-period-range))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          custom-line-item-billing-period-range))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'inclusive-start-billing-period))
      (common-lisp:list
       (common-lisp:cons "InclusiveStartBillingPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'exclusive-end-billing-period))
      (common-lisp:list
       (common-lisp:cons "ExclusiveEndBillingPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          custom-line-item-billing-period-range))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (custom-line-item-charge-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-custom-line-item-charge-details-"))
   (flat common-lisp:nil :type
    (common-lisp:or custom-line-item-flat-charge-details common-lisp:null))
   (percentage common-lisp:nil :type
    (common-lisp:or custom-line-item-percentage-charge-details
                    common-lisp:null))
   (type (common-lisp:error ":type is required") :type
    (common-lisp:or custom-line-item-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'custom-line-item-charge-details
                    'make-custom-line-item-charge-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          custom-line-item-charge-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          custom-line-item-charge-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flat))
      (common-lisp:list
       (common-lisp:cons "Flat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'percentage))
      (common-lisp:list
       (common-lisp:cons "Percentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          custom-line-item-charge-details))
   common-lisp:nil))
(common-lisp:deftype custom-line-item-charge-value () 'common-lisp:double-float)
(common-lisp:deftype custom-line-item-description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (custom-line-item-flat-charge-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-custom-line-item-flat-charge-details-"))
   (charge-value (common-lisp:error ":charge-value is required") :type
    (common-lisp:or custom-line-item-charge-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'custom-line-item-flat-charge-details
                    'make-custom-line-item-flat-charge-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          custom-line-item-flat-charge-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          custom-line-item-flat-charge-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'charge-value))
      (common-lisp:list
       (common-lisp:cons "ChargeValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          custom-line-item-flat-charge-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype custom-line-item-list ()
   '(trivial-types:proper-list custom-line-item-list-element))
 (common-lisp:defun |make-custom-line-item-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            custom-line-item-list-element))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (custom-line-item-list-element (:copier common-lisp:nil)
      (:conc-name "struct-shape-custom-line-item-list-element-"))
   (arn common-lisp:nil :type
    (common-lisp:or custom-line-item-arn common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or custom-line-item-name common-lisp:null))
   (charge-details common-lisp:nil :type
    (common-lisp:or list-custom-line-item-charge-details common-lisp:null))
   (currency-code common-lisp:nil :type
    (common-lisp:or currency-code common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or custom-line-item-description common-lisp:null))
   (product-code common-lisp:nil :type
    (common-lisp:or custom-line-item-product-code common-lisp:null))
   (billing-group-arn common-lisp:nil :type
    (common-lisp:or billing-group-arn common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or instant common-lisp:null))
   (last-modified-time common-lisp:nil :type
    (common-lisp:or instant common-lisp:null))
   (association-size common-lisp:nil :type
    (common-lisp:or number-of-associations common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'custom-line-item-list-element
                    'make-custom-line-item-list-element))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          custom-line-item-list-element))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          custom-line-item-list-element))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'charge-details))
      (common-lisp:list
       (common-lisp:cons "ChargeDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'currency-code))
      (common-lisp:list
       (common-lisp:cons "CurrencyCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'product-code))
      (common-lisp:list
       (common-lisp:cons "ProductCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-group-arn))
      (common-lisp:list
       (common-lisp:cons "BillingGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'association-size))
      (common-lisp:list
       (common-lisp:cons "AssociationSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          custom-line-item-list-element))
   common-lisp:nil))
(common-lisp:deftype custom-line-item-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype custom-line-item-name-list ()
   '(trivial-types:proper-list custom-line-item-name))
 (common-lisp:defun |make-custom-line-item-name-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list custom-line-item-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (custom-line-item-percentage-charge-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-custom-line-item-percentage-charge-details-"))
   (percentage-value (common-lisp:error ":percentage-value is required") :type
    (common-lisp:or custom-line-item-percentage-charge-value common-lisp:null))
   (associated-values common-lisp:nil :type
    (common-lisp:or custom-line-item-associations-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'custom-line-item-percentage-charge-details
                    'make-custom-line-item-percentage-charge-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          custom-line-item-percentage-charge-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          custom-line-item-percentage-charge-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'percentage-value))
      (common-lisp:list
       (common-lisp:cons "PercentageValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'associated-values))
      (common-lisp:list
       (common-lisp:cons "AssociatedValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          custom-line-item-percentage-charge-details))
   common-lisp:nil))
(common-lisp:deftype custom-line-item-percentage-charge-value ()
  'common-lisp:double-float)
(common-lisp:deftype custom-line-item-product-code () 'common-lisp:string)
(common-lisp:deftype custom-line-item-relationship () 'common-lisp:string)
(common-lisp:deftype custom-line-item-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype custom-line-item-version-list ()
   '(trivial-types:proper-list custom-line-item-version-list-element))
 (common-lisp:defun |make-custom-line-item-version-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            custom-line-item-version-list-element))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (custom-line-item-version-list-element (:copier common-lisp:nil)
      (:conc-name "struct-shape-custom-line-item-version-list-element-"))
   (name common-lisp:nil :type
    (common-lisp:or custom-line-item-name common-lisp:null))
   (charge-details common-lisp:nil :type
    (common-lisp:or list-custom-line-item-charge-details common-lisp:null))
   (currency-code common-lisp:nil :type
    (common-lisp:or currency-code common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or custom-line-item-description common-lisp:null))
   (product-code common-lisp:nil :type
    (common-lisp:or custom-line-item-product-code common-lisp:null))
   (billing-group-arn common-lisp:nil :type
    (common-lisp:or billing-group-arn common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or instant common-lisp:null))
   (last-modified-time common-lisp:nil :type
    (common-lisp:or instant common-lisp:null))
   (association-size common-lisp:nil :type
    (common-lisp:or number-of-associations common-lisp:null))
   (start-billing-period common-lisp:nil :type
    (common-lisp:or billing-period common-lisp:null))
   (end-billing-period common-lisp:nil :type
    (common-lisp:or billing-period common-lisp:null))
   (arn common-lisp:nil :type
    (common-lisp:or custom-line-item-arn common-lisp:null))
   (start-time common-lisp:nil :type
    (common-lisp:or instant common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'custom-line-item-version-list-element
                    'make-custom-line-item-version-list-element))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          custom-line-item-version-list-element))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          custom-line-item-version-list-element))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'charge-details))
      (common-lisp:list
       (common-lisp:cons "ChargeDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'currency-code))
      (common-lisp:list
       (common-lisp:cons "CurrencyCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'product-code))
      (common-lisp:list
       (common-lisp:cons "ProductCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-group-arn))
      (common-lisp:list
       (common-lisp:cons "BillingGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'association-size))
      (common-lisp:list
       (common-lisp:cons "AssociationSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'start-billing-period))
      (common-lisp:list
       (common-lisp:cons "StartBillingPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-billing-period))
      (common-lisp:list
       (common-lisp:cons "EndBillingPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          custom-line-item-version-list-element))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-billing-group-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-billing-group-input-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or billing-group-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-billing-group-input
                    'make-delete-billing-group-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-billing-group-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-billing-group-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-billing-group-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-billing-group-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-billing-group-output-"))
   (arn common-lisp:nil :type
    (common-lisp:or billing-group-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-billing-group-output
                    'make-delete-billing-group-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-billing-group-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-billing-group-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-billing-group-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-custom-line-item-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-custom-line-item-input-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or custom-line-item-arn common-lisp:null))
   (billing-period-range common-lisp:nil :type
    (common-lisp:or custom-line-item-billing-period-range common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-custom-line-item-input
                    'make-delete-custom-line-item-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-custom-line-item-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-custom-line-item-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'billing-period-range))
      (common-lisp:list
       (common-lisp:cons "BillingPeriodRange"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-custom-line-item-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-custom-line-item-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-custom-line-item-output-"))
   (arn common-lisp:nil :type
    (common-lisp:or custom-line-item-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-custom-line-item-output
                    'make-delete-custom-line-item-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-custom-line-item-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-custom-line-item-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-custom-line-item-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-pricing-plan-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-pricing-plan-input-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or pricing-plan-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-pricing-plan-input
                    'make-delete-pricing-plan-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-pricing-plan-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-pricing-plan-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-pricing-plan-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-pricing-plan-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-pricing-plan-output-"))
   (arn common-lisp:nil :type
    (common-lisp:or pricing-plan-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-pricing-plan-output
                    'make-delete-pricing-plan-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-pricing-plan-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-pricing-plan-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-pricing-plan-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-pricing-rule-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-pricing-rule-input-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or pricing-rule-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-pricing-rule-input
                    'make-delete-pricing-rule-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-pricing-rule-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-pricing-rule-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-pricing-rule-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-pricing-rule-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-pricing-rule-output-"))
   (arn common-lisp:nil :type
    (common-lisp:or pricing-rule-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-pricing-rule-output
                    'make-delete-pricing-rule-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-pricing-rule-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-pricing-rule-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-pricing-rule-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-accounts-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-disassociate-accounts-input-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or billing-group-arn common-lisp:null))
   (account-ids (common-lisp:error ":account-ids is required") :type
    (common-lisp:or account-id-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disassociate-accounts-input
                    'make-disassociate-accounts-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-accounts-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-accounts-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "AccountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-accounts-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-accounts-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-disassociate-accounts-output-"))
   (arn common-lisp:nil :type
    (common-lisp:or billing-group-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disassociate-accounts-output
                    'make-disassociate-accounts-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-accounts-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-accounts-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-accounts-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-pricing-rules-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-disassociate-pricing-rules-input-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or pricing-plan-arn common-lisp:null))
   (pricing-rule-arns (common-lisp:error ":pricing-rule-arns is required")
    :type (common-lisp:or pricing-rule-arns-non-empty-input common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disassociate-pricing-rules-input
                    'make-disassociate-pricing-rules-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-pricing-rules-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-pricing-rules-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pricing-rule-arns))
      (common-lisp:list
       (common-lisp:cons "PricingRuleArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-pricing-rules-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-pricing-rules-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-disassociate-pricing-rules-output-"))
   (arn common-lisp:nil :type
    (common-lisp:or pricing-plan-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disassociate-pricing-rules-output
                    'make-disassociate-pricing-rules-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-pricing-rules-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-pricing-rules-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-pricing-rules-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-resource-response-element (:copier common-lisp:nil)
      (:conc-name "struct-shape-disassociate-resource-response-element-"))
   (arn common-lisp:nil :type
    (common-lisp:or custom-line-item-association-element common-lisp:null))
   (error common-lisp:nil :type
    (common-lisp:or associate-resource-error common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disassociate-resource-response-element
                    'make-disassociate-resource-response-element))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-resource-response-element))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-resource-response-element))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "Error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-resource-response-element))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype disassociate-resources-response-list ()
   '(trivial-types:proper-list disassociate-resource-response-element))
 (common-lisp:defun |make-disassociate-resources-response-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            disassociate-resource-response-element))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (free-tier-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-free-tier-config-"))
   (activated (common-lisp:error ":activated is required") :type
    (common-lisp:or tiering-activated common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'free-tier-config 'make-free-tier-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input free-tier-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input free-tier-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'activated))
      (common-lisp:list
       (common-lisp:cons "Activated"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input free-tier-config))
   common-lisp:nil))
(common-lisp:deftype instant () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (billingconductor-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-exception-message)
      (retry-after-seconds :initarg :retry-after-seconds :initform
       common-lisp:nil :reader internal-server-exception-retry-after-seconds)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-message
                    'internal-server-exception-retry-after-seconds)))
(common-lisp:progn
 (common-lisp:defstruct
     (list-account-associations-filter (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-account-associations-filter-"))
   (association common-lisp:nil :type
    (common-lisp:or association common-lisp:null))
   (account-id common-lisp:nil :type
    (common-lisp:or account-id common-lisp:null))
   (account-ids common-lisp:nil :type
    (common-lisp:or account-id-filter-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-account-associations-filter
                    'make-list-account-associations-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-account-associations-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-account-associations-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'association))
      (common-lisp:list
       (common-lisp:cons "Association"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "AccountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-account-associations-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-account-associations-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-account-associations-input-"))
   (billing-period common-lisp:nil :type
    (common-lisp:or billing-period common-lisp:null))
   (filters common-lisp:nil :type
    (common-lisp:or list-account-associations-filter common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-account-associations-input
                    'make-list-account-associations-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-account-associations-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-account-associations-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-period))
      (common-lisp:list
       (common-lisp:cons "BillingPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "Filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-account-associations-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-account-associations-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-account-associations-output-"))
   (linked-accounts common-lisp:nil :type
    (common-lisp:or account-associations-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-account-associations-output
                    'make-list-account-associations-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-account-associations-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-account-associations-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'linked-accounts))
      (common-lisp:list
       (common-lisp:cons "LinkedAccounts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-account-associations-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-billing-group-cost-reports-filter (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-billing-group-cost-reports-filter-"))
   (billing-group-arns common-lisp:nil :type
    (common-lisp:or billing-group-arn-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-billing-group-cost-reports-filter
                    'make-list-billing-group-cost-reports-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-billing-group-cost-reports-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-billing-group-cost-reports-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-group-arns))
      (common-lisp:list
       (common-lisp:cons "BillingGroupArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-billing-group-cost-reports-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-billing-group-cost-reports-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-billing-group-cost-reports-input-"))
   (billing-period common-lisp:nil :type
    (common-lisp:or billing-period common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-billing-group-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null))
   (filters common-lisp:nil :type
    (common-lisp:or list-billing-group-cost-reports-filter common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-billing-group-cost-reports-input
                    'make-list-billing-group-cost-reports-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-billing-group-cost-reports-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-billing-group-cost-reports-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-period))
      (common-lisp:list
       (common-lisp:cons "BillingPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "Filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-billing-group-cost-reports-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-billing-group-cost-reports-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-billing-group-cost-reports-output-"))
   (billing-group-cost-reports common-lisp:nil :type
    (common-lisp:or billing-group-cost-report-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-billing-group-cost-reports-output
                    'make-list-billing-group-cost-reports-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-billing-group-cost-reports-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-billing-group-cost-reports-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'billing-group-cost-reports))
      (common-lisp:list
       (common-lisp:cons "BillingGroupCostReports"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-billing-group-cost-reports-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-billing-groups-filter (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-billing-groups-filter-"))
   (arns common-lisp:nil :type
    (common-lisp:or billing-group-arn-list common-lisp:null))
   (pricing-plan common-lisp:nil :type
    (common-lisp:or pricing-plan-full-arn common-lisp:null))
   (statuses common-lisp:nil :type
    (common-lisp:or billing-group-status-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-billing-groups-filter
                    'make-list-billing-groups-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-billing-groups-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-billing-groups-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arns))
      (common-lisp:list
       (common-lisp:cons "Arns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pricing-plan))
      (common-lisp:list
       (common-lisp:cons "PricingPlan"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'statuses))
      (common-lisp:list
       (common-lisp:cons "Statuses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-billing-groups-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-billing-groups-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-billing-groups-input-"))
   (billing-period common-lisp:nil :type
    (common-lisp:or billing-period common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-billing-group-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null))
   (filters common-lisp:nil :type
    (common-lisp:or list-billing-groups-filter common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-billing-groups-input
                    'make-list-billing-groups-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-billing-groups-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-billing-groups-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-period))
      (common-lisp:list
       (common-lisp:cons "BillingPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "Filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-billing-groups-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-billing-groups-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-billing-groups-output-"))
   (billing-groups common-lisp:nil :type
    (common-lisp:or billing-group-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-billing-groups-output
                    'make-list-billing-groups-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-billing-groups-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-billing-groups-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-groups))
      (common-lisp:list
       (common-lisp:cons "BillingGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-billing-groups-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-custom-line-item-charge-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-custom-line-item-charge-details-"))
   (flat common-lisp:nil :type
    (common-lisp:or list-custom-line-item-flat-charge-details
                    common-lisp:null))
   (percentage common-lisp:nil :type
    (common-lisp:or list-custom-line-item-percentage-charge-details
                    common-lisp:null))
   (type (common-lisp:error ":type is required") :type
    (common-lisp:or custom-line-item-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-custom-line-item-charge-details
                    'make-list-custom-line-item-charge-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-item-charge-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-item-charge-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flat))
      (common-lisp:list
       (common-lisp:cons "Flat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'percentage))
      (common-lisp:list
       (common-lisp:cons "Percentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-item-charge-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-custom-line-item-flat-charge-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-custom-line-item-flat-charge-details-"))
   (charge-value (common-lisp:error ":charge-value is required") :type
    (common-lisp:or custom-line-item-charge-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-custom-line-item-flat-charge-details
                    'make-list-custom-line-item-flat-charge-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-item-flat-charge-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-item-flat-charge-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'charge-value))
      (common-lisp:list
       (common-lisp:cons "ChargeValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-item-flat-charge-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-custom-line-item-percentage-charge-details (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-custom-line-item-percentage-charge-details-"))
   (percentage-value (common-lisp:error ":percentage-value is required") :type
    (common-lisp:or custom-line-item-percentage-charge-value
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-custom-line-item-percentage-charge-details
                    'make-list-custom-line-item-percentage-charge-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-item-percentage-charge-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-item-percentage-charge-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'percentage-value))
      (common-lisp:list
       (common-lisp:cons "PercentageValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-item-percentage-charge-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-custom-line-item-versions-billing-period-range-filter
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-custom-line-item-versions-billing-period-range-filter-"))
   (start-billing-period common-lisp:nil :type
    (common-lisp:or billing-period common-lisp:null))
   (end-billing-period common-lisp:nil :type
    (common-lisp:or billing-period common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-custom-line-item-versions-billing-period-range-filter
                    'make-list-custom-line-item-versions-billing-period-range-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-item-versions-billing-period-range-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-item-versions-billing-period-range-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'start-billing-period))
      (common-lisp:list
       (common-lisp:cons "StartBillingPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-billing-period))
      (common-lisp:list
       (common-lisp:cons "EndBillingPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-item-versions-billing-period-range-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-custom-line-item-versions-filter (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-custom-line-item-versions-filter-"))
   (billing-period-range common-lisp:nil :type
    (common-lisp:or list-custom-line-item-versions-billing-period-range-filter
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-custom-line-item-versions-filter
                    'make-list-custom-line-item-versions-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-item-versions-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-item-versions-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'billing-period-range))
      (common-lisp:list
       (common-lisp:cons "BillingPeriodRange"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-item-versions-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-custom-line-item-versions-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-custom-line-item-versions-input-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or custom-line-item-arn common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-custom-line-item-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null))
   (filters common-lisp:nil :type
    (common-lisp:or list-custom-line-item-versions-filter common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-custom-line-item-versions-input
                    'make-list-custom-line-item-versions-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-item-versions-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-item-versions-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "Filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-item-versions-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-custom-line-item-versions-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-custom-line-item-versions-output-"))
   (custom-line-item-versions common-lisp:nil :type
    (common-lisp:or custom-line-item-version-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-custom-line-item-versions-output
                    'make-list-custom-line-item-versions-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-item-versions-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-item-versions-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'custom-line-item-versions))
      (common-lisp:list
       (common-lisp:cons "CustomLineItemVersions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-item-versions-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-custom-line-items-filter (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-custom-line-items-filter-"))
   (names common-lisp:nil :type
    (common-lisp:or custom-line-item-name-list common-lisp:null))
   (billing-groups common-lisp:nil :type
    (common-lisp:or billing-group-arn-list common-lisp:null))
   (arns common-lisp:nil :type
    (common-lisp:or custom-line-item-arns common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-custom-line-items-filter
                    'make-list-custom-line-items-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-items-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-items-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'names))
      (common-lisp:list
       (common-lisp:cons "Names"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-groups))
      (common-lisp:list
       (common-lisp:cons "BillingGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arns))
      (common-lisp:list
       (common-lisp:cons "Arns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-items-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-custom-line-items-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-custom-line-items-input-"))
   (billing-period common-lisp:nil :type
    (common-lisp:or billing-period common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-custom-line-item-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null))
   (filters common-lisp:nil :type
    (common-lisp:or list-custom-line-items-filter common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-custom-line-items-input
                    'make-list-custom-line-items-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-items-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-items-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-period))
      (common-lisp:list
       (common-lisp:cons "BillingPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "Filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-items-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-custom-line-items-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-custom-line-items-output-"))
   (custom-line-items common-lisp:nil :type
    (common-lisp:or custom-line-item-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-custom-line-items-output
                    'make-list-custom-line-items-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-items-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-items-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'custom-line-items))
      (common-lisp:list
       (common-lisp:cons "CustomLineItems"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-items-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-pricing-plans-associated-with-pricing-rule-input
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-pricing-plans-associated-with-pricing-rule-input-"))
   (billing-period common-lisp:nil :type
    (common-lisp:or billing-period common-lisp:null))
   (pricing-rule-arn (common-lisp:error ":pricing-rule-arn is required") :type
    (common-lisp:or pricing-rule-arn common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-pricing-rule-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-pricing-plans-associated-with-pricing-rule-input
                    'make-list-pricing-plans-associated-with-pricing-rule-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-plans-associated-with-pricing-rule-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-plans-associated-with-pricing-rule-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-period))
      (common-lisp:list
       (common-lisp:cons "BillingPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pricing-rule-arn))
      (common-lisp:list
       (common-lisp:cons "PricingRuleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-plans-associated-with-pricing-rule-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-pricing-plans-associated-with-pricing-rule-output
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-pricing-plans-associated-with-pricing-rule-output-"))
   (billing-period common-lisp:nil :type
    (common-lisp:or billing-period common-lisp:null))
   (pricing-rule-arn common-lisp:nil :type
    (common-lisp:or pricing-rule-arn common-lisp:null))
   (pricing-plan-arns common-lisp:nil :type
    (common-lisp:or pricing-plan-arns common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-pricing-plans-associated-with-pricing-rule-output
                    'make-list-pricing-plans-associated-with-pricing-rule-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-plans-associated-with-pricing-rule-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-plans-associated-with-pricing-rule-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-period))
      (common-lisp:list
       (common-lisp:cons "BillingPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pricing-rule-arn))
      (common-lisp:list
       (common-lisp:cons "PricingRuleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pricing-plan-arns))
      (common-lisp:list
       (common-lisp:cons "PricingPlanArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-plans-associated-with-pricing-rule-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-pricing-plans-filter (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-pricing-plans-filter-"))
   (arns common-lisp:nil :type
    (common-lisp:or pricing-plan-arns common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-pricing-plans-filter
                    'make-list-pricing-plans-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-plans-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-plans-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arns))
      (common-lisp:list
       (common-lisp:cons "Arns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-plans-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-pricing-plans-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-pricing-plans-input-"))
   (billing-period common-lisp:nil :type
    (common-lisp:or billing-period common-lisp:null))
   (filters common-lisp:nil :type
    (common-lisp:or list-pricing-plans-filter common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-pricing-plan-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-pricing-plans-input 'make-list-pricing-plans-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-plans-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-plans-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-period))
      (common-lisp:list
       (common-lisp:cons "BillingPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "Filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-plans-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-pricing-plans-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-pricing-plans-output-"))
   (billing-period common-lisp:nil :type
    (common-lisp:or billing-period common-lisp:null))
   (pricing-plans common-lisp:nil :type
    (common-lisp:or pricing-plan-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-pricing-plans-output
                    'make-list-pricing-plans-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-plans-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-plans-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-period))
      (common-lisp:list
       (common-lisp:cons "BillingPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pricing-plans))
      (common-lisp:list
       (common-lisp:cons "PricingPlans"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-plans-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-pricing-rules-associated-to-pricing-plan-input
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-pricing-rules-associated-to-pricing-plan-input-"))
   (billing-period common-lisp:nil :type
    (common-lisp:or billing-period common-lisp:null))
   (pricing-plan-arn (common-lisp:error ":pricing-plan-arn is required") :type
    (common-lisp:or pricing-plan-arn common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-pricing-plan-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-pricing-rules-associated-to-pricing-plan-input
                    'make-list-pricing-rules-associated-to-pricing-plan-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-rules-associated-to-pricing-plan-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-rules-associated-to-pricing-plan-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-period))
      (common-lisp:list
       (common-lisp:cons "BillingPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pricing-plan-arn))
      (common-lisp:list
       (common-lisp:cons "PricingPlanArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-rules-associated-to-pricing-plan-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-pricing-rules-associated-to-pricing-plan-output
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-pricing-rules-associated-to-pricing-plan-output-"))
   (billing-period common-lisp:nil :type
    (common-lisp:or billing-period common-lisp:null))
   (pricing-plan-arn common-lisp:nil :type
    (common-lisp:or pricing-plan-arn common-lisp:null))
   (pricing-rule-arns common-lisp:nil :type
    (common-lisp:or pricing-rule-arns common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-pricing-rules-associated-to-pricing-plan-output
                    'make-list-pricing-rules-associated-to-pricing-plan-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-rules-associated-to-pricing-plan-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-rules-associated-to-pricing-plan-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-period))
      (common-lisp:list
       (common-lisp:cons "BillingPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pricing-plan-arn))
      (common-lisp:list
       (common-lisp:cons "PricingPlanArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pricing-rule-arns))
      (common-lisp:list
       (common-lisp:cons "PricingRuleArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-rules-associated-to-pricing-plan-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-pricing-rules-filter (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-pricing-rules-filter-"))
   (arns common-lisp:nil :type
    (common-lisp:or pricing-rule-arns common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-pricing-rules-filter
                    'make-list-pricing-rules-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-rules-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-rules-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arns))
      (common-lisp:list
       (common-lisp:cons "Arns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-rules-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-pricing-rules-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-pricing-rules-input-"))
   (billing-period common-lisp:nil :type
    (common-lisp:or billing-period common-lisp:null))
   (filters common-lisp:nil :type
    (common-lisp:or list-pricing-rules-filter common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-pricing-rule-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-pricing-rules-input 'make-list-pricing-rules-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-rules-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-rules-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-period))
      (common-lisp:list
       (common-lisp:cons "BillingPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "Filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-rules-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-pricing-rules-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-pricing-rules-output-"))
   (billing-period common-lisp:nil :type
    (common-lisp:or billing-period common-lisp:null))
   (pricing-rules common-lisp:nil :type
    (common-lisp:or pricing-rule-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-pricing-rules-output
                    'make-list-pricing-rules-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-rules-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-rules-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-period))
      (common-lisp:list
       (common-lisp:cons "BillingPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pricing-rules))
      (common-lisp:list
       (common-lisp:cons "PricingRules"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-rules-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-resources-associated-to-custom-line-item-filter
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-resources-associated-to-custom-line-item-filter-"))
   (relationship common-lisp:nil :type
    (common-lisp:or custom-line-item-relationship common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-resources-associated-to-custom-line-item-filter
                    'make-list-resources-associated-to-custom-line-item-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-resources-associated-to-custom-line-item-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-resources-associated-to-custom-line-item-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'relationship))
      (common-lisp:list
       (common-lisp:cons "Relationship"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-resources-associated-to-custom-line-item-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-resources-associated-to-custom-line-item-input
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-resources-associated-to-custom-line-item-input-"))
   (billing-period common-lisp:nil :type
    (common-lisp:or billing-period common-lisp:null))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or custom-line-item-arn common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-custom-line-item-results common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null))
   (filters common-lisp:nil :type
    (common-lisp:or list-resources-associated-to-custom-line-item-filter
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-resources-associated-to-custom-line-item-input
                    'make-list-resources-associated-to-custom-line-item-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-resources-associated-to-custom-line-item-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-resources-associated-to-custom-line-item-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-period))
      (common-lisp:list
       (common-lisp:cons "BillingPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "Filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-resources-associated-to-custom-line-item-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-resources-associated-to-custom-line-item-output
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-resources-associated-to-custom-line-item-output-"))
   (arn common-lisp:nil :type
    (common-lisp:or custom-line-item-arn common-lisp:null))
   (associated-resources common-lisp:nil :type
    (common-lisp:or list-resources-associated-to-custom-line-item-response-list
                    common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-resources-associated-to-custom-line-item-output
                    'make-list-resources-associated-to-custom-line-item-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-resources-associated-to-custom-line-item-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-resources-associated-to-custom-line-item-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'associated-resources))
      (common-lisp:list
       (common-lisp:cons "AssociatedResources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-resources-associated-to-custom-line-item-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-resources-associated-to-custom-line-item-response-element
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-resources-associated-to-custom-line-item-response-element-"))
   (arn common-lisp:nil :type
    (common-lisp:or custom-line-item-association-element common-lisp:null))
   (relationship common-lisp:nil :type
    (common-lisp:or custom-line-item-relationship common-lisp:null))
   (end-billing-period common-lisp:nil :type
    (common-lisp:or billing-period common-lisp:null)))
 (common-lisp:export
  (common-lisp:list
   'list-resources-associated-to-custom-line-item-response-element
   'make-list-resources-associated-to-custom-line-item-response-element))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-resources-associated-to-custom-line-item-response-element))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-resources-associated-to-custom-line-item-response-element))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'relationship))
      (common-lisp:list
       (common-lisp:cons "Relationship"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-billing-period))
      (common-lisp:list
       (common-lisp:cons "EndBillingPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-resources-associated-to-custom-line-item-response-element))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype list-resources-associated-to-custom-line-item-response-list
                      ()
   '(trivial-types:proper-list
     list-resources-associated-to-custom-line-item-response-element))
 (common-lisp:defun |make-list-resources-associated-to-custom-line-item-response-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            list-resources-associated-to-custom-line-item-response-element))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-response-"))
   (tags common-lisp:nil :type (common-lisp:or tag-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:deftype margin () 'common-lisp:string)
(common-lisp:deftype margin-percentage () 'common-lisp:string)
(common-lisp:deftype max-billing-group-results () 'common-lisp:integer)
(common-lisp:deftype max-custom-line-item-results () 'common-lisp:integer)
(common-lisp:deftype max-pricing-plan-results () 'common-lisp:integer)
(common-lisp:deftype max-pricing-rule-results () 'common-lisp:integer)
(common-lisp:deftype modifier-percentage () 'common-lisp:double-float)
(common-lisp:deftype number-of-accounts () 'common-lisp:integer)
(common-lisp:deftype number-of-associated-pricing-rules () 'common-lisp:integer)
(common-lisp:deftype number-of-associations () 'common-lisp:integer)
(common-lisp:deftype number-of-pricing-plans-associated-with ()
  'common-lisp:integer)
(common-lisp:deftype operation () 'common-lisp:string)
(common-lisp:deftype pricing-plan-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype pricing-plan-arns ()
   '(trivial-types:proper-list pricing-plan-arn))
 (common-lisp:defun |make-pricing-plan-arns|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list pricing-plan-arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype pricing-plan-description () 'common-lisp:string)
(common-lisp:deftype pricing-plan-full-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype pricing-plan-list ()
   '(trivial-types:proper-list pricing-plan-list-element))
 (common-lisp:defun |make-pricing-plan-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            pricing-plan-list-element))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (pricing-plan-list-element (:copier common-lisp:nil)
      (:conc-name "struct-shape-pricing-plan-list-element-"))
   (name common-lisp:nil :type
    (common-lisp:or pricing-plan-name common-lisp:null))
   (arn common-lisp:nil :type
    (common-lisp:or pricing-plan-arn common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or pricing-plan-description common-lisp:null))
   (size common-lisp:nil :type
    (common-lisp:or number-of-associated-pricing-rules common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or instant common-lisp:null))
   (last-modified-time common-lisp:nil :type
    (common-lisp:or instant common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'pricing-plan-list-element
                    'make-pricing-plan-list-element))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          pricing-plan-list-element))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          pricing-plan-list-element))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'size))
      (common-lisp:list
       (common-lisp:cons "Size"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          pricing-plan-list-element))
   common-lisp:nil))
(common-lisp:deftype pricing-plan-name () 'common-lisp:string)
(common-lisp:deftype pricing-rule-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype pricing-rule-arns ()
   '(trivial-types:proper-list pricing-rule-arn))
 (common-lisp:defun |make-pricing-rule-arns|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list pricing-rule-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype pricing-rule-arns-input ()
   '(trivial-types:proper-list pricing-rule-arn))
 (common-lisp:defun |make-pricing-rule-arns-input|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list pricing-rule-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype pricing-rule-arns-non-empty-input ()
   '(trivial-types:proper-list pricing-rule-arn))
 (common-lisp:defun |make-pricing-rule-arns-non-empty-input|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list pricing-rule-arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype pricing-rule-description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype pricing-rule-list ()
   '(trivial-types:proper-list pricing-rule-list-element))
 (common-lisp:defun |make-pricing-rule-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            pricing-rule-list-element))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (pricing-rule-list-element (:copier common-lisp:nil)
      (:conc-name "struct-shape-pricing-rule-list-element-"))
   (name common-lisp:nil :type
    (common-lisp:or pricing-rule-name common-lisp:null))
   (arn common-lisp:nil :type
    (common-lisp:or pricing-rule-arn common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or pricing-rule-description common-lisp:null))
   (scope common-lisp:nil :type
    (common-lisp:or pricing-rule-scope common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or pricing-rule-type common-lisp:null))
   (modifier-percentage common-lisp:nil :type
    (common-lisp:or modifier-percentage common-lisp:null))
   (service common-lisp:nil :type (common-lisp:or service common-lisp:null))
   (associated-pricing-plan-count common-lisp:nil :type
    (common-lisp:or number-of-pricing-plans-associated-with common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or instant common-lisp:null))
   (last-modified-time common-lisp:nil :type
    (common-lisp:or instant common-lisp:null))
   (billing-entity common-lisp:nil :type
    (common-lisp:or billing-entity common-lisp:null))
   (tiering common-lisp:nil :type (common-lisp:or tiering common-lisp:null))
   (usage-type common-lisp:nil :type
    (common-lisp:or usage-type common-lisp:null))
   (operation common-lisp:nil :type
    (common-lisp:or operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'pricing-rule-list-element
                    'make-pricing-rule-list-element))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          pricing-rule-list-element))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          pricing-rule-list-element))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scope))
      (common-lisp:list
       (common-lisp:cons "Scope"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'modifier-percentage))
      (common-lisp:list
       (common-lisp:cons "ModifierPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service))
      (common-lisp:list
       (common-lisp:cons "Service"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'associated-pricing-plan-count))
      (common-lisp:list
       (common-lisp:cons "AssociatedPricingPlanCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-entity))
      (common-lisp:list
       (common-lisp:cons "BillingEntity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tiering))
      (common-lisp:list
       (common-lisp:cons "Tiering"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'usage-type))
      (common-lisp:list
       (common-lisp:cons "UsageType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "Operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          pricing-rule-list-element))
   common-lisp:nil))
(common-lisp:deftype pricing-rule-name () 'common-lisp:string)
(common-lisp:deftype pricing-rule-scope () 'common-lisp:string)
(common-lisp:deftype pricing-rule-type () 'common-lisp:string)
(common-lisp:deftype proforma-cost () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (billingconductor-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)
      (resource-id :initarg :resource-id :initform common-lisp:nil :reader
       resource-not-found-exception-resource-id)
      (resource-type :initarg :resource-type :initform common-lisp:nil :reader
       resource-not-found-exception-resource-type)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message
                    'resource-not-found-exception-resource-id
                    'resource-not-found-exception-resource-type)))
(common-lisp:deftype retry-after-seconds () 'common-lisp:integer)
(common-lisp:deftype service () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition service-limit-exceeded-exception
     (billingconductor-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-limit-exceeded-exception-message)
      (resource-id :initarg :resource-id :initform common-lisp:nil :reader
       service-limit-exceeded-exception-resource-id)
      (resource-type :initarg :resource-type :initform common-lisp:nil :reader
       service-limit-exceeded-exception-resource-type)
      (limit-code :initarg :limit-code :initform common-lisp:nil :reader
       service-limit-exceeded-exception-limit-code)
      (service-code :initarg :service-code :initform common-lisp:nil :reader
       service-limit-exceeded-exception-service-code)))
 (common-lisp:export
  (common-lisp:list 'service-limit-exceeded-exception
                    'service-limit-exceeded-exception-message
                    'service-limit-exceeded-exception-resource-id
                    'service-limit-exceeded-exception-resource-type
                    'service-limit-exceeded-exception-limit-code
                    'service-limit-exceeded-exception-service-code)))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun |make-tag-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-map () 'common-lisp:hash-table)
 (common-lisp:defun |make-tag-map| (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or arn common-lisp:null))
   (tags (common-lisp:error ":tags is required") :type
    (common-lisp:or tag-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (billingconductor-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       throttling-exception-message)
      (retry-after-seconds :initarg :retry-after-seconds :initform
       common-lisp:nil :reader throttling-exception-retry-after-seconds)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message
                    'throttling-exception-retry-after-seconds)))
(common-lisp:progn
 (common-lisp:defstruct
     (tiering (:copier common-lisp:nil) (:conc-name "struct-shape-tiering-"))
   (free-tier (common-lisp:error ":free-tier is required") :type
    (common-lisp:or free-tier-config common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tiering 'make-tiering))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tiering))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tiering))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'free-tier))
      (common-lisp:list
       (common-lisp:cons "FreeTier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tiering))
   common-lisp:nil))
(common-lisp:deftype tiering-activated () 'common-lisp:boolean)
(common-lisp:deftype token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or arn common-lisp:null))
   (tag-keys (common-lisp:error ":tag-keys is required") :type
    (common-lisp:or tag-key-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-billing-group-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-billing-group-input-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or billing-group-arn common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or billing-group-name common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or billing-group-status common-lisp:null))
   (computation-preference common-lisp:nil :type
    (common-lisp:or computation-preference common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or billing-group-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-billing-group-input
                    'make-update-billing-group-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-billing-group-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-billing-group-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'computation-preference))
      (common-lisp:list
       (common-lisp:cons "ComputationPreference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-billing-group-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-billing-group-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-billing-group-output-"))
   (arn common-lisp:nil :type
    (common-lisp:or billing-group-arn common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or billing-group-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or billing-group-description common-lisp:null))
   (primary-account-id common-lisp:nil :type
    (common-lisp:or account-id common-lisp:null))
   (pricing-plan-arn common-lisp:nil :type
    (common-lisp:or pricing-plan-arn common-lisp:null))
   (size common-lisp:nil :type
    (common-lisp:or number-of-accounts common-lisp:null))
   (last-modified-time common-lisp:nil :type
    (common-lisp:or instant common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or billing-group-status common-lisp:null))
   (status-reason common-lisp:nil :type
    (common-lisp:or billing-group-status-reason common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-billing-group-output
                    'make-update-billing-group-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-billing-group-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-billing-group-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'primary-account-id))
      (common-lisp:list
       (common-lisp:cons "PrimaryAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pricing-plan-arn))
      (common-lisp:list
       (common-lisp:cons "PricingPlanArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'size))
      (common-lisp:list
       (common-lisp:cons "Size"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-reason))
      (common-lisp:list
       (common-lisp:cons "StatusReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-billing-group-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-custom-line-item-charge-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-custom-line-item-charge-details-"))
   (flat common-lisp:nil :type
    (common-lisp:or update-custom-line-item-flat-charge-details
                    common-lisp:null))
   (percentage common-lisp:nil :type
    (common-lisp:or update-custom-line-item-percentage-charge-details
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-custom-line-item-charge-details
                    'make-update-custom-line-item-charge-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-custom-line-item-charge-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-custom-line-item-charge-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flat))
      (common-lisp:list
       (common-lisp:cons "Flat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'percentage))
      (common-lisp:list
       (common-lisp:cons "Percentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-custom-line-item-charge-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-custom-line-item-flat-charge-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-custom-line-item-flat-charge-details-"))
   (charge-value (common-lisp:error ":charge-value is required") :type
    (common-lisp:or custom-line-item-charge-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-custom-line-item-flat-charge-details
                    'make-update-custom-line-item-flat-charge-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-custom-line-item-flat-charge-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-custom-line-item-flat-charge-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'charge-value))
      (common-lisp:list
       (common-lisp:cons "ChargeValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-custom-line-item-flat-charge-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-custom-line-item-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-custom-line-item-input-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or custom-line-item-arn common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or custom-line-item-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or custom-line-item-description common-lisp:null))
   (charge-details common-lisp:nil :type
    (common-lisp:or update-custom-line-item-charge-details common-lisp:null))
   (billing-period-range common-lisp:nil :type
    (common-lisp:or custom-line-item-billing-period-range common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-custom-line-item-input
                    'make-update-custom-line-item-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-custom-line-item-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-custom-line-item-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'charge-details))
      (common-lisp:list
       (common-lisp:cons "ChargeDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'billing-period-range))
      (common-lisp:list
       (common-lisp:cons "BillingPeriodRange"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-custom-line-item-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-custom-line-item-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-custom-line-item-output-"))
   (arn common-lisp:nil :type
    (common-lisp:or custom-line-item-arn common-lisp:null))
   (billing-group-arn common-lisp:nil :type
    (common-lisp:or billing-group-full-arn common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or custom-line-item-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or custom-line-item-description common-lisp:null))
   (charge-details common-lisp:nil :type
    (common-lisp:or list-custom-line-item-charge-details common-lisp:null))
   (last-modified-time common-lisp:nil :type
    (common-lisp:or instant common-lisp:null))
   (association-size common-lisp:nil :type
    (common-lisp:or number-of-associations common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-custom-line-item-output
                    'make-update-custom-line-item-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-custom-line-item-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-custom-line-item-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-group-arn))
      (common-lisp:list
       (common-lisp:cons "BillingGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'charge-details))
      (common-lisp:list
       (common-lisp:cons "ChargeDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'association-size))
      (common-lisp:list
       (common-lisp:cons "AssociationSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-custom-line-item-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-custom-line-item-percentage-charge-details
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-update-custom-line-item-percentage-charge-details-"))
   (percentage-value (common-lisp:error ":percentage-value is required") :type
    (common-lisp:or custom-line-item-percentage-charge-value
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-custom-line-item-percentage-charge-details
                    'make-update-custom-line-item-percentage-charge-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-custom-line-item-percentage-charge-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-custom-line-item-percentage-charge-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'percentage-value))
      (common-lisp:list
       (common-lisp:cons "PercentageValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-custom-line-item-percentage-charge-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-free-tier-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-free-tier-config-"))
   (activated (common-lisp:error ":activated is required") :type
    (common-lisp:or tiering-activated common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-free-tier-config 'make-update-free-tier-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-free-tier-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-free-tier-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'activated))
      (common-lisp:list
       (common-lisp:cons "Activated"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-free-tier-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-pricing-plan-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-pricing-plan-input-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or pricing-plan-arn common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or pricing-plan-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or pricing-plan-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-pricing-plan-input
                    'make-update-pricing-plan-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-pricing-plan-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-pricing-plan-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-pricing-plan-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-pricing-plan-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-pricing-plan-output-"))
   (arn common-lisp:nil :type
    (common-lisp:or pricing-plan-arn common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or pricing-plan-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or pricing-plan-description common-lisp:null))
   (size common-lisp:nil :type
    (common-lisp:or number-of-associated-pricing-rules common-lisp:null))
   (last-modified-time common-lisp:nil :type
    (common-lisp:or instant common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-pricing-plan-output
                    'make-update-pricing-plan-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-pricing-plan-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-pricing-plan-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'size))
      (common-lisp:list
       (common-lisp:cons "Size"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-pricing-plan-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-pricing-rule-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-pricing-rule-input-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or pricing-rule-arn common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or pricing-rule-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or pricing-rule-description common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or pricing-rule-type common-lisp:null))
   (modifier-percentage common-lisp:nil :type
    (common-lisp:or modifier-percentage common-lisp:null))
   (tiering common-lisp:nil :type
    (common-lisp:or update-tiering-input common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-pricing-rule-input
                    'make-update-pricing-rule-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-pricing-rule-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-pricing-rule-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'modifier-percentage))
      (common-lisp:list
       (common-lisp:cons "ModifierPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tiering))
      (common-lisp:list
       (common-lisp:cons "Tiering"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-pricing-rule-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-pricing-rule-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-pricing-rule-output-"))
   (arn common-lisp:nil :type
    (common-lisp:or pricing-rule-arn common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or pricing-rule-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or pricing-rule-description common-lisp:null))
   (scope common-lisp:nil :type
    (common-lisp:or pricing-rule-scope common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or pricing-rule-type common-lisp:null))
   (modifier-percentage common-lisp:nil :type
    (common-lisp:or modifier-percentage common-lisp:null))
   (service common-lisp:nil :type (common-lisp:or service common-lisp:null))
   (associated-pricing-plan-count common-lisp:nil :type
    (common-lisp:or number-of-pricing-plans-associated-with common-lisp:null))
   (last-modified-time common-lisp:nil :type
    (common-lisp:or instant common-lisp:null))
   (billing-entity common-lisp:nil :type
    (common-lisp:or billing-entity common-lisp:null))
   (tiering common-lisp:nil :type
    (common-lisp:or update-tiering-input common-lisp:null))
   (usage-type common-lisp:nil :type
    (common-lisp:or usage-type common-lisp:null))
   (operation common-lisp:nil :type
    (common-lisp:or operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-pricing-rule-output
                    'make-update-pricing-rule-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-pricing-rule-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-pricing-rule-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scope))
      (common-lisp:list
       (common-lisp:cons "Scope"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'modifier-percentage))
      (common-lisp:list
       (common-lisp:cons "ModifierPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service))
      (common-lisp:list
       (common-lisp:cons "Service"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'associated-pricing-plan-count))
      (common-lisp:list
       (common-lisp:cons "AssociatedPricingPlanCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-entity))
      (common-lisp:list
       (common-lisp:cons "BillingEntity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tiering))
      (common-lisp:list
       (common-lisp:cons "Tiering"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'usage-type))
      (common-lisp:list
       (common-lisp:cons "UsageType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "Operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-pricing-rule-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-tiering-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-tiering-input-"))
   (free-tier (common-lisp:error ":free-tier is required") :type
    (common-lisp:or update-free-tier-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-tiering-input 'make-update-tiering-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-tiering-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-tiering-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'free-tier))
      (common-lisp:list
       (common-lisp:cons "FreeTier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-tiering-input))
   common-lisp:nil))
(common-lisp:deftype usage-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (billingconductor-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       validation-exception-message)
      (reason :initarg :reason :initform common-lisp:nil :reader
       validation-exception-reason)
      (fields :initarg :fields :initform common-lisp:nil :reader
       validation-exception-fields)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-message
                    'validation-exception-reason 'validation-exception-fields)))
(common-lisp:progn
 (common-lisp:defstruct
     (validation-exception-field (:copier common-lisp:nil)
      (:conc-name "struct-shape-validation-exception-field-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or string common-lisp:null))
   (message (common-lisp:error ":message is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'validation-exception-field
                    'make-validation-exception-field))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          validation-exception-field))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          validation-exception-field))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          validation-exception-field))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype validation-exception-field-list ()
   '(trivial-types:proper-list validation-exception-field))
 (common-lisp:defun |make-validation-exception-field-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            validation-exception-field))
   aws-sdk/generator/shape::members))
(common-lisp:deftype validation-exception-reason () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun associate-accounts
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn account-ids)
   (common-lisp:declare (common-lisp:ignorable arn account-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-associate-accounts-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        :rest-json "/associate-accounts" "AssociateAccounts" "2021-07-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'associate-accounts))
(common-lisp:progn
 (common-lisp:defun associate-pricing-rules
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn pricing-rule-arns)
   (common-lisp:declare (common-lisp:ignorable arn pricing-rule-arns))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-associate-pricing-rules-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "PUT"
        :rest-json "/associate-pricing-rules" "AssociatePricingRules"
        "2021-07-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'associate-pricing-rules))
(common-lisp:progn
 (common-lisp:defun batch-associate-resources-to-custom-line-item
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key target-arn resource-arns
                     billing-period-range)
   (common-lisp:declare
    (common-lisp:ignorable target-arn resource-arns billing-period-range))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-batch-associate-resources-to-custom-line-item-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "PUT"
        :rest-json "/batch-associate-resources-to-custom-line-item"
        "BatchAssociateResourcesToCustomLineItem" "2021-07-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'batch-associate-resources-to-custom-line-item))
(common-lisp:progn
 (common-lisp:defun batch-disassociate-resources-from-custom-line-item
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key target-arn resource-arns
                     billing-period-range)
   (common-lisp:declare
    (common-lisp:ignorable target-arn resource-arns billing-period-range))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-batch-disassociate-resources-from-custom-line-item-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "PUT"
        :rest-json "/batch-disassociate-resources-from-custom-line-item"
        "BatchDisassociateResourcesFromCustomLineItem" "2021-07-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'batch-disassociate-resources-from-custom-line-item))
(common-lisp:progn
 (common-lisp:defun create-billing-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token name account-grouping
                     computation-preference primary-account-id description
                     tags)
   (common-lisp:declare
    (common-lisp:ignorable client-token name account-grouping
     computation-preference primary-account-id description tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-billing-group-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        :rest-json "/create-billing-group" "CreateBillingGroup" "2021-07-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-billing-group))
(common-lisp:progn
 (common-lisp:defun create-custom-line-item
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token name description
                     billing-group-arn billing-period-range tags
                     charge-details)
   (common-lisp:declare
    (common-lisp:ignorable client-token name description billing-group-arn
     billing-period-range tags charge-details))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-custom-line-item-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        :rest-json "/create-custom-line-item" "CreateCustomLineItem"
        "2021-07-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-custom-line-item))
(common-lisp:progn
 (common-lisp:defun create-pricing-plan
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token name description
                     pricing-rule-arns tags)
   (common-lisp:declare
    (common-lisp:ignorable client-token name description pricing-rule-arns
     tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-pricing-plan-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        :rest-json "/create-pricing-plan" "CreatePricingPlan" "2021-07-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-pricing-plan))
(common-lisp:progn
 (common-lisp:defun create-pricing-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token name description scope type
                     modifier-percentage service tags billing-entity tiering
                     usage-type operation)
   (common-lisp:declare
    (common-lisp:ignorable client-token name description scope type
     modifier-percentage service tags billing-entity tiering usage-type
     operation))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-pricing-rule-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        :rest-json "/create-pricing-rule" "CreatePricingRule" "2021-07-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-pricing-rule))
(common-lisp:progn
 (common-lisp:defun delete-billing-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-billing-group-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        :rest-json "/delete-billing-group" "DeleteBillingGroup" "2021-07-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-billing-group))
(common-lisp:progn
 (common-lisp:defun delete-custom-line-item
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn billing-period-range)
   (common-lisp:declare (common-lisp:ignorable arn billing-period-range))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-custom-line-item-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        :rest-json "/delete-custom-line-item" "DeleteCustomLineItem"
        "2021-07-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-custom-line-item))
(common-lisp:progn
 (common-lisp:defun delete-pricing-plan
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-pricing-plan-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        :rest-json "/delete-pricing-plan" "DeletePricingPlan" "2021-07-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-pricing-plan))
(common-lisp:progn
 (common-lisp:defun delete-pricing-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-pricing-rule-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        :rest-json "/delete-pricing-rule" "DeletePricingRule" "2021-07-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-pricing-rule))
(common-lisp:progn
 (common-lisp:defun disassociate-accounts
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn account-ids)
   (common-lisp:declare (common-lisp:ignorable arn account-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-disassociate-accounts-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        :rest-json "/disassociate-accounts" "DisassociateAccounts"
        "2021-07-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'disassociate-accounts))
(common-lisp:progn
 (common-lisp:defun disassociate-pricing-rules
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn pricing-rule-arns)
   (common-lisp:declare (common-lisp:ignorable arn pricing-rule-arns))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-disassociate-pricing-rules-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "PUT"
        :rest-json "/disassociate-pricing-rules" "DisassociatePricingRules"
        "2021-07-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'disassociate-pricing-rules))
(common-lisp:progn
 (common-lisp:defun list-account-associations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key billing-period filters next-token)
   (common-lisp:declare
    (common-lisp:ignorable billing-period filters next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-account-associations-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        :rest-json "/list-account-associations" "ListAccountAssociations"
        "2021-07-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-account-associations))
(common-lisp:progn
 (common-lisp:defun list-billing-group-cost-reports
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key billing-period max-results next-token
                     filters)
   (common-lisp:declare
    (common-lisp:ignorable billing-period max-results next-token filters))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-billing-group-cost-reports-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        :rest-json "/list-billing-group-cost-reports"
        "ListBillingGroupCostReports" "2021-07-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-billing-group-cost-reports))
(common-lisp:progn
 (common-lisp:defun list-billing-groups
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key billing-period max-results next-token
                     filters)
   (common-lisp:declare
    (common-lisp:ignorable billing-period max-results next-token filters))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-billing-groups-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        :rest-json "/list-billing-groups" "ListBillingGroups" "2021-07-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-billing-groups))
(common-lisp:progn
 (common-lisp:defun list-custom-line-item-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn max-results next-token filters)
   (common-lisp:declare
    (common-lisp:ignorable arn max-results next-token filters))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-custom-line-item-versions-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        :rest-json "/list-custom-line-item-versions"
        "ListCustomLineItemVersions" "2021-07-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-custom-line-item-versions))
(common-lisp:progn
 (common-lisp:defun list-custom-line-items
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key billing-period max-results next-token
                     filters)
   (common-lisp:declare
    (common-lisp:ignorable billing-period max-results next-token filters))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-custom-line-items-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        :rest-json "/list-custom-line-items" "ListCustomLineItems"
        "2021-07-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-custom-line-items))
(common-lisp:progn
 (common-lisp:defun list-pricing-plans
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key billing-period filters max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable billing-period filters max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-pricing-plans-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        :rest-json "/list-pricing-plans" "ListPricingPlans" "2021-07-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-pricing-plans))
(common-lisp:progn
 (common-lisp:defun list-pricing-plans-associated-with-pricing-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key billing-period pricing-rule-arn
                     max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable billing-period pricing-rule-arn max-results
     next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-pricing-plans-associated-with-pricing-rule-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        :rest-json "/list-pricing-plans-associated-with-pricing-rule"
        "ListPricingPlansAssociatedWithPricingRule" "2021-07-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-pricing-plans-associated-with-pricing-rule))
(common-lisp:progn
 (common-lisp:defun list-pricing-rules
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key billing-period filters max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable billing-period filters max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-pricing-rules-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        :rest-json "/list-pricing-rules" "ListPricingRules" "2021-07-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-pricing-rules))
(common-lisp:progn
 (common-lisp:defun list-pricing-rules-associated-to-pricing-plan
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key billing-period pricing-plan-arn
                     max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable billing-period pricing-plan-arn max-results
     next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-pricing-rules-associated-to-pricing-plan-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        :rest-json "/list-pricing-rules-associated-to-pricing-plan"
        "ListPricingRulesAssociatedToPricingPlan" "2021-07-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-pricing-rules-associated-to-pricing-plan))
(common-lisp:progn
 (common-lisp:defun list-resources-associated-to-custom-line-item
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key billing-period arn max-results next-token
                     filters)
   (common-lisp:declare
    (common-lisp:ignorable billing-period arn max-results next-token filters))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-resources-associated-to-custom-line-item-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        :rest-json "/list-resources-associated-to-custom-line-item"
        "ListResourcesAssociatedToCustomLineItem" "2021-07-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-resources-associated-to-custom-line-item))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "GET"
        :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-arn))))
        "ListTagsForResource" "2021-07-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-arn))))
        "TagResource" "2021-07-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "DELETE"
        :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-arn))))
        "UntagResource" "2021-07-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-billing-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn name status computation-preference
                     description)
   (common-lisp:declare
    (common-lisp:ignorable arn name status computation-preference description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-billing-group-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        :rest-json "/update-billing-group" "UpdateBillingGroup" "2021-07-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-billing-group))
(common-lisp:progn
 (common-lisp:defun update-custom-line-item
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn name description charge-details
                     billing-period-range)
   (common-lisp:declare
    (common-lisp:ignorable arn name description charge-details
     billing-period-range))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-custom-line-item-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        :rest-json "/update-custom-line-item" "UpdateCustomLineItem"
        "2021-07-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-custom-line-item))
(common-lisp:progn
 (common-lisp:defun update-pricing-plan
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn name description)
   (common-lisp:declare (common-lisp:ignorable arn name description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-pricing-plan-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "PUT"
        :rest-json "/update-pricing-plan" "UpdatePricingPlan" "2021-07-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-pricing-plan))
(common-lisp:progn
 (common-lisp:defun update-pricing-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn name description type
                     modifier-percentage tiering)
   (common-lisp:declare
    (common-lisp:ignorable arn name description type modifier-percentage
     tiering))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-pricing-rule-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "PUT"
        :rest-json "/update-pricing-rule" "UpdatePricingRule" "2021-07-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-pricing-rule))
