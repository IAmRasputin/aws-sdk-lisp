;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/osis/api
  (:use)
  (:nicknames #:aws/osis)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/osis/api)
(common-lisp:progn
 (common-lisp:defclass osis-request (aws-sdk/request:request) common-lisp:nil
                       (:default-initargs :service "osis" :protocol
                        :rest-json))
 (common-lisp:export 'osis-request))
(common-lisp:progn
 (common-lisp:define-condition osis-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'osis-error))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("ConflictException" . conflict-exception)
    ("InternalException" . internal-exception)
    ("InvalidPaginationTokenException" . invalid-pagination-token-exception)
    ("LimitExceededException" . limit-exceeded-exception)
    ("ResourceAlreadyExistsException" . resource-already-exists-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (osis-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'access-denied-exception)))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct
     (change-progress-stage (:copier common-lisp:nil)
      (:conc-name "struct-shape-change-progress-stage-"))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or change-progress-stage-statuses common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (last-updated-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'change-progress-stage 'make-change-progress-stage))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          change-progress-stage))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          change-progress-stage))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-at))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          change-progress-stage))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype change-progress-stage-list ()
   '(trivial-types:proper-list change-progress-stage))
 (common-lisp:defun |make-change-progress-stage-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list change-progress-stage))
   aws-sdk/generator/shape::members))
(common-lisp:deftype change-progress-stage-statuses () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (change-progress-status (:copier common-lisp:nil)
      (:conc-name "struct-shape-change-progress-status-"))
   (start-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or change-progress-statuses common-lisp:null))
   (total-number-of-stages common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (change-progress-stages common-lisp:nil :type
    (common-lisp:or change-progress-stage-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'change-progress-status 'make-change-progress-status))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          change-progress-status))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          change-progress-status))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'total-number-of-stages))
      (common-lisp:list
       (common-lisp:cons "TotalNumberOfStages"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'change-progress-stages))
      (common-lisp:list
       (common-lisp:cons "ChangeProgressStages"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          change-progress-status))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype change-progress-status-list ()
   '(trivial-types:proper-list change-progress-status))
 (common-lisp:defun |make-change-progress-status-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list change-progress-status))
   aws-sdk/generator/shape::members))
(common-lisp:deftype change-progress-statuses () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (cloud-watch-log-destination (:copier common-lisp:nil)
      (:conc-name "struct-shape-cloud-watch-log-destination-"))
   (log-group (common-lisp:error ":log-group is required") :type
    (common-lisp:or log-group common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cloud-watch-log-destination
                    'make-cloud-watch-log-destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cloud-watch-log-destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cloud-watch-log-destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-group))
      (common-lisp:list
       (common-lisp:cons "LogGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cloud-watch-log-destination))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (osis-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'conflict-exception)))
(common-lisp:progn
 (common-lisp:defstruct
     (create-pipeline-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-pipeline-request-"))
   (pipeline-name (common-lisp:error ":pipeline-name is required") :type
    (common-lisp:or pipeline-name common-lisp:null))
   (min-units (common-lisp:error ":min-units is required") :type
    (common-lisp:or pipeline-units common-lisp:null))
   (max-units (common-lisp:error ":max-units is required") :type
    (common-lisp:or pipeline-units common-lisp:null))
   (pipeline-configuration-body
    (common-lisp:error ":pipeline-configuration-body is required") :type
    (common-lisp:or pipeline-configuration-body common-lisp:null))
   (log-publishing-options common-lisp:nil :type
    (common-lisp:or log-publishing-options common-lisp:null))
   (vpc-options common-lisp:nil :type
    (common-lisp:or vpc-options common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-pipeline-request 'make-create-pipeline-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-pipeline-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-pipeline-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pipeline-name))
      (common-lisp:list
       (common-lisp:cons "PipelineName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'min-units))
      (common-lisp:list
       (common-lisp:cons "MinUnits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-units))
      (common-lisp:list
       (common-lisp:cons "MaxUnits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pipeline-configuration-body))
      (common-lisp:list
       (common-lisp:cons "PipelineConfigurationBody"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'log-publishing-options))
      (common-lisp:list
       (common-lisp:cons "LogPublishingOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-options))
      (common-lisp:list
       (common-lisp:cons "VpcOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-pipeline-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-pipeline-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-pipeline-response-"))
   (pipeline common-lisp:nil :type (common-lisp:or pipeline common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-pipeline-response 'make-create-pipeline-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-pipeline-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-pipeline-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pipeline))
      (common-lisp:list
       (common-lisp:cons "Pipeline"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-pipeline-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-pipeline-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-pipeline-request-"))
   (pipeline-name (common-lisp:error ":pipeline-name is required") :type
    (common-lisp:or pipeline-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-pipeline-request 'make-delete-pipeline-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-pipeline-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-pipeline-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-pipeline-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-pipeline-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-pipeline-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-pipeline-response 'make-delete-pipeline-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-pipeline-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-pipeline-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-pipeline-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-pipeline-blueprint-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-pipeline-blueprint-request-"))
   (blueprint-name (common-lisp:error ":blueprint-name is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-pipeline-blueprint-request
                    'make-get-pipeline-blueprint-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-pipeline-blueprint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-pipeline-blueprint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-pipeline-blueprint-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-pipeline-blueprint-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-pipeline-blueprint-response-"))
   (blueprint common-lisp:nil :type
    (common-lisp:or pipeline-blueprint common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-pipeline-blueprint-response
                    'make-get-pipeline-blueprint-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-pipeline-blueprint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-pipeline-blueprint-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'blueprint))
      (common-lisp:list
       (common-lisp:cons "Blueprint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-pipeline-blueprint-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-pipeline-change-progress-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-pipeline-change-progress-request-"))
   (pipeline-name (common-lisp:error ":pipeline-name is required") :type
    (common-lisp:or pipeline-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-pipeline-change-progress-request
                    'make-get-pipeline-change-progress-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-pipeline-change-progress-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-pipeline-change-progress-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-pipeline-change-progress-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-pipeline-change-progress-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-pipeline-change-progress-response-"))
   (change-progress-statuses common-lisp:nil :type
    (common-lisp:or change-progress-status-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-pipeline-change-progress-response
                    'make-get-pipeline-change-progress-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-pipeline-change-progress-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-pipeline-change-progress-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'change-progress-statuses))
      (common-lisp:list
       (common-lisp:cons "ChangeProgressStatuses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-pipeline-change-progress-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-pipeline-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-pipeline-request-"))
   (pipeline-name (common-lisp:error ":pipeline-name is required") :type
    (common-lisp:or pipeline-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-pipeline-request 'make-get-pipeline-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-pipeline-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-pipeline-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-pipeline-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-pipeline-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-pipeline-response-"))
   (pipeline common-lisp:nil :type (common-lisp:or pipeline common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-pipeline-response 'make-get-pipeline-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-pipeline-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-pipeline-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pipeline))
      (common-lisp:list
       (common-lisp:cons "Pipeline"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-pipeline-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype ingest-endpoint-urls-list ()
   '(trivial-types:proper-list string))
 (common-lisp:defun |make-ingest-endpoint-urls-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition internal-exception
     (osis-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'internal-exception)))
(common-lisp:progn
 (common-lisp:define-condition invalid-pagination-token-exception
     (osis-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'invalid-pagination-token-exception)))
(common-lisp:progn
 (common-lisp:define-condition limit-exceeded-exception
     (osis-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'limit-exceeded-exception)))
(common-lisp:progn
 (common-lisp:defstruct
     (list-pipeline-blueprints-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-pipeline-blueprints-request-")))
 (common-lisp:export
  (common-lisp:list 'list-pipeline-blueprints-request
                    'make-list-pipeline-blueprints-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-pipeline-blueprints-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-pipeline-blueprints-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-pipeline-blueprints-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-pipeline-blueprints-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-pipeline-blueprints-response-"))
   (blueprints common-lisp:nil :type
    (common-lisp:or pipeline-blueprints-summary-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-pipeline-blueprints-response
                    'make-list-pipeline-blueprints-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-pipeline-blueprints-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-pipeline-blueprints-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'blueprints))
      (common-lisp:list
       (common-lisp:cons "Blueprints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-pipeline-blueprints-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-pipelines-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-pipelines-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-pipelines-request 'make-list-pipelines-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-pipelines-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-pipelines-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-pipelines-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-pipelines-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-pipelines-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (pipelines common-lisp:nil :type
    (common-lisp:or pipeline-summary-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-pipelines-response 'make-list-pipelines-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-pipelines-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-pipelines-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pipelines))
      (common-lisp:list
       (common-lisp:cons "Pipelines"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-pipelines-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-request-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or pipeline-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-response-"))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:deftype log-group () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (log-publishing-options (:copier common-lisp:nil)
      (:conc-name "struct-shape-log-publishing-options-"))
   (is-logging-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (cloud-watch-log-destination common-lisp:nil :type
    (common-lisp:or cloud-watch-log-destination common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'log-publishing-options 'make-log-publishing-options))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          log-publishing-options))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          log-publishing-options))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-logging-enabled))
      (common-lisp:list
       (common-lisp:cons "IsLoggingEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cloud-watch-log-destination))
      (common-lisp:list
       (common-lisp:cons "CloudWatchLogDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          log-publishing-options))
   common-lisp:nil))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (pipeline (:copier common-lisp:nil) (:conc-name "struct-shape-pipeline-"))
   (pipeline-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (pipeline-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (min-units common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (max-units common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or pipeline-status common-lisp:null))
   (status-reason common-lisp:nil :type
    (common-lisp:or pipeline-status-reason common-lisp:null))
   (pipeline-configuration-body common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (last-updated-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (ingest-endpoint-urls common-lisp:nil :type
    (common-lisp:or ingest-endpoint-urls-list common-lisp:null))
   (log-publishing-options common-lisp:nil :type
    (common-lisp:or log-publishing-options common-lisp:null))
   (vpc-endpoints common-lisp:nil :type
    (common-lisp:or vpc-endpoints-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'pipeline 'make-pipeline))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input pipeline))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input pipeline))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pipeline-name))
      (common-lisp:list
       (common-lisp:cons "PipelineName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pipeline-arn))
      (common-lisp:list
       (common-lisp:cons "PipelineArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'min-units))
      (common-lisp:list
       (common-lisp:cons "MinUnits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-units))
      (common-lisp:list
       (common-lisp:cons "MaxUnits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-reason))
      (common-lisp:list
       (common-lisp:cons "StatusReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pipeline-configuration-body))
      (common-lisp:list
       (common-lisp:cons "PipelineConfigurationBody"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-at))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ingest-endpoint-urls))
      (common-lisp:list
       (common-lisp:cons "IngestEndpointUrls"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'log-publishing-options))
      (common-lisp:list
       (common-lisp:cons "LogPublishingOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-endpoints))
      (common-lisp:list
       (common-lisp:cons "VpcEndpoints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input pipeline))
   common-lisp:nil))
(common-lisp:deftype pipeline-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (pipeline-blueprint (:copier common-lisp:nil)
      (:conc-name "struct-shape-pipeline-blueprint-"))
   (blueprint-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (pipeline-configuration-body common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'pipeline-blueprint 'make-pipeline-blueprint))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input pipeline-blueprint))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input pipeline-blueprint))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'blueprint-name))
      (common-lisp:list
       (common-lisp:cons "BlueprintName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pipeline-configuration-body))
      (common-lisp:list
       (common-lisp:cons "PipelineConfigurationBody"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input pipeline-blueprint))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (pipeline-blueprint-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-pipeline-blueprint-summary-"))
   (blueprint-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'pipeline-blueprint-summary
                    'make-pipeline-blueprint-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          pipeline-blueprint-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          pipeline-blueprint-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'blueprint-name))
      (common-lisp:list
       (common-lisp:cons "BlueprintName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          pipeline-blueprint-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype pipeline-blueprints-summary-list ()
   '(trivial-types:proper-list pipeline-blueprint-summary))
 (common-lisp:defun |make-pipeline-blueprints-summary-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            pipeline-blueprint-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype pipeline-configuration-body () 'common-lisp:string)
(common-lisp:deftype pipeline-name () 'common-lisp:string)
(common-lisp:deftype pipeline-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (pipeline-status-reason (:copier common-lisp:nil)
      (:conc-name "struct-shape-pipeline-status-reason-"))
   (description common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'pipeline-status-reason 'make-pipeline-status-reason))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          pipeline-status-reason))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          pipeline-status-reason))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          pipeline-status-reason))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (pipeline-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-pipeline-summary-"))
   (status common-lisp:nil :type
    (common-lisp:or pipeline-status common-lisp:null))
   (status-reason common-lisp:nil :type
    (common-lisp:or pipeline-status-reason common-lisp:null))
   (pipeline-name common-lisp:nil :type
    (common-lisp:or pipeline-name common-lisp:null))
   (pipeline-arn common-lisp:nil :type
    (common-lisp:or pipeline-arn common-lisp:null))
   (min-units common-lisp:nil :type
    (common-lisp:or pipeline-units common-lisp:null))
   (max-units common-lisp:nil :type
    (common-lisp:or pipeline-units common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (last-updated-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'pipeline-summary 'make-pipeline-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input pipeline-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input pipeline-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-reason))
      (common-lisp:list
       (common-lisp:cons "StatusReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pipeline-name))
      (common-lisp:list
       (common-lisp:cons "PipelineName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pipeline-arn))
      (common-lisp:list
       (common-lisp:cons "PipelineArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'min-units))
      (common-lisp:list
       (common-lisp:cons "MinUnits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-units))
      (common-lisp:list
       (common-lisp:cons "MaxUnits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-at))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input pipeline-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype pipeline-summary-list ()
   '(trivial-types:proper-list pipeline-summary))
 (common-lisp:defun |make-pipeline-summary-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list pipeline-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype pipeline-units () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition resource-already-exists-exception
     (osis-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'resource-already-exists-exception)))
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (osis-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'resource-not-found-exception)))
(common-lisp:deftype security-group-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype security-group-ids ()
   '(trivial-types:proper-list security-group-id))
 (common-lisp:defun |make-security-group-ids|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list security-group-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (start-pipeline-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-pipeline-request-"))
   (pipeline-name (common-lisp:error ":pipeline-name is required") :type
    (common-lisp:or pipeline-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-pipeline-request 'make-start-pipeline-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-pipeline-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-pipeline-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-pipeline-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-pipeline-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-pipeline-response-"))
   (pipeline common-lisp:nil :type (common-lisp:or pipeline common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-pipeline-response 'make-start-pipeline-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-pipeline-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-pipeline-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pipeline))
      (common-lisp:list
       (common-lisp:cons "Pipeline"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-pipeline-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-pipeline-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-stop-pipeline-request-"))
   (pipeline-name (common-lisp:error ":pipeline-name is required") :type
    (common-lisp:or pipeline-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-pipeline-request 'make-stop-pipeline-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-pipeline-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-pipeline-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-pipeline-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-pipeline-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-stop-pipeline-response-"))
   (pipeline common-lisp:nil :type (common-lisp:or pipeline common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-pipeline-response 'make-stop-pipeline-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-pipeline-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-pipeline-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pipeline))
      (common-lisp:list
       (common-lisp:cons "Pipeline"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-pipeline-response))
   common-lisp:nil))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype string-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-string-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:deftype subnet-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype subnet-ids () '(trivial-types:proper-list subnet-id))
 (common-lisp:defun |make-subnet-ids|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list subnet-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (tag (:copier common-lisp:nil) (:conc-name "struct-shape-tag-"))
   (key (common-lisp:error ":key is required") :type
    (common-lisp:or tag-key common-lisp:null))
   (value (common-lisp:error ":value is required") :type
    (common-lisp:or tag-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag))
   common-lisp:nil))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-tag-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-request-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or pipeline-arn common-lisp:null))
   (tags (common-lisp:error ":tags is required") :type
    (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-request-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or pipeline-arn common-lisp:null))
   (tag-keys (common-lisp:error ":tag-keys is required") :type
    (common-lisp:or string-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-keys))
      (common-lisp:list
       (common-lisp:cons "TagKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-pipeline-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-pipeline-request-"))
   (pipeline-name (common-lisp:error ":pipeline-name is required") :type
    (common-lisp:or pipeline-name common-lisp:null))
   (min-units common-lisp:nil :type
    (common-lisp:or pipeline-units common-lisp:null))
   (max-units common-lisp:nil :type
    (common-lisp:or pipeline-units common-lisp:null))
   (pipeline-configuration-body common-lisp:nil :type
    (common-lisp:or pipeline-configuration-body common-lisp:null))
   (log-publishing-options common-lisp:nil :type
    (common-lisp:or log-publishing-options common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-pipeline-request 'make-update-pipeline-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-pipeline-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-pipeline-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'min-units))
      (common-lisp:list
       (common-lisp:cons "MinUnits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-units))
      (common-lisp:list
       (common-lisp:cons "MaxUnits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pipeline-configuration-body))
      (common-lisp:list
       (common-lisp:cons "PipelineConfigurationBody"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'log-publishing-options))
      (common-lisp:list
       (common-lisp:cons "LogPublishingOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-pipeline-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-pipeline-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-pipeline-response-"))
   (pipeline common-lisp:nil :type (common-lisp:or pipeline common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-pipeline-response 'make-update-pipeline-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-pipeline-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-pipeline-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pipeline))
      (common-lisp:list
       (common-lisp:cons "Pipeline"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-pipeline-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (validate-pipeline-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-validate-pipeline-request-"))
   (pipeline-configuration-body
    (common-lisp:error ":pipeline-configuration-body is required") :type
    (common-lisp:or pipeline-configuration-body common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'validate-pipeline-request
                    'make-validate-pipeline-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          validate-pipeline-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          validate-pipeline-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pipeline-configuration-body))
      (common-lisp:list
       (common-lisp:cons "PipelineConfigurationBody"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          validate-pipeline-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (validate-pipeline-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-validate-pipeline-response-"))
   (is-valid common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (errors common-lisp:nil :type
    (common-lisp:or validation-message-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'validate-pipeline-response
                    'make-validate-pipeline-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          validate-pipeline-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          validate-pipeline-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-valid))
      (common-lisp:list
       (common-lisp:cons "isValid"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'errors))
      (common-lisp:list
       (common-lisp:cons "Errors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          validate-pipeline-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (osis-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'validation-exception)))
(common-lisp:progn
 (common-lisp:defstruct
     (validation-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-validation-message-"))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'validation-message 'make-validation-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input validation-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input validation-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input validation-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype validation-message-list ()
   '(trivial-types:proper-list validation-message))
 (common-lisp:defun |make-validation-message-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list validation-message))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (vpc-endpoint (:copier common-lisp:nil)
      (:conc-name "struct-shape-vpc-endpoint-"))
   (vpc-endpoint-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (vpc-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (vpc-options common-lisp:nil :type
    (common-lisp:or vpc-options common-lisp:null)))
 (common-lisp:export (common-lisp:list 'vpc-endpoint 'make-vpc-endpoint))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input vpc-endpoint))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input vpc-endpoint))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-endpoint-id))
      (common-lisp:list
       (common-lisp:cons "VpcEndpointId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-id))
      (common-lisp:list
       (common-lisp:cons "VpcId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-options))
      (common-lisp:list
       (common-lisp:cons "VpcOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input vpc-endpoint))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype vpc-endpoints-list ()
   '(trivial-types:proper-list vpc-endpoint))
 (common-lisp:defun |make-vpc-endpoints-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list vpc-endpoint))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (vpc-options (:copier common-lisp:nil)
      (:conc-name "struct-shape-vpc-options-"))
   (subnet-ids (common-lisp:error ":subnet-ids is required") :type
    (common-lisp:or subnet-ids common-lisp:null))
   (security-group-ids common-lisp:nil :type
    (common-lisp:or security-group-ids common-lisp:null)))
 (common-lisp:export (common-lisp:list 'vpc-options 'make-vpc-options))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input vpc-options))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input vpc-options))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-ids))
      (common-lisp:list
       (common-lisp:cons "SubnetIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-ids))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input vpc-options))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defun create-pipeline
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key pipeline-name min-units max-units
                     pipeline-configuration-body log-publishing-options
                     vpc-options tags)
   (common-lisp:declare
    (common-lisp:ignorable pipeline-name min-units max-units
     pipeline-configuration-body log-publishing-options vpc-options tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-pipeline-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'osis-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/2022-01-01/osis/createPipeline"
                                                        "CreatePipeline"
                                                        "2022-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-pipeline))
(common-lisp:progn
 (common-lisp:defun delete-pipeline
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key pipeline-name)
   (common-lisp:declare (common-lisp:ignorable pipeline-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-pipeline-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'osis-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/2022-01-01/osis/deletePipeline/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'pipeline-name))))
                                                        "DeletePipeline"
                                                        "2022-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-pipeline))
(common-lisp:progn
 (common-lisp:defun get-pipeline
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key pipeline-name)
   (common-lisp:declare (common-lisp:ignorable pipeline-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-pipeline-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'osis-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/2022-01-01/osis/getPipeline/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'pipeline-name))))
                                                        "GetPipeline"
                                                        "2022-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-pipeline))
(common-lisp:progn
 (common-lisp:defun get-pipeline-blueprint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key blueprint-name)
   (common-lisp:declare (common-lisp:ignorable blueprint-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-pipeline-blueprint-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'osis-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/2022-01-01/osis/getPipelineBlueprint/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'blueprint-name))))
                                                        "GetPipelineBlueprint"
                                                        "2022-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-pipeline-blueprint))
(common-lisp:progn
 (common-lisp:defun get-pipeline-change-progress
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key pipeline-name)
   (common-lisp:declare (common-lisp:ignorable pipeline-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-pipeline-change-progress-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'osis-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/2022-01-01/osis/getPipelineChangeProgress/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'pipeline-name))))
                                                        "GetPipelineChangeProgress"
                                                        "2022-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-pipeline-change-progress))
(common-lisp:progn
 (common-lisp:defun list-pipeline-blueprints ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'osis-request :method "POST" :path
                                "/2022-01-01/osis/listPipelineBlueprints"
                                :protocol :rest-json :operation
                                "ListPipelineBlueprints" :params
                                `(("Action" ,@"ListPipelineBlueprints")
                                  ("Version" ,@"2022-01-01"))))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'list-pipeline-blueprints))
(common-lisp:progn
 (common-lisp:defun list-pipelines
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-pipelines-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'osis-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/2022-01-01/osis/listPipelines"
                                                        "ListPipelines"
                                                        "2022-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-pipelines))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'osis-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/2022-01-01/osis/listTagsForResource/"
                                                        "ListTagsForResource"
                                                        "2022-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun start-pipeline
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key pipeline-name)
   (common-lisp:declare (common-lisp:ignorable pipeline-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-pipeline-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'osis-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/2022-01-01/osis/startPipeline/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'pipeline-name))))
                                                        "StartPipeline"
                                                        "2022-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-pipeline))
(common-lisp:progn
 (common-lisp:defun stop-pipeline
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key pipeline-name)
   (common-lisp:declare (common-lisp:ignorable pipeline-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-stop-pipeline-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'osis-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/2022-01-01/osis/stopPipeline/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'pipeline-name))))
                                                        "StopPipeline"
                                                        "2022-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'stop-pipeline))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn tags)
   (common-lisp:declare (common-lisp:ignorable arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'osis-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/2022-01-01/osis/tagResource/"
                                                        "TagResource"
                                                        "2022-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'osis-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/2022-01-01/osis/untagResource/"
                                                        "UntagResource"
                                                        "2022-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-pipeline
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key pipeline-name min-units max-units
                     pipeline-configuration-body log-publishing-options)
   (common-lisp:declare
    (common-lisp:ignorable pipeline-name min-units max-units
     pipeline-configuration-body log-publishing-options))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-pipeline-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'osis-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/2022-01-01/osis/updatePipeline/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'pipeline-name))))
                                                        "UpdatePipeline"
                                                        "2022-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-pipeline))
(common-lisp:progn
 (common-lisp:defun validate-pipeline
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key pipeline-configuration-body)
   (common-lisp:declare (common-lisp:ignorable pipeline-configuration-body))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-validate-pipeline-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'osis-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/2022-01-01/osis/validatePipeline"
                                                        "ValidatePipeline"
                                                        "2022-01-01"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'validate-pipeline))
