;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/cloudhsm/api
  (:use)
  (:nicknames #:aws/cloudhsm)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/cloudhsm/api)
(common-lisp:progn
 (common-lisp:defclass cloudhsm-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "cloudhsm" :protocol :json))
 (common-lisp:export 'cloudhsm-request))
(common-lisp:progn
 (common-lisp:define-condition cloudhsm-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'cloudhsm-error))
(common-lisp:defvar *error-map*
  '(("CloudHsmInternalException" . cloud-hsm-internal-exception)
    ("CloudHsmServiceException" . cloud-hsm-service-exception)
    ("InvalidRequestException" . invalid-request-exception)))
(common-lisp:deftype az () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype azlist () '(trivial-types:proper-list az))
 (common-lisp:defun |make-azlist|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list az))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass add-tags-to-resource-request common-lisp:nil
                       ((tag-list :initarg :tag-list :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         %add-tags-to-resource-request-tag-list :initform
                         (common-lisp:error ":tag-list is required"))
                        (resource-arn :initarg :resource-arn :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %add-tags-to-resource-request-resource-arn :initform
                         (common-lisp:error ":resource-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'add-tags-to-resource-request
                    'make-add-tags-to-resource-request))
 (common-lisp:defun make-add-tags-to-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tag-list resource-arn)
   (common-lisp:apply #'common-lisp:make-instance 'add-tags-to-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          add-tags-to-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          add-tags-to-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-list))
      (common-lisp:list
       (common-lisp:cons "TagList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          add-tags-to-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass add-tags-to-resource-response common-lisp:nil
                       ((status :initarg :status :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %add-tags-to-resource-response-status :initform
                         (common-lisp:error ":status is required"))))
 (common-lisp:export
  (common-lisp:list 'add-tags-to-resource-response
                    'make-add-tags-to-resource-response))
 (common-lisp:defun make-add-tags-to-resource-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key status)
   (common-lisp:apply #'common-lisp:make-instance
                      'add-tags-to-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          add-tags-to-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          add-tags-to-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          add-tags-to-resource-response))
   common-lisp:nil))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:deftype certificate () 'common-lisp:string)
(common-lisp:deftype certificate-fingerprint () 'common-lisp:string)
(common-lisp:deftype client-arn () 'common-lisp:string)
(common-lisp:deftype client-label () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype client-list () '(trivial-types:proper-list client-arn))
 (common-lisp:defun |make-client-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list client-arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype client-token () 'common-lisp:string)
(common-lisp:deftype client-version () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition cloud-hsm-internal-exception
     (cloudhsm-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'cloud-hsm-internal-exception)))
(common-lisp:deftype cloud-hsm-object-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition cloud-hsm-service-exception
     (cloudhsm-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       cloud-hsm-service-exception-message)
      (retryable :initarg :|retryable| :initform common-lisp:nil :reader
       cloud-hsm-service-exception-retryable)))
 (common-lisp:export
  (common-lisp:list 'cloud-hsm-service-exception
                    'cloud-hsm-service-exception-message
                    'cloud-hsm-service-exception-retryable)))
(common-lisp:progn
 (common-lisp:defclass create-hapg-request common-lisp:nil
                       ((label :initarg :label :type
                         (common-lisp:or label common-lisp:null) :accessor
                         %create-hapg-request-label :initform
                         (common-lisp:error ":label is required"))))
 (common-lisp:export
  (common-lisp:list 'create-hapg-request 'make-create-hapg-request))
 (common-lisp:defun make-create-hapg-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key label)
   (common-lisp:apply #'common-lisp:make-instance 'create-hapg-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-hapg-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-hapg-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'label))
      (common-lisp:list
       (common-lisp:cons "Label"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-hapg-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-hapg-response common-lisp:nil
                       ((hapg-arn :initarg :hapg-arn :type
                         (common-lisp:or hapg-arn common-lisp:null) :accessor
                         %create-hapg-response-hapg-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-hapg-response 'make-create-hapg-response))
 (common-lisp:defun make-create-hapg-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key hapg-arn)
   (common-lisp:apply #'common-lisp:make-instance 'create-hapg-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-hapg-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-hapg-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hapg-arn))
      (common-lisp:list
       (common-lisp:cons "HapgArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-hapg-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-hsm-request common-lisp:nil
                       ((syslog-ip :initarg :syslog-ip :type
                         (common-lisp:or ip-address common-lisp:null) :accessor
                         %create-hsm-request-syslog-ip :initform
                         common-lisp:nil)
                        (client-token :initarg :client-token :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor %create-hsm-request-client-token :initform
                         common-lisp:nil)
                        (subscription-type :initarg :subscription-type :type
                         (common-lisp:or subscription-type common-lisp:null)
                         :accessor %create-hsm-request-subscription-type
                         :initform
                         (common-lisp:error ":subscription-type is required"))
                        (external-id :initarg :external-id :type
                         (common-lisp:or external-id common-lisp:null)
                         :accessor %create-hsm-request-external-id :initform
                         common-lisp:nil)
                        (iam-role-arn :initarg :iam-role-arn :type
                         (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor %create-hsm-request-iam-role-arn :initform
                         (common-lisp:error ":iam-role-arn is required"))
                        (eni-ip :initarg :eni-ip :type
                         (common-lisp:or ip-address common-lisp:null) :accessor
                         %create-hsm-request-eni-ip :initform common-lisp:nil)
                        (ssh-key :initarg :ssh-key :type
                         (common-lisp:or ssh-key common-lisp:null) :accessor
                         %create-hsm-request-ssh-key :initform
                         (common-lisp:error ":ssh-key is required"))
                        (subnet-id :initarg :subnet-id :type
                         (common-lisp:or subnet-id common-lisp:null) :accessor
                         %create-hsm-request-subnet-id :initform
                         (common-lisp:error ":subnet-id is required"))))
 (common-lisp:export
  (common-lisp:list 'create-hsm-request 'make-create-hsm-request))
 (common-lisp:defun make-create-hsm-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key syslog-ip client-token subscription-type
                     external-id iam-role-arn eni-ip ssh-key subnet-id)
   (common-lisp:apply #'common-lisp:make-instance 'create-hsm-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-hsm-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-hsm-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-id))
      (common-lisp:list
       (common-lisp:cons "SubnetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ssh-key))
      (common-lisp:list
       (common-lisp:cons "SshKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'eni-ip))
      (common-lisp:list
       (common-lisp:cons "EniIp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iam-role-arn))
      (common-lisp:list
       (common-lisp:cons "IamRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'external-id))
      (common-lisp:list
       (common-lisp:cons "ExternalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscription-type))
      (common-lisp:list
       (common-lisp:cons "SubscriptionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'syslog-ip))
      (common-lisp:list
       (common-lisp:cons "SyslogIp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-hsm-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-hsm-response common-lisp:nil
                       ((hsm-arn :initarg :hsm-arn :type
                         (common-lisp:or hsm-arn common-lisp:null) :accessor
                         %create-hsm-response-hsm-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-hsm-response 'make-create-hsm-response))
 (common-lisp:defun make-create-hsm-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key hsm-arn)
   (common-lisp:apply #'common-lisp:make-instance 'create-hsm-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-hsm-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-hsm-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hsm-arn))
      (common-lisp:list
       (common-lisp:cons "HsmArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-hsm-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-luna-client-request common-lisp:nil
                       ((certificate :initarg :certificate :type
                         (common-lisp:or certificate common-lisp:null)
                         :accessor %create-luna-client-request-certificate
                         :initform
                         (common-lisp:error ":certificate is required"))
                        (label :initarg :label :type
                         (common-lisp:or client-label common-lisp:null)
                         :accessor %create-luna-client-request-label :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-luna-client-request
                    'make-create-luna-client-request))
 (common-lisp:defun make-create-luna-client-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key certificate label)
   (common-lisp:apply #'common-lisp:make-instance 'create-luna-client-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-luna-client-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-luna-client-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'label))
      (common-lisp:list
       (common-lisp:cons "Label"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate))
      (common-lisp:list
       (common-lisp:cons "Certificate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-luna-client-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-luna-client-response common-lisp:nil
                       ((client-arn :initarg :client-arn :type
                         (common-lisp:or client-arn common-lisp:null) :accessor
                         %create-luna-client-response-client-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-luna-client-response
                    'make-create-luna-client-response))
 (common-lisp:defun make-create-luna-client-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key client-arn)
   (common-lisp:apply #'common-lisp:make-instance 'create-luna-client-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-luna-client-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-luna-client-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-arn))
      (common-lisp:list
       (common-lisp:cons "ClientArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-luna-client-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-hapg-request common-lisp:nil
                       ((hapg-arn :initarg :hapg-arn :type
                         (common-lisp:or hapg-arn common-lisp:null) :accessor
                         %delete-hapg-request-hapg-arn :initform
                         (common-lisp:error ":hapg-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-hapg-request 'make-delete-hapg-request))
 (common-lisp:defun make-delete-hapg-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key hapg-arn)
   (common-lisp:apply #'common-lisp:make-instance 'delete-hapg-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-hapg-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-hapg-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hapg-arn))
      (common-lisp:list
       (common-lisp:cons "HapgArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-hapg-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-hapg-response common-lisp:nil
                       ((status :initarg :status :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %delete-hapg-response-status :initform
                         (common-lisp:error ":status is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-hapg-response 'make-delete-hapg-response))
 (common-lisp:defun make-delete-hapg-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key status)
   (common-lisp:apply #'common-lisp:make-instance 'delete-hapg-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-hapg-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-hapg-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-hapg-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-hsm-request common-lisp:nil
                       ((hsm-arn :initarg :hsm-arn :type
                         (common-lisp:or hsm-arn common-lisp:null) :accessor
                         %delete-hsm-request-hsm-arn :initform
                         (common-lisp:error ":hsm-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-hsm-request 'make-delete-hsm-request))
 (common-lisp:defun make-delete-hsm-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key hsm-arn)
   (common-lisp:apply #'common-lisp:make-instance 'delete-hsm-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-hsm-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-hsm-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hsm-arn))
      (common-lisp:list
       (common-lisp:cons "HsmArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-hsm-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-hsm-response common-lisp:nil
                       ((status :initarg :status :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %delete-hsm-response-status :initform
                         (common-lisp:error ":status is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-hsm-response 'make-delete-hsm-response))
 (common-lisp:defun make-delete-hsm-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key status)
   (common-lisp:apply #'common-lisp:make-instance 'delete-hsm-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-hsm-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-hsm-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-hsm-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-luna-client-request common-lisp:nil
                       ((client-arn :initarg :client-arn :type
                         (common-lisp:or client-arn common-lisp:null) :accessor
                         %delete-luna-client-request-client-arn :initform
                         (common-lisp:error ":client-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-luna-client-request
                    'make-delete-luna-client-request))
 (common-lisp:defun make-delete-luna-client-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key client-arn)
   (common-lisp:apply #'common-lisp:make-instance 'delete-luna-client-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-luna-client-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-luna-client-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-arn))
      (common-lisp:list
       (common-lisp:cons "ClientArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-luna-client-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-luna-client-response common-lisp:nil
                       ((status :initarg :status :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %delete-luna-client-response-status :initform
                         (common-lisp:error ":status is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-luna-client-response
                    'make-delete-luna-client-response))
 (common-lisp:defun make-delete-luna-client-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key status)
   (common-lisp:apply #'common-lisp:make-instance 'delete-luna-client-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-luna-client-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-luna-client-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-luna-client-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-hapg-request common-lisp:nil
                       ((hapg-arn :initarg :hapg-arn :type
                         (common-lisp:or hapg-arn common-lisp:null) :accessor
                         %describe-hapg-request-hapg-arn :initform
                         (common-lisp:error ":hapg-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'describe-hapg-request 'make-describe-hapg-request))
 (common-lisp:defun make-describe-hapg-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key hapg-arn)
   (common-lisp:apply #'common-lisp:make-instance 'describe-hapg-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-hapg-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-hapg-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hapg-arn))
      (common-lisp:list
       (common-lisp:cons "HapgArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-hapg-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-hapg-response common-lisp:nil
                       ((state :initarg :state :type
                         (common-lisp:or cloud-hsm-object-state
                                         common-lisp:null)
                         :accessor %describe-hapg-response-state :initform
                         common-lisp:nil)
                        (partition-serial-list :initarg :partition-serial-list
                         :type
                         (common-lisp:or partition-serial-list
                                         common-lisp:null)
                         :accessor
                         %describe-hapg-response-partition-serial-list
                         :initform common-lisp:nil)
                        (last-modified-timestamp :initarg
                         :last-modified-timestamp :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %describe-hapg-response-last-modified-timestamp
                         :initform common-lisp:nil)
                        (label :initarg :label :type
                         (common-lisp:or label common-lisp:null) :accessor
                         %describe-hapg-response-label :initform
                         common-lisp:nil)
                        (hsms-pending-registration :initarg
                         :hsms-pending-registration :type
                         (common-lisp:or hsm-list common-lisp:null) :accessor
                         %describe-hapg-response-hsms-pending-registration
                         :initform common-lisp:nil)
                        (hsms-pending-deletion :initarg :hsms-pending-deletion
                         :type (common-lisp:or hsm-list common-lisp:null)
                         :accessor
                         %describe-hapg-response-hsms-pending-deletion
                         :initform common-lisp:nil)
                        (hsms-last-action-failed :initarg
                         :hsms-last-action-failed :type
                         (common-lisp:or hsm-list common-lisp:null) :accessor
                         %describe-hapg-response-hsms-last-action-failed
                         :initform common-lisp:nil)
                        (hapg-serial :initarg :hapg-serial :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %describe-hapg-response-hapg-serial :initform
                         common-lisp:nil)
                        (hapg-arn :initarg :hapg-arn :type
                         (common-lisp:or hapg-arn common-lisp:null) :accessor
                         %describe-hapg-response-hapg-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'describe-hapg-response 'make-describe-hapg-response))
 (common-lisp:defun make-describe-hapg-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key state partition-serial-list
                     last-modified-timestamp label hsms-pending-registration
                     hsms-pending-deletion hsms-last-action-failed hapg-serial
                     hapg-arn)
   (common-lisp:apply #'common-lisp:make-instance 'describe-hapg-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-hapg-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-hapg-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hapg-arn))
      (common-lisp:list
       (common-lisp:cons "HapgArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hapg-serial))
      (common-lisp:list
       (common-lisp:cons "HapgSerial"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'hsms-last-action-failed))
      (common-lisp:list
       (common-lisp:cons "HsmsLastActionFailed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'hsms-pending-deletion))
      (common-lisp:list
       (common-lisp:cons "HsmsPendingDeletion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'hsms-pending-registration))
      (common-lisp:list
       (common-lisp:cons "HsmsPendingRegistration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'label))
      (common-lisp:list
       (common-lisp:cons "Label"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-modified-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'partition-serial-list))
      (common-lisp:list
       (common-lisp:cons "PartitionSerialList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-hapg-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-hsm-request common-lisp:nil
                       ((hsm-serial-number :initarg :hsm-serial-number :type
                         (common-lisp:or hsm-serial-number common-lisp:null)
                         :accessor %describe-hsm-request-hsm-serial-number
                         :initform common-lisp:nil)
                        (hsm-arn :initarg :hsm-arn :type
                         (common-lisp:or hsm-arn common-lisp:null) :accessor
                         %describe-hsm-request-hsm-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'describe-hsm-request 'make-describe-hsm-request))
 (common-lisp:defun make-describe-hsm-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key hsm-serial-number hsm-arn)
   (common-lisp:apply #'common-lisp:make-instance 'describe-hsm-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input describe-hsm-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input describe-hsm-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hsm-arn))
      (common-lisp:list
       (common-lisp:cons "HsmArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hsm-serial-number))
      (common-lisp:list
       (common-lisp:cons "HsmSerialNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input describe-hsm-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-hsm-response common-lisp:nil
                       ((partitions :initarg :partitions :type
                         (common-lisp:or partition-list common-lisp:null)
                         :accessor %describe-hsm-response-partitions :initform
                         common-lisp:nil)
                        (server-cert-last-updated :initarg
                         :server-cert-last-updated :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %describe-hsm-response-server-cert-last-updated
                         :initform common-lisp:nil)
                        (server-cert-uri :initarg :server-cert-uri :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %describe-hsm-response-server-cert-uri :initform
                         common-lisp:nil)
                        (ssh-key-last-updated :initarg :ssh-key-last-updated
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor %describe-hsm-response-ssh-key-last-updated
                         :initform common-lisp:nil)
                        (ssh-public-key :initarg :ssh-public-key :type
                         (common-lisp:or ssh-key common-lisp:null) :accessor
                         %describe-hsm-response-ssh-public-key :initform
                         common-lisp:nil)
                        (software-version :initarg :software-version :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %describe-hsm-response-software-version :initform
                         common-lisp:nil)
                        (hsm-type :initarg :hsm-type :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %describe-hsm-response-hsm-type :initform
                         common-lisp:nil)
                        (vendor-name :initarg :vendor-name :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %describe-hsm-response-vendor-name :initform
                         common-lisp:nil)
                        (serial-number :initarg :serial-number :type
                         (common-lisp:or hsm-serial-number common-lisp:null)
                         :accessor %describe-hsm-response-serial-number
                         :initform common-lisp:nil)
                        (iam-role-arn :initarg :iam-role-arn :type
                         (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor %describe-hsm-response-iam-role-arn
                         :initform common-lisp:nil)
                        (subnet-id :initarg :subnet-id :type
                         (common-lisp:or subnet-id common-lisp:null) :accessor
                         %describe-hsm-response-subnet-id :initform
                         common-lisp:nil)
                        (vpc-id :initarg :vpc-id :type
                         (common-lisp:or vpc-id common-lisp:null) :accessor
                         %describe-hsm-response-vpc-id :initform
                         common-lisp:nil)
                        (subscription-end-date :initarg :subscription-end-date
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor %describe-hsm-response-subscription-end-date
                         :initform common-lisp:nil)
                        (subscription-start-date :initarg
                         :subscription-start-date :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %describe-hsm-response-subscription-start-date
                         :initform common-lisp:nil)
                        (subscription-type :initarg :subscription-type :type
                         (common-lisp:or subscription-type common-lisp:null)
                         :accessor %describe-hsm-response-subscription-type
                         :initform common-lisp:nil)
                        (eni-ip :initarg :eni-ip :type
                         (common-lisp:or ip-address common-lisp:null) :accessor
                         %describe-hsm-response-eni-ip :initform
                         common-lisp:nil)
                        (eni-id :initarg :eni-id :type
                         (common-lisp:or eni-id common-lisp:null) :accessor
                         %describe-hsm-response-eni-id :initform
                         common-lisp:nil)
                        (availability-zone :initarg :availability-zone :type
                         (common-lisp:or az common-lisp:null) :accessor
                         %describe-hsm-response-availability-zone :initform
                         common-lisp:nil)
                        (status-details :initarg :status-details :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %describe-hsm-response-status-details :initform
                         common-lisp:nil)
                        (status :initarg :status :type
                         (common-lisp:or hsm-status common-lisp:null) :accessor
                         %describe-hsm-response-status :initform
                         common-lisp:nil)
                        (hsm-arn :initarg :hsm-arn :type
                         (common-lisp:or hsm-arn common-lisp:null) :accessor
                         %describe-hsm-response-hsm-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'describe-hsm-response 'make-describe-hsm-response))
 (common-lisp:defun make-describe-hsm-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key partitions server-cert-last-updated
                     server-cert-uri ssh-key-last-updated ssh-public-key
                     software-version hsm-type vendor-name serial-number
                     iam-role-arn subnet-id vpc-id subscription-end-date
                     subscription-start-date subscription-type eni-ip eni-id
                     availability-zone status-details status hsm-arn)
   (common-lisp:apply #'common-lisp:make-instance 'describe-hsm-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-hsm-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-hsm-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hsm-arn))
      (common-lisp:list
       (common-lisp:cons "HsmArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-details))
      (common-lisp:list
       (common-lisp:cons "StatusDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'availability-zone))
      (common-lisp:list
       (common-lisp:cons "AvailabilityZone"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'eni-id))
      (common-lisp:list
       (common-lisp:cons "EniId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'eni-ip))
      (common-lisp:list
       (common-lisp:cons "EniIp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscription-type))
      (common-lisp:list
       (common-lisp:cons "SubscriptionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'subscription-start-date))
      (common-lisp:list
       (common-lisp:cons "SubscriptionStartDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'subscription-end-date))
      (common-lisp:list
       (common-lisp:cons "SubscriptionEndDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-id))
      (common-lisp:list
       (common-lisp:cons "VpcId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-id))
      (common-lisp:list
       (common-lisp:cons "SubnetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iam-role-arn))
      (common-lisp:list
       (common-lisp:cons "IamRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'serial-number))
      (common-lisp:list
       (common-lisp:cons "SerialNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vendor-name))
      (common-lisp:list
       (common-lisp:cons "VendorName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hsm-type))
      (common-lisp:list
       (common-lisp:cons "HsmType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'software-version))
      (common-lisp:list
       (common-lisp:cons "SoftwareVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ssh-public-key))
      (common-lisp:list
       (common-lisp:cons "SshPublicKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ssh-key-last-updated))
      (common-lisp:list
       (common-lisp:cons "SshKeyLastUpdated"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'server-cert-uri))
      (common-lisp:list
       (common-lisp:cons "ServerCertUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'server-cert-last-updated))
      (common-lisp:list
       (common-lisp:cons "ServerCertLastUpdated"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'partitions))
      (common-lisp:list
       (common-lisp:cons "Partitions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-hsm-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-luna-client-request common-lisp:nil
                       ((certificate-fingerprint :initarg
                         :certificate-fingerprint :type
                         (common-lisp:or certificate-fingerprint
                                         common-lisp:null)
                         :accessor
                         %describe-luna-client-request-certificate-fingerprint
                         :initform common-lisp:nil)
                        (client-arn :initarg :client-arn :type
                         (common-lisp:or client-arn common-lisp:null) :accessor
                         %describe-luna-client-request-client-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'describe-luna-client-request
                    'make-describe-luna-client-request))
 (common-lisp:defun make-describe-luna-client-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key certificate-fingerprint client-arn)
   (common-lisp:apply #'common-lisp:make-instance 'describe-luna-client-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-luna-client-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-luna-client-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-arn))
      (common-lisp:list
       (common-lisp:cons "ClientArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'certificate-fingerprint))
      (common-lisp:list
       (common-lisp:cons "CertificateFingerprint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-luna-client-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-luna-client-response common-lisp:nil
                       ((label :initarg :label :type
                         (common-lisp:or label common-lisp:null) :accessor
                         %describe-luna-client-response-label :initform
                         common-lisp:nil)
                        (last-modified-timestamp :initarg
                         :last-modified-timestamp :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %describe-luna-client-response-last-modified-timestamp
                         :initform common-lisp:nil)
                        (certificate-fingerprint :initarg
                         :certificate-fingerprint :type
                         (common-lisp:or certificate-fingerprint
                                         common-lisp:null)
                         :accessor
                         %describe-luna-client-response-certificate-fingerprint
                         :initform common-lisp:nil)
                        (certificate :initarg :certificate :type
                         (common-lisp:or certificate common-lisp:null)
                         :accessor %describe-luna-client-response-certificate
                         :initform common-lisp:nil)
                        (client-arn :initarg :client-arn :type
                         (common-lisp:or client-arn common-lisp:null) :accessor
                         %describe-luna-client-response-client-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'describe-luna-client-response
                    'make-describe-luna-client-response))
 (common-lisp:defun make-describe-luna-client-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key label last-modified-timestamp
                     certificate-fingerprint certificate client-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-luna-client-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-luna-client-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-luna-client-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-arn))
      (common-lisp:list
       (common-lisp:cons "ClientArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate))
      (common-lisp:list
       (common-lisp:cons "Certificate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'certificate-fingerprint))
      (common-lisp:list
       (common-lisp:cons "CertificateFingerprint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-modified-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'label))
      (common-lisp:list
       (common-lisp:cons "Label"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-luna-client-response))
   common-lisp:nil))
(common-lisp:deftype eni-id () 'common-lisp:string)
(common-lisp:deftype external-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass get-config-request common-lisp:nil
                       ((hapg-list :initarg :hapg-list :type
                         (common-lisp:or hapg-list common-lisp:null) :accessor
                         %get-config-request-hapg-list :initform
                         (common-lisp:error ":hapg-list is required"))
                        (client-version :initarg :client-version :type
                         (common-lisp:or client-version common-lisp:null)
                         :accessor %get-config-request-client-version :initform
                         (common-lisp:error ":client-version is required"))
                        (client-arn :initarg :client-arn :type
                         (common-lisp:or client-arn common-lisp:null) :accessor
                         %get-config-request-client-arn :initform
                         (common-lisp:error ":client-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'get-config-request 'make-get-config-request))
 (common-lisp:defun make-get-config-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key hapg-list client-version client-arn)
   (common-lisp:apply #'common-lisp:make-instance 'get-config-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-config-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-config-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-arn))
      (common-lisp:list
       (common-lisp:cons "ClientArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-version))
      (common-lisp:list
       (common-lisp:cons "ClientVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hapg-list))
      (common-lisp:list
       (common-lisp:cons "HapgList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-config-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-config-response common-lisp:nil
                       ((config-cred :initarg :config-cred :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-config-response-config-cred :initform
                         common-lisp:nil)
                        (config-file :initarg :config-file :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-config-response-config-file :initform
                         common-lisp:nil)
                        (config-type :initarg :config-type :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-config-response-config-type :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-config-response 'make-get-config-response))
 (common-lisp:defun make-get-config-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key config-cred config-file config-type)
   (common-lisp:apply #'common-lisp:make-instance 'get-config-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-config-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-config-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'config-type))
      (common-lisp:list
       (common-lisp:cons "ConfigType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'config-file))
      (common-lisp:list
       (common-lisp:cons "ConfigFile"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'config-cred))
      (common-lisp:list
       (common-lisp:cons "ConfigCred"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-config-response))
   common-lisp:nil))
(common-lisp:deftype hapg-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype hapg-list () '(trivial-types:proper-list hapg-arn))
 (common-lisp:defun |make-hapg-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list hapg-arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype hsm-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype hsm-list () '(trivial-types:proper-list hsm-arn))
 (common-lisp:defun |make-hsm-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list hsm-arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype hsm-serial-number () 'common-lisp:string)
(common-lisp:deftype hsm-status () 'common-lisp:string)
(common-lisp:deftype iam-role-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition invalid-request-exception
     (cloudhsm-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'invalid-request-exception)))
(common-lisp:deftype ip-address () 'common-lisp:string)
(common-lisp:deftype label () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass list-available-zones-request common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'list-available-zones-request
                    'make-list-available-zones-request))
 (common-lisp:defun make-list-available-zones-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'list-available-zones-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-available-zones-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-available-zones-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-available-zones-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-available-zones-response common-lisp:nil
                       ((azlist :initarg :azlist :type
                         (common-lisp:or azlist common-lisp:null) :accessor
                         %list-available-zones-response-azlist :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-available-zones-response
                    'make-list-available-zones-response))
 (common-lisp:defun make-list-available-zones-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key azlist)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-available-zones-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-available-zones-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-available-zones-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'azlist))
      (common-lisp:list
       (common-lisp:cons "AZList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-available-zones-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-hapgs-request common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor %list-hapgs-request-next-token :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-hapgs-request 'make-list-hapgs-request))
 (common-lisp:defun make-list-hapgs-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token)
   (common-lisp:apply #'common-lisp:make-instance 'list-hapgs-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-hapgs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-hapgs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-hapgs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-hapgs-response common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor %list-hapgs-response-next-token :initform
                         common-lisp:nil)
                        (hapg-list :initarg :hapg-list :type
                         (common-lisp:or hapg-list common-lisp:null) :accessor
                         %list-hapgs-response-hapg-list :initform
                         (common-lisp:error ":hapg-list is required"))))
 (common-lisp:export
  (common-lisp:list 'list-hapgs-response 'make-list-hapgs-response))
 (common-lisp:defun make-list-hapgs-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token hapg-list)
   (common-lisp:apply #'common-lisp:make-instance 'list-hapgs-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-hapgs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-hapgs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hapg-list))
      (common-lisp:list
       (common-lisp:cons "HapgList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-hapgs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-hsms-request common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor %list-hsms-request-next-token :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-hsms-request 'make-list-hsms-request))
 (common-lisp:defun make-list-hsms-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token)
   (common-lisp:apply #'common-lisp:make-instance 'list-hsms-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-hsms-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-hsms-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-hsms-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-hsms-response common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor %list-hsms-response-next-token :initform
                         common-lisp:nil)
                        (hsm-list :initarg :hsm-list :type
                         (common-lisp:or hsm-list common-lisp:null) :accessor
                         %list-hsms-response-hsm-list :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-hsms-response 'make-list-hsms-response))
 (common-lisp:defun make-list-hsms-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token hsm-list)
   (common-lisp:apply #'common-lisp:make-instance 'list-hsms-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-hsms-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-hsms-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hsm-list))
      (common-lisp:list
       (common-lisp:cons "HsmList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-hsms-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-luna-clients-request common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor %list-luna-clients-request-next-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-luna-clients-request
                    'make-list-luna-clients-request))
 (common-lisp:defun make-list-luna-clients-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token)
   (common-lisp:apply #'common-lisp:make-instance 'list-luna-clients-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-luna-clients-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-luna-clients-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-luna-clients-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-luna-clients-response common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor %list-luna-clients-response-next-token
                         :initform common-lisp:nil)
                        (client-list :initarg :client-list :type
                         (common-lisp:or client-list common-lisp:null)
                         :accessor %list-luna-clients-response-client-list
                         :initform
                         (common-lisp:error ":client-list is required"))))
 (common-lisp:export
  (common-lisp:list 'list-luna-clients-response
                    'make-list-luna-clients-response))
 (common-lisp:defun make-list-luna-clients-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token client-list)
   (common-lisp:apply #'common-lisp:make-instance 'list-luna-clients-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-luna-clients-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-luna-clients-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-list))
      (common-lisp:list
       (common-lisp:cons "ClientList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-luna-clients-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %list-tags-for-resource-request-resource-arn :initform
                         (common-lisp:error ":resource-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defun make-list-tags-for-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-response common-lisp:nil
                       ((tag-list :initarg :tag-list :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         %list-tags-for-resource-response-tag-list :initform
                         (common-lisp:error ":tag-list is required"))))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defun make-list-tags-for-resource-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tag-list)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-list))
      (common-lisp:list
       (common-lisp:cons "TagList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass modify-hapg-request common-lisp:nil
                       ((partition-serial-list :initarg :partition-serial-list
                         :type
                         (common-lisp:or partition-serial-list
                                         common-lisp:null)
                         :accessor %modify-hapg-request-partition-serial-list
                         :initform common-lisp:nil)
                        (label :initarg :label :type
                         (common-lisp:or label common-lisp:null) :accessor
                         %modify-hapg-request-label :initform common-lisp:nil)
                        (hapg-arn :initarg :hapg-arn :type
                         (common-lisp:or hapg-arn common-lisp:null) :accessor
                         %modify-hapg-request-hapg-arn :initform
                         (common-lisp:error ":hapg-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'modify-hapg-request 'make-modify-hapg-request))
 (common-lisp:defun make-modify-hapg-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key partition-serial-list label hapg-arn)
   (common-lisp:apply #'common-lisp:make-instance 'modify-hapg-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input modify-hapg-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input modify-hapg-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hapg-arn))
      (common-lisp:list
       (common-lisp:cons "HapgArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'label))
      (common-lisp:list
       (common-lisp:cons "Label"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'partition-serial-list))
      (common-lisp:list
       (common-lisp:cons "PartitionSerialList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input modify-hapg-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass modify-hapg-response common-lisp:nil
                       ((hapg-arn :initarg :hapg-arn :type
                         (common-lisp:or hapg-arn common-lisp:null) :accessor
                         %modify-hapg-response-hapg-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'modify-hapg-response 'make-modify-hapg-response))
 (common-lisp:defun make-modify-hapg-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key hapg-arn)
   (common-lisp:apply #'common-lisp:make-instance 'modify-hapg-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input modify-hapg-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input modify-hapg-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hapg-arn))
      (common-lisp:list
       (common-lisp:cons "HapgArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input modify-hapg-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass modify-hsm-request common-lisp:nil
                       ((syslog-ip :initarg :syslog-ip :type
                         (common-lisp:or ip-address common-lisp:null) :accessor
                         %modify-hsm-request-syslog-ip :initform
                         common-lisp:nil)
                        (external-id :initarg :external-id :type
                         (common-lisp:or external-id common-lisp:null)
                         :accessor %modify-hsm-request-external-id :initform
                         common-lisp:nil)
                        (iam-role-arn :initarg :iam-role-arn :type
                         (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor %modify-hsm-request-iam-role-arn :initform
                         common-lisp:nil)
                        (eni-ip :initarg :eni-ip :type
                         (common-lisp:or ip-address common-lisp:null) :accessor
                         %modify-hsm-request-eni-ip :initform common-lisp:nil)
                        (subnet-id :initarg :subnet-id :type
                         (common-lisp:or subnet-id common-lisp:null) :accessor
                         %modify-hsm-request-subnet-id :initform
                         common-lisp:nil)
                        (hsm-arn :initarg :hsm-arn :type
                         (common-lisp:or hsm-arn common-lisp:null) :accessor
                         %modify-hsm-request-hsm-arn :initform
                         (common-lisp:error ":hsm-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'modify-hsm-request 'make-modify-hsm-request))
 (common-lisp:defun make-modify-hsm-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key syslog-ip external-id iam-role-arn eni-ip
                     subnet-id hsm-arn)
   (common-lisp:apply #'common-lisp:make-instance 'modify-hsm-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input modify-hsm-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input modify-hsm-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hsm-arn))
      (common-lisp:list
       (common-lisp:cons "HsmArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-id))
      (common-lisp:list
       (common-lisp:cons "SubnetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'eni-ip))
      (common-lisp:list
       (common-lisp:cons "EniIp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iam-role-arn))
      (common-lisp:list
       (common-lisp:cons "IamRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'external-id))
      (common-lisp:list
       (common-lisp:cons "ExternalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'syslog-ip))
      (common-lisp:list
       (common-lisp:cons "SyslogIp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input modify-hsm-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass modify-hsm-response common-lisp:nil
                       ((hsm-arn :initarg :hsm-arn :type
                         (common-lisp:or hsm-arn common-lisp:null) :accessor
                         %modify-hsm-response-hsm-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'modify-hsm-response 'make-modify-hsm-response))
 (common-lisp:defun make-modify-hsm-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key hsm-arn)
   (common-lisp:apply #'common-lisp:make-instance 'modify-hsm-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input modify-hsm-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input modify-hsm-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hsm-arn))
      (common-lisp:list
       (common-lisp:cons "HsmArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input modify-hsm-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass modify-luna-client-request common-lisp:nil
                       ((certificate :initarg :certificate :type
                         (common-lisp:or certificate common-lisp:null)
                         :accessor %modify-luna-client-request-certificate
                         :initform
                         (common-lisp:error ":certificate is required"))
                        (client-arn :initarg :client-arn :type
                         (common-lisp:or client-arn common-lisp:null) :accessor
                         %modify-luna-client-request-client-arn :initform
                         (common-lisp:error ":client-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'modify-luna-client-request
                    'make-modify-luna-client-request))
 (common-lisp:defun make-modify-luna-client-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key certificate client-arn)
   (common-lisp:apply #'common-lisp:make-instance 'modify-luna-client-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          modify-luna-client-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          modify-luna-client-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-arn))
      (common-lisp:list
       (common-lisp:cons "ClientArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate))
      (common-lisp:list
       (common-lisp:cons "Certificate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          modify-luna-client-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass modify-luna-client-response common-lisp:nil
                       ((client-arn :initarg :client-arn :type
                         (common-lisp:or client-arn common-lisp:null) :accessor
                         %modify-luna-client-response-client-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'modify-luna-client-response
                    'make-modify-luna-client-response))
 (common-lisp:defun make-modify-luna-client-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key client-arn)
   (common-lisp:apply #'common-lisp:make-instance 'modify-luna-client-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          modify-luna-client-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          modify-luna-client-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-arn))
      (common-lisp:list
       (common-lisp:cons "ClientArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          modify-luna-client-response))
   common-lisp:nil))
(common-lisp:deftype pagination-token () 'common-lisp:string)
(common-lisp:deftype partition-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype partition-list ()
   '(trivial-types:proper-list partition-arn))
 (common-lisp:defun |make-partition-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list partition-arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype partition-serial () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype partition-serial-list ()
   '(trivial-types:proper-list partition-serial))
 (common-lisp:defun |make-partition-serial-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list partition-serial))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass remove-tags-from-resource-request common-lisp:nil
                       ((tag-key-list :initarg :tag-key-list :type
                         (common-lisp:or tag-key-list common-lisp:null)
                         :accessor
                         %remove-tags-from-resource-request-tag-key-list
                         :initform
                         (common-lisp:error ":tag-key-list is required"))
                        (resource-arn :initarg :resource-arn :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %remove-tags-from-resource-request-resource-arn
                         :initform
                         (common-lisp:error ":resource-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'remove-tags-from-resource-request
                    'make-remove-tags-from-resource-request))
 (common-lisp:defun make-remove-tags-from-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tag-key-list resource-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'remove-tags-from-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          remove-tags-from-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          remove-tags-from-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-key-list))
      (common-lisp:list
       (common-lisp:cons "TagKeyList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          remove-tags-from-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass remove-tags-from-resource-response common-lisp:nil
                       ((status :initarg :status :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %remove-tags-from-resource-response-status :initform
                         (common-lisp:error ":status is required"))))
 (common-lisp:export
  (common-lisp:list 'remove-tags-from-resource-response
                    'make-remove-tags-from-resource-response))
 (common-lisp:defun make-remove-tags-from-resource-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key status)
   (common-lisp:apply #'common-lisp:make-instance
                      'remove-tags-from-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          remove-tags-from-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          remove-tags-from-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          remove-tags-from-resource-response))
   common-lisp:nil))
(common-lisp:deftype ssh-key () 'common-lisp:string)
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:deftype subnet-id () 'common-lisp:string)
(common-lisp:deftype subscription-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass tag common-lisp:nil
                       ((value :initarg :value :type
                         (common-lisp:or tag-value common-lisp:null) :accessor
                         %tag-value :initform
                         (common-lisp:error ":value is required"))
                        (key :initarg :key :type
                         (common-lisp:or tag-key common-lisp:null) :accessor
                         %tag-key :initform
                         (common-lisp:error ":key is required"))))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defun make-tag
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key value key)
   (common-lisp:apply #'common-lisp:make-instance 'tag
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag))
   common-lisp:nil))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun |make-tag-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-tag-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:deftype vpc-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun add-tags-to-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-list)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-list))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-add-tags-to-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudhsm-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "AddTagsToResource"
                                                        "2014-05-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'add-tags-to-resource))
(common-lisp:progn
 (common-lisp:defun create-hapg
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key label)
   (common-lisp:declare (common-lisp:ignorable label))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-hapg-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudhsm-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "CreateHapg"
                                                        "2014-05-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-hapg))
(common-lisp:progn
 (common-lisp:defun create-hsm
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key subnet-id ssh-key eni-ip iam-role-arn
                     external-id subscription-type client-token syslog-ip)
   (common-lisp:declare
    (common-lisp:ignorable subnet-id ssh-key eni-ip iam-role-arn external-id
     subscription-type client-token syslog-ip))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-hsm-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudhsm-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "CreateHsm"
                                                        "2014-05-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-hsm))
(common-lisp:progn
 (common-lisp:defun create-luna-client
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key label certificate)
   (common-lisp:declare (common-lisp:ignorable label certificate))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-luna-client-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudhsm-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "CreateLunaClient"
                                                        "2014-05-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-luna-client))
(common-lisp:progn
 (common-lisp:defun delete-hapg
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hapg-arn)
   (common-lisp:declare (common-lisp:ignorable hapg-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-hapg-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudhsm-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DeleteHapg"
                                                        "2014-05-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-hapg))
(common-lisp:progn
 (common-lisp:defun delete-hsm
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hsm-arn)
   (common-lisp:declare (common-lisp:ignorable hsm-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-hsm-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudhsm-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DeleteHsm"
                                                        "2014-05-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-hsm))
(common-lisp:progn
 (common-lisp:defun delete-luna-client
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-arn)
   (common-lisp:declare (common-lisp:ignorable client-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-luna-client-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudhsm-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DeleteLunaClient"
                                                        "2014-05-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-luna-client))
(common-lisp:progn
 (common-lisp:defun describe-hapg
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hapg-arn)
   (common-lisp:declare (common-lisp:ignorable hapg-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-hapg-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudhsm-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DescribeHapg"
                                                        "2014-05-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-hapg))
(common-lisp:progn
 (common-lisp:defun describe-hsm
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hsm-arn hsm-serial-number)
   (common-lisp:declare (common-lisp:ignorable hsm-arn hsm-serial-number))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-hsm-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudhsm-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DescribeHsm"
                                                        "2014-05-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-hsm))
(common-lisp:progn
 (common-lisp:defun describe-luna-client
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-arn certificate-fingerprint)
   (common-lisp:declare
    (common-lisp:ignorable client-arn certificate-fingerprint))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-luna-client-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudhsm-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DescribeLunaClient"
                                                        "2014-05-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-luna-client))
(common-lisp:progn
 (common-lisp:defun get-config
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-arn client-version hapg-list)
   (common-lisp:declare
    (common-lisp:ignorable client-arn client-version hapg-list))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-config-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudhsm-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "GetConfig"
                                                        "2014-05-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-config))
(common-lisp:progn
 (common-lisp:defun list-available-zones ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'cloudhsm-request :method "POST" :path "/"
                                :protocol :json :operation "ListAvailableZones"
                                :params
                                `(("Action" ,@"ListAvailableZones")
                                  ("Version" ,@"2014-05-30"))))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'list-available-zones))
(common-lisp:progn
 (common-lisp:defun list-hapgs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token)
   (common-lisp:declare (common-lisp:ignorable next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-hapgs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudhsm-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListHapgs"
                                                        "2014-05-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-hapgs))
(common-lisp:progn
 (common-lisp:defun list-hsms
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token)
   (common-lisp:declare (common-lisp:ignorable next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-hsms-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudhsm-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListHsms"
                                                        "2014-05-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-hsms))
(common-lisp:progn
 (common-lisp:defun list-luna-clients
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token)
   (common-lisp:declare (common-lisp:ignorable next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-luna-clients-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudhsm-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListLunaClients"
                                                        "2014-05-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-luna-clients))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudhsm-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListTagsForResource"
                                                        "2014-05-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun modify-hapg
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hapg-arn label partition-serial-list)
   (common-lisp:declare
    (common-lisp:ignorable hapg-arn label partition-serial-list))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-modify-hapg-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudhsm-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ModifyHapg"
                                                        "2014-05-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'modify-hapg))
(common-lisp:progn
 (common-lisp:defun modify-hsm
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hsm-arn subnet-id eni-ip iam-role-arn
                     external-id syslog-ip)
   (common-lisp:declare
    (common-lisp:ignorable hsm-arn subnet-id eni-ip iam-role-arn external-id
     syslog-ip))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-modify-hsm-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudhsm-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ModifyHsm"
                                                        "2014-05-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'modify-hsm))
(common-lisp:progn
 (common-lisp:defun modify-luna-client
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-arn certificate)
   (common-lisp:declare (common-lisp:ignorable client-arn certificate))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-modify-luna-client-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudhsm-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ModifyLunaClient"
                                                        "2014-05-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'modify-luna-client))
(common-lisp:progn
 (common-lisp:defun remove-tags-from-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-key-list)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-key-list))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-remove-tags-from-resource-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudhsm-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "RemoveTagsFromResource"
                                                        "2014-05-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'remove-tags-from-resource))
