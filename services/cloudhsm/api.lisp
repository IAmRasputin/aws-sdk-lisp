;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/cloudhsm/api
  (:use)
  (:nicknames #:aws/cloudhsm)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/json-request)
  (:import-from #:aws-sdk/rest-json-request)
  (:import-from #:aws-sdk/rest-xml-request)
  (:import-from #:aws-sdk/query-request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/cloudhsm/api)
(common-lisp:progn
 (common-lisp:define-condition cloudhsm-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'cloudhsm-error))
(common-lisp:progn
 (common-lisp:defclass cloudhsm-request (aws-sdk/json-request:json-request)
                       common-lisp:nil
                       (:default-initargs :service "cloudhsm" :api-version
                        "2014-05-30" :host-prefix "cloudhsm" :signing-name
                        common-lisp:nil :global-host common-lisp:nil
                        :target-prefix "CloudHsmFrontendService" :json-version
                        "1.1"))
 (common-lisp:export 'cloudhsm-request))
(common-lisp:defvar *error-map*
  '(("CloudHsmInternalException" . cloud-hsm-internal-exception)
    ("CloudHsmServiceException" . cloud-hsm-service-exception)
    ("InvalidRequestException" . invalid-request-exception)))
(common-lisp:deftype az () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype azlist () '(trivial-types:proper-list az))
 (common-lisp:defun make-azlist
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list az))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (add-tags-to-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-add-tags-to-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or string common-lisp:null))
   (tag-list (common-lisp:error ":tag-list is required") :type
    (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-tags-to-resource-request
                    'make-add-tags-to-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          add-tags-to-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          add-tags-to-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-list))
      (common-lisp:list
       (common-lisp:cons "TagList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          add-tags-to-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (add-tags-to-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-add-tags-to-resource-response-"))
   (status (common-lisp:error ":status is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-tags-to-resource-response
                    'make-add-tags-to-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          add-tags-to-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          add-tags-to-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          add-tags-to-resource-response))
   common-lisp:nil))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:deftype certificate () 'common-lisp:string)
(common-lisp:deftype certificate-fingerprint () 'common-lisp:string)
(common-lisp:deftype client-arn () 'common-lisp:string)
(common-lisp:deftype client-label () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype client-list () '(trivial-types:proper-list client-arn))
 (common-lisp:defun make-client-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list client-arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype client-token () 'common-lisp:string)
(common-lisp:deftype client-version () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition cloud-hsm-internal-exception
     (cloudhsm-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'cloud-hsm-internal-exception)))
(common-lisp:deftype cloud-hsm-object-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition cloud-hsm-service-exception
     (cloudhsm-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       cloud-hsm-service-exception-message)
      (retryable :initarg :retryable :initform common-lisp:nil :reader
       cloud-hsm-service-exception-retryable)))
 (common-lisp:export
  (common-lisp:list 'cloud-hsm-service-exception
                    'cloud-hsm-service-exception-message
                    'cloud-hsm-service-exception-retryable)))
(common-lisp:progn
 (common-lisp:defstruct
     (create-hapg-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-hapg-request-"))
   (label (common-lisp:error ":label is required") :type
    (common-lisp:or label common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-hapg-request 'make-create-hapg-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-hapg-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-hapg-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'label))
      (common-lisp:list
       (common-lisp:cons "Label"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-hapg-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-hapg-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-hapg-response-"))
   (hapg-arn common-lisp:nil :type (common-lisp:or hapg-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-hapg-response 'make-create-hapg-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-hapg-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-hapg-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hapg-arn))
      (common-lisp:list
       (common-lisp:cons "HapgArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-hapg-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-hsm-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-hsm-request-"))
   (subnet-id (common-lisp:error ":subnet-id is required") :type
    (common-lisp:or subnet-id common-lisp:null))
   (ssh-key (common-lisp:error ":ssh-key is required") :type
    (common-lisp:or ssh-key common-lisp:null))
   (eni-ip common-lisp:nil :type (common-lisp:or ip-address common-lisp:null))
   (iam-role-arn (common-lisp:error ":iam-role-arn is required") :type
    (common-lisp:or iam-role-arn common-lisp:null))
   (external-id common-lisp:nil :type
    (common-lisp:or external-id common-lisp:null))
   (subscription-type (common-lisp:error ":subscription-type is required")
    :type (common-lisp:or subscription-type common-lisp:null))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null))
   (syslog-ip common-lisp:nil :type
    (common-lisp:or ip-address common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-hsm-request 'make-create-hsm-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-hsm-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-hsm-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-id))
      (common-lisp:list
       (common-lisp:cons "SubnetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ssh-key))
      (common-lisp:list
       (common-lisp:cons "SshKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'eni-ip))
      (common-lisp:list
       (common-lisp:cons "EniIp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iam-role-arn))
      (common-lisp:list
       (common-lisp:cons "IamRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'external-id))
      (common-lisp:list
       (common-lisp:cons "ExternalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscription-type))
      (common-lisp:list
       (common-lisp:cons "SubscriptionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'syslog-ip))
      (common-lisp:list
       (common-lisp:cons "SyslogIp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-hsm-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-hsm-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-hsm-response-"))
   (hsm-arn common-lisp:nil :type (common-lisp:or hsm-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-hsm-response 'make-create-hsm-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-hsm-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-hsm-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hsm-arn))
      (common-lisp:list
       (common-lisp:cons "HsmArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-hsm-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-luna-client-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-luna-client-request-"))
   (label common-lisp:nil :type (common-lisp:or client-label common-lisp:null))
   (certificate (common-lisp:error ":certificate is required") :type
    (common-lisp:or certificate common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-luna-client-request
                    'make-create-luna-client-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-luna-client-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-luna-client-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'label))
      (common-lisp:list
       (common-lisp:cons "Label"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate))
      (common-lisp:list
       (common-lisp:cons "Certificate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-luna-client-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-luna-client-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-luna-client-response-"))
   (client-arn common-lisp:nil :type
    (common-lisp:or client-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-luna-client-response
                    'make-create-luna-client-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-luna-client-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-luna-client-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-arn))
      (common-lisp:list
       (common-lisp:cons "ClientArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-luna-client-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-hapg-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-hapg-request-"))
   (hapg-arn (common-lisp:error ":hapg-arn is required") :type
    (common-lisp:or hapg-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-hapg-request 'make-delete-hapg-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-hapg-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-hapg-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hapg-arn))
      (common-lisp:list
       (common-lisp:cons "HapgArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-hapg-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-hapg-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-hapg-response-"))
   (status (common-lisp:error ":status is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-hapg-response 'make-delete-hapg-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-hapg-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-hapg-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-hapg-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-hsm-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-hsm-request-"))
   (hsm-arn (common-lisp:error ":hsm-arn is required") :type
    (common-lisp:or hsm-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-hsm-request 'make-delete-hsm-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-hsm-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-hsm-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hsm-arn))
      (common-lisp:list
       (common-lisp:cons "HsmArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-hsm-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-hsm-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-hsm-response-"))
   (status (common-lisp:error ":status is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-hsm-response 'make-delete-hsm-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-hsm-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-hsm-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-hsm-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-luna-client-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-luna-client-request-"))
   (client-arn (common-lisp:error ":client-arn is required") :type
    (common-lisp:or client-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-luna-client-request
                    'make-delete-luna-client-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-luna-client-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-luna-client-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-arn))
      (common-lisp:list
       (common-lisp:cons "ClientArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-luna-client-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-luna-client-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-luna-client-response-"))
   (status (common-lisp:error ":status is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-luna-client-response
                    'make-delete-luna-client-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-luna-client-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-luna-client-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-luna-client-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-hapg-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-hapg-request-"))
   (hapg-arn (common-lisp:error ":hapg-arn is required") :type
    (common-lisp:or hapg-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-hapg-request 'make-describe-hapg-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-hapg-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-hapg-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hapg-arn))
      (common-lisp:list
       (common-lisp:cons "HapgArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-hapg-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-hapg-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-hapg-response-"))
   (hapg-arn common-lisp:nil :type (common-lisp:or hapg-arn common-lisp:null))
   (hapg-serial common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (hsms-last-action-failed common-lisp:nil :type
    (common-lisp:or hsm-list common-lisp:null))
   (hsms-pending-deletion common-lisp:nil :type
    (common-lisp:or hsm-list common-lisp:null))
   (hsms-pending-registration common-lisp:nil :type
    (common-lisp:or hsm-list common-lisp:null))
   (label common-lisp:nil :type (common-lisp:or label common-lisp:null))
   (last-modified-timestamp common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (partition-serial-list common-lisp:nil :type
    (common-lisp:or partition-serial-list common-lisp:null))
   (state common-lisp:nil :type
    (common-lisp:or cloud-hsm-object-state common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-hapg-response 'make-describe-hapg-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-hapg-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-hapg-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hapg-arn))
      (common-lisp:list
       (common-lisp:cons "HapgArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hapg-serial))
      (common-lisp:list
       (common-lisp:cons "HapgSerial"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'hsms-last-action-failed))
      (common-lisp:list
       (common-lisp:cons "HsmsLastActionFailed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'hsms-pending-deletion))
      (common-lisp:list
       (common-lisp:cons "HsmsPendingDeletion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'hsms-pending-registration))
      (common-lisp:list
       (common-lisp:cons "HsmsPendingRegistration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'label))
      (common-lisp:list
       (common-lisp:cons "Label"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-modified-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'partition-serial-list))
      (common-lisp:list
       (common-lisp:cons "PartitionSerialList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-hapg-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-hsm-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-hsm-request-"))
   (hsm-arn common-lisp:nil :type (common-lisp:or hsm-arn common-lisp:null))
   (hsm-serial-number common-lisp:nil :type
    (common-lisp:or hsm-serial-number common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-hsm-request 'make-describe-hsm-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input describe-hsm-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input describe-hsm-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hsm-arn))
      (common-lisp:list
       (common-lisp:cons "HsmArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hsm-serial-number))
      (common-lisp:list
       (common-lisp:cons "HsmSerialNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input describe-hsm-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-hsm-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-hsm-response-"))
   (hsm-arn common-lisp:nil :type (common-lisp:or hsm-arn common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or hsm-status common-lisp:null))
   (status-details common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (availability-zone common-lisp:nil :type
    (common-lisp:or az common-lisp:null))
   (eni-id common-lisp:nil :type (common-lisp:or eni-id common-lisp:null))
   (eni-ip common-lisp:nil :type (common-lisp:or ip-address common-lisp:null))
   (subscription-type common-lisp:nil :type
    (common-lisp:or subscription-type common-lisp:null))
   (subscription-start-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (subscription-end-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (vpc-id common-lisp:nil :type (common-lisp:or vpc-id common-lisp:null))
   (subnet-id common-lisp:nil :type
    (common-lisp:or subnet-id common-lisp:null))
   (iam-role-arn common-lisp:nil :type
    (common-lisp:or iam-role-arn common-lisp:null))
   (serial-number common-lisp:nil :type
    (common-lisp:or hsm-serial-number common-lisp:null))
   (vendor-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (hsm-type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (software-version common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (ssh-public-key common-lisp:nil :type
    (common-lisp:or ssh-key common-lisp:null))
   (ssh-key-last-updated common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (server-cert-uri common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (server-cert-last-updated common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (partitions common-lisp:nil :type
    (common-lisp:or partition-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-hsm-response 'make-describe-hsm-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-hsm-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-hsm-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hsm-arn))
      (common-lisp:list
       (common-lisp:cons "HsmArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-details))
      (common-lisp:list
       (common-lisp:cons "StatusDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'availability-zone))
      (common-lisp:list
       (common-lisp:cons "AvailabilityZone"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'eni-id))
      (common-lisp:list
       (common-lisp:cons "EniId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'eni-ip))
      (common-lisp:list
       (common-lisp:cons "EniIp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscription-type))
      (common-lisp:list
       (common-lisp:cons "SubscriptionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'subscription-start-date))
      (common-lisp:list
       (common-lisp:cons "SubscriptionStartDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'subscription-end-date))
      (common-lisp:list
       (common-lisp:cons "SubscriptionEndDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-id))
      (common-lisp:list
       (common-lisp:cons "VpcId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-id))
      (common-lisp:list
       (common-lisp:cons "SubnetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iam-role-arn))
      (common-lisp:list
       (common-lisp:cons "IamRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'serial-number))
      (common-lisp:list
       (common-lisp:cons "SerialNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vendor-name))
      (common-lisp:list
       (common-lisp:cons "VendorName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hsm-type))
      (common-lisp:list
       (common-lisp:cons "HsmType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'software-version))
      (common-lisp:list
       (common-lisp:cons "SoftwareVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ssh-public-key))
      (common-lisp:list
       (common-lisp:cons "SshPublicKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ssh-key-last-updated))
      (common-lisp:list
       (common-lisp:cons "SshKeyLastUpdated"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'server-cert-uri))
      (common-lisp:list
       (common-lisp:cons "ServerCertUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'server-cert-last-updated))
      (common-lisp:list
       (common-lisp:cons "ServerCertLastUpdated"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'partitions))
      (common-lisp:list
       (common-lisp:cons "Partitions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-hsm-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-luna-client-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-luna-client-request-"))
   (client-arn common-lisp:nil :type
    (common-lisp:or client-arn common-lisp:null))
   (certificate-fingerprint common-lisp:nil :type
    (common-lisp:or certificate-fingerprint common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-luna-client-request
                    'make-describe-luna-client-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-luna-client-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-luna-client-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-arn))
      (common-lisp:list
       (common-lisp:cons "ClientArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'certificate-fingerprint))
      (common-lisp:list
       (common-lisp:cons "CertificateFingerprint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-luna-client-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-luna-client-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-luna-client-response-"))
   (client-arn common-lisp:nil :type
    (common-lisp:or client-arn common-lisp:null))
   (certificate common-lisp:nil :type
    (common-lisp:or certificate common-lisp:null))
   (certificate-fingerprint common-lisp:nil :type
    (common-lisp:or certificate-fingerprint common-lisp:null))
   (last-modified-timestamp common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (label common-lisp:nil :type (common-lisp:or label common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-luna-client-response
                    'make-describe-luna-client-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-luna-client-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-luna-client-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-arn))
      (common-lisp:list
       (common-lisp:cons "ClientArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate))
      (common-lisp:list
       (common-lisp:cons "Certificate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'certificate-fingerprint))
      (common-lisp:list
       (common-lisp:cons "CertificateFingerprint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-modified-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'label))
      (common-lisp:list
       (common-lisp:cons "Label"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-luna-client-response))
   common-lisp:nil))
(common-lisp:deftype eni-id () 'common-lisp:string)
(common-lisp:deftype external-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (get-config-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-config-request-"))
   (client-arn (common-lisp:error ":client-arn is required") :type
    (common-lisp:or client-arn common-lisp:null))
   (client-version (common-lisp:error ":client-version is required") :type
    (common-lisp:or client-version common-lisp:null))
   (hapg-list (common-lisp:error ":hapg-list is required") :type
    (common-lisp:or hapg-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-config-request 'make-get-config-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-config-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-config-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-arn))
      (common-lisp:list
       (common-lisp:cons "ClientArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-version))
      (common-lisp:list
       (common-lisp:cons "ClientVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hapg-list))
      (common-lisp:list
       (common-lisp:cons "HapgList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-config-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-config-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-config-response-"))
   (config-type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (config-file common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (config-cred common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-config-response 'make-get-config-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-config-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-config-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'config-type))
      (common-lisp:list
       (common-lisp:cons "ConfigType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'config-file))
      (common-lisp:list
       (common-lisp:cons "ConfigFile"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'config-cred))
      (common-lisp:list
       (common-lisp:cons "ConfigCred"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-config-response))
   common-lisp:nil))
(common-lisp:deftype hapg-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype hapg-list () '(trivial-types:proper-list hapg-arn))
 (common-lisp:defun make-hapg-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list hapg-arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype hsm-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype hsm-list () '(trivial-types:proper-list hsm-arn))
 (common-lisp:defun make-hsm-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list hsm-arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype hsm-serial-number () 'common-lisp:string)
(common-lisp:deftype hsm-status () 'common-lisp:string)
(common-lisp:deftype iam-role-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition invalid-request-exception
     (cloudhsm-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'invalid-request-exception)))
(common-lisp:deftype ip-address () 'common-lisp:string)
(common-lisp:deftype label () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (list-available-zones-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-available-zones-request-")))
 (common-lisp:export
  (common-lisp:list 'list-available-zones-request
                    'make-list-available-zones-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-available-zones-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-available-zones-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-available-zones-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-available-zones-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-available-zones-response-"))
   (azlist common-lisp:nil :type (common-lisp:or azlist common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-available-zones-response
                    'make-list-available-zones-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-available-zones-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-available-zones-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'azlist))
      (common-lisp:list
       (common-lisp:cons "AZList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-available-zones-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-hapgs-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-hapgs-request-"))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-hapgs-request 'make-list-hapgs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-hapgs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-hapgs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-hapgs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-hapgs-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-hapgs-response-"))
   (hapg-list (common-lisp:error ":hapg-list is required") :type
    (common-lisp:or hapg-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-hapgs-response 'make-list-hapgs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-hapgs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-hapgs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hapg-list))
      (common-lisp:list
       (common-lisp:cons "HapgList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-hapgs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-hsms-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-hsms-request-"))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-hsms-request 'make-list-hsms-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-hsms-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-hsms-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-hsms-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-hsms-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-hsms-response-"))
   (hsm-list common-lisp:nil :type (common-lisp:or hsm-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-hsms-response 'make-list-hsms-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-hsms-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-hsms-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hsm-list))
      (common-lisp:list
       (common-lisp:cons "HsmList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-hsms-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-luna-clients-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-luna-clients-request-"))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-luna-clients-request
                    'make-list-luna-clients-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-luna-clients-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-luna-clients-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-luna-clients-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-luna-clients-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-luna-clients-response-"))
   (client-list (common-lisp:error ":client-list is required") :type
    (common-lisp:or client-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-luna-clients-response
                    'make-list-luna-clients-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-luna-clients-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-luna-clients-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-list))
      (common-lisp:list
       (common-lisp:cons "ClientList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-luna-clients-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-response-"))
   (tag-list (common-lisp:error ":tag-list is required") :type
    (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-list))
      (common-lisp:list
       (common-lisp:cons "TagList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (modify-hapg-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-modify-hapg-request-"))
   (hapg-arn (common-lisp:error ":hapg-arn is required") :type
    (common-lisp:or hapg-arn common-lisp:null))
   (label common-lisp:nil :type (common-lisp:or label common-lisp:null))
   (partition-serial-list common-lisp:nil :type
    (common-lisp:or partition-serial-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'modify-hapg-request 'make-modify-hapg-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input modify-hapg-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input modify-hapg-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hapg-arn))
      (common-lisp:list
       (common-lisp:cons "HapgArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'label))
      (common-lisp:list
       (common-lisp:cons "Label"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'partition-serial-list))
      (common-lisp:list
       (common-lisp:cons "PartitionSerialList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input modify-hapg-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (modify-hapg-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-modify-hapg-response-"))
   (hapg-arn common-lisp:nil :type (common-lisp:or hapg-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'modify-hapg-response 'make-modify-hapg-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input modify-hapg-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input modify-hapg-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hapg-arn))
      (common-lisp:list
       (common-lisp:cons "HapgArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input modify-hapg-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (modify-hsm-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-modify-hsm-request-"))
   (hsm-arn (common-lisp:error ":hsm-arn is required") :type
    (common-lisp:or hsm-arn common-lisp:null))
   (subnet-id common-lisp:nil :type
    (common-lisp:or subnet-id common-lisp:null))
   (eni-ip common-lisp:nil :type (common-lisp:or ip-address common-lisp:null))
   (iam-role-arn common-lisp:nil :type
    (common-lisp:or iam-role-arn common-lisp:null))
   (external-id common-lisp:nil :type
    (common-lisp:or external-id common-lisp:null))
   (syslog-ip common-lisp:nil :type
    (common-lisp:or ip-address common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'modify-hsm-request 'make-modify-hsm-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input modify-hsm-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input modify-hsm-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hsm-arn))
      (common-lisp:list
       (common-lisp:cons "HsmArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-id))
      (common-lisp:list
       (common-lisp:cons "SubnetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'eni-ip))
      (common-lisp:list
       (common-lisp:cons "EniIp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iam-role-arn))
      (common-lisp:list
       (common-lisp:cons "IamRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'external-id))
      (common-lisp:list
       (common-lisp:cons "ExternalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'syslog-ip))
      (common-lisp:list
       (common-lisp:cons "SyslogIp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input modify-hsm-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (modify-hsm-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-modify-hsm-response-"))
   (hsm-arn common-lisp:nil :type (common-lisp:or hsm-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'modify-hsm-response 'make-modify-hsm-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input modify-hsm-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input modify-hsm-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hsm-arn))
      (common-lisp:list
       (common-lisp:cons "HsmArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input modify-hsm-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (modify-luna-client-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-modify-luna-client-request-"))
   (client-arn (common-lisp:error ":client-arn is required") :type
    (common-lisp:or client-arn common-lisp:null))
   (certificate (common-lisp:error ":certificate is required") :type
    (common-lisp:or certificate common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'modify-luna-client-request
                    'make-modify-luna-client-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          modify-luna-client-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          modify-luna-client-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-arn))
      (common-lisp:list
       (common-lisp:cons "ClientArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate))
      (common-lisp:list
       (common-lisp:cons "Certificate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          modify-luna-client-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (modify-luna-client-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-modify-luna-client-response-"))
   (client-arn common-lisp:nil :type
    (common-lisp:or client-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'modify-luna-client-response
                    'make-modify-luna-client-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          modify-luna-client-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          modify-luna-client-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-arn))
      (common-lisp:list
       (common-lisp:cons "ClientArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          modify-luna-client-response))
   common-lisp:nil))
(common-lisp:deftype pagination-token () 'common-lisp:string)
(common-lisp:deftype partition-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype partition-list ()
   '(trivial-types:proper-list partition-arn))
 (common-lisp:defun make-partition-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list partition-arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype partition-serial () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype partition-serial-list ()
   '(trivial-types:proper-list partition-serial))
 (common-lisp:defun make-partition-serial-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list partition-serial))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (remove-tags-from-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-remove-tags-from-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or string common-lisp:null))
   (tag-key-list (common-lisp:error ":tag-key-list is required") :type
    (common-lisp:or tag-key-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-tags-from-resource-request
                    'make-remove-tags-from-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          remove-tags-from-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          remove-tags-from-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-key-list))
      (common-lisp:list
       (common-lisp:cons "TagKeyList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          remove-tags-from-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (remove-tags-from-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-remove-tags-from-resource-response-"))
   (status (common-lisp:error ":status is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-tags-from-resource-response
                    'make-remove-tags-from-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          remove-tags-from-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          remove-tags-from-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          remove-tags-from-resource-response))
   common-lisp:nil))
(common-lisp:deftype ssh-key () 'common-lisp:string)
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:deftype subnet-id () 'common-lisp:string)
(common-lisp:deftype subscription-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (tag (:copier common-lisp:nil) (:conc-name "struct-shape-tag-"))
   (key (common-lisp:error ":key is required") :type
    (common-lisp:or tag-key common-lisp:null))
   (value (common-lisp:error ":value is required") :type
    (common-lisp:or tag-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag))
   common-lisp:nil))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun make-tag-key-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun make-tag-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:deftype vpc-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun add-tags-to-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-list)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-list))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-add-tags-to-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudhsm-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AddTagsToResource"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'add-tags-to-resource))
(common-lisp:progn
 (common-lisp:defun create-hapg
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key label)
   (common-lisp:declare (common-lisp:ignorable label))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-hapg-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudhsm-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateHapg"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-hapg))
(common-lisp:progn
 (common-lisp:defun create-hsm
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key subnet-id ssh-key eni-ip iam-role-arn
                     external-id subscription-type client-token syslog-ip)
   (common-lisp:declare
    (common-lisp:ignorable subnet-id ssh-key eni-ip iam-role-arn external-id
     subscription-type client-token syslog-ip))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-hsm-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudhsm-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateHsm"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-hsm))
(common-lisp:progn
 (common-lisp:defun create-luna-client
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key label certificate)
   (common-lisp:declare (common-lisp:ignorable label certificate))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-luna-client-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudhsm-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateLunaClient"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-luna-client))
(common-lisp:progn
 (common-lisp:defun delete-hapg
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hapg-arn)
   (common-lisp:declare (common-lisp:ignorable hapg-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-hapg-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudhsm-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteHapg"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-hapg))
(common-lisp:progn
 (common-lisp:defun delete-hsm
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hsm-arn)
   (common-lisp:declare (common-lisp:ignorable hsm-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-hsm-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudhsm-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteHsm"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-hsm))
(common-lisp:progn
 (common-lisp:defun delete-luna-client
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-arn)
   (common-lisp:declare (common-lisp:ignorable client-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-luna-client-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudhsm-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteLunaClient"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-luna-client))
(common-lisp:progn
 (common-lisp:defun describe-hapg
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hapg-arn)
   (common-lisp:declare (common-lisp:ignorable hapg-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-hapg-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudhsm-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeHapg"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-hapg))
(common-lisp:progn
 (common-lisp:defun describe-hsm
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hsm-arn hsm-serial-number)
   (common-lisp:declare (common-lisp:ignorable hsm-arn hsm-serial-number))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-hsm-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudhsm-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeHsm"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-hsm))
(common-lisp:progn
 (common-lisp:defun describe-luna-client
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-arn certificate-fingerprint)
   (common-lisp:declare
    (common-lisp:ignorable client-arn certificate-fingerprint))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-luna-client-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudhsm-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeLunaClient"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-luna-client))
(common-lisp:progn
 (common-lisp:defun get-config
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-arn client-version hapg-list)
   (common-lisp:declare
    (common-lisp:ignorable client-arn client-version hapg-list))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-config-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudhsm-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetConfig"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-config))
(common-lisp:progn
 (common-lisp:defun list-available-zones ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'cloudhsm-request :method "POST" :path "/"
                                :operation "ListAvailableZones"))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'list-available-zones))
(common-lisp:progn
 (common-lisp:defun list-hapgs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token)
   (common-lisp:declare (common-lisp:ignorable next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-hapgs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudhsm-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListHapgs"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-hapgs))
(common-lisp:progn
 (common-lisp:defun list-hsms
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token)
   (common-lisp:declare (common-lisp:ignorable next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-hsms-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudhsm-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/" "ListHsms"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-hsms))
(common-lisp:progn
 (common-lisp:defun list-luna-clients
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token)
   (common-lisp:declare (common-lisp:ignorable next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-luna-clients-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudhsm-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListLunaClients"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-luna-clients))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudhsm-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListTagsForResource"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun modify-hapg
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hapg-arn label partition-serial-list)
   (common-lisp:declare
    (common-lisp:ignorable hapg-arn label partition-serial-list))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-modify-hapg-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudhsm-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ModifyHapg"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'modify-hapg))
(common-lisp:progn
 (common-lisp:defun modify-hsm
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hsm-arn subnet-id eni-ip iam-role-arn
                     external-id syslog-ip)
   (common-lisp:declare
    (common-lisp:ignorable hsm-arn subnet-id eni-ip iam-role-arn external-id
     syslog-ip))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-modify-hsm-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudhsm-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ModifyHsm"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'modify-hsm))
(common-lisp:progn
 (common-lisp:defun modify-luna-client
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-arn certificate)
   (common-lisp:declare (common-lisp:ignorable client-arn certificate))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-modify-luna-client-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudhsm-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ModifyLunaClient"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'modify-luna-client))
(common-lisp:progn
 (common-lisp:defun remove-tags-from-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-key-list)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-key-list))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-remove-tags-from-resource-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudhsm-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "RemoveTagsFromResource"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'remove-tags-from-resource))
