;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/iot-roborunner/api
  (:use)
  (:nicknames #:aws/iot-roborunner)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/iot-roborunner/api)
(common-lisp:progn
 (common-lisp:defclass iot-roborunner-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "iot-roborunner"))
 (common-lisp:export 'iot-roborunner-request))
(common-lisp:progn
 (common-lisp:define-condition iot-roborunner-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'iot-roborunner-error))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("ConflictException" . conflict-exception)
    ("InternalServerException" . internal-server-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceQuotaExceededException" . service-quota-exceeded-exception)
    ("ThrottlingException" . throttling-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (iot-roborunner-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       access-denied-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (cartesian-coordinates (:copier common-lisp:nil)
      (:conc-name "struct-shape-cartesian-coordinates-"))
   (x (common-lisp:error ":x is required") :type
    (common-lisp:or double common-lisp:null))
   (y (common-lisp:error ":y is required") :type
    (common-lisp:or double common-lisp:null))
   (z common-lisp:nil :type (common-lisp:or double common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cartesian-coordinates 'make-cartesian-coordinates))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cartesian-coordinates))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cartesian-coordinates))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'x))
      (common-lisp:list
       (common-lisp:cons "x"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'y))
      (common-lisp:list
       (common-lisp:cons "y"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'z))
      (common-lisp:list
       (common-lisp:cons "z"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cartesian-coordinates))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (iot-roborunner-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (create-destination-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-destination-request-"))
   (client-token common-lisp:nil :type
    (common-lisp:or idempotency-token common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or name common-lisp:null))
   (site (common-lisp:error ":site is required") :type
    (common-lisp:or site-generic-identifier common-lisp:null))
   (state common-lisp:nil :type
    (common-lisp:or destination-state common-lisp:null))
   (additional-fixed-properties common-lisp:nil :type
    (common-lisp:or destination-additional-fixed-properties common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-destination-request
                    'make-create-destination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-destination-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'site))
      (common-lisp:list
       (common-lisp:cons "site"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-fixed-properties))
      (common-lisp:list
       (common-lisp:cons "additionalFixedProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-destination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-destination-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-destination-response-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or destination-arn common-lisp:null))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or destination-id common-lisp:null))
   (created-at (common-lisp:error ":createdat is required") :type
    (common-lisp:or created-at-timestamp common-lisp:null))
   (updated-at (common-lisp:error ":updatedat is required") :type
    (common-lisp:or updated-at-timestamp common-lisp:null))
   (state (common-lisp:error ":state is required") :type
    (common-lisp:or destination-state common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-destination-response
                    'make-create-destination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-destination-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "updatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-destination-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-site-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-site-request-"))
   (client-token common-lisp:nil :type
    (common-lisp:or idempotency-token common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or name common-lisp:null))
   (country-code (common-lisp:error ":countrycode is required") :type
    (common-lisp:or site-country-code common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or site-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-site-request 'make-create-site-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-site-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-site-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'country-code))
      (common-lisp:list
       (common-lisp:cons "countryCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-site-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-site-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-site-response-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or site-arn common-lisp:null))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or site-id common-lisp:null))
   (created-at (common-lisp:error ":createdat is required") :type
    (common-lisp:or created-at-timestamp common-lisp:null))
   (updated-at (common-lisp:error ":updatedat is required") :type
    (common-lisp:or updated-at-timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-site-response 'make-create-site-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-site-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-site-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "updatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-site-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-worker-fleet-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-worker-fleet-request-"))
   (client-token common-lisp:nil :type
    (common-lisp:or idempotency-token common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or name common-lisp:null))
   (site (common-lisp:error ":site is required") :type
    (common-lisp:or site-generic-identifier common-lisp:null))
   (additional-fixed-properties common-lisp:nil :type
    (common-lisp:or worker-fleet-additional-fixed-properties
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-worker-fleet-request
                    'make-create-worker-fleet-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-worker-fleet-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-worker-fleet-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'site))
      (common-lisp:list
       (common-lisp:cons "site"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-fixed-properties))
      (common-lisp:list
       (common-lisp:cons "additionalFixedProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-worker-fleet-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-worker-fleet-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-worker-fleet-response-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or worker-fleet-arn common-lisp:null))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or worker-fleet-id common-lisp:null))
   (created-at (common-lisp:error ":createdat is required") :type
    (common-lisp:or created-at-timestamp common-lisp:null))
   (updated-at (common-lisp:error ":updatedat is required") :type
    (common-lisp:or updated-at-timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-worker-fleet-response
                    'make-create-worker-fleet-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-worker-fleet-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-worker-fleet-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "updatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-worker-fleet-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-worker-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-worker-request-"))
   (client-token common-lisp:nil :type
    (common-lisp:or idempotency-token common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or name common-lisp:null))
   (fleet (common-lisp:error ":fleet is required") :type
    (common-lisp:or worker-fleet-generic-identifier common-lisp:null))
   (additional-transient-properties common-lisp:nil :type
    (common-lisp:or worker-additional-transient-properties-json
                    common-lisp:null))
   (additional-fixed-properties common-lisp:nil :type
    (common-lisp:or worker-additional-fixed-properties-json common-lisp:null))
   (vendor-properties common-lisp:nil :type
    (common-lisp:or vendor-properties common-lisp:null))
   (position common-lisp:nil :type
    (common-lisp:or position-coordinates common-lisp:null))
   (orientation common-lisp:nil :type
    (common-lisp:or orientation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-worker-request 'make-create-worker-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-worker-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-worker-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fleet))
      (common-lisp:list
       (common-lisp:cons "fleet"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-transient-properties))
      (common-lisp:list
       (common-lisp:cons "additionalTransientProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-fixed-properties))
      (common-lisp:list
       (common-lisp:cons "additionalFixedProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vendor-properties))
      (common-lisp:list
       (common-lisp:cons "vendorProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'orientation))
      (common-lisp:list
       (common-lisp:cons "orientation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-worker-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-worker-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-worker-response-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or worker-arn common-lisp:null))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or worker-id common-lisp:null))
   (created-at (common-lisp:error ":createdat is required") :type
    (common-lisp:or created-at-timestamp common-lisp:null))
   (updated-at (common-lisp:error ":updatedat is required") :type
    (common-lisp:or updated-at-timestamp common-lisp:null))
   (site (common-lisp:error ":site is required") :type
    (common-lisp:or site-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-worker-response 'make-create-worker-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-worker-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-worker-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "updatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'site))
      (common-lisp:list
       (common-lisp:cons "site"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-worker-response))
   common-lisp:nil))
(common-lisp:deftype created-at-timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (delete-destination-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-destination-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or destination-generic-identifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-destination-request
                    'make-delete-destination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-destination-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-destination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-destination-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-destination-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-destination-response
                    'make-delete-destination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-destination-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-site-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-site-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or site-generic-identifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-site-request 'make-delete-site-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-site-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-site-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-site-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-site-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-site-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-site-response 'make-delete-site-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-site-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-site-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-site-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-worker-fleet-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-worker-fleet-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or worker-fleet-generic-identifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-worker-fleet-request
                    'make-delete-worker-fleet-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-worker-fleet-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-worker-fleet-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-worker-fleet-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-worker-fleet-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-worker-fleet-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-worker-fleet-response
                    'make-delete-worker-fleet-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-worker-fleet-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-worker-fleet-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-worker-fleet-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-worker-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-worker-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or worker-generic-identifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-worker-request 'make-delete-worker-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-worker-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-worker-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-worker-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-worker-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-worker-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-worker-response 'make-delete-worker-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-worker-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-worker-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-worker-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (destination (:copier common-lisp:nil)
      (:conc-name "struct-shape-destination-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or destination-arn common-lisp:null))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or destination-id common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or name common-lisp:null))
   (site (common-lisp:error ":site is required") :type
    (common-lisp:or site-arn common-lisp:null))
   (created-at (common-lisp:error ":createdat is required") :type
    (common-lisp:or created-at-timestamp common-lisp:null))
   (updated-at (common-lisp:error ":updatedat is required") :type
    (common-lisp:or updated-at-timestamp common-lisp:null))
   (state (common-lisp:error ":state is required") :type
    (common-lisp:or destination-state common-lisp:null))
   (additional-fixed-properties common-lisp:nil :type
    (common-lisp:or destination-additional-fixed-properties common-lisp:null)))
 (common-lisp:export (common-lisp:list 'destination 'make-destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'site))
      (common-lisp:list
       (common-lisp:cons "site"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "updatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-fixed-properties))
      (common-lisp:list
       (common-lisp:cons "additionalFixedProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input destination))
   common-lisp:nil))
(common-lisp:deftype destination-additional-fixed-properties ()
  'common-lisp:string)
(common-lisp:deftype destination-arn () 'common-lisp:string)
(common-lisp:deftype destination-generic-identifier () 'common-lisp:string)
(common-lisp:deftype destination-id () 'common-lisp:string)
(common-lisp:deftype destination-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype destinations () '(trivial-types:proper-list destination))
 (common-lisp:defun |make-destinations|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list destination))
   aws-sdk/generator/shape::members))
(common-lisp:deftype double () 'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:defstruct
     (get-destination-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-destination-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or destination-generic-identifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-destination-request 'make-get-destination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-destination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-destination-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-destination-response-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or destination-arn common-lisp:null))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or destination-id common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or name common-lisp:null))
   (site (common-lisp:error ":site is required") :type
    (common-lisp:or site-arn common-lisp:null))
   (created-at (common-lisp:error ":createdat is required") :type
    (common-lisp:or created-at-timestamp common-lisp:null))
   (updated-at (common-lisp:error ":updatedat is required") :type
    (common-lisp:or updated-at-timestamp common-lisp:null))
   (state (common-lisp:error ":state is required") :type
    (common-lisp:or destination-state common-lisp:null))
   (additional-fixed-properties common-lisp:nil :type
    (common-lisp:or destination-additional-fixed-properties common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-destination-response 'make-get-destination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-destination-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'site))
      (common-lisp:list
       (common-lisp:cons "site"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "updatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-fixed-properties))
      (common-lisp:list
       (common-lisp:cons "additionalFixedProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-destination-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-site-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-site-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or site-generic-identifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-site-request 'make-get-site-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-site-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-site-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-site-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-site-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-site-response-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or site-arn common-lisp:null))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or site-id common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or name common-lisp:null))
   (country-code (common-lisp:error ":countrycode is required") :type
    (common-lisp:or site-country-code common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or site-description common-lisp:null))
   (created-at (common-lisp:error ":createdat is required") :type
    (common-lisp:or created-at-timestamp common-lisp:null))
   (updated-at (common-lisp:error ":updatedat is required") :type
    (common-lisp:or updated-at-timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-site-response 'make-get-site-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-site-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-site-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'country-code))
      (common-lisp:list
       (common-lisp:cons "countryCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "updatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-site-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-worker-fleet-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-worker-fleet-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or worker-fleet-generic-identifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-worker-fleet-request 'make-get-worker-fleet-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-worker-fleet-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-worker-fleet-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-worker-fleet-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-worker-fleet-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-worker-fleet-response-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or worker-fleet-id common-lisp:null))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or worker-fleet-arn common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or name common-lisp:null))
   (site (common-lisp:error ":site is required") :type
    (common-lisp:or site-arn common-lisp:null))
   (created-at (common-lisp:error ":createdat is required") :type
    (common-lisp:or created-at-timestamp common-lisp:null))
   (updated-at (common-lisp:error ":updatedat is required") :type
    (common-lisp:or updated-at-timestamp common-lisp:null))
   (additional-fixed-properties common-lisp:nil :type
    (common-lisp:or worker-fleet-additional-fixed-properties
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-worker-fleet-response
                    'make-get-worker-fleet-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-worker-fleet-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-worker-fleet-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'site))
      (common-lisp:list
       (common-lisp:cons "site"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "updatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-fixed-properties))
      (common-lisp:list
       (common-lisp:cons "additionalFixedProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-worker-fleet-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-worker-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-worker-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or worker-generic-identifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-worker-request 'make-get-worker-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-worker-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-worker-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-worker-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-worker-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-worker-response-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or worker-arn common-lisp:null))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or worker-id common-lisp:null))
   (fleet (common-lisp:error ":fleet is required") :type
    (common-lisp:or worker-fleet-arn common-lisp:null))
   (site (common-lisp:error ":site is required") :type
    (common-lisp:or site-arn common-lisp:null))
   (created-at (common-lisp:error ":createdat is required") :type
    (common-lisp:or created-at-timestamp common-lisp:null))
   (updated-at (common-lisp:error ":updatedat is required") :type
    (common-lisp:or updated-at-timestamp common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or name common-lisp:null))
   (additional-transient-properties common-lisp:nil :type
    (common-lisp:or worker-additional-transient-properties-json
                    common-lisp:null))
   (additional-fixed-properties common-lisp:nil :type
    (common-lisp:or worker-additional-fixed-properties-json common-lisp:null))
   (vendor-properties common-lisp:nil :type
    (common-lisp:or vendor-properties common-lisp:null))
   (position common-lisp:nil :type
    (common-lisp:or position-coordinates common-lisp:null))
   (orientation common-lisp:nil :type
    (common-lisp:or orientation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-worker-response 'make-get-worker-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-worker-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-worker-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fleet))
      (common-lisp:list
       (common-lisp:cons "fleet"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'site))
      (common-lisp:list
       (common-lisp:cons "site"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "updatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-transient-properties))
      (common-lisp:list
       (common-lisp:cons "additionalTransientProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-fixed-properties))
      (common-lisp:list
       (common-lisp:cons "additionalFixedProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vendor-properties))
      (common-lisp:list
       (common-lisp:cons "vendorProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'orientation))
      (common-lisp:list
       (common-lisp:cons "orientation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-worker-response))
   common-lisp:nil))
(common-lisp:deftype idempotency-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (iot-roborunner-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (list-destinations-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-destinations-request-"))
   (site (common-lisp:error ":site is required") :type
    (common-lisp:or site-generic-identifier common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or page-size common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (state common-lisp:nil :type
    (common-lisp:or destination-state common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-destinations-request
                    'make-list-destinations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-destinations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-destinations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-destinations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-destinations-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-destinations-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (destinations common-lisp:nil :type
    (common-lisp:or destinations common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-destinations-response
                    'make-list-destinations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-destinations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-destinations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destinations))
      (common-lisp:list
       (common-lisp:cons "destinations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-destinations-response))
   common-lisp:nil))
(common-lisp:deftype list-sites-page-size () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (list-sites-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-sites-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or list-sites-page-size common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-sites-request 'make-list-sites-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-sites-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-sites-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-sites-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-sites-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-sites-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (sites common-lisp:nil :type (common-lisp:or sites common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-sites-response 'make-list-sites-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-sites-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-sites-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sites))
      (common-lisp:list
       (common-lisp:cons "sites"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-sites-response))
   common-lisp:nil))
(common-lisp:deftype list-worker-fleets-page-size () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (list-worker-fleets-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-worker-fleets-request-"))
   (site (common-lisp:error ":site is required") :type
    (common-lisp:or site-generic-identifier common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or list-worker-fleets-page-size common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-worker-fleets-request
                    'make-list-worker-fleets-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-worker-fleets-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-worker-fleets-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-worker-fleets-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-worker-fleets-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-worker-fleets-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (worker-fleets common-lisp:nil :type
    (common-lisp:or worker-fleets common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-worker-fleets-response
                    'make-list-worker-fleets-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-worker-fleets-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-worker-fleets-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'worker-fleets))
      (common-lisp:list
       (common-lisp:cons "workerFleets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-worker-fleets-response))
   common-lisp:nil))
(common-lisp:deftype list-workers-page-size () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (list-workers-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-workers-request-"))
   (site (common-lisp:error ":site is required") :type
    (common-lisp:or site-generic-identifier common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or list-workers-page-size common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (fleet common-lisp:nil :type
    (common-lisp:or worker-fleet-generic-identifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-workers-request 'make-list-workers-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-workers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-workers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-workers-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-workers-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-workers-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (workers common-lisp:nil :type (common-lisp:or workers common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-workers-response 'make-list-workers-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-workers-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-workers-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'workers))
      (common-lisp:list
       (common-lisp:cons "workers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-workers-response))
   common-lisp:nil))
(common-lisp:deftype name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (orientation (:copier common-lisp:nil)
      (:conc-name "struct-shape-orientation-"))
   (degrees common-lisp:nil :type
    (common-lisp:or orientation-degrees-double common-lisp:null)))
 (common-lisp:export (common-lisp:list 'orientation 'make-orientation))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input orientation))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input orientation))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'degrees))
      (common-lisp:list
       (common-lisp:cons "degrees"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input orientation))
   common-lisp:nil))
(common-lisp:deftype orientation-degrees-double () 'common-lisp:double-float)
(common-lisp:deftype page-size () 'common-lisp:integer)
(common-lisp:deftype pagination-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (position-coordinates (:copier common-lisp:nil)
      (:conc-name "struct-shape-position-coordinates-"))
   (cartesian-coordinates common-lisp:nil :type
    (common-lisp:or cartesian-coordinates common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'position-coordinates 'make-position-coordinates))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input position-coordinates))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input position-coordinates))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cartesian-coordinates))
      (common-lisp:list
       (common-lisp:cons "cartesianCoordinates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input position-coordinates))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (iot-roborunner-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition service-quota-exceeded-exception
     (iot-roborunner-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-quota-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-quota-exceeded-exception
                    'service-quota-exceeded-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (site (:copier common-lisp:nil) (:conc-name "struct-shape-site-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or site-arn common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or name common-lisp:null))
   (country-code (common-lisp:error ":countrycode is required") :type
    (common-lisp:or site-country-code common-lisp:null))
   (created-at (common-lisp:error ":createdat is required") :type
    (common-lisp:or created-at-timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'site 'make-site))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input site))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input site))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'country-code))
      (common-lisp:list
       (common-lisp:cons "countryCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input site))
   common-lisp:nil))
(common-lisp:deftype site-arn () 'common-lisp:string)
(common-lisp:deftype site-country-code () 'common-lisp:string)
(common-lisp:deftype site-description () 'common-lisp:string)
(common-lisp:deftype site-generic-identifier () 'common-lisp:string)
(common-lisp:deftype site-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype sites () '(trivial-types:proper-list site))
 (common-lisp:defun |make-sites|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list site))
   aws-sdk/generator/shape::members))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (iot-roborunner-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       throttling-exception-message)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (update-destination-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-destination-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or destination-generic-identifier common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (state common-lisp:nil :type
    (common-lisp:or destination-state common-lisp:null))
   (additional-fixed-properties common-lisp:nil :type
    (common-lisp:or destination-additional-fixed-properties common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-destination-request
                    'make-update-destination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-destination-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-fixed-properties))
      (common-lisp:list
       (common-lisp:cons "additionalFixedProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-destination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-destination-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-destination-response-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or destination-arn common-lisp:null))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or destination-id common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or name common-lisp:null))
   (updated-at (common-lisp:error ":updatedat is required") :type
    (common-lisp:or updated-at-timestamp common-lisp:null))
   (state (common-lisp:error ":state is required") :type
    (common-lisp:or destination-state common-lisp:null))
   (additional-fixed-properties common-lisp:nil :type
    (common-lisp:or destination-additional-fixed-properties common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-destination-response
                    'make-update-destination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-destination-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "updatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-fixed-properties))
      (common-lisp:list
       (common-lisp:cons "additionalFixedProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-destination-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-site-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-site-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or site-generic-identifier common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (country-code common-lisp:nil :type
    (common-lisp:or site-country-code common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or site-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-site-request 'make-update-site-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-site-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-site-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'country-code))
      (common-lisp:list
       (common-lisp:cons "countryCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-site-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-site-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-site-response-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or site-arn common-lisp:null))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or site-id common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or name common-lisp:null))
   (country-code common-lisp:nil :type
    (common-lisp:or site-country-code common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or site-description common-lisp:null))
   (updated-at (common-lisp:error ":updatedat is required") :type
    (common-lisp:or updated-at-timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-site-response 'make-update-site-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-site-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-site-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'country-code))
      (common-lisp:list
       (common-lisp:cons "countryCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "updatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-site-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-worker-fleet-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-worker-fleet-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or worker-fleet-generic-identifier common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (additional-fixed-properties common-lisp:nil :type
    (common-lisp:or worker-fleet-additional-fixed-properties
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-worker-fleet-request
                    'make-update-worker-fleet-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-worker-fleet-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-worker-fleet-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-fixed-properties))
      (common-lisp:list
       (common-lisp:cons "additionalFixedProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-worker-fleet-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-worker-fleet-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-worker-fleet-response-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or worker-fleet-arn common-lisp:null))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or worker-fleet-id common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or name common-lisp:null))
   (updated-at (common-lisp:error ":updatedat is required") :type
    (common-lisp:or updated-at-timestamp common-lisp:null))
   (additional-fixed-properties common-lisp:nil :type
    (common-lisp:or worker-fleet-additional-fixed-properties
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-worker-fleet-response
                    'make-update-worker-fleet-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-worker-fleet-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-worker-fleet-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "updatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-fixed-properties))
      (common-lisp:list
       (common-lisp:cons "additionalFixedProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-worker-fleet-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-worker-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-worker-request-"))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or worker-generic-identifier common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (additional-transient-properties common-lisp:nil :type
    (common-lisp:or worker-additional-transient-properties-json
                    common-lisp:null))
   (additional-fixed-properties common-lisp:nil :type
    (common-lisp:or worker-additional-fixed-properties-json common-lisp:null))
   (vendor-properties common-lisp:nil :type
    (common-lisp:or vendor-properties common-lisp:null))
   (position common-lisp:nil :type
    (common-lisp:or position-coordinates common-lisp:null))
   (orientation common-lisp:nil :type
    (common-lisp:or orientation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-worker-request 'make-update-worker-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-worker-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-worker-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-transient-properties))
      (common-lisp:list
       (common-lisp:cons "additionalTransientProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-fixed-properties))
      (common-lisp:list
       (common-lisp:cons "additionalFixedProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vendor-properties))
      (common-lisp:list
       (common-lisp:cons "vendorProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'orientation))
      (common-lisp:list
       (common-lisp:cons "orientation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-worker-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-worker-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-worker-response-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or worker-arn common-lisp:null))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or worker-id common-lisp:null))
   (fleet (common-lisp:error ":fleet is required") :type
    (common-lisp:or worker-fleet-arn common-lisp:null))
   (updated-at (common-lisp:error ":updatedat is required") :type
    (common-lisp:or updated-at-timestamp common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or name common-lisp:null))
   (additional-transient-properties common-lisp:nil :type
    (common-lisp:or worker-additional-transient-properties-json
                    common-lisp:null))
   (additional-fixed-properties common-lisp:nil :type
    (common-lisp:or worker-additional-fixed-properties-json common-lisp:null))
   (orientation common-lisp:nil :type
    (common-lisp:or orientation common-lisp:null))
   (vendor-properties common-lisp:nil :type
    (common-lisp:or vendor-properties common-lisp:null))
   (position common-lisp:nil :type
    (common-lisp:or position-coordinates common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-worker-response 'make-update-worker-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-worker-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-worker-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fleet))
      (common-lisp:list
       (common-lisp:cons "fleet"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "updatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-transient-properties))
      (common-lisp:list
       (common-lisp:cons "additionalTransientProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-fixed-properties))
      (common-lisp:list
       (common-lisp:cons "additionalFixedProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'orientation))
      (common-lisp:list
       (common-lisp:cons "orientation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vendor-properties))
      (common-lisp:list
       (common-lisp:cons "vendorProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-worker-response))
   common-lisp:nil))
(common-lisp:deftype updated-at-timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (iot-roborunner-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       validation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-message)))
(common-lisp:deftype vendor-additional-fixed-properties-json ()
  'common-lisp:string)
(common-lisp:deftype vendor-additional-transient-properties-json ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (vendor-properties (:copier common-lisp:nil)
      (:conc-name "struct-shape-vendor-properties-"))
   (vendor-worker-id (common-lisp:error ":vendorworkerid is required") :type
    (common-lisp:or vendor-worker-id common-lisp:null))
   (vendor-worker-ip-address common-lisp:nil :type
    (common-lisp:or vendor-worker-ip-address common-lisp:null))
   (vendor-additional-transient-properties common-lisp:nil :type
    (common-lisp:or vendor-additional-transient-properties-json
                    common-lisp:null))
   (vendor-additional-fixed-properties common-lisp:nil :type
    (common-lisp:or vendor-additional-fixed-properties-json common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'vendor-properties 'make-vendor-properties))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input vendor-properties))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input vendor-properties))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vendor-worker-id))
      (common-lisp:list
       (common-lisp:cons "vendorWorkerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'vendor-worker-ip-address))
      (common-lisp:list
       (common-lisp:cons "vendorWorkerIpAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'vendor-additional-transient-properties))
      (common-lisp:list
       (common-lisp:cons "vendorAdditionalTransientProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'vendor-additional-fixed-properties))
      (common-lisp:list
       (common-lisp:cons "vendorAdditionalFixedProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input vendor-properties))
   common-lisp:nil))
(common-lisp:deftype vendor-worker-id () 'common-lisp:string)
(common-lisp:deftype vendor-worker-ip-address () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (worker (:copier common-lisp:nil) (:conc-name "struct-shape-worker-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or worker-arn common-lisp:null))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or worker-id common-lisp:null))
   (fleet (common-lisp:error ":fleet is required") :type
    (common-lisp:or worker-fleet-arn common-lisp:null))
   (created-at (common-lisp:error ":createdat is required") :type
    (common-lisp:or created-at-timestamp common-lisp:null))
   (updated-at (common-lisp:error ":updatedat is required") :type
    (common-lisp:or updated-at-timestamp common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or name common-lisp:null))
   (site (common-lisp:error ":site is required") :type
    (common-lisp:or site-arn common-lisp:null))
   (additional-transient-properties common-lisp:nil :type
    (common-lisp:or worker-additional-transient-properties-json
                    common-lisp:null))
   (additional-fixed-properties common-lisp:nil :type
    (common-lisp:or worker-additional-fixed-properties-json common-lisp:null))
   (vendor-properties common-lisp:nil :type
    (common-lisp:or vendor-properties common-lisp:null))
   (position common-lisp:nil :type
    (common-lisp:or position-coordinates common-lisp:null))
   (orientation common-lisp:nil :type
    (common-lisp:or orientation common-lisp:null)))
 (common-lisp:export (common-lisp:list 'worker 'make-worker))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input worker))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input worker))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fleet))
      (common-lisp:list
       (common-lisp:cons "fleet"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "updatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'site))
      (common-lisp:list
       (common-lisp:cons "site"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-transient-properties))
      (common-lisp:list
       (common-lisp:cons "additionalTransientProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-fixed-properties))
      (common-lisp:list
       (common-lisp:cons "additionalFixedProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vendor-properties))
      (common-lisp:list
       (common-lisp:cons "vendorProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'orientation))
      (common-lisp:list
       (common-lisp:cons "orientation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input worker))
   common-lisp:nil))
(common-lisp:deftype worker-additional-fixed-properties-json ()
  'common-lisp:string)
(common-lisp:deftype worker-additional-transient-properties-json ()
  'common-lisp:string)
(common-lisp:deftype worker-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (worker-fleet (:copier common-lisp:nil)
      (:conc-name "struct-shape-worker-fleet-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or worker-fleet-arn common-lisp:null))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or worker-fleet-id common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or name common-lisp:null))
   (site (common-lisp:error ":site is required") :type
    (common-lisp:or site-arn common-lisp:null))
   (created-at (common-lisp:error ":createdat is required") :type
    (common-lisp:or created-at-timestamp common-lisp:null))
   (updated-at (common-lisp:error ":updatedat is required") :type
    (common-lisp:or updated-at-timestamp common-lisp:null))
   (additional-fixed-properties common-lisp:nil :type
    (common-lisp:or worker-fleet-additional-fixed-properties
                    common-lisp:null)))
 (common-lisp:export (common-lisp:list 'worker-fleet 'make-worker-fleet))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input worker-fleet))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input worker-fleet))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'site))
      (common-lisp:list
       (common-lisp:cons "site"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "updatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-fixed-properties))
      (common-lisp:list
       (common-lisp:cons "additionalFixedProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input worker-fleet))
   common-lisp:nil))
(common-lisp:deftype worker-fleet-additional-fixed-properties ()
  'common-lisp:string)
(common-lisp:deftype worker-fleet-arn () 'common-lisp:string)
(common-lisp:deftype worker-fleet-generic-identifier () 'common-lisp:string)
(common-lisp:deftype worker-fleet-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype worker-fleets ()
   '(trivial-types:proper-list worker-fleet))
 (common-lisp:defun |make-worker-fleets|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list worker-fleet))
   aws-sdk/generator/shape::members))
(common-lisp:deftype worker-generic-identifier () 'common-lisp:string)
(common-lisp:deftype worker-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype workers () '(trivial-types:proper-list worker))
 (common-lisp:defun |make-workers|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list worker))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defun create-destination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token name site state
                     additional-fixed-properties)
   (common-lisp:declare
    (common-lisp:ignorable client-token name site state
     additional-fixed-properties))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-destination-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-roborunner-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/createDestination"
                                                        "CreateDestination"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-destination))
(common-lisp:progn
 (common-lisp:defun create-site
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token name country-code
                     description)
   (common-lisp:declare
    (common-lisp:ignorable client-token name country-code description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-site-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-roborunner-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/createSite"
                                                        "CreateSite"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-site))
(common-lisp:progn
 (common-lisp:defun create-worker
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token name fleet
                     additional-transient-properties
                     additional-fixed-properties vendor-properties position
                     orientation)
   (common-lisp:declare
    (common-lisp:ignorable client-token name fleet
     additional-transient-properties additional-fixed-properties
     vendor-properties position orientation))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-worker-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-roborunner-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/createWorker"
                                                        "CreateWorker"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-worker))
(common-lisp:progn
 (common-lisp:defun create-worker-fleet
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token name site
                     additional-fixed-properties)
   (common-lisp:declare
    (common-lisp:ignorable client-token name site additional-fixed-properties))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-worker-fleet-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-roborunner-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/createWorkerFleet"
                                                        "CreateWorkerFleet"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-worker-fleet))
(common-lisp:progn
 (common-lisp:defun delete-destination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-destination-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-roborunner-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/deleteDestination"
                                                        "DeleteDestination"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-destination))
(common-lisp:progn
 (common-lisp:defun delete-site
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-site-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-roborunner-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/deleteSite"
                                                        "DeleteSite"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-site))
(common-lisp:progn
 (common-lisp:defun delete-worker
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-worker-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-roborunner-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/deleteWorker"
                                                        "DeleteWorker"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-worker))
(common-lisp:progn
 (common-lisp:defun delete-worker-fleet
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-worker-fleet-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-roborunner-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/deleteWorkerFleet"
                                                        "DeleteWorkerFleet"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-worker-fleet))
(common-lisp:progn
 (common-lisp:defun get-destination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-destination-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-roborunner-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/getDestination"
                                                        "GetDestination"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-destination))
(common-lisp:progn
 (common-lisp:defun get-site
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-site-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-roborunner-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/getSite"
                                                        "GetSite"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-site))
(common-lisp:progn
 (common-lisp:defun get-worker
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-worker-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-roborunner-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/getWorker"
                                                        "GetWorker"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-worker))
(common-lisp:progn
 (common-lisp:defun get-worker-fleet
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-worker-fleet-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-roborunner-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/getWorkerFleet"
                                                        "GetWorkerFleet"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-worker-fleet))
(common-lisp:progn
 (common-lisp:defun list-destinations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key site max-results next-token state)
   (common-lisp:declare
    (common-lisp:ignorable site max-results next-token state))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-destinations-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-roborunner-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/listDestinations"
                                                        "ListDestinations"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-destinations))
(common-lisp:progn
 (common-lisp:defun list-sites
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-sites-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-roborunner-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/listSites"
                                                        "ListSites"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-sites))
(common-lisp:progn
 (common-lisp:defun list-worker-fleets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key site max-results next-token)
   (common-lisp:declare (common-lisp:ignorable site max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-worker-fleets-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-roborunner-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/listWorkerFleets"
                                                        "ListWorkerFleets"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-worker-fleets))
(common-lisp:progn
 (common-lisp:defun list-workers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key site max-results next-token fleet)
   (common-lisp:declare
    (common-lisp:ignorable site max-results next-token fleet))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-workers-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-roborunner-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/listWorkers"
                                                        "ListWorkers"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-workers))
(common-lisp:progn
 (common-lisp:defun update-destination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id name state
                     additional-fixed-properties)
   (common-lisp:declare
    (common-lisp:ignorable id name state additional-fixed-properties))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-destination-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-roborunner-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/updateDestination"
                                                        "UpdateDestination"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-destination))
(common-lisp:progn
 (common-lisp:defun update-site
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id name country-code description)
   (common-lisp:declare
    (common-lisp:ignorable id name country-code description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-site-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-roborunner-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/updateSite"
                                                        "UpdateSite"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-site))
(common-lisp:progn
 (common-lisp:defun update-worker
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id name additional-transient-properties
                     additional-fixed-properties vendor-properties position
                     orientation)
   (common-lisp:declare
    (common-lisp:ignorable id name additional-transient-properties
     additional-fixed-properties vendor-properties position orientation))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-worker-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-roborunner-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/updateWorker"
                                                        "UpdateWorker"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-worker))
(common-lisp:progn
 (common-lisp:defun update-worker-fleet
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id name additional-fixed-properties)
   (common-lisp:declare
    (common-lisp:ignorable id name additional-fixed-properties))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-worker-fleet-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-roborunner-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/updateWorkerFleet"
                                                        "UpdateWorkerFleet"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-worker-fleet))
