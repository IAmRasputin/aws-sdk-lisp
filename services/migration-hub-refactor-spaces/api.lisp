;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/migration-hub-refactor-spaces/api
  (:use)
  (:nicknames #:aws/migration-hub-refactor-spaces)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/migration-hub-refactor-spaces/api)
(common-lisp:progn
 (common-lisp:defclass migration-hub-refactor-spaces-request
                       (aws-sdk/request:request) common-lisp:nil
                       (:default-initargs :service
                        "migration-hub-refactor-spaces" :protocol :rest-json))
 (common-lisp:export 'migration-hub-refactor-spaces-request))
(common-lisp:progn
 (common-lisp:define-condition migration-hub-refactor-spaces-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'migration-hub-refactor-spaces-error))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("ConflictException" . conflict-exception)
    ("InternalServerException" . internal-server-exception)
    ("InvalidResourcePolicyException" . invalid-resource-policy-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceQuotaExceededException" . service-quota-exceeded-exception)
    ("ThrottlingException" . throttling-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (migration-hub-refactor-spaces-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       access-denied-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-message)))
(common-lisp:deftype account-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype additional-details () 'common-lisp:hash-table)
 (common-lisp:defun |make-additional-details|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype additional-details-key () 'common-lisp:string)
(common-lisp:deftype additional-details-value () 'common-lisp:string)
(common-lisp:deftype api-gateway-endpoint-type () 'common-lisp:string)
(common-lisp:deftype api-gateway-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass api-gateway-proxy-config common-lisp:nil
                       ((vpc-link-id :initarg :vpc-link-id :type
                         (common-lisp:or vpc-link-id common-lisp:null)
                         :accessor %api-gateway-proxy-config-vpc-link-id
                         :initform common-lisp:nil)
                        (stage-name :initarg :stage-name :type
                         (common-lisp:or stage-name common-lisp:null) :accessor
                         %api-gateway-proxy-config-stage-name :initform
                         common-lisp:nil)
                        (proxy-url :initarg :proxy-url :type
                         (common-lisp:or uri common-lisp:null) :accessor
                         %api-gateway-proxy-config-proxy-url :initform
                         common-lisp:nil)
                        (nlb-name :initarg :nlb-name :type
                         (common-lisp:or nlb-name common-lisp:null) :accessor
                         %api-gateway-proxy-config-nlb-name :initform
                         common-lisp:nil)
                        (nlb-arn :initarg :nlb-arn :type
                         (common-lisp:or nlb-arn common-lisp:null) :accessor
                         %api-gateway-proxy-config-nlb-arn :initform
                         common-lisp:nil)
                        (endpoint-type :initarg :endpoint-type :type
                         (common-lisp:or api-gateway-endpoint-type
                                         common-lisp:null)
                         :accessor %api-gateway-proxy-config-endpoint-type
                         :initform common-lisp:nil)
                        (api-gateway-id :initarg :api-gateway-id :type
                         (common-lisp:or api-gateway-id common-lisp:null)
                         :accessor %api-gateway-proxy-config-api-gateway-id
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'api-gateway-proxy-config 'make-api-gateway-proxy-config))
 (common-lisp:defun make-api-gateway-proxy-config
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key vpc-link-id stage-name proxy-url nlb-name
                     nlb-arn endpoint-type api-gateway-id)
   (common-lisp:apply #'common-lisp:make-instance 'api-gateway-proxy-config
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          api-gateway-proxy-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          api-gateway-proxy-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-gateway-id))
      (common-lisp:list
       (common-lisp:cons "ApiGatewayId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-type))
      (common-lisp:list
       (common-lisp:cons "EndpointType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'nlb-arn))
      (common-lisp:list
       (common-lisp:cons "NlbArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'nlb-name))
      (common-lisp:list
       (common-lisp:cons "NlbName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'proxy-url))
      (common-lisp:list
       (common-lisp:cons "ProxyUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-name))
      (common-lisp:list
       (common-lisp:cons "StageName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-link-id))
      (common-lisp:list
       (common-lisp:cons "VpcLinkId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          api-gateway-proxy-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass api-gateway-proxy-input common-lisp:nil
                       ((stage-name :initarg :stage-name :type
                         (common-lisp:or stage-name common-lisp:null) :accessor
                         %api-gateway-proxy-input-stage-name :initform
                         common-lisp:nil)
                        (endpoint-type :initarg :endpoint-type :type
                         (common-lisp:or api-gateway-endpoint-type
                                         common-lisp:null)
                         :accessor %api-gateway-proxy-input-endpoint-type
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'api-gateway-proxy-input 'make-api-gateway-proxy-input))
 (common-lisp:defun make-api-gateway-proxy-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key stage-name endpoint-type)
   (common-lisp:apply #'common-lisp:make-instance 'api-gateway-proxy-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          api-gateway-proxy-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          api-gateway-proxy-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-type))
      (common-lisp:list
       (common-lisp:cons "EndpointType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-name))
      (common-lisp:list
       (common-lisp:cons "StageName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          api-gateway-proxy-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass api-gateway-proxy-summary common-lisp:nil
                       ((vpc-link-id :initarg :vpc-link-id :type
                         (common-lisp:or vpc-link-id common-lisp:null)
                         :accessor %api-gateway-proxy-summary-vpc-link-id
                         :initform common-lisp:nil)
                        (stage-name :initarg :stage-name :type
                         (common-lisp:or stage-name common-lisp:null) :accessor
                         %api-gateway-proxy-summary-stage-name :initform
                         common-lisp:nil)
                        (proxy-url :initarg :proxy-url :type
                         (common-lisp:or uri common-lisp:null) :accessor
                         %api-gateway-proxy-summary-proxy-url :initform
                         common-lisp:nil)
                        (nlb-name :initarg :nlb-name :type
                         (common-lisp:or nlb-name common-lisp:null) :accessor
                         %api-gateway-proxy-summary-nlb-name :initform
                         common-lisp:nil)
                        (nlb-arn :initarg :nlb-arn :type
                         (common-lisp:or nlb-arn common-lisp:null) :accessor
                         %api-gateway-proxy-summary-nlb-arn :initform
                         common-lisp:nil)
                        (endpoint-type :initarg :endpoint-type :type
                         (common-lisp:or api-gateway-endpoint-type
                                         common-lisp:null)
                         :accessor %api-gateway-proxy-summary-endpoint-type
                         :initform common-lisp:nil)
                        (api-gateway-id :initarg :api-gateway-id :type
                         (common-lisp:or api-gateway-id common-lisp:null)
                         :accessor %api-gateway-proxy-summary-api-gateway-id
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'api-gateway-proxy-summary
                    'make-api-gateway-proxy-summary))
 (common-lisp:defun make-api-gateway-proxy-summary
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key vpc-link-id stage-name proxy-url nlb-name
                     nlb-arn endpoint-type api-gateway-id)
   (common-lisp:apply #'common-lisp:make-instance 'api-gateway-proxy-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          api-gateway-proxy-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          api-gateway-proxy-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-gateway-id))
      (common-lisp:list
       (common-lisp:cons "ApiGatewayId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-type))
      (common-lisp:list
       (common-lisp:cons "EndpointType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'nlb-arn))
      (common-lisp:list
       (common-lisp:cons "NlbArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'nlb-name))
      (common-lisp:list
       (common-lisp:cons "NlbName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'proxy-url))
      (common-lisp:list
       (common-lisp:cons "ProxyUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-name))
      (common-lisp:list
       (common-lisp:cons "StageName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-link-id))
      (common-lisp:list
       (common-lisp:cons "VpcLinkId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          api-gateway-proxy-summary))
   common-lisp:nil))
(common-lisp:deftype application-id () 'common-lisp:string)
(common-lisp:deftype application-name () 'common-lisp:string)
(common-lisp:deftype application-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype application-summaries ()
   '(trivial-types:proper-list application-summary))
 (common-lisp:defun |make-application-summaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list application-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass application-summary common-lisp:nil
                       ((vpc-id :initarg :vpc-id :type
                         (common-lisp:or vpc-id common-lisp:null) :accessor
                         %application-summary-vpc-id :initform common-lisp:nil)
                        (tags :initarg :tags :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %application-summary-tags :initform common-lisp:nil)
                        (state :initarg :state :type
                         (common-lisp:or application-state common-lisp:null)
                         :accessor %application-summary-state :initform
                         common-lisp:nil)
                        (proxy-type :initarg :proxy-type :type
                         (common-lisp:or proxy-type common-lisp:null) :accessor
                         %application-summary-proxy-type :initform
                         common-lisp:nil)
                        (owner-account-id :initarg :owner-account-id :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         %application-summary-owner-account-id :initform
                         common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or application-name common-lisp:null)
                         :accessor %application-summary-name :initform
                         common-lisp:nil)
                        (last-updated-time :initarg :last-updated-time :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %application-summary-last-updated-time :initform
                         common-lisp:nil)
                        (error :initarg :error :type
                         (common-lisp:or error-response common-lisp:null)
                         :accessor %application-summary-error :initform
                         common-lisp:nil)
                        (environment-id :initarg :environment-id :type
                         (common-lisp:or environment-id common-lisp:null)
                         :accessor %application-summary-environment-id
                         :initform common-lisp:nil)
                        (created-time :initarg :created-time :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %application-summary-created-time :initform
                         common-lisp:nil)
                        (created-by-account-id :initarg :created-by-account-id
                         :type (common-lisp:or account-id common-lisp:null)
                         :accessor %application-summary-created-by-account-id
                         :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %application-summary-arn :initform
                         common-lisp:nil)
                        (application-id :initarg :application-id :type
                         (common-lisp:or application-id common-lisp:null)
                         :accessor %application-summary-application-id
                         :initform common-lisp:nil)
                        (api-gateway-proxy :initarg :api-gateway-proxy :type
                         (common-lisp:or api-gateway-proxy-summary
                                         common-lisp:null)
                         :accessor %application-summary-api-gateway-proxy
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'application-summary 'make-application-summary))
 (common-lisp:defun make-application-summary
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key vpc-id tags state proxy-type
                     owner-account-id name last-updated-time error
                     environment-id created-time created-by-account-id arn
                     application-id api-gateway-proxy)
   (common-lisp:apply #'common-lisp:make-instance 'application-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input application-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input application-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-gateway-proxy))
      (common-lisp:list
       (common-lisp:cons "ApiGatewayProxy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'created-by-account-id))
      (common-lisp:list
       (common-lisp:cons "CreatedByAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-time))
      (common-lisp:list
       (common-lisp:cons "CreatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'environment-id))
      (common-lisp:list
       (common-lisp:cons "EnvironmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "Error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-time))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'owner-account-id))
      (common-lisp:list
       (common-lisp:cons "OwnerAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'proxy-type))
      (common-lisp:list
       (common-lisp:cons "ProxyType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-id))
      (common-lisp:list
       (common-lisp:cons "VpcId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input application-summary))
   common-lisp:nil))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:deftype cidr-block () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype cidr-blocks () '(trivial-types:proper-list cidr-block))
 (common-lisp:defun |make-cidr-blocks|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list cidr-block))
   aws-sdk/generator/shape::members))
(common-lisp:deftype client-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (migration-hub-refactor-spaces-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)
      (resource-id :initarg :resource-id :initform common-lisp:nil :reader
       conflict-exception-resource-id)
      (resource-type :initarg :resource-type :initform common-lisp:nil :reader
       conflict-exception-resource-type)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message
                    'conflict-exception-resource-id
                    'conflict-exception-resource-type)))
(common-lisp:progn
 (common-lisp:defclass create-application-request common-lisp:nil
                       ((vpc-id :initarg :vpc-id :type
                         (common-lisp:or vpc-id common-lisp:null) :accessor
                         %create-application-request-vpc-id :initform
                         (common-lisp:error ":vpc-id is required"))
                        (tags :initarg :tags :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %create-application-request-tags :initform
                         common-lisp:nil)
                        (proxy-type :initarg :proxy-type :type
                         (common-lisp:or proxy-type common-lisp:null) :accessor
                         %create-application-request-proxy-type :initform
                         (common-lisp:error ":proxy-type is required"))
                        (name :initarg :name :type
                         (common-lisp:or application-name common-lisp:null)
                         :accessor %create-application-request-name :initform
                         (common-lisp:error ":name is required"))
                        (environment-identifier :initarg
                         :environment-identifier :type
                         (common-lisp:or environment-id common-lisp:null)
                         :accessor
                         %create-application-request-environment-identifier
                         :initform
                         (common-lisp:error
                          ":environment-identifier is required"))
                        (client-token :initarg :client-token :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor %create-application-request-client-token
                         :initform common-lisp:nil)
                        (api-gateway-proxy :initarg :api-gateway-proxy :type
                         (common-lisp:or api-gateway-proxy-input
                                         common-lisp:null)
                         :accessor
                         %create-application-request-api-gateway-proxy
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-application-request
                    'make-create-application-request))
 (common-lisp:defun make-create-application-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key vpc-id tags proxy-type name
                     environment-identifier client-token api-gateway-proxy)
   (common-lisp:apply #'common-lisp:make-instance 'create-application-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-application-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-gateway-proxy))
      (common-lisp:list
       (common-lisp:cons "ApiGatewayProxy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'proxy-type))
      (common-lisp:list
       (common-lisp:cons "ProxyType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-id))
      (common-lisp:list
       (common-lisp:cons "VpcId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-application-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-application-response common-lisp:nil
                       ((vpc-id :initarg :vpc-id :type
                         (common-lisp:or vpc-id common-lisp:null) :accessor
                         %create-application-response-vpc-id :initform
                         common-lisp:nil)
                        (tags :initarg :tags :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %create-application-response-tags :initform
                         common-lisp:nil)
                        (state :initarg :state :type
                         (common-lisp:or application-state common-lisp:null)
                         :accessor %create-application-response-state :initform
                         common-lisp:nil)
                        (proxy-type :initarg :proxy-type :type
                         (common-lisp:or proxy-type common-lisp:null) :accessor
                         %create-application-response-proxy-type :initform
                         common-lisp:nil)
                        (owner-account-id :initarg :owner-account-id :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         %create-application-response-owner-account-id
                         :initform common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or application-name common-lisp:null)
                         :accessor %create-application-response-name :initform
                         common-lisp:nil)
                        (last-updated-time :initarg :last-updated-time :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %create-application-response-last-updated-time
                         :initform common-lisp:nil)
                        (environment-id :initarg :environment-id :type
                         (common-lisp:or environment-id common-lisp:null)
                         :accessor %create-application-response-environment-id
                         :initform common-lisp:nil)
                        (created-time :initarg :created-time :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %create-application-response-created-time :initform
                         common-lisp:nil)
                        (created-by-account-id :initarg :created-by-account-id
                         :type (common-lisp:or account-id common-lisp:null)
                         :accessor
                         %create-application-response-created-by-account-id
                         :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %create-application-response-arn :initform
                         common-lisp:nil)
                        (application-id :initarg :application-id :type
                         (common-lisp:or application-id common-lisp:null)
                         :accessor %create-application-response-application-id
                         :initform common-lisp:nil)
                        (api-gateway-proxy :initarg :api-gateway-proxy :type
                         (common-lisp:or api-gateway-proxy-input
                                         common-lisp:null)
                         :accessor
                         %create-application-response-api-gateway-proxy
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-application-response
                    'make-create-application-response))
 (common-lisp:defun make-create-application-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key vpc-id tags state proxy-type
                     owner-account-id name last-updated-time environment-id
                     created-time created-by-account-id arn application-id
                     api-gateway-proxy)
   (common-lisp:apply #'common-lisp:make-instance 'create-application-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-application-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-application-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-gateway-proxy))
      (common-lisp:list
       (common-lisp:cons "ApiGatewayProxy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'created-by-account-id))
      (common-lisp:list
       (common-lisp:cons "CreatedByAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-time))
      (common-lisp:list
       (common-lisp:cons "CreatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'environment-id))
      (common-lisp:list
       (common-lisp:cons "EnvironmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-time))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'owner-account-id))
      (common-lisp:list
       (common-lisp:cons "OwnerAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'proxy-type))
      (common-lisp:list
       (common-lisp:cons "ProxyType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-id))
      (common-lisp:list
       (common-lisp:cons "VpcId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-application-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-environment-request common-lisp:nil
                       ((tags :initarg :tags :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %create-environment-request-tags :initform
                         common-lisp:nil)
                        (network-fabric-type :initarg :network-fabric-type
                         :type
                         (common-lisp:or network-fabric-type common-lisp:null)
                         :accessor
                         %create-environment-request-network-fabric-type
                         :initform
                         (common-lisp:error
                          ":network-fabric-type is required"))
                        (name :initarg :name :type
                         (common-lisp:or environment-name common-lisp:null)
                         :accessor %create-environment-request-name :initform
                         (common-lisp:error ":name is required"))
                        (description :initarg :description :type
                         (common-lisp:or description common-lisp:null)
                         :accessor %create-environment-request-description
                         :initform common-lisp:nil)
                        (client-token :initarg :client-token :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor %create-environment-request-client-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-environment-request
                    'make-create-environment-request))
 (common-lisp:defun make-create-environment-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags network-fabric-type name description
                     client-token)
   (common-lisp:apply #'common-lisp:make-instance 'create-environment-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-environment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-environment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'network-fabric-type))
      (common-lisp:list
       (common-lisp:cons "NetworkFabricType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-environment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-environment-response common-lisp:nil
                       ((tags :initarg :tags :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %create-environment-response-tags :initform
                         common-lisp:nil)
                        (state :initarg :state :type
                         (common-lisp:or environment-state common-lisp:null)
                         :accessor %create-environment-response-state :initform
                         common-lisp:nil)
                        (owner-account-id :initarg :owner-account-id :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         %create-environment-response-owner-account-id
                         :initform common-lisp:nil)
                        (network-fabric-type :initarg :network-fabric-type
                         :type
                         (common-lisp:or network-fabric-type common-lisp:null)
                         :accessor
                         %create-environment-response-network-fabric-type
                         :initform common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or environment-name common-lisp:null)
                         :accessor %create-environment-response-name :initform
                         common-lisp:nil)
                        (last-updated-time :initarg :last-updated-time :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %create-environment-response-last-updated-time
                         :initform common-lisp:nil)
                        (environment-id :initarg :environment-id :type
                         (common-lisp:or environment-id common-lisp:null)
                         :accessor %create-environment-response-environment-id
                         :initform common-lisp:nil)
                        (description :initarg :description :type
                         (common-lisp:or description common-lisp:null)
                         :accessor %create-environment-response-description
                         :initform common-lisp:nil)
                        (created-time :initarg :created-time :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %create-environment-response-created-time :initform
                         common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %create-environment-response-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-environment-response
                    'make-create-environment-response))
 (common-lisp:defun make-create-environment-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags state owner-account-id
                     network-fabric-type name last-updated-time environment-id
                     description created-time arn)
   (common-lisp:apply #'common-lisp:make-instance 'create-environment-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-environment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-environment-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-time))
      (common-lisp:list
       (common-lisp:cons "CreatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'environment-id))
      (common-lisp:list
       (common-lisp:cons "EnvironmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-time))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'network-fabric-type))
      (common-lisp:list
       (common-lisp:cons "NetworkFabricType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'owner-account-id))
      (common-lisp:list
       (common-lisp:cons "OwnerAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-environment-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-route-request common-lisp:nil
                       ((uri-path-route :initarg :uri-path-route :type
                         (common-lisp:or uri-path-route-input common-lisp:null)
                         :accessor %create-route-request-uri-path-route
                         :initform common-lisp:nil)
                        (tags :initarg :tags :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %create-route-request-tags :initform common-lisp:nil)
                        (service-identifier :initarg :service-identifier :type
                         (common-lisp:or service-id common-lisp:null) :accessor
                         %create-route-request-service-identifier :initform
                         (common-lisp:error ":service-identifier is required"))
                        (route-type :initarg :route-type :type
                         (common-lisp:or route-type common-lisp:null) :accessor
                         %create-route-request-route-type :initform
                         (common-lisp:error ":route-type is required"))
                        (environment-identifier :initarg
                         :environment-identifier :type
                         (common-lisp:or environment-id common-lisp:null)
                         :accessor %create-route-request-environment-identifier
                         :initform
                         (common-lisp:error
                          ":environment-identifier is required"))
                        (default-route :initarg :default-route :type
                         (common-lisp:or default-route-input common-lisp:null)
                         :accessor %create-route-request-default-route
                         :initform common-lisp:nil)
                        (client-token :initarg :client-token :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor %create-route-request-client-token :initform
                         common-lisp:nil)
                        (application-identifier :initarg
                         :application-identifier :type
                         (common-lisp:or application-id common-lisp:null)
                         :accessor %create-route-request-application-identifier
                         :initform
                         (common-lisp:error
                          ":application-identifier is required"))))
 (common-lisp:export
  (common-lisp:list 'create-route-request 'make-create-route-request))
 (common-lisp:defun make-create-route-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key uri-path-route tags service-identifier
                     route-type environment-identifier default-route
                     client-token application-identifier)
   (common-lisp:apply #'common-lisp:make-instance 'create-route-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-route-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-route-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'default-route))
      (common-lisp:list
       (common-lisp:cons "DefaultRoute"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-type))
      (common-lisp:list
       (common-lisp:cons "RouteType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-identifier))
      (common-lisp:list
       (common-lisp:cons "ServiceIdentifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'uri-path-route))
      (common-lisp:list
       (common-lisp:cons "UriPathRoute"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-route-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-route-response common-lisp:nil
                       ((uri-path-route :initarg :uri-path-route :type
                         (common-lisp:or uri-path-route-input common-lisp:null)
                         :accessor %create-route-response-uri-path-route
                         :initform common-lisp:nil)
                        (tags :initarg :tags :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %create-route-response-tags :initform common-lisp:nil)
                        (state :initarg :state :type
                         (common-lisp:or route-state common-lisp:null)
                         :accessor %create-route-response-state :initform
                         common-lisp:nil)
                        (service-id :initarg :service-id :type
                         (common-lisp:or service-id common-lisp:null) :accessor
                         %create-route-response-service-id :initform
                         common-lisp:nil)
                        (route-type :initarg :route-type :type
                         (common-lisp:or route-type common-lisp:null) :accessor
                         %create-route-response-route-type :initform
                         common-lisp:nil)
                        (route-id :initarg :route-id :type
                         (common-lisp:or route-id common-lisp:null) :accessor
                         %create-route-response-route-id :initform
                         common-lisp:nil)
                        (owner-account-id :initarg :owner-account-id :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         %create-route-response-owner-account-id :initform
                         common-lisp:nil)
                        (last-updated-time :initarg :last-updated-time :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %create-route-response-last-updated-time :initform
                         common-lisp:nil)
                        (created-time :initarg :created-time :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %create-route-response-created-time :initform
                         common-lisp:nil)
                        (created-by-account-id :initarg :created-by-account-id
                         :type (common-lisp:or account-id common-lisp:null)
                         :accessor %create-route-response-created-by-account-id
                         :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %create-route-response-arn :initform
                         common-lisp:nil)
                        (application-id :initarg :application-id :type
                         (common-lisp:or application-id common-lisp:null)
                         :accessor %create-route-response-application-id
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-route-response 'make-create-route-response))
 (common-lisp:defun make-create-route-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key uri-path-route tags state service-id
                     route-type route-id owner-account-id last-updated-time
                     created-time created-by-account-id arn application-id)
   (common-lisp:apply #'common-lisp:make-instance 'create-route-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-route-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-route-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'created-by-account-id))
      (common-lisp:list
       (common-lisp:cons "CreatedByAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-time))
      (common-lisp:list
       (common-lisp:cons "CreatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-time))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'owner-account-id))
      (common-lisp:list
       (common-lisp:cons "OwnerAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-id))
      (common-lisp:list
       (common-lisp:cons "RouteId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-type))
      (common-lisp:list
       (common-lisp:cons "RouteType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-id))
      (common-lisp:list
       (common-lisp:cons "ServiceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'uri-path-route))
      (common-lisp:list
       (common-lisp:cons "UriPathRoute"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-route-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-service-request common-lisp:nil
                       ((vpc-id :initarg :vpc-id :type
                         (common-lisp:or vpc-id common-lisp:null) :accessor
                         %create-service-request-vpc-id :initform
                         common-lisp:nil)
                        (url-endpoint :initarg :url-endpoint :type
                         (common-lisp:or url-endpoint-input common-lisp:null)
                         :accessor %create-service-request-url-endpoint
                         :initform common-lisp:nil)
                        (tags :initarg :tags :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %create-service-request-tags :initform
                         common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or service-name common-lisp:null)
                         :accessor %create-service-request-name :initform
                         (common-lisp:error ":name is required"))
                        (lambda-endpoint :initarg :lambda-endpoint :type
                         (common-lisp:or lambda-endpoint-input
                                         common-lisp:null)
                         :accessor %create-service-request-lambda-endpoint
                         :initform common-lisp:nil)
                        (environment-identifier :initarg
                         :environment-identifier :type
                         (common-lisp:or environment-id common-lisp:null)
                         :accessor
                         %create-service-request-environment-identifier
                         :initform
                         (common-lisp:error
                          ":environment-identifier is required"))
                        (endpoint-type :initarg :endpoint-type :type
                         (common-lisp:or service-endpoint-type
                                         common-lisp:null)
                         :accessor %create-service-request-endpoint-type
                         :initform
                         (common-lisp:error ":endpoint-type is required"))
                        (description :initarg :description :type
                         (common-lisp:or description common-lisp:null)
                         :accessor %create-service-request-description
                         :initform common-lisp:nil)
                        (client-token :initarg :client-token :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor %create-service-request-client-token
                         :initform common-lisp:nil)
                        (application-identifier :initarg
                         :application-identifier :type
                         (common-lisp:or application-id common-lisp:null)
                         :accessor
                         %create-service-request-application-identifier
                         :initform
                         (common-lisp:error
                          ":application-identifier is required"))))
 (common-lisp:export
  (common-lisp:list 'create-service-request 'make-create-service-request))
 (common-lisp:defun make-create-service-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key vpc-id url-endpoint tags name
                     lambda-endpoint environment-identifier endpoint-type
                     description client-token application-identifier)
   (common-lisp:apply #'common-lisp:make-instance 'create-service-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-service-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-service-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-type))
      (common-lisp:list
       (common-lisp:cons "EndpointType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lambda-endpoint))
      (common-lisp:list
       (common-lisp:cons "LambdaEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'url-endpoint))
      (common-lisp:list
       (common-lisp:cons "UrlEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-id))
      (common-lisp:list
       (common-lisp:cons "VpcId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-service-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-service-response common-lisp:nil
                       ((vpc-id :initarg :vpc-id :type
                         (common-lisp:or vpc-id common-lisp:null) :accessor
                         %create-service-response-vpc-id :initform
                         common-lisp:nil)
                        (url-endpoint :initarg :url-endpoint :type
                         (common-lisp:or url-endpoint-input common-lisp:null)
                         :accessor %create-service-response-url-endpoint
                         :initform common-lisp:nil)
                        (tags :initarg :tags :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %create-service-response-tags :initform
                         common-lisp:nil)
                        (state :initarg :state :type
                         (common-lisp:or service-state common-lisp:null)
                         :accessor %create-service-response-state :initform
                         common-lisp:nil)
                        (service-id :initarg :service-id :type
                         (common-lisp:or service-id common-lisp:null) :accessor
                         %create-service-response-service-id :initform
                         common-lisp:nil)
                        (owner-account-id :initarg :owner-account-id :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         %create-service-response-owner-account-id :initform
                         common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or service-name common-lisp:null)
                         :accessor %create-service-response-name :initform
                         common-lisp:nil)
                        (last-updated-time :initarg :last-updated-time :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %create-service-response-last-updated-time :initform
                         common-lisp:nil)
                        (lambda-endpoint :initarg :lambda-endpoint :type
                         (common-lisp:or lambda-endpoint-input
                                         common-lisp:null)
                         :accessor %create-service-response-lambda-endpoint
                         :initform common-lisp:nil)
                        (environment-id :initarg :environment-id :type
                         (common-lisp:or environment-id common-lisp:null)
                         :accessor %create-service-response-environment-id
                         :initform common-lisp:nil)
                        (endpoint-type :initarg :endpoint-type :type
                         (common-lisp:or service-endpoint-type
                                         common-lisp:null)
                         :accessor %create-service-response-endpoint-type
                         :initform common-lisp:nil)
                        (description :initarg :description :type
                         (common-lisp:or description common-lisp:null)
                         :accessor %create-service-response-description
                         :initform common-lisp:nil)
                        (created-time :initarg :created-time :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %create-service-response-created-time :initform
                         common-lisp:nil)
                        (created-by-account-id :initarg :created-by-account-id
                         :type (common-lisp:or account-id common-lisp:null)
                         :accessor
                         %create-service-response-created-by-account-id
                         :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %create-service-response-arn :initform
                         common-lisp:nil)
                        (application-id :initarg :application-id :type
                         (common-lisp:or application-id common-lisp:null)
                         :accessor %create-service-response-application-id
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-service-response 'make-create-service-response))
 (common-lisp:defun make-create-service-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key vpc-id url-endpoint tags state service-id
                     owner-account-id name last-updated-time lambda-endpoint
                     environment-id endpoint-type description created-time
                     created-by-account-id arn application-id)
   (common-lisp:apply #'common-lisp:make-instance 'create-service-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-service-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-service-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'created-by-account-id))
      (common-lisp:list
       (common-lisp:cons "CreatedByAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-time))
      (common-lisp:list
       (common-lisp:cons "CreatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-type))
      (common-lisp:list
       (common-lisp:cons "EndpointType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'environment-id))
      (common-lisp:list
       (common-lisp:cons "EnvironmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lambda-endpoint))
      (common-lisp:list
       (common-lisp:cons "LambdaEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-time))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'owner-account-id))
      (common-lisp:list
       (common-lisp:cons "OwnerAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-id))
      (common-lisp:list
       (common-lisp:cons "ServiceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'url-endpoint))
      (common-lisp:list
       (common-lisp:cons "UrlEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-id))
      (common-lisp:list
       (common-lisp:cons "VpcId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-service-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass default-route-input common-lisp:nil
                       ((activation-state :initarg :activation-state :type
                         (common-lisp:or route-activation-state
                                         common-lisp:null)
                         :accessor %default-route-input-activation-state
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'default-route-input 'make-default-route-input))
 (common-lisp:defun make-default-route-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key activation-state)
   (common-lisp:apply #'common-lisp:make-instance 'default-route-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input default-route-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input default-route-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'activation-state))
      (common-lisp:list
       (common-lisp:cons "ActivationState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input default-route-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-application-request common-lisp:nil
                       ((environment-identifier :initarg
                         :environment-identifier :type
                         (common-lisp:or environment-id common-lisp:null)
                         :accessor
                         %delete-application-request-environment-identifier
                         :initform
                         (common-lisp:error
                          ":environment-identifier is required"))
                        (application-identifier :initarg
                         :application-identifier :type
                         (common-lisp:or application-id common-lisp:null)
                         :accessor
                         %delete-application-request-application-identifier
                         :initform
                         (common-lisp:error
                          ":application-identifier is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-application-request
                    'make-delete-application-request))
 (common-lisp:defun make-delete-application-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key environment-identifier
                     application-identifier)
   (common-lisp:apply #'common-lisp:make-instance 'delete-application-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-application-response common-lisp:nil
                       ((state :initarg :state :type
                         (common-lisp:or application-state common-lisp:null)
                         :accessor %delete-application-response-state :initform
                         common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or application-name common-lisp:null)
                         :accessor %delete-application-response-name :initform
                         common-lisp:nil)
                        (last-updated-time :initarg :last-updated-time :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %delete-application-response-last-updated-time
                         :initform common-lisp:nil)
                        (environment-id :initarg :environment-id :type
                         (common-lisp:or environment-id common-lisp:null)
                         :accessor %delete-application-response-environment-id
                         :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %delete-application-response-arn :initform
                         common-lisp:nil)
                        (application-id :initarg :application-id :type
                         (common-lisp:or application-id common-lisp:null)
                         :accessor %delete-application-response-application-id
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-application-response
                    'make-delete-application-response))
 (common-lisp:defun make-delete-application-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key state name last-updated-time
                     environment-id arn application-id)
   (common-lisp:apply #'common-lisp:make-instance 'delete-application-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'environment-id))
      (common-lisp:list
       (common-lisp:cons "EnvironmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-time))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-environment-request common-lisp:nil
                       ((environment-identifier :initarg
                         :environment-identifier :type
                         (common-lisp:or environment-id common-lisp:null)
                         :accessor
                         %delete-environment-request-environment-identifier
                         :initform
                         (common-lisp:error
                          ":environment-identifier is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-environment-request
                    'make-delete-environment-request))
 (common-lisp:defun make-delete-environment-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key environment-identifier)
   (common-lisp:apply #'common-lisp:make-instance 'delete-environment-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-environment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-environment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-environment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-environment-response common-lisp:nil
                       ((state :initarg :state :type
                         (common-lisp:or environment-state common-lisp:null)
                         :accessor %delete-environment-response-state :initform
                         common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or environment-name common-lisp:null)
                         :accessor %delete-environment-response-name :initform
                         common-lisp:nil)
                        (last-updated-time :initarg :last-updated-time :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %delete-environment-response-last-updated-time
                         :initform common-lisp:nil)
                        (environment-id :initarg :environment-id :type
                         (common-lisp:or environment-id common-lisp:null)
                         :accessor %delete-environment-response-environment-id
                         :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %delete-environment-response-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-environment-response
                    'make-delete-environment-response))
 (common-lisp:defun make-delete-environment-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key state name last-updated-time
                     environment-id arn)
   (common-lisp:apply #'common-lisp:make-instance 'delete-environment-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-environment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-environment-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'environment-id))
      (common-lisp:list
       (common-lisp:cons "EnvironmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-time))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-environment-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-resource-policy-request common-lisp:nil
                       ((identifier :initarg :identifier :type
                         (common-lisp:or resource-policy-identifier
                                         common-lisp:null)
                         :accessor %delete-resource-policy-request-identifier
                         :initform
                         (common-lisp:error ":identifier is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-resource-policy-request
                    'make-delete-resource-policy-request))
 (common-lisp:defun make-delete-resource-policy-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key identifier)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-resource-policy-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-resource-policy-response common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'delete-resource-policy-response
                    'make-delete-resource-policy-response))
 (common-lisp:defun make-delete-resource-policy-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-resource-policy-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-route-request common-lisp:nil
                       ((route-identifier :initarg :route-identifier :type
                         (common-lisp:or route-id common-lisp:null) :accessor
                         %delete-route-request-route-identifier :initform
                         (common-lisp:error ":route-identifier is required"))
                        (environment-identifier :initarg
                         :environment-identifier :type
                         (common-lisp:or environment-id common-lisp:null)
                         :accessor %delete-route-request-environment-identifier
                         :initform
                         (common-lisp:error
                          ":environment-identifier is required"))
                        (application-identifier :initarg
                         :application-identifier :type
                         (common-lisp:or application-id common-lisp:null)
                         :accessor %delete-route-request-application-identifier
                         :initform
                         (common-lisp:error
                          ":application-identifier is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-route-request 'make-delete-route-request))
 (common-lisp:defun make-delete-route-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key route-identifier environment-identifier
                     application-identifier)
   (common-lisp:apply #'common-lisp:make-instance 'delete-route-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-route-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-route-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-route-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-route-response common-lisp:nil
                       ((state :initarg :state :type
                         (common-lisp:or route-state common-lisp:null)
                         :accessor %delete-route-response-state :initform
                         common-lisp:nil)
                        (service-id :initarg :service-id :type
                         (common-lisp:or service-id common-lisp:null) :accessor
                         %delete-route-response-service-id :initform
                         common-lisp:nil)
                        (route-id :initarg :route-id :type
                         (common-lisp:or route-id common-lisp:null) :accessor
                         %delete-route-response-route-id :initform
                         common-lisp:nil)
                        (last-updated-time :initarg :last-updated-time :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %delete-route-response-last-updated-time :initform
                         common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %delete-route-response-arn :initform
                         common-lisp:nil)
                        (application-id :initarg :application-id :type
                         (common-lisp:or application-id common-lisp:null)
                         :accessor %delete-route-response-application-id
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-route-response 'make-delete-route-response))
 (common-lisp:defun make-delete-route-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key state service-id route-id
                     last-updated-time arn application-id)
   (common-lisp:apply #'common-lisp:make-instance 'delete-route-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-route-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-route-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-time))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-id))
      (common-lisp:list
       (common-lisp:cons "RouteId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-id))
      (common-lisp:list
       (common-lisp:cons "ServiceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-route-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-service-request common-lisp:nil
                       ((service-identifier :initarg :service-identifier :type
                         (common-lisp:or service-id common-lisp:null) :accessor
                         %delete-service-request-service-identifier :initform
                         (common-lisp:error ":service-identifier is required"))
                        (environment-identifier :initarg
                         :environment-identifier :type
                         (common-lisp:or environment-id common-lisp:null)
                         :accessor
                         %delete-service-request-environment-identifier
                         :initform
                         (common-lisp:error
                          ":environment-identifier is required"))
                        (application-identifier :initarg
                         :application-identifier :type
                         (common-lisp:or application-id common-lisp:null)
                         :accessor
                         %delete-service-request-application-identifier
                         :initform
                         (common-lisp:error
                          ":application-identifier is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-service-request 'make-delete-service-request))
 (common-lisp:defun make-delete-service-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key service-identifier environment-identifier
                     application-identifier)
   (common-lisp:apply #'common-lisp:make-instance 'delete-service-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-service-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-service-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-service-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-service-response common-lisp:nil
                       ((state :initarg :state :type
                         (common-lisp:or service-state common-lisp:null)
                         :accessor %delete-service-response-state :initform
                         common-lisp:nil)
                        (service-id :initarg :service-id :type
                         (common-lisp:or service-id common-lisp:null) :accessor
                         %delete-service-response-service-id :initform
                         common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or service-name common-lisp:null)
                         :accessor %delete-service-response-name :initform
                         common-lisp:nil)
                        (last-updated-time :initarg :last-updated-time :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %delete-service-response-last-updated-time :initform
                         common-lisp:nil)
                        (environment-id :initarg :environment-id :type
                         (common-lisp:or environment-id common-lisp:null)
                         :accessor %delete-service-response-environment-id
                         :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %delete-service-response-arn :initform
                         common-lisp:nil)
                        (application-id :initarg :application-id :type
                         (common-lisp:or application-id common-lisp:null)
                         :accessor %delete-service-response-application-id
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-service-response 'make-delete-service-response))
 (common-lisp:defun make-delete-service-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key state service-id name last-updated-time
                     environment-id arn application-id)
   (common-lisp:apply #'common-lisp:make-instance 'delete-service-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-service-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-service-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'environment-id))
      (common-lisp:list
       (common-lisp:cons "EnvironmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-time))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-id))
      (common-lisp:list
       (common-lisp:cons "ServiceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-service-response))
   common-lisp:nil))
(common-lisp:deftype description () 'common-lisp:string)
(common-lisp:deftype ec2tag-value () 'common-lisp:string)
(common-lisp:deftype environment-id () 'common-lisp:string)
(common-lisp:deftype environment-name () 'common-lisp:string)
(common-lisp:deftype environment-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype environment-summaries ()
   '(trivial-types:proper-list environment-summary))
 (common-lisp:defun |make-environment-summaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list environment-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass environment-summary common-lisp:nil
                       ((transit-gateway-id :initarg :transit-gateway-id :type
                         (common-lisp:or transit-gateway-id common-lisp:null)
                         :accessor %environment-summary-transit-gateway-id
                         :initform common-lisp:nil)
                        (tags :initarg :tags :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %environment-summary-tags :initform common-lisp:nil)
                        (state :initarg :state :type
                         (common-lisp:or environment-state common-lisp:null)
                         :accessor %environment-summary-state :initform
                         common-lisp:nil)
                        (owner-account-id :initarg :owner-account-id :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         %environment-summary-owner-account-id :initform
                         common-lisp:nil)
                        (network-fabric-type :initarg :network-fabric-type
                         :type
                         (common-lisp:or network-fabric-type common-lisp:null)
                         :accessor %environment-summary-network-fabric-type
                         :initform common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or environment-name common-lisp:null)
                         :accessor %environment-summary-name :initform
                         common-lisp:nil)
                        (last-updated-time :initarg :last-updated-time :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %environment-summary-last-updated-time :initform
                         common-lisp:nil)
                        (error :initarg :error :type
                         (common-lisp:or error-response common-lisp:null)
                         :accessor %environment-summary-error :initform
                         common-lisp:nil)
                        (environment-id :initarg :environment-id :type
                         (common-lisp:or environment-id common-lisp:null)
                         :accessor %environment-summary-environment-id
                         :initform common-lisp:nil)
                        (description :initarg :description :type
                         (common-lisp:or description common-lisp:null)
                         :accessor %environment-summary-description :initform
                         common-lisp:nil)
                        (created-time :initarg :created-time :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %environment-summary-created-time :initform
                         common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %environment-summary-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'environment-summary 'make-environment-summary))
 (common-lisp:defun make-environment-summary
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key transit-gateway-id tags state
                     owner-account-id network-fabric-type name
                     last-updated-time error environment-id description
                     created-time arn)
   (common-lisp:apply #'common-lisp:make-instance 'environment-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input environment-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input environment-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-time))
      (common-lisp:list
       (common-lisp:cons "CreatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'environment-id))
      (common-lisp:list
       (common-lisp:cons "EnvironmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "Error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-time))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'network-fabric-type))
      (common-lisp:list
       (common-lisp:cons "NetworkFabricType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'owner-account-id))
      (common-lisp:list
       (common-lisp:cons "OwnerAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'transit-gateway-id))
      (common-lisp:list
       (common-lisp:cons "TransitGatewayId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input environment-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass environment-vpc common-lisp:nil
                       ((vpc-name :initarg :vpc-name :type
                         (common-lisp:or ec2tag-value common-lisp:null)
                         :accessor %environment-vpc-vpc-name :initform
                         common-lisp:nil)
                        (vpc-id :initarg :vpc-id :type
                         (common-lisp:or vpc-id common-lisp:null) :accessor
                         %environment-vpc-vpc-id :initform common-lisp:nil)
                        (last-updated-time :initarg :last-updated-time :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %environment-vpc-last-updated-time :initform
                         common-lisp:nil)
                        (environment-id :initarg :environment-id :type
                         (common-lisp:or environment-id common-lisp:null)
                         :accessor %environment-vpc-environment-id :initform
                         common-lisp:nil)
                        (created-time :initarg :created-time :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %environment-vpc-created-time :initform
                         common-lisp:nil)
                        (cidr-blocks :initarg :cidr-blocks :type
                         (common-lisp:or cidr-blocks common-lisp:null)
                         :accessor %environment-vpc-cidr-blocks :initform
                         common-lisp:nil)
                        (account-id :initarg :account-id :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         %environment-vpc-account-id :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'environment-vpc 'make-environment-vpc))
 (common-lisp:defun make-environment-vpc
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key vpc-name vpc-id last-updated-time
                     environment-id created-time cidr-blocks account-id)
   (common-lisp:apply #'common-lisp:make-instance 'environment-vpc
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input environment-vpc))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input environment-vpc))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cidr-blocks))
      (common-lisp:list
       (common-lisp:cons "CidrBlocks"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-time))
      (common-lisp:list
       (common-lisp:cons "CreatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'environment-id))
      (common-lisp:list
       (common-lisp:cons "EnvironmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-time))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-id))
      (common-lisp:list
       (common-lisp:cons "VpcId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-name))
      (common-lisp:list
       (common-lisp:cons "VpcName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input environment-vpc))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype environment-vpcs ()
   '(trivial-types:proper-list environment-vpc))
 (common-lisp:defun |make-environment-vpcs|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list environment-vpc))
   aws-sdk/generator/shape::members))
(common-lisp:deftype error-code () 'common-lisp:string)
(common-lisp:deftype error-message () 'common-lisp:string)
(common-lisp:deftype error-resource-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass error-response common-lisp:nil
                       ((resource-type :initarg :resource-type :type
                         (common-lisp:or error-resource-type common-lisp:null)
                         :accessor %error-response-resource-type :initform
                         common-lisp:nil)
                        (resource-identifier :initarg :resource-identifier
                         :type
                         (common-lisp:or resource-identifier common-lisp:null)
                         :accessor %error-response-resource-identifier
                         :initform common-lisp:nil)
                        (message :initarg :message :type
                         (common-lisp:or error-message common-lisp:null)
                         :accessor %error-response-message :initform
                         common-lisp:nil)
                        (code :initarg :code :type
                         (common-lisp:or error-code common-lisp:null) :accessor
                         %error-response-code :initform common-lisp:nil)
                        (additional-details :initarg :additional-details :type
                         (common-lisp:or additional-details common-lisp:null)
                         :accessor %error-response-additional-details :initform
                         common-lisp:nil)
                        (account-id :initarg :account-id :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         %error-response-account-id :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'error-response 'make-error-response))
 (common-lisp:defun make-error-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-type resource-identifier message
                     code additional-details account-id)
   (common-lisp:apply #'common-lisp:make-instance 'error-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input error-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input error-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'additional-details))
      (common-lisp:list
       (common-lisp:cons "AdditionalDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'code))
      (common-lisp:list
       (common-lisp:cons "Code"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-identifier))
      (common-lisp:list
       (common-lisp:cons "ResourceIdentifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "ResourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input error-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-application-request common-lisp:nil
                       ((environment-identifier :initarg
                         :environment-identifier :type
                         (common-lisp:or environment-id common-lisp:null)
                         :accessor
                         %get-application-request-environment-identifier
                         :initform
                         (common-lisp:error
                          ":environment-identifier is required"))
                        (application-identifier :initarg
                         :application-identifier :type
                         (common-lisp:or application-id common-lisp:null)
                         :accessor
                         %get-application-request-application-identifier
                         :initform
                         (common-lisp:error
                          ":application-identifier is required"))))
 (common-lisp:export
  (common-lisp:list 'get-application-request 'make-get-application-request))
 (common-lisp:defun make-get-application-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key environment-identifier
                     application-identifier)
   (common-lisp:apply #'common-lisp:make-instance 'get-application-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-application-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-application-response common-lisp:nil
                       ((vpc-id :initarg :vpc-id :type
                         (common-lisp:or vpc-id common-lisp:null) :accessor
                         %get-application-response-vpc-id :initform
                         common-lisp:nil)
                        (tags :initarg :tags :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %get-application-response-tags :initform
                         common-lisp:nil)
                        (state :initarg :state :type
                         (common-lisp:or application-state common-lisp:null)
                         :accessor %get-application-response-state :initform
                         common-lisp:nil)
                        (proxy-type :initarg :proxy-type :type
                         (common-lisp:or proxy-type common-lisp:null) :accessor
                         %get-application-response-proxy-type :initform
                         common-lisp:nil)
                        (owner-account-id :initarg :owner-account-id :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         %get-application-response-owner-account-id :initform
                         common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or application-name common-lisp:null)
                         :accessor %get-application-response-name :initform
                         common-lisp:nil)
                        (last-updated-time :initarg :last-updated-time :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %get-application-response-last-updated-time :initform
                         common-lisp:nil)
                        (error :initarg :error :type
                         (common-lisp:or error-response common-lisp:null)
                         :accessor %get-application-response-error :initform
                         common-lisp:nil)
                        (environment-id :initarg :environment-id :type
                         (common-lisp:or environment-id common-lisp:null)
                         :accessor %get-application-response-environment-id
                         :initform common-lisp:nil)
                        (created-time :initarg :created-time :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %get-application-response-created-time :initform
                         common-lisp:nil)
                        (created-by-account-id :initarg :created-by-account-id
                         :type (common-lisp:or account-id common-lisp:null)
                         :accessor
                         %get-application-response-created-by-account-id
                         :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %get-application-response-arn :initform
                         common-lisp:nil)
                        (application-id :initarg :application-id :type
                         (common-lisp:or application-id common-lisp:null)
                         :accessor %get-application-response-application-id
                         :initform common-lisp:nil)
                        (api-gateway-proxy :initarg :api-gateway-proxy :type
                         (common-lisp:or api-gateway-proxy-config
                                         common-lisp:null)
                         :accessor %get-application-response-api-gateway-proxy
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-application-response 'make-get-application-response))
 (common-lisp:defun make-get-application-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key vpc-id tags state proxy-type
                     owner-account-id name last-updated-time error
                     environment-id created-time created-by-account-id arn
                     application-id api-gateway-proxy)
   (common-lisp:apply #'common-lisp:make-instance 'get-application-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-application-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-application-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-gateway-proxy))
      (common-lisp:list
       (common-lisp:cons "ApiGatewayProxy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'created-by-account-id))
      (common-lisp:list
       (common-lisp:cons "CreatedByAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-time))
      (common-lisp:list
       (common-lisp:cons "CreatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'environment-id))
      (common-lisp:list
       (common-lisp:cons "EnvironmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "Error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-time))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'owner-account-id))
      (common-lisp:list
       (common-lisp:cons "OwnerAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'proxy-type))
      (common-lisp:list
       (common-lisp:cons "ProxyType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-id))
      (common-lisp:list
       (common-lisp:cons "VpcId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-application-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-environment-request common-lisp:nil
                       ((environment-identifier :initarg
                         :environment-identifier :type
                         (common-lisp:or environment-id common-lisp:null)
                         :accessor
                         %get-environment-request-environment-identifier
                         :initform
                         (common-lisp:error
                          ":environment-identifier is required"))))
 (common-lisp:export
  (common-lisp:list 'get-environment-request 'make-get-environment-request))
 (common-lisp:defun make-get-environment-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key environment-identifier)
   (common-lisp:apply #'common-lisp:make-instance 'get-environment-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-environment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-environment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-environment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-environment-response common-lisp:nil
                       ((transit-gateway-id :initarg :transit-gateway-id :type
                         (common-lisp:or transit-gateway-id common-lisp:null)
                         :accessor %get-environment-response-transit-gateway-id
                         :initform common-lisp:nil)
                        (tags :initarg :tags :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %get-environment-response-tags :initform
                         common-lisp:nil)
                        (state :initarg :state :type
                         (common-lisp:or environment-state common-lisp:null)
                         :accessor %get-environment-response-state :initform
                         common-lisp:nil)
                        (owner-account-id :initarg :owner-account-id :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         %get-environment-response-owner-account-id :initform
                         common-lisp:nil)
                        (network-fabric-type :initarg :network-fabric-type
                         :type
                         (common-lisp:or network-fabric-type common-lisp:null)
                         :accessor
                         %get-environment-response-network-fabric-type
                         :initform common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or environment-name common-lisp:null)
                         :accessor %get-environment-response-name :initform
                         common-lisp:nil)
                        (last-updated-time :initarg :last-updated-time :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %get-environment-response-last-updated-time :initform
                         common-lisp:nil)
                        (error :initarg :error :type
                         (common-lisp:or error-response common-lisp:null)
                         :accessor %get-environment-response-error :initform
                         common-lisp:nil)
                        (environment-id :initarg :environment-id :type
                         (common-lisp:or environment-id common-lisp:null)
                         :accessor %get-environment-response-environment-id
                         :initform common-lisp:nil)
                        (description :initarg :description :type
                         (common-lisp:or description common-lisp:null)
                         :accessor %get-environment-response-description
                         :initform common-lisp:nil)
                        (created-time :initarg :created-time :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %get-environment-response-created-time :initform
                         common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %get-environment-response-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-environment-response 'make-get-environment-response))
 (common-lisp:defun make-get-environment-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key transit-gateway-id tags state
                     owner-account-id network-fabric-type name
                     last-updated-time error environment-id description
                     created-time arn)
   (common-lisp:apply #'common-lisp:make-instance 'get-environment-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-environment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-environment-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-time))
      (common-lisp:list
       (common-lisp:cons "CreatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'environment-id))
      (common-lisp:list
       (common-lisp:cons "EnvironmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "Error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-time))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'network-fabric-type))
      (common-lisp:list
       (common-lisp:cons "NetworkFabricType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'owner-account-id))
      (common-lisp:list
       (common-lisp:cons "OwnerAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'transit-gateway-id))
      (common-lisp:list
       (common-lisp:cons "TransitGatewayId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-environment-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-resource-policy-request common-lisp:nil
                       ((identifier :initarg :identifier :type
                         (common-lisp:or resource-policy-identifier
                                         common-lisp:null)
                         :accessor %get-resource-policy-request-identifier
                         :initform
                         (common-lisp:error ":identifier is required"))))
 (common-lisp:export
  (common-lisp:list 'get-resource-policy-request
                    'make-get-resource-policy-request))
 (common-lisp:defun make-get-resource-policy-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key identifier)
   (common-lisp:apply #'common-lisp:make-instance 'get-resource-policy-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-resource-policy-response common-lisp:nil
                       ((policy :initarg :policy :type
                         (common-lisp:or policy-string common-lisp:null)
                         :accessor %get-resource-policy-response-policy
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-resource-policy-response
                    'make-get-resource-policy-response))
 (common-lisp:defun make-get-resource-policy-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key policy)
   (common-lisp:apply #'common-lisp:make-instance 'get-resource-policy-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-policy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "Policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-route-request common-lisp:nil
                       ((route-identifier :initarg :route-identifier :type
                         (common-lisp:or route-id common-lisp:null) :accessor
                         %get-route-request-route-identifier :initform
                         (common-lisp:error ":route-identifier is required"))
                        (environment-identifier :initarg
                         :environment-identifier :type
                         (common-lisp:or environment-id common-lisp:null)
                         :accessor %get-route-request-environment-identifier
                         :initform
                         (common-lisp:error
                          ":environment-identifier is required"))
                        (application-identifier :initarg
                         :application-identifier :type
                         (common-lisp:or application-id common-lisp:null)
                         :accessor %get-route-request-application-identifier
                         :initform
                         (common-lisp:error
                          ":application-identifier is required"))))
 (common-lisp:export
  (common-lisp:list 'get-route-request 'make-get-route-request))
 (common-lisp:defun make-get-route-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key route-identifier environment-identifier
                     application-identifier)
   (common-lisp:apply #'common-lisp:make-instance 'get-route-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-route-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-route-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-route-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-route-response common-lisp:nil
                       ((tags :initarg :tags :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %get-route-response-tags :initform common-lisp:nil)
                        (state :initarg :state :type
                         (common-lisp:or route-state common-lisp:null)
                         :accessor %get-route-response-state :initform
                         common-lisp:nil)
                        (source-path :initarg :source-path :type
                         (common-lisp:or uri-path common-lisp:null) :accessor
                         %get-route-response-source-path :initform
                         common-lisp:nil)
                        (service-id :initarg :service-id :type
                         (common-lisp:or service-id common-lisp:null) :accessor
                         %get-route-response-service-id :initform
                         common-lisp:nil)
                        (route-type :initarg :route-type :type
                         (common-lisp:or route-type common-lisp:null) :accessor
                         %get-route-response-route-type :initform
                         common-lisp:nil)
                        (route-id :initarg :route-id :type
                         (common-lisp:or route-id common-lisp:null) :accessor
                         %get-route-response-route-id :initform
                         common-lisp:nil)
                        (path-resource-to-id :initarg :path-resource-to-id
                         :type
                         (common-lisp:or path-resource-to-id common-lisp:null)
                         :accessor %get-route-response-path-resource-to-id
                         :initform common-lisp:nil)
                        (owner-account-id :initarg :owner-account-id :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         %get-route-response-owner-account-id :initform
                         common-lisp:nil)
                        (methods :initarg :methods :type
                         (common-lisp:or http-methods common-lisp:null)
                         :accessor %get-route-response-methods :initform
                         common-lisp:nil)
                        (last-updated-time :initarg :last-updated-time :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %get-route-response-last-updated-time :initform
                         common-lisp:nil)
                        (include-child-paths :initarg :include-child-paths
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor %get-route-response-include-child-paths
                         :initform common-lisp:nil)
                        (error :initarg :error :type
                         (common-lisp:or error-response common-lisp:null)
                         :accessor %get-route-response-error :initform
                         common-lisp:nil)
                        (environment-id :initarg :environment-id :type
                         (common-lisp:or environment-id common-lisp:null)
                         :accessor %get-route-response-environment-id :initform
                         common-lisp:nil)
                        (created-time :initarg :created-time :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %get-route-response-created-time :initform
                         common-lisp:nil)
                        (created-by-account-id :initarg :created-by-account-id
                         :type (common-lisp:or account-id common-lisp:null)
                         :accessor %get-route-response-created-by-account-id
                         :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %get-route-response-arn :initform
                         common-lisp:nil)
                        (application-id :initarg :application-id :type
                         (common-lisp:or application-id common-lisp:null)
                         :accessor %get-route-response-application-id :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-route-response 'make-get-route-response))
 (common-lisp:defun make-get-route-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags state source-path service-id
                     route-type route-id path-resource-to-id owner-account-id
                     methods last-updated-time include-child-paths error
                     environment-id created-time created-by-account-id arn
                     application-id)
   (common-lisp:apply #'common-lisp:make-instance 'get-route-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-route-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-route-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'created-by-account-id))
      (common-lisp:list
       (common-lisp:cons "CreatedByAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-time))
      (common-lisp:list
       (common-lisp:cons "CreatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'environment-id))
      (common-lisp:list
       (common-lisp:cons "EnvironmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "Error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'include-child-paths))
      (common-lisp:list
       (common-lisp:cons "IncludeChildPaths"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-time))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'methods))
      (common-lisp:list
       (common-lisp:cons "Methods"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'owner-account-id))
      (common-lisp:list
       (common-lisp:cons "OwnerAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'path-resource-to-id))
      (common-lisp:list
       (common-lisp:cons "PathResourceToId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-id))
      (common-lisp:list
       (common-lisp:cons "RouteId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-type))
      (common-lisp:list
       (common-lisp:cons "RouteType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-id))
      (common-lisp:list
       (common-lisp:cons "ServiceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-path))
      (common-lisp:list
       (common-lisp:cons "SourcePath"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-route-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-service-request common-lisp:nil
                       ((service-identifier :initarg :service-identifier :type
                         (common-lisp:or service-id common-lisp:null) :accessor
                         %get-service-request-service-identifier :initform
                         (common-lisp:error ":service-identifier is required"))
                        (environment-identifier :initarg
                         :environment-identifier :type
                         (common-lisp:or environment-id common-lisp:null)
                         :accessor %get-service-request-environment-identifier
                         :initform
                         (common-lisp:error
                          ":environment-identifier is required"))
                        (application-identifier :initarg
                         :application-identifier :type
                         (common-lisp:or application-id common-lisp:null)
                         :accessor %get-service-request-application-identifier
                         :initform
                         (common-lisp:error
                          ":application-identifier is required"))))
 (common-lisp:export
  (common-lisp:list 'get-service-request 'make-get-service-request))
 (common-lisp:defun make-get-service-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key service-identifier environment-identifier
                     application-identifier)
   (common-lisp:apply #'common-lisp:make-instance 'get-service-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-service-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-service-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-service-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-service-response common-lisp:nil
                       ((vpc-id :initarg :vpc-id :type
                         (common-lisp:or vpc-id common-lisp:null) :accessor
                         %get-service-response-vpc-id :initform
                         common-lisp:nil)
                        (url-endpoint :initarg :url-endpoint :type
                         (common-lisp:or url-endpoint-config common-lisp:null)
                         :accessor %get-service-response-url-endpoint :initform
                         common-lisp:nil)
                        (tags :initarg :tags :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %get-service-response-tags :initform common-lisp:nil)
                        (state :initarg :state :type
                         (common-lisp:or service-state common-lisp:null)
                         :accessor %get-service-response-state :initform
                         common-lisp:nil)
                        (service-id :initarg :service-id :type
                         (common-lisp:or service-id common-lisp:null) :accessor
                         %get-service-response-service-id :initform
                         common-lisp:nil)
                        (owner-account-id :initarg :owner-account-id :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         %get-service-response-owner-account-id :initform
                         common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or service-name common-lisp:null)
                         :accessor %get-service-response-name :initform
                         common-lisp:nil)
                        (last-updated-time :initarg :last-updated-time :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %get-service-response-last-updated-time :initform
                         common-lisp:nil)
                        (lambda-endpoint :initarg :lambda-endpoint :type
                         (common-lisp:or lambda-endpoint-config
                                         common-lisp:null)
                         :accessor %get-service-response-lambda-endpoint
                         :initform common-lisp:nil)
                        (error :initarg :error :type
                         (common-lisp:or error-response common-lisp:null)
                         :accessor %get-service-response-error :initform
                         common-lisp:nil)
                        (environment-id :initarg :environment-id :type
                         (common-lisp:or environment-id common-lisp:null)
                         :accessor %get-service-response-environment-id
                         :initform common-lisp:nil)
                        (endpoint-type :initarg :endpoint-type :type
                         (common-lisp:or service-endpoint-type
                                         common-lisp:null)
                         :accessor %get-service-response-endpoint-type
                         :initform common-lisp:nil)
                        (description :initarg :description :type
                         (common-lisp:or description common-lisp:null)
                         :accessor %get-service-response-description :initform
                         common-lisp:nil)
                        (created-time :initarg :created-time :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %get-service-response-created-time :initform
                         common-lisp:nil)
                        (created-by-account-id :initarg :created-by-account-id
                         :type (common-lisp:or account-id common-lisp:null)
                         :accessor %get-service-response-created-by-account-id
                         :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %get-service-response-arn :initform
                         common-lisp:nil)
                        (application-id :initarg :application-id :type
                         (common-lisp:or application-id common-lisp:null)
                         :accessor %get-service-response-application-id
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-service-response 'make-get-service-response))
 (common-lisp:defun make-get-service-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key vpc-id url-endpoint tags state service-id
                     owner-account-id name last-updated-time lambda-endpoint
                     error environment-id endpoint-type description
                     created-time created-by-account-id arn application-id)
   (common-lisp:apply #'common-lisp:make-instance 'get-service-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-service-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-service-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'created-by-account-id))
      (common-lisp:list
       (common-lisp:cons "CreatedByAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-time))
      (common-lisp:list
       (common-lisp:cons "CreatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-type))
      (common-lisp:list
       (common-lisp:cons "EndpointType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'environment-id))
      (common-lisp:list
       (common-lisp:cons "EnvironmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "Error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lambda-endpoint))
      (common-lisp:list
       (common-lisp:cons "LambdaEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-time))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'owner-account-id))
      (common-lisp:list
       (common-lisp:cons "OwnerAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-id))
      (common-lisp:list
       (common-lisp:cons "ServiceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'url-endpoint))
      (common-lisp:list
       (common-lisp:cons "UrlEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-id))
      (common-lisp:list
       (common-lisp:cons "VpcId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-service-response))
   common-lisp:nil))
(common-lisp:deftype http-method () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype http-methods () '(trivial-types:proper-list http-method))
 (common-lisp:defun |make-http-methods|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list http-method))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (migration-hub-refactor-spaces-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-resource-policy-exception
     (migration-hub-refactor-spaces-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-resource-policy-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-resource-policy-exception
                    'invalid-resource-policy-exception-message)))
(common-lisp:deftype lambda-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass lambda-endpoint-config common-lisp:nil
                       ((arn :initarg :arn :type
                         (common-lisp:or lambda-arn common-lisp:null) :accessor
                         %lambda-endpoint-config-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'lambda-endpoint-config 'make-lambda-endpoint-config))
 (common-lisp:defun make-lambda-endpoint-config
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key arn)
   (common-lisp:apply #'common-lisp:make-instance 'lambda-endpoint-config
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lambda-endpoint-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lambda-endpoint-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lambda-endpoint-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass lambda-endpoint-input common-lisp:nil
                       ((arn :initarg :arn :type
                         (common-lisp:or lambda-arn common-lisp:null) :accessor
                         %lambda-endpoint-input-arn :initform
                         (common-lisp:error ":arn is required"))))
 (common-lisp:export
  (common-lisp:list 'lambda-endpoint-input 'make-lambda-endpoint-input))
 (common-lisp:defun make-lambda-endpoint-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key arn)
   (common-lisp:apply #'common-lisp:make-instance 'lambda-endpoint-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lambda-endpoint-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lambda-endpoint-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lambda-endpoint-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass lambda-endpoint-summary common-lisp:nil
                       ((arn :initarg :arn :type
                         (common-lisp:or lambda-arn common-lisp:null) :accessor
                         %lambda-endpoint-summary-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'lambda-endpoint-summary 'make-lambda-endpoint-summary))
 (common-lisp:defun make-lambda-endpoint-summary
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key arn)
   (common-lisp:apply #'common-lisp:make-instance 'lambda-endpoint-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lambda-endpoint-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lambda-endpoint-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lambda-endpoint-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-applications-request common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-applications-request-next-token :initform
                         common-lisp:nil)
                        (max-results :initarg :max-results :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor %list-applications-request-max-results
                         :initform common-lisp:nil)
                        (environment-identifier :initarg
                         :environment-identifier :type
                         (common-lisp:or environment-id common-lisp:null)
                         :accessor
                         %list-applications-request-environment-identifier
                         :initform
                         (common-lisp:error
                          ":environment-identifier is required"))))
 (common-lisp:export
  (common-lisp:list 'list-applications-request
                    'make-list-applications-request))
 (common-lisp:defun make-list-applications-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token max-results
                     environment-identifier)
   (common-lisp:apply #'common-lisp:make-instance 'list-applications-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-applications-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-applications-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-applications-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-applications-response common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-applications-response-next-token :initform
                         common-lisp:nil)
                        (application-summary-list :initarg
                         :application-summary-list :type
                         (common-lisp:or application-summaries
                                         common-lisp:null)
                         :accessor
                         %list-applications-response-application-summary-list
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-applications-response
                    'make-list-applications-response))
 (common-lisp:defun make-list-applications-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token application-summary-list)
   (common-lisp:apply #'common-lisp:make-instance 'list-applications-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-applications-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-applications-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'application-summary-list))
      (common-lisp:list
       (common-lisp:cons "ApplicationSummaryList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-applications-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-environment-vpcs-request common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-environment-vpcs-request-next-token :initform
                         common-lisp:nil)
                        (max-results :initarg :max-results :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor %list-environment-vpcs-request-max-results
                         :initform common-lisp:nil)
                        (environment-identifier :initarg
                         :environment-identifier :type
                         (common-lisp:or environment-id common-lisp:null)
                         :accessor
                         %list-environment-vpcs-request-environment-identifier
                         :initform
                         (common-lisp:error
                          ":environment-identifier is required"))))
 (common-lisp:export
  (common-lisp:list 'list-environment-vpcs-request
                    'make-list-environment-vpcs-request))
 (common-lisp:defun make-list-environment-vpcs-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token max-results
                     environment-identifier)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-environment-vpcs-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-environment-vpcs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-environment-vpcs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-environment-vpcs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-environment-vpcs-response common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-environment-vpcs-response-next-token :initform
                         common-lisp:nil)
                        (environment-vpc-list :initarg :environment-vpc-list
                         :type
                         (common-lisp:or environment-vpcs common-lisp:null)
                         :accessor
                         %list-environment-vpcs-response-environment-vpc-list
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-environment-vpcs-response
                    'make-list-environment-vpcs-response))
 (common-lisp:defun make-list-environment-vpcs-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token environment-vpc-list)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-environment-vpcs-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-environment-vpcs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-environment-vpcs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'environment-vpc-list))
      (common-lisp:list
       (common-lisp:cons "EnvironmentVpcList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-environment-vpcs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-environments-request common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-environments-request-next-token :initform
                         common-lisp:nil)
                        (max-results :initarg :max-results :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor %list-environments-request-max-results
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-environments-request
                    'make-list-environments-request))
 (common-lisp:defun make-list-environments-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token max-results)
   (common-lisp:apply #'common-lisp:make-instance 'list-environments-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-environments-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-environments-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-environments-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-environments-response common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-environments-response-next-token :initform
                         common-lisp:nil)
                        (environment-summary-list :initarg
                         :environment-summary-list :type
                         (common-lisp:or environment-summaries
                                         common-lisp:null)
                         :accessor
                         %list-environments-response-environment-summary-list
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-environments-response
                    'make-list-environments-response))
 (common-lisp:defun make-list-environments-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token environment-summary-list)
   (common-lisp:apply #'common-lisp:make-instance 'list-environments-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-environments-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-environments-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'environment-summary-list))
      (common-lisp:list
       (common-lisp:cons "EnvironmentSummaryList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-environments-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-routes-request common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-routes-request-next-token :initform
                         common-lisp:nil)
                        (max-results :initarg :max-results :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor %list-routes-request-max-results :initform
                         common-lisp:nil)
                        (environment-identifier :initarg
                         :environment-identifier :type
                         (common-lisp:or environment-id common-lisp:null)
                         :accessor %list-routes-request-environment-identifier
                         :initform
                         (common-lisp:error
                          ":environment-identifier is required"))
                        (application-identifier :initarg
                         :application-identifier :type
                         (common-lisp:or application-id common-lisp:null)
                         :accessor %list-routes-request-application-identifier
                         :initform
                         (common-lisp:error
                          ":application-identifier is required"))))
 (common-lisp:export
  (common-lisp:list 'list-routes-request 'make-list-routes-request))
 (common-lisp:defun make-list-routes-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token max-results
                     environment-identifier application-identifier)
   (common-lisp:apply #'common-lisp:make-instance 'list-routes-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-routes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-routes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-routes-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-routes-response common-lisp:nil
                       ((route-summary-list :initarg :route-summary-list :type
                         (common-lisp:or route-summaries common-lisp:null)
                         :accessor %list-routes-response-route-summary-list
                         :initform common-lisp:nil)
                        (next-token :initarg :next-token :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-routes-response-next-token :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-routes-response 'make-list-routes-response))
 (common-lisp:defun make-list-routes-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key route-summary-list next-token)
   (common-lisp:apply #'common-lisp:make-instance 'list-routes-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-routes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-routes-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-summary-list))
      (common-lisp:list
       (common-lisp:cons "RouteSummaryList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-routes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-services-request common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-services-request-next-token :initform
                         common-lisp:nil)
                        (max-results :initarg :max-results :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor %list-services-request-max-results :initform
                         common-lisp:nil)
                        (environment-identifier :initarg
                         :environment-identifier :type
                         (common-lisp:or environment-id common-lisp:null)
                         :accessor
                         %list-services-request-environment-identifier
                         :initform
                         (common-lisp:error
                          ":environment-identifier is required"))
                        (application-identifier :initarg
                         :application-identifier :type
                         (common-lisp:or application-id common-lisp:null)
                         :accessor
                         %list-services-request-application-identifier
                         :initform
                         (common-lisp:error
                          ":application-identifier is required"))))
 (common-lisp:export
  (common-lisp:list 'list-services-request 'make-list-services-request))
 (common-lisp:defun make-list-services-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token max-results
                     environment-identifier application-identifier)
   (common-lisp:apply #'common-lisp:make-instance 'list-services-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-services-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-services-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-services-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-services-response common-lisp:nil
                       ((service-summary-list :initarg :service-summary-list
                         :type
                         (common-lisp:or service-summaries common-lisp:null)
                         :accessor %list-services-response-service-summary-list
                         :initform common-lisp:nil)
                        (next-token :initarg :next-token :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-services-response-next-token :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-services-response 'make-list-services-response))
 (common-lisp:defun make-list-services-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key service-summary-list next-token)
   (common-lisp:apply #'common-lisp:make-instance 'list-services-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-services-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-services-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'service-summary-list))
      (common-lisp:list
       (common-lisp:cons "ServiceSummaryList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-services-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %list-tags-for-resource-request-resource-arn :initform
                         (common-lisp:error ":resource-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defun make-list-tags-for-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-response common-lisp:nil
                       ((tags :initarg :tags :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %list-tags-for-resource-response-tags :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defun make-list-tags-for-resource-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype network-fabric-type () 'common-lisp:string)
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:deftype nlb-arn () 'common-lisp:string)
(common-lisp:deftype nlb-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype path-resource-to-id () 'common-lisp:hash-table)
 (common-lisp:defun |make-path-resource-to-id|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype path-resource-to-id-key () 'common-lisp:string)
(common-lisp:deftype path-resource-to-id-value () 'common-lisp:string)
(common-lisp:deftype policy-string () 'common-lisp:string)
(common-lisp:deftype proxy-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass put-resource-policy-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %put-resource-policy-request-resource-arn
                         :initform
                         (common-lisp:error ":resource-arn is required"))
                        (policy :initarg :policy :type
                         (common-lisp:or policy-string common-lisp:null)
                         :accessor %put-resource-policy-request-policy
                         :initform (common-lisp:error ":policy is required"))))
 (common-lisp:export
  (common-lisp:list 'put-resource-policy-request
                    'make-put-resource-policy-request))
 (common-lisp:defun make-put-resource-policy-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-arn policy)
   (common-lisp:apply #'common-lisp:make-instance 'put-resource-policy-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-resource-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-resource-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "Policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-resource-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-resource-policy-response common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'put-resource-policy-response
                    'make-put-resource-policy-response))
 (common-lisp:defun make-put-resource-policy-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'put-resource-policy-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-resource-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-resource-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-resource-policy-response))
   common-lisp:nil))
(common-lisp:deftype resource-arn () 'common-lisp:string)
(common-lisp:deftype resource-identifier () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (migration-hub-refactor-spaces-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)
      (resource-id :initarg :resource-id :initform common-lisp:nil :reader
       resource-not-found-exception-resource-id)
      (resource-type :initarg :resource-type :initform common-lisp:nil :reader
       resource-not-found-exception-resource-type)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message
                    'resource-not-found-exception-resource-id
                    'resource-not-found-exception-resource-type)))
(common-lisp:deftype resource-policy-identifier () 'common-lisp:string)
(common-lisp:deftype retry-after-seconds () 'common-lisp:integer)
(common-lisp:deftype route-activation-state () 'common-lisp:string)
(common-lisp:deftype route-id () 'common-lisp:string)
(common-lisp:deftype route-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype route-summaries ()
   '(trivial-types:proper-list route-summary))
 (common-lisp:defun |make-route-summaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list route-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass route-summary common-lisp:nil
                       ((tags :initarg :tags :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %route-summary-tags :initform common-lisp:nil)
                        (state :initarg :state :type
                         (common-lisp:or route-state common-lisp:null)
                         :accessor %route-summary-state :initform
                         common-lisp:nil)
                        (source-path :initarg :source-path :type
                         (common-lisp:or uri-path common-lisp:null) :accessor
                         %route-summary-source-path :initform common-lisp:nil)
                        (service-id :initarg :service-id :type
                         (common-lisp:or service-id common-lisp:null) :accessor
                         %route-summary-service-id :initform common-lisp:nil)
                        (route-type :initarg :route-type :type
                         (common-lisp:or route-type common-lisp:null) :accessor
                         %route-summary-route-type :initform common-lisp:nil)
                        (route-id :initarg :route-id :type
                         (common-lisp:or route-id common-lisp:null) :accessor
                         %route-summary-route-id :initform common-lisp:nil)
                        (path-resource-to-id :initarg :path-resource-to-id
                         :type
                         (common-lisp:or path-resource-to-id common-lisp:null)
                         :accessor %route-summary-path-resource-to-id :initform
                         common-lisp:nil)
                        (owner-account-id :initarg :owner-account-id :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         %route-summary-owner-account-id :initform
                         common-lisp:nil)
                        (methods :initarg :methods :type
                         (common-lisp:or http-methods common-lisp:null)
                         :accessor %route-summary-methods :initform
                         common-lisp:nil)
                        (last-updated-time :initarg :last-updated-time :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %route-summary-last-updated-time :initform
                         common-lisp:nil)
                        (include-child-paths :initarg :include-child-paths
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor %route-summary-include-child-paths :initform
                         common-lisp:nil)
                        (error :initarg :error :type
                         (common-lisp:or error-response common-lisp:null)
                         :accessor %route-summary-error :initform
                         common-lisp:nil)
                        (environment-id :initarg :environment-id :type
                         (common-lisp:or environment-id common-lisp:null)
                         :accessor %route-summary-environment-id :initform
                         common-lisp:nil)
                        (created-time :initarg :created-time :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %route-summary-created-time :initform common-lisp:nil)
                        (created-by-account-id :initarg :created-by-account-id
                         :type (common-lisp:or account-id common-lisp:null)
                         :accessor %route-summary-created-by-account-id
                         :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %route-summary-arn :initform
                         common-lisp:nil)
                        (application-id :initarg :application-id :type
                         (common-lisp:or application-id common-lisp:null)
                         :accessor %route-summary-application-id :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'route-summary 'make-route-summary))
 (common-lisp:defun make-route-summary
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags state source-path service-id
                     route-type route-id path-resource-to-id owner-account-id
                     methods last-updated-time include-child-paths error
                     environment-id created-time created-by-account-id arn
                     application-id)
   (common-lisp:apply #'common-lisp:make-instance 'route-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input route-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input route-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'created-by-account-id))
      (common-lisp:list
       (common-lisp:cons "CreatedByAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-time))
      (common-lisp:list
       (common-lisp:cons "CreatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'environment-id))
      (common-lisp:list
       (common-lisp:cons "EnvironmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "Error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'include-child-paths))
      (common-lisp:list
       (common-lisp:cons "IncludeChildPaths"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-time))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'methods))
      (common-lisp:list
       (common-lisp:cons "Methods"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'owner-account-id))
      (common-lisp:list
       (common-lisp:cons "OwnerAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'path-resource-to-id))
      (common-lisp:list
       (common-lisp:cons "PathResourceToId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-id))
      (common-lisp:list
       (common-lisp:cons "RouteId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-type))
      (common-lisp:list
       (common-lisp:cons "RouteType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-id))
      (common-lisp:list
       (common-lisp:cons "ServiceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-path))
      (common-lisp:list
       (common-lisp:cons "SourcePath"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input route-summary))
   common-lisp:nil))
(common-lisp:deftype route-type () 'common-lisp:string)
(common-lisp:deftype service-endpoint-type () 'common-lisp:string)
(common-lisp:deftype service-id () 'common-lisp:string)
(common-lisp:deftype service-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition service-quota-exceeded-exception
     (migration-hub-refactor-spaces-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-quota-exceeded-exception-message)
      (quota-code :initarg :quota-code :initform common-lisp:nil :reader
       service-quota-exceeded-exception-quota-code)
      (resource-id :initarg :resource-id :initform common-lisp:nil :reader
       service-quota-exceeded-exception-resource-id)
      (resource-type :initarg :resource-type :initform common-lisp:nil :reader
       service-quota-exceeded-exception-resource-type)
      (service-code :initarg :service-code :initform common-lisp:nil :reader
       service-quota-exceeded-exception-service-code)))
 (common-lisp:export
  (common-lisp:list 'service-quota-exceeded-exception
                    'service-quota-exceeded-exception-message
                    'service-quota-exceeded-exception-quota-code
                    'service-quota-exceeded-exception-resource-id
                    'service-quota-exceeded-exception-resource-type
                    'service-quota-exceeded-exception-service-code)))
(common-lisp:deftype service-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype service-summaries ()
   '(trivial-types:proper-list service-summary))
 (common-lisp:defun |make-service-summaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list service-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass service-summary common-lisp:nil
                       ((vpc-id :initarg :vpc-id :type
                         (common-lisp:or vpc-id common-lisp:null) :accessor
                         %service-summary-vpc-id :initform common-lisp:nil)
                        (url-endpoint :initarg :url-endpoint :type
                         (common-lisp:or url-endpoint-summary common-lisp:null)
                         :accessor %service-summary-url-endpoint :initform
                         common-lisp:nil)
                        (tags :initarg :tags :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %service-summary-tags :initform common-lisp:nil)
                        (state :initarg :state :type
                         (common-lisp:or service-state common-lisp:null)
                         :accessor %service-summary-state :initform
                         common-lisp:nil)
                        (service-id :initarg :service-id :type
                         (common-lisp:or service-id common-lisp:null) :accessor
                         %service-summary-service-id :initform common-lisp:nil)
                        (owner-account-id :initarg :owner-account-id :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         %service-summary-owner-account-id :initform
                         common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or service-name common-lisp:null)
                         :accessor %service-summary-name :initform
                         common-lisp:nil)
                        (last-updated-time :initarg :last-updated-time :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %service-summary-last-updated-time :initform
                         common-lisp:nil)
                        (lambda-endpoint :initarg :lambda-endpoint :type
                         (common-lisp:or lambda-endpoint-summary
                                         common-lisp:null)
                         :accessor %service-summary-lambda-endpoint :initform
                         common-lisp:nil)
                        (error :initarg :error :type
                         (common-lisp:or error-response common-lisp:null)
                         :accessor %service-summary-error :initform
                         common-lisp:nil)
                        (environment-id :initarg :environment-id :type
                         (common-lisp:or environment-id common-lisp:null)
                         :accessor %service-summary-environment-id :initform
                         common-lisp:nil)
                        (endpoint-type :initarg :endpoint-type :type
                         (common-lisp:or service-endpoint-type
                                         common-lisp:null)
                         :accessor %service-summary-endpoint-type :initform
                         common-lisp:nil)
                        (description :initarg :description :type
                         (common-lisp:or description common-lisp:null)
                         :accessor %service-summary-description :initform
                         common-lisp:nil)
                        (created-time :initarg :created-time :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %service-summary-created-time :initform
                         common-lisp:nil)
                        (created-by-account-id :initarg :created-by-account-id
                         :type (common-lisp:or account-id common-lisp:null)
                         :accessor %service-summary-created-by-account-id
                         :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %service-summary-arn :initform
                         common-lisp:nil)
                        (application-id :initarg :application-id :type
                         (common-lisp:or application-id common-lisp:null)
                         :accessor %service-summary-application-id :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'service-summary 'make-service-summary))
 (common-lisp:defun make-service-summary
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key vpc-id url-endpoint tags state service-id
                     owner-account-id name last-updated-time lambda-endpoint
                     error environment-id endpoint-type description
                     created-time created-by-account-id arn application-id)
   (common-lisp:apply #'common-lisp:make-instance 'service-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input service-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input service-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'created-by-account-id))
      (common-lisp:list
       (common-lisp:cons "CreatedByAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-time))
      (common-lisp:list
       (common-lisp:cons "CreatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-type))
      (common-lisp:list
       (common-lisp:cons "EndpointType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'environment-id))
      (common-lisp:list
       (common-lisp:cons "EnvironmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "Error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lambda-endpoint))
      (common-lisp:list
       (common-lisp:cons "LambdaEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-time))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'owner-account-id))
      (common-lisp:list
       (common-lisp:cons "OwnerAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-id))
      (common-lisp:list
       (common-lisp:cons "ServiceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'url-endpoint))
      (common-lisp:list
       (common-lisp:cons "UrlEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-id))
      (common-lisp:list
       (common-lisp:cons "VpcId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input service-summary))
   common-lisp:nil))
(common-lisp:deftype stage-name () 'common-lisp:string)
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-keys () '(trivial-types:proper-list string))
 (common-lisp:defun |make-tag-keys|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-map () 'common-lisp:hash-table)
 (common-lisp:defun |make-tag-map| (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype tag-map-key-string () 'common-lisp:string)
(common-lisp:deftype tag-map-value-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass tag-resource-request common-lisp:nil
                       ((tags :initarg :tags :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %tag-resource-request-tags :initform
                         (common-lisp:error ":tags is required"))
                        (resource-arn :initarg :resource-arn :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %tag-resource-request-resource-arn :initform
                         (common-lisp:error ":resource-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defun make-tag-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags resource-arn)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-resource-response common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defun make-tag-resource-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (migration-hub-refactor-spaces-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       throttling-exception-message)
      (quota-code :initarg :quota-code :initform common-lisp:nil :reader
       throttling-exception-quota-code)
      (retry-after-seconds :initarg :retry-after-seconds :initform
       common-lisp:nil :reader throttling-exception-retry-after-seconds)
      (service-code :initarg :service-code :initform common-lisp:nil :reader
       throttling-exception-service-code)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message
                    'throttling-exception-quota-code
                    'throttling-exception-retry-after-seconds
                    'throttling-exception-service-code)))
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:deftype transit-gateway-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass untag-resource-request common-lisp:nil
                       ((tag-keys :initarg :tag-keys :type
                         (common-lisp:or tag-keys common-lisp:null) :accessor
                         %untag-resource-request-tag-keys :initform
                         (common-lisp:error ":tag-keys is required"))
                        (resource-arn :initarg :resource-arn :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %untag-resource-request-resource-arn :initform
                         (common-lisp:error ":resource-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defun make-untag-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tag-keys resource-arn)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass untag-resource-response common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defun make-untag-resource-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-route-request common-lisp:nil
                       ((route-identifier :initarg :route-identifier :type
                         (common-lisp:or route-id common-lisp:null) :accessor
                         %update-route-request-route-identifier :initform
                         (common-lisp:error ":route-identifier is required"))
                        (environment-identifier :initarg
                         :environment-identifier :type
                         (common-lisp:or environment-id common-lisp:null)
                         :accessor %update-route-request-environment-identifier
                         :initform
                         (common-lisp:error
                          ":environment-identifier is required"))
                        (application-identifier :initarg
                         :application-identifier :type
                         (common-lisp:or application-id common-lisp:null)
                         :accessor %update-route-request-application-identifier
                         :initform
                         (common-lisp:error
                          ":application-identifier is required"))
                        (activation-state :initarg :activation-state :type
                         (common-lisp:or route-activation-state
                                         common-lisp:null)
                         :accessor %update-route-request-activation-state
                         :initform
                         (common-lisp:error ":activation-state is required"))))
 (common-lisp:export
  (common-lisp:list 'update-route-request 'make-update-route-request))
 (common-lisp:defun make-update-route-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key route-identifier environment-identifier
                     application-identifier activation-state)
   (common-lisp:apply #'common-lisp:make-instance 'update-route-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-route-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-route-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'activation-state))
      (common-lisp:list
       (common-lisp:cons "ActivationState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-route-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-route-response common-lisp:nil
                       ((state :initarg :state :type
                         (common-lisp:or route-state common-lisp:null)
                         :accessor %update-route-response-state :initform
                         common-lisp:nil)
                        (service-id :initarg :service-id :type
                         (common-lisp:or service-id common-lisp:null) :accessor
                         %update-route-response-service-id :initform
                         common-lisp:nil)
                        (route-id :initarg :route-id :type
                         (common-lisp:or route-id common-lisp:null) :accessor
                         %update-route-response-route-id :initform
                         common-lisp:nil)
                        (last-updated-time :initarg :last-updated-time :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %update-route-response-last-updated-time :initform
                         common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %update-route-response-arn :initform
                         common-lisp:nil)
                        (application-id :initarg :application-id :type
                         (common-lisp:or application-id common-lisp:null)
                         :accessor %update-route-response-application-id
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-route-response 'make-update-route-response))
 (common-lisp:defun make-update-route-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key state service-id route-id
                     last-updated-time arn application-id)
   (common-lisp:apply #'common-lisp:make-instance 'update-route-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-route-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-route-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-time))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-id))
      (common-lisp:list
       (common-lisp:cons "RouteId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-id))
      (common-lisp:list
       (common-lisp:cons "ServiceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-route-response))
   common-lisp:nil))
(common-lisp:deftype uri () 'common-lisp:string)
(common-lisp:deftype uri-path () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass uri-path-route-input common-lisp:nil
                       ((source-path :initarg :source-path :type
                         (common-lisp:or uri-path common-lisp:null) :accessor
                         %uri-path-route-input-source-path :initform
                         (common-lisp:error ":source-path is required"))
                        (methods :initarg :methods :type
                         (common-lisp:or http-methods common-lisp:null)
                         :accessor %uri-path-route-input-methods :initform
                         common-lisp:nil)
                        (include-child-paths :initarg :include-child-paths
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor %uri-path-route-input-include-child-paths
                         :initform common-lisp:nil)
                        (activation-state :initarg :activation-state :type
                         (common-lisp:or route-activation-state
                                         common-lisp:null)
                         :accessor %uri-path-route-input-activation-state
                         :initform
                         (common-lisp:error ":activation-state is required"))))
 (common-lisp:export
  (common-lisp:list 'uri-path-route-input 'make-uri-path-route-input))
 (common-lisp:defun make-uri-path-route-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key source-path methods include-child-paths
                     activation-state)
   (common-lisp:apply #'common-lisp:make-instance 'uri-path-route-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input uri-path-route-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input uri-path-route-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'activation-state))
      (common-lisp:list
       (common-lisp:cons "ActivationState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'include-child-paths))
      (common-lisp:list
       (common-lisp:cons "IncludeChildPaths"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'methods))
      (common-lisp:list
       (common-lisp:cons "Methods"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-path))
      (common-lisp:list
       (common-lisp:cons "SourcePath"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input uri-path-route-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass url-endpoint-config common-lisp:nil
                       ((url :initarg :url :type
                         (common-lisp:or uri common-lisp:null) :accessor
                         %url-endpoint-config-url :initform common-lisp:nil)
                        (health-url :initarg :health-url :type
                         (common-lisp:or uri common-lisp:null) :accessor
                         %url-endpoint-config-health-url :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'url-endpoint-config 'make-url-endpoint-config))
 (common-lisp:defun make-url-endpoint-config
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key url health-url)
   (common-lisp:apply #'common-lisp:make-instance 'url-endpoint-config
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input url-endpoint-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input url-endpoint-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'health-url))
      (common-lisp:list
       (common-lisp:cons "HealthUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'url))
      (common-lisp:list
       (common-lisp:cons "Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input url-endpoint-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass url-endpoint-input common-lisp:nil
                       ((url :initarg :url :type
                         (common-lisp:or uri common-lisp:null) :accessor
                         %url-endpoint-input-url :initform
                         (common-lisp:error ":url is required"))
                        (health-url :initarg :health-url :type
                         (common-lisp:or uri common-lisp:null) :accessor
                         %url-endpoint-input-health-url :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'url-endpoint-input 'make-url-endpoint-input))
 (common-lisp:defun make-url-endpoint-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key url health-url)
   (common-lisp:apply #'common-lisp:make-instance 'url-endpoint-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input url-endpoint-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input url-endpoint-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'health-url))
      (common-lisp:list
       (common-lisp:cons "HealthUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'url))
      (common-lisp:list
       (common-lisp:cons "Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input url-endpoint-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass url-endpoint-summary common-lisp:nil
                       ((url :initarg :url :type
                         (common-lisp:or uri common-lisp:null) :accessor
                         %url-endpoint-summary-url :initform common-lisp:nil)
                        (health-url :initarg :health-url :type
                         (common-lisp:or uri common-lisp:null) :accessor
                         %url-endpoint-summary-health-url :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'url-endpoint-summary 'make-url-endpoint-summary))
 (common-lisp:defun make-url-endpoint-summary
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key url health-url)
   (common-lisp:apply #'common-lisp:make-instance 'url-endpoint-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input url-endpoint-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input url-endpoint-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'health-url))
      (common-lisp:list
       (common-lisp:cons "HealthUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'url))
      (common-lisp:list
       (common-lisp:cons "Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input url-endpoint-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (migration-hub-refactor-spaces-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       validation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-message)))
(common-lisp:deftype vpc-id () 'common-lisp:string)
(common-lisp:deftype vpc-link-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun create-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-gateway-proxy client-token
                     environment-identifier name proxy-type tags vpc-id)
   (common-lisp:declare
    (common-lisp:ignorable api-gateway-proxy client-token
     environment-identifier name proxy-type tags vpc-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-application-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'migration-hub-refactor-spaces-request
        aws-sdk/generator/operation::input "POST" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/environments/~A/applications"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'environment-identifier))))
        "CreateApplication" "2021-10-26"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-application))
(common-lisp:progn
 (common-lisp:defun create-environment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token description name
                     network-fabric-type tags)
   (common-lisp:declare
    (common-lisp:ignorable client-token description name network-fabric-type
     tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-environment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'migration-hub-refactor-spaces-request
        aws-sdk/generator/operation::input "POST" :rest-json "/environments"
        "CreateEnvironment" "2021-10-26"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-environment))
(common-lisp:progn
 (common-lisp:defun create-route
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-identifier client-token
                     default-route environment-identifier route-type
                     service-identifier tags uri-path-route)
   (common-lisp:declare
    (common-lisp:ignorable application-identifier client-token default-route
     environment-identifier route-type service-identifier tags uri-path-route))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-route-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'migration-hub-refactor-spaces-request
        aws-sdk/generator/operation::input "POST" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/environments/~A/applications/~A/routes"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'environment-identifier))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'application-identifier))))
        "CreateRoute" "2021-10-26"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-route))
(common-lisp:progn
 (common-lisp:defun create-service
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-identifier client-token
                     description endpoint-type environment-identifier
                     lambda-endpoint name tags url-endpoint vpc-id)
   (common-lisp:declare
    (common-lisp:ignorable application-identifier client-token description
     endpoint-type environment-identifier lambda-endpoint name tags
     url-endpoint vpc-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-service-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'migration-hub-refactor-spaces-request
        aws-sdk/generator/operation::input "POST" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/environments/~A/applications/~A/services"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'environment-identifier))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'application-identifier))))
        "CreateService" "2021-10-26"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-service))
(common-lisp:progn
 (common-lisp:defun delete-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-identifier
                     environment-identifier)
   (common-lisp:declare
    (common-lisp:ignorable application-identifier environment-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-application-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'migration-hub-refactor-spaces-request
        aws-sdk/generator/operation::input "DELETE" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/environments/~A/applications/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'environment-identifier))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'application-identifier))))
        "DeleteApplication" "2021-10-26"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-application))
(common-lisp:progn
 (common-lisp:defun delete-environment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key environment-identifier)
   (common-lisp:declare (common-lisp:ignorable environment-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-environment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'migration-hub-refactor-spaces-request
        aws-sdk/generator/operation::input "DELETE" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/environments/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'environment-identifier))))
        "DeleteEnvironment" "2021-10-26"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-environment))
(common-lisp:progn
 (common-lisp:defun delete-resource-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identifier)
   (common-lisp:declare (common-lisp:ignorable identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-resource-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'migration-hub-refactor-spaces-request
        aws-sdk/generator/operation::input "DELETE" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/resourcepolicy/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'identifier))))
        "DeleteResourcePolicy" "2021-10-26"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-resource-policy))
(common-lisp:progn
 (common-lisp:defun delete-route
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-identifier
                     environment-identifier route-identifier)
   (common-lisp:declare
    (common-lisp:ignorable application-identifier environment-identifier
     route-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-route-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'migration-hub-refactor-spaces-request
        aws-sdk/generator/operation::input "DELETE" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/environments/~A/applications/~A/routes/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'environment-identifier))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'application-identifier))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'route-identifier))))
        "DeleteRoute" "2021-10-26"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-route))
(common-lisp:progn
 (common-lisp:defun delete-service
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-identifier
                     environment-identifier service-identifier)
   (common-lisp:declare
    (common-lisp:ignorable application-identifier environment-identifier
     service-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-service-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'migration-hub-refactor-spaces-request
        aws-sdk/generator/operation::input "DELETE" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/environments/~A/applications/~A/services/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'environment-identifier))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'application-identifier))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'service-identifier))))
        "DeleteService" "2021-10-26"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-service))
(common-lisp:progn
 (common-lisp:defun get-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-identifier
                     environment-identifier)
   (common-lisp:declare
    (common-lisp:ignorable application-identifier environment-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-application-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'migration-hub-refactor-spaces-request
        aws-sdk/generator/operation::input "GET" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/environments/~A/applications/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'environment-identifier))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'application-identifier))))
        "GetApplication" "2021-10-26"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-application))
(common-lisp:progn
 (common-lisp:defun get-environment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key environment-identifier)
   (common-lisp:declare (common-lisp:ignorable environment-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-environment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'migration-hub-refactor-spaces-request
        aws-sdk/generator/operation::input "GET" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/environments/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'environment-identifier))))
        "GetEnvironment" "2021-10-26"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-environment))
(common-lisp:progn
 (common-lisp:defun get-resource-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identifier)
   (common-lisp:declare (common-lisp:ignorable identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-resource-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'migration-hub-refactor-spaces-request
        aws-sdk/generator/operation::input "GET" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/resourcepolicy/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'identifier))))
        "GetResourcePolicy" "2021-10-26"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-resource-policy))
(common-lisp:progn
 (common-lisp:defun get-route
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-identifier
                     environment-identifier route-identifier)
   (common-lisp:declare
    (common-lisp:ignorable application-identifier environment-identifier
     route-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-route-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'migration-hub-refactor-spaces-request
        aws-sdk/generator/operation::input "GET" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/environments/~A/applications/~A/routes/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'environment-identifier))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'application-identifier))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'route-identifier))))
        "GetRoute" "2021-10-26"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-route))
(common-lisp:progn
 (common-lisp:defun get-service
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-identifier
                     environment-identifier service-identifier)
   (common-lisp:declare
    (common-lisp:ignorable application-identifier environment-identifier
     service-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-service-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'migration-hub-refactor-spaces-request
        aws-sdk/generator/operation::input "GET" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/environments/~A/applications/~A/services/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'environment-identifier))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'application-identifier))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'service-identifier))))
        "GetService" "2021-10-26"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-service))
(common-lisp:progn
 (common-lisp:defun list-applications
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key environment-identifier max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable environment-identifier max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-applications-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'migration-hub-refactor-spaces-request
        aws-sdk/generator/operation::input "GET" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/environments/~A/applications"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'environment-identifier))))
        "ListApplications" "2021-10-26"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-applications))
(common-lisp:progn
 (common-lisp:defun list-environment-vpcs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key environment-identifier max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable environment-identifier max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-environment-vpcs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'migration-hub-refactor-spaces-request
        aws-sdk/generator/operation::input "GET" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/environments/~A/vpcs"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'environment-identifier))))
        "ListEnvironmentVpcs" "2021-10-26"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-environment-vpcs))
(common-lisp:progn
 (common-lisp:defun list-environments
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-environments-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'migration-hub-refactor-spaces-request
        aws-sdk/generator/operation::input "GET" :rest-json "/environments"
        "ListEnvironments" "2021-10-26"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-environments))
(common-lisp:progn
 (common-lisp:defun list-routes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-identifier
                     environment-identifier max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable application-identifier environment-identifier
     max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-routes-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'migration-hub-refactor-spaces-request
        aws-sdk/generator/operation::input "GET" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/environments/~A/applications/~A/routes"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'environment-identifier))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'application-identifier))))
        "ListRoutes" "2021-10-26"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-routes))
(common-lisp:progn
 (common-lisp:defun list-services
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-identifier
                     environment-identifier max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable application-identifier environment-identifier
     max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-services-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'migration-hub-refactor-spaces-request
        aws-sdk/generator/operation::input "GET" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/environments/~A/applications/~A/services"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'environment-identifier))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'application-identifier))))
        "ListServices" "2021-10-26"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-services))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'migration-hub-refactor-spaces-request
        aws-sdk/generator/operation::input "GET" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-arn))))
        "ListTagsForResource" "2021-10-26"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun put-resource-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key policy resource-arn)
   (common-lisp:declare (common-lisp:ignorable policy resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-resource-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'migration-hub-refactor-spaces-request
        aws-sdk/generator/operation::input "PUT" :rest-json "/resourcepolicy"
        "PutResourcePolicy" "2021-10-26"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-resource-policy))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'migration-hub-refactor-spaces-request
        aws-sdk/generator/operation::input "POST" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-arn))))
        "TagResource" "2021-10-26"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'migration-hub-refactor-spaces-request
        aws-sdk/generator/operation::input "DELETE" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-arn))))
        "UntagResource" "2021-10-26"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-route
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key activation-state application-identifier
                     environment-identifier route-identifier)
   (common-lisp:declare
    (common-lisp:ignorable activation-state application-identifier
     environment-identifier route-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-route-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'migration-hub-refactor-spaces-request
        aws-sdk/generator/operation::input "PATCH" :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/environments/~A/applications/~A/routes/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'environment-identifier))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'application-identifier))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'route-identifier))))
        "UpdateRoute" "2021-10-26"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-route))
