;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/lookoutvision/api
  (:use)
  (:nicknames #:aws/lookoutvision)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/lookoutvision/api)
(common-lisp:progn
 (common-lisp:defclass lookoutvision-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "lookoutvision"))
 (common-lisp:export 'lookoutvision-request))
(common-lisp:progn
 (common-lisp:define-condition lookoutvision-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'lookoutvision-error))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("ConflictException" . conflict-exception)
    ("InternalServerException" . internal-server-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceQuotaExceededException" . service-quota-exceeded-exception)
    ("ThrottlingException" . throttling-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (lookoutvision-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       access-denied-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (anomaly (:copier common-lisp:nil) (:conc-name "struct-shape-anomaly-"))
   (name common-lisp:nil :type (common-lisp:or anomaly-name common-lisp:null))
   (pixel-anomaly common-lisp:nil :type
    (common-lisp:or pixel-anomaly common-lisp:null)))
 (common-lisp:export (common-lisp:list 'anomaly 'make-anomaly))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input anomaly))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input anomaly))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pixel-anomaly))
      (common-lisp:list
       (common-lisp:cons "PixelAnomaly"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input anomaly))
   common-lisp:nil))
(common-lisp:deftype anomaly-class-filter () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype anomaly-list () '(trivial-types:proper-list anomaly))
 (common-lisp:defun |make-anomaly-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list anomaly))
   aws-sdk/generator/shape::members))
(common-lisp:deftype anomaly-mask ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:deftype anomaly-name () 'common-lisp:string)
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:deftype client-token () 'common-lisp:string)
(common-lisp:deftype color () 'common-lisp:string)
(common-lisp:deftype compiler-options () 'common-lisp:string)
(common-lisp:deftype component-description () 'common-lisp:string)
(common-lisp:deftype component-name () 'common-lisp:string)
(common-lisp:deftype component-version () 'common-lisp:string)
(common-lisp:deftype component-version-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (lookoutvision-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)
      (resource-id :initarg :resource-id :initform common-lisp:nil :reader
       conflict-exception-resource-id)
      (resource-type :initarg :resource-type :initform common-lisp:nil :reader
       conflict-exception-resource-type)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message
                    'conflict-exception-resource-id
                    'conflict-exception-resource-type)))
(common-lisp:deftype content-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (create-dataset-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-dataset-request-"))
   (project-name (common-lisp:error ":project-name is required") :type
    (common-lisp:or project-name common-lisp:null))
   (dataset-type (common-lisp:error ":dataset-type is required") :type
    (common-lisp:or dataset-type common-lisp:null))
   (dataset-source common-lisp:nil :type
    (common-lisp:or dataset-source common-lisp:null))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-dataset-request 'make-create-dataset-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-dataset-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:cons "X-Amzn-Client-Token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-dataset-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dataset-type))
      (common-lisp:list
       (common-lisp:cons "DatasetType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dataset-source))
      (common-lisp:list
       (common-lisp:cons "DatasetSource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-dataset-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-dataset-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-dataset-response-"))
   (dataset-metadata common-lisp:nil :type
    (common-lisp:or dataset-metadata common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-dataset-response 'make-create-dataset-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-dataset-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-dataset-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dataset-metadata))
      (common-lisp:list
       (common-lisp:cons "DatasetMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-dataset-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-model-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-model-request-"))
   (project-name (common-lisp:error ":project-name is required") :type
    (common-lisp:or project-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or model-description-message common-lisp:null))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null))
   (output-config (common-lisp:error ":output-config is required") :type
    (common-lisp:or output-config common-lisp:null))
   (kms-key-id common-lisp:nil :type
    (common-lisp:or kms-key-id common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-model-request 'make-create-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-model-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:cons "X-Amzn-Client-Token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-model-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-config))
      (common-lisp:list
       (common-lisp:cons "OutputConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key-id))
      (common-lisp:list
       (common-lisp:cons "KmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-model-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-model-response-"))
   (model-metadata common-lisp:nil :type
    (common-lisp:or model-metadata common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-model-response 'make-create-model-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-model-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-model-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-metadata))
      (common-lisp:list
       (common-lisp:cons "ModelMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-model-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-project-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-project-request-"))
   (project-name (common-lisp:error ":project-name is required") :type
    (common-lisp:or project-name common-lisp:null))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-project-request 'make-create-project-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-project-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:cons "X-Amzn-Client-Token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-project-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'project-name))
      (common-lisp:list
       (common-lisp:cons "ProjectName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-project-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-project-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-project-response-"))
   (project-metadata common-lisp:nil :type
    (common-lisp:or project-metadata common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-project-response 'make-create-project-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-project-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-project-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'project-metadata))
      (common-lisp:list
       (common-lisp:cons "ProjectMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-project-response))
   common-lisp:nil))
(common-lisp:deftype dataset-changes ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:progn
 (common-lisp:defstruct
     (dataset-description (:copier common-lisp:nil)
      (:conc-name "struct-shape-dataset-description-"))
   (project-name common-lisp:nil :type
    (common-lisp:or project-name common-lisp:null))
   (dataset-type common-lisp:nil :type
    (common-lisp:or dataset-type common-lisp:null))
   (creation-timestamp common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (last-updated-timestamp common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or dataset-status common-lisp:null))
   (status-message common-lisp:nil :type
    (common-lisp:or dataset-status-message common-lisp:null))
   (image-stats common-lisp:nil :type
    (common-lisp:or dataset-image-stats common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'dataset-description 'make-dataset-description))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dataset-description))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dataset-description))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'project-name))
      (common-lisp:list
       (common-lisp:cons "ProjectName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dataset-type))
      (common-lisp:list
       (common-lisp:cons "DatasetType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-message))
      (common-lisp:list
       (common-lisp:cons "StatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'image-stats))
      (common-lisp:list
       (common-lisp:cons "ImageStats"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dataset-description))
   common-lisp:nil))
(common-lisp:deftype dataset-entry () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype dataset-entry-list ()
   '(trivial-types:proper-list dataset-entry))
 (common-lisp:defun |make-dataset-entry-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list dataset-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (dataset-ground-truth-manifest (:copier common-lisp:nil)
      (:conc-name "struct-shape-dataset-ground-truth-manifest-"))
   (s3object common-lisp:nil :type
    (common-lisp:or input-s3object common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'dataset-ground-truth-manifest
                    'make-dataset-ground-truth-manifest))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          dataset-ground-truth-manifest))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          dataset-ground-truth-manifest))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3object))
      (common-lisp:list
       (common-lisp:cons "S3Object"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          dataset-ground-truth-manifest))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (dataset-image-stats (:copier common-lisp:nil)
      (:conc-name "struct-shape-dataset-image-stats-"))
   (total common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (labeled common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (normal common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (anomaly common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'dataset-image-stats 'make-dataset-image-stats))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dataset-image-stats))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dataset-image-stats))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'total))
      (common-lisp:list
       (common-lisp:cons "Total"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'labeled))
      (common-lisp:list
       (common-lisp:cons "Labeled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'normal))
      (common-lisp:list
       (common-lisp:cons "Normal"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'anomaly))
      (common-lisp:list
       (common-lisp:cons "Anomaly"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dataset-image-stats))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (dataset-metadata (:copier common-lisp:nil)
      (:conc-name "struct-shape-dataset-metadata-"))
   (dataset-type common-lisp:nil :type
    (common-lisp:or dataset-type common-lisp:null))
   (creation-timestamp common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or dataset-status common-lisp:null))
   (status-message common-lisp:nil :type
    (common-lisp:or dataset-status-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'dataset-metadata 'make-dataset-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dataset-metadata))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dataset-metadata))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dataset-type))
      (common-lisp:list
       (common-lisp:cons "DatasetType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-message))
      (common-lisp:list
       (common-lisp:cons "StatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dataset-metadata))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype dataset-metadata-list ()
   '(trivial-types:proper-list dataset-metadata))
 (common-lisp:defun |make-dataset-metadata-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list dataset-metadata))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (dataset-source (:copier common-lisp:nil)
      (:conc-name "struct-shape-dataset-source-"))
   (ground-truth-manifest common-lisp:nil :type
    (common-lisp:or dataset-ground-truth-manifest common-lisp:null)))
 (common-lisp:export (common-lisp:list 'dataset-source 'make-dataset-source))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dataset-source))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dataset-source))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ground-truth-manifest))
      (common-lisp:list
       (common-lisp:cons "GroundTruthManifest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dataset-source))
   common-lisp:nil))
(common-lisp:deftype dataset-status () 'common-lisp:string)
(common-lisp:deftype dataset-status-message () 'common-lisp:string)
(common-lisp:deftype dataset-type () 'common-lisp:string)
(common-lisp:deftype date-time () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (delete-dataset-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-dataset-request-"))
   (project-name (common-lisp:error ":project-name is required") :type
    (common-lisp:or project-name common-lisp:null))
   (dataset-type (common-lisp:error ":dataset-type is required") :type
    (common-lisp:or dataset-type common-lisp:null))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-dataset-request 'make-delete-dataset-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-dataset-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:cons "X-Amzn-Client-Token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-dataset-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-dataset-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-dataset-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-dataset-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-dataset-response 'make-delete-dataset-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-dataset-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-dataset-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-dataset-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-model-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-model-request-"))
   (project-name (common-lisp:error ":project-name is required") :type
    (common-lisp:or project-name common-lisp:null))
   (model-version (common-lisp:error ":model-version is required") :type
    (common-lisp:or model-version-no-latest common-lisp:null))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-model-request 'make-delete-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-model-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:cons "X-Amzn-Client-Token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-model-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-model-response-"))
   (model-arn common-lisp:nil :type
    (common-lisp:or model-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-model-response 'make-delete-model-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-model-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-model-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-arn))
      (common-lisp:list
       (common-lisp:cons "ModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-model-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-project-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-project-request-"))
   (project-name (common-lisp:error ":project-name is required") :type
    (common-lisp:or project-name common-lisp:null))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-project-request 'make-delete-project-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-project-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:cons "X-Amzn-Client-Token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-project-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-project-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-project-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-project-response-"))
   (project-arn common-lisp:nil :type
    (common-lisp:or project-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-project-response 'make-delete-project-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-project-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-project-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'project-arn))
      (common-lisp:list
       (common-lisp:cons "ProjectArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-project-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-dataset-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-dataset-request-"))
   (project-name (common-lisp:error ":project-name is required") :type
    (common-lisp:or project-name common-lisp:null))
   (dataset-type (common-lisp:error ":dataset-type is required") :type
    (common-lisp:or dataset-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-dataset-request 'make-describe-dataset-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-dataset-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-dataset-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-dataset-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-dataset-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-dataset-response-"))
   (dataset-description common-lisp:nil :type
    (common-lisp:or dataset-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-dataset-response
                    'make-describe-dataset-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-dataset-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-dataset-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dataset-description))
      (common-lisp:list
       (common-lisp:cons "DatasetDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-dataset-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-model-packaging-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-model-packaging-job-request-"))
   (project-name (common-lisp:error ":project-name is required") :type
    (common-lisp:or project-name common-lisp:null))
   (job-name (common-lisp:error ":job-name is required") :type
    (common-lisp:or model-packaging-job-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-model-packaging-job-request
                    'make-describe-model-packaging-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-model-packaging-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-model-packaging-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-model-packaging-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-model-packaging-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-model-packaging-job-response-"))
   (model-packaging-description common-lisp:nil :type
    (common-lisp:or model-packaging-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-model-packaging-job-response
                    'make-describe-model-packaging-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-model-packaging-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-model-packaging-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'model-packaging-description))
      (common-lisp:list
       (common-lisp:cons "ModelPackagingDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-model-packaging-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-model-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-model-request-"))
   (project-name (common-lisp:error ":project-name is required") :type
    (common-lisp:or project-name common-lisp:null))
   (model-version (common-lisp:error ":model-version is required") :type
    (common-lisp:or model-version common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-model-request 'make-describe-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-model-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-model-response-"))
   (model-description common-lisp:nil :type
    (common-lisp:or model-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-model-response 'make-describe-model-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-model-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-model-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-description))
      (common-lisp:list
       (common-lisp:cons "ModelDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-model-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-project-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-project-request-"))
   (project-name (common-lisp:error ":project-name is required") :type
    (common-lisp:or project-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-project-request 'make-describe-project-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-project-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-project-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-project-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-project-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-project-response-"))
   (project-description common-lisp:nil :type
    (common-lisp:or project-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-project-response
                    'make-describe-project-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-project-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-project-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'project-description))
      (common-lisp:list
       (common-lisp:cons "ProjectDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-project-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (detect-anomalies-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-detect-anomalies-request-"))
   (project-name (common-lisp:error ":project-name is required") :type
    (common-lisp:or project-name common-lisp:null))
   (model-version (common-lisp:error ":model-version is required") :type
    (common-lisp:or model-version common-lisp:null))
   (body (common-lisp:error ":body is required") :type
    (common-lisp:or stream common-lisp:null))
   (content-type (common-lisp:error ":content-type is required") :type
    (common-lisp:or content-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detect-anomalies-request 'make-detect-anomalies-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detect-anomalies-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-type))
      (common-lisp:cons "Content-Type" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detect-anomalies-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detect-anomalies-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'body)))
(common-lisp:progn
 (common-lisp:defstruct
     (detect-anomalies-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-detect-anomalies-response-"))
   (detect-anomaly-result common-lisp:nil :type
    (common-lisp:or detect-anomaly-result common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detect-anomalies-response
                    'make-detect-anomalies-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detect-anomalies-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detect-anomalies-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'detect-anomaly-result))
      (common-lisp:list
       (common-lisp:cons "DetectAnomalyResult"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detect-anomalies-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (detect-anomaly-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-detect-anomaly-result-"))
   (source common-lisp:nil :type
    (common-lisp:or image-source common-lisp:null))
   (is-anomalous common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (confidence common-lisp:nil :type (common-lisp:or float common-lisp:null))
   (anomalies common-lisp:nil :type
    (common-lisp:or anomaly-list common-lisp:null))
   (anomaly-mask common-lisp:nil :type
    (common-lisp:or anomaly-mask common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detect-anomaly-result 'make-detect-anomaly-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detect-anomaly-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detect-anomaly-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source))
      (common-lisp:list
       (common-lisp:cons "Source"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-anomalous))
      (common-lisp:list
       (common-lisp:cons "IsAnomalous"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'confidence))
      (common-lisp:list
       (common-lisp:cons "Confidence"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'anomalies))
      (common-lisp:list
       (common-lisp:cons "Anomalies"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'anomaly-mask))
      (common-lisp:list
       (common-lisp:cons "AnomalyMask"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detect-anomaly-result))
   common-lisp:nil))
(common-lisp:deftype exception-string () 'common-lisp:string)
(common-lisp:deftype float () 'common-lisp:single-float)
(common-lisp:progn
 (common-lisp:defstruct
     (greengrass-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-greengrass-configuration-"))
   (compiler-options common-lisp:nil :type
    (common-lisp:or compiler-options common-lisp:null))
   (target-device common-lisp:nil :type
    (common-lisp:or target-device common-lisp:null))
   (target-platform common-lisp:nil :type
    (common-lisp:or target-platform common-lisp:null))
   (s3output-location (common-lisp:error ":s3output-location is required")
    :type (common-lisp:or s3location common-lisp:null))
   (component-name (common-lisp:error ":component-name is required") :type
    (common-lisp:or component-name common-lisp:null))
   (component-version common-lisp:nil :type
    (common-lisp:or component-version common-lisp:null))
   (component-description common-lisp:nil :type
    (common-lisp:or component-description common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'greengrass-configuration 'make-greengrass-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          greengrass-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          greengrass-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'compiler-options))
      (common-lisp:list
       (common-lisp:cons "CompilerOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-device))
      (common-lisp:list
       (common-lisp:cons "TargetDevice"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-platform))
      (common-lisp:list
       (common-lisp:cons "TargetPlatform"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3output-location))
      (common-lisp:list
       (common-lisp:cons "S3OutputLocation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'component-name))
      (common-lisp:list
       (common-lisp:cons "ComponentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'component-version))
      (common-lisp:list
       (common-lisp:cons "ComponentVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'component-description))
      (common-lisp:list
       (common-lisp:cons "ComponentDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          greengrass-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (greengrass-output-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-greengrass-output-details-"))
   (component-version-arn common-lisp:nil :type
    (common-lisp:or component-version-arn common-lisp:null))
   (component-name common-lisp:nil :type
    (common-lisp:or component-name common-lisp:null))
   (component-version common-lisp:nil :type
    (common-lisp:or component-version common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'greengrass-output-details
                    'make-greengrass-output-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          greengrass-output-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          greengrass-output-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'component-version-arn))
      (common-lisp:list
       (common-lisp:cons "ComponentVersionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'component-name))
      (common-lisp:list
       (common-lisp:cons "ComponentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'component-version))
      (common-lisp:list
       (common-lisp:cons "ComponentVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          greengrass-output-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (image-source (:copier common-lisp:nil)
      (:conc-name "struct-shape-image-source-"))
   (type common-lisp:nil :type
    (common-lisp:or image-source-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'image-source 'make-image-source))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input image-source))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input image-source))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input image-source))
   common-lisp:nil))
(common-lisp:deftype image-source-type () 'common-lisp:string)
(common-lisp:deftype inference-units () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (input-s3object (:copier common-lisp:nil)
      (:conc-name "struct-shape-input-s3object-"))
   (bucket (common-lisp:error ":bucket is required") :type
    (common-lisp:or s3bucket-name common-lisp:null))
   (key (common-lisp:error ":key is required") :type
    (common-lisp:or s3object-key common-lisp:null))
   (version-id common-lisp:nil :type
    (common-lisp:or s3object-version common-lisp:null)))
 (common-lisp:export (common-lisp:list 'input-s3object 'make-input-s3object))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input input-s3object))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input input-s3object))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket))
      (common-lisp:list
       (common-lisp:cons "Bucket"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version-id))
      (common-lisp:list
       (common-lisp:cons "VersionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input input-s3object))
   common-lisp:nil))
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (lookoutvision-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-exception-message)
      (retry-after-seconds :initarg :retry-after-seconds :initform
       common-lisp:nil :reader internal-server-exception-retry-after-seconds)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-message
                    'internal-server-exception-retry-after-seconds)))
(common-lisp:deftype is-labeled () 'common-lisp:boolean)
(common-lisp:deftype kms-key-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (list-dataset-entries-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-dataset-entries-request-"))
   (project-name (common-lisp:error ":project-name is required") :type
    (common-lisp:or project-name common-lisp:null))
   (dataset-type (common-lisp:error ":dataset-type is required") :type
    (common-lisp:or dataset-type common-lisp:null))
   (labeled common-lisp:nil :type (common-lisp:or is-labeled common-lisp:null))
   (anomaly-class common-lisp:nil :type
    (common-lisp:or anomaly-class-filter common-lisp:null))
   (before-creation-date common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (after-creation-date common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or page-size common-lisp:null))
   (source-ref-contains common-lisp:nil :type
    (common-lisp:or query-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-dataset-entries-request
                    'make-list-dataset-entries-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-dataset-entries-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-dataset-entries-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-dataset-entries-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-dataset-entries-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-dataset-entries-response-"))
   (dataset-entries common-lisp:nil :type
    (common-lisp:or dataset-entry-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-dataset-entries-response
                    'make-list-dataset-entries-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-dataset-entries-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-dataset-entries-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dataset-entries))
      (common-lisp:list
       (common-lisp:cons "DatasetEntries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-dataset-entries-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-model-packaging-jobs-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-model-packaging-jobs-request-"))
   (project-name (common-lisp:error ":project-name is required") :type
    (common-lisp:or project-name common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or page-size common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-model-packaging-jobs-request
                    'make-list-model-packaging-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-model-packaging-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-model-packaging-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-model-packaging-jobs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-model-packaging-jobs-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-model-packaging-jobs-response-"))
   (model-packaging-jobs common-lisp:nil :type
    (common-lisp:or model-packaging-jobs-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-model-packaging-jobs-response
                    'make-list-model-packaging-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-model-packaging-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-model-packaging-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'model-packaging-jobs))
      (common-lisp:list
       (common-lisp:cons "ModelPackagingJobs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-model-packaging-jobs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-models-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-models-request-"))
   (project-name (common-lisp:error ":project-name is required") :type
    (common-lisp:or project-name common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or page-size common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-models-request 'make-list-models-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-models-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-models-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-models-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-models-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-models-response-"))
   (models common-lisp:nil :type
    (common-lisp:or model-metadata-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-models-response 'make-list-models-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-models-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-models-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'models))
      (common-lisp:list
       (common-lisp:cons "Models"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-models-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-projects-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-projects-request-"))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or page-size common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-projects-request 'make-list-projects-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-projects-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-projects-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-projects-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-projects-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-projects-response-"))
   (projects common-lisp:nil :type
    (common-lisp:or project-metadata-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-projects-response 'make-list-projects-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-projects-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-projects-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'projects))
      (common-lisp:list
       (common-lisp:cons "Projects"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-projects-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or tag-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-response-"))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:deftype model-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (model-description (:copier common-lisp:nil)
      (:conc-name "struct-shape-model-description-"))
   (model-version common-lisp:nil :type
    (common-lisp:or model-version common-lisp:null))
   (model-arn common-lisp:nil :type
    (common-lisp:or model-arn common-lisp:null))
   (creation-timestamp common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or model-description-message common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or model-status common-lisp:null))
   (status-message common-lisp:nil :type
    (common-lisp:or model-status-message common-lisp:null))
   (performance common-lisp:nil :type
    (common-lisp:or model-performance common-lisp:null))
   (output-config common-lisp:nil :type
    (common-lisp:or output-config common-lisp:null))
   (evaluation-manifest common-lisp:nil :type
    (common-lisp:or output-s3object common-lisp:null))
   (evaluation-result common-lisp:nil :type
    (common-lisp:or output-s3object common-lisp:null))
   (evaluation-end-timestamp common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (kms-key-id common-lisp:nil :type
    (common-lisp:or kms-key-id common-lisp:null))
   (min-inference-units common-lisp:nil :type
    (common-lisp:or inference-units common-lisp:null))
   (max-inference-units common-lisp:nil :type
    (common-lisp:or inference-units common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'model-description 'make-model-description))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input model-description))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input model-description))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-version))
      (common-lisp:list
       (common-lisp:cons "ModelVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-arn))
      (common-lisp:list
       (common-lisp:cons "ModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-message))
      (common-lisp:list
       (common-lisp:cons "StatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'performance))
      (common-lisp:list
       (common-lisp:cons "Performance"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-config))
      (common-lisp:list
       (common-lisp:cons "OutputConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'evaluation-manifest))
      (common-lisp:list
       (common-lisp:cons "EvaluationManifest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'evaluation-result))
      (common-lisp:list
       (common-lisp:cons "EvaluationResult"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'evaluation-end-timestamp))
      (common-lisp:list
       (common-lisp:cons "EvaluationEndTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key-id))
      (common-lisp:list
       (common-lisp:cons "KmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'min-inference-units))
      (common-lisp:list
       (common-lisp:cons "MinInferenceUnits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-inference-units))
      (common-lisp:list
       (common-lisp:cons "MaxInferenceUnits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input model-description))
   common-lisp:nil))
(common-lisp:deftype model-description-message () 'common-lisp:string)
(common-lisp:deftype model-hosting-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (model-metadata (:copier common-lisp:nil)
      (:conc-name "struct-shape-model-metadata-"))
   (creation-timestamp common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (model-version common-lisp:nil :type
    (common-lisp:or model-version common-lisp:null))
   (model-arn common-lisp:nil :type
    (common-lisp:or model-arn common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or model-description-message common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or model-status common-lisp:null))
   (status-message common-lisp:nil :type
    (common-lisp:or model-status-message common-lisp:null))
   (performance common-lisp:nil :type
    (common-lisp:or model-performance common-lisp:null)))
 (common-lisp:export (common-lisp:list 'model-metadata 'make-model-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input model-metadata))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input model-metadata))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-version))
      (common-lisp:list
       (common-lisp:cons "ModelVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-arn))
      (common-lisp:list
       (common-lisp:cons "ModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-message))
      (common-lisp:list
       (common-lisp:cons "StatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'performance))
      (common-lisp:list
       (common-lisp:cons "Performance"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input model-metadata))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype model-metadata-list ()
   '(trivial-types:proper-list model-metadata))
 (common-lisp:defun |make-model-metadata-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list model-metadata))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (model-packaging-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-model-packaging-configuration-"))
   (greengrass (common-lisp:error ":greengrass is required") :type
    (common-lisp:or greengrass-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'model-packaging-configuration
                    'make-model-packaging-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          model-packaging-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          model-packaging-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'greengrass))
      (common-lisp:list
       (common-lisp:cons "Greengrass"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          model-packaging-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (model-packaging-description (:copier common-lisp:nil)
      (:conc-name "struct-shape-model-packaging-description-"))
   (job-name common-lisp:nil :type
    (common-lisp:or model-packaging-job-name common-lisp:null))
   (project-name common-lisp:nil :type
    (common-lisp:or project-name common-lisp:null))
   (model-version common-lisp:nil :type
    (common-lisp:or model-version common-lisp:null))
   (model-packaging-configuration common-lisp:nil :type
    (common-lisp:or model-packaging-configuration common-lisp:null))
   (model-packaging-job-description common-lisp:nil :type
    (common-lisp:or model-packaging-job-description common-lisp:null))
   (model-packaging-method common-lisp:nil :type
    (common-lisp:or model-packaging-method common-lisp:null))
   (model-packaging-output-details common-lisp:nil :type
    (common-lisp:or model-packaging-output-details common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or model-packaging-job-status common-lisp:null))
   (status-message common-lisp:nil :type
    (common-lisp:or model-packaging-status-message common-lisp:null))
   (creation-timestamp common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (last-updated-timestamp common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'model-packaging-description
                    'make-model-packaging-description))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          model-packaging-description))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          model-packaging-description))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'project-name))
      (common-lisp:list
       (common-lisp:cons "ProjectName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-version))
      (common-lisp:list
       (common-lisp:cons "ModelVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'model-packaging-configuration))
      (common-lisp:list
       (common-lisp:cons "ModelPackagingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'model-packaging-job-description))
      (common-lisp:list
       (common-lisp:cons "ModelPackagingJobDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'model-packaging-method))
      (common-lisp:list
       (common-lisp:cons "ModelPackagingMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'model-packaging-output-details))
      (common-lisp:list
       (common-lisp:cons "ModelPackagingOutputDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-message))
      (common-lisp:list
       (common-lisp:cons "StatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          model-packaging-description))
   common-lisp:nil))
(common-lisp:deftype model-packaging-job-description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (model-packaging-job-metadata (:copier common-lisp:nil)
      (:conc-name "struct-shape-model-packaging-job-metadata-"))
   (job-name common-lisp:nil :type
    (common-lisp:or model-packaging-job-name common-lisp:null))
   (project-name common-lisp:nil :type
    (common-lisp:or project-name common-lisp:null))
   (model-version common-lisp:nil :type
    (common-lisp:or model-version common-lisp:null))
   (model-packaging-job-description common-lisp:nil :type
    (common-lisp:or model-packaging-job-description common-lisp:null))
   (model-packaging-method common-lisp:nil :type
    (common-lisp:or model-packaging-method common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or model-packaging-job-status common-lisp:null))
   (status-message common-lisp:nil :type
    (common-lisp:or model-packaging-status-message common-lisp:null))
   (creation-timestamp common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (last-updated-timestamp common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'model-packaging-job-metadata
                    'make-model-packaging-job-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          model-packaging-job-metadata))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          model-packaging-job-metadata))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'project-name))
      (common-lisp:list
       (common-lisp:cons "ProjectName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-version))
      (common-lisp:list
       (common-lisp:cons "ModelVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'model-packaging-job-description))
      (common-lisp:list
       (common-lisp:cons "ModelPackagingJobDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'model-packaging-method))
      (common-lisp:list
       (common-lisp:cons "ModelPackagingMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-message))
      (common-lisp:list
       (common-lisp:cons "StatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          model-packaging-job-metadata))
   common-lisp:nil))
(common-lisp:deftype model-packaging-job-name () 'common-lisp:string)
(common-lisp:deftype model-packaging-job-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype model-packaging-jobs-list ()
   '(trivial-types:proper-list model-packaging-job-metadata))
 (common-lisp:defun |make-model-packaging-jobs-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            model-packaging-job-metadata))
   aws-sdk/generator/shape::members))
(common-lisp:deftype model-packaging-method () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (model-packaging-output-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-model-packaging-output-details-"))
   (greengrass common-lisp:nil :type
    (common-lisp:or greengrass-output-details common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'model-packaging-output-details
                    'make-model-packaging-output-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          model-packaging-output-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          model-packaging-output-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'greengrass))
      (common-lisp:list
       (common-lisp:cons "Greengrass"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          model-packaging-output-details))
   common-lisp:nil))
(common-lisp:deftype model-packaging-status-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (model-performance (:copier common-lisp:nil)
      (:conc-name "struct-shape-model-performance-"))
   (f1score common-lisp:nil :type (common-lisp:or float common-lisp:null))
   (recall common-lisp:nil :type (common-lisp:or float common-lisp:null))
   (precision common-lisp:nil :type (common-lisp:or float common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'model-performance 'make-model-performance))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input model-performance))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input model-performance))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'f1score))
      (common-lisp:list
       (common-lisp:cons "F1Score"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recall))
      (common-lisp:list
       (common-lisp:cons "Recall"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'precision))
      (common-lisp:list
       (common-lisp:cons "Precision"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input model-performance))
   common-lisp:nil))
(common-lisp:deftype model-status () 'common-lisp:string)
(common-lisp:deftype model-status-message () 'common-lisp:string)
(common-lisp:deftype model-version () 'common-lisp:string)
(common-lisp:deftype model-version-no-latest () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (output-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-output-config-"))
   (s3location (common-lisp:error ":s3location is required") :type
    (common-lisp:or s3location common-lisp:null)))
 (common-lisp:export (common-lisp:list 'output-config 'make-output-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input output-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input output-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3location))
      (common-lisp:list
       (common-lisp:cons "S3Location"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input output-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (output-s3object (:copier common-lisp:nil)
      (:conc-name "struct-shape-output-s3object-"))
   (bucket (common-lisp:error ":bucket is required") :type
    (common-lisp:or s3bucket-name common-lisp:null))
   (key (common-lisp:error ":key is required") :type
    (common-lisp:or s3object-key common-lisp:null)))
 (common-lisp:export (common-lisp:list 'output-s3object 'make-output-s3object))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input output-s3object))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input output-s3object))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket))
      (common-lisp:list
       (common-lisp:cons "Bucket"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input output-s3object))
   common-lisp:nil))
(common-lisp:deftype page-size () 'common-lisp:integer)
(common-lisp:deftype pagination-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (pixel-anomaly (:copier common-lisp:nil)
      (:conc-name "struct-shape-pixel-anomaly-"))
   (total-percentage-area common-lisp:nil :type
    (common-lisp:or float common-lisp:null))
   (color common-lisp:nil :type (common-lisp:or color common-lisp:null)))
 (common-lisp:export (common-lisp:list 'pixel-anomaly 'make-pixel-anomaly))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input pixel-anomaly))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input pixel-anomaly))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'total-percentage-area))
      (common-lisp:list
       (common-lisp:cons "TotalPercentageArea"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'color))
      (common-lisp:list
       (common-lisp:cons "Color"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input pixel-anomaly))
   common-lisp:nil))
(common-lisp:deftype project-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (project-description (:copier common-lisp:nil)
      (:conc-name "struct-shape-project-description-"))
   (project-arn common-lisp:nil :type
    (common-lisp:or project-arn common-lisp:null))
   (project-name common-lisp:nil :type
    (common-lisp:or project-name common-lisp:null))
   (creation-timestamp common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (datasets common-lisp:nil :type
    (common-lisp:or dataset-metadata-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'project-description 'make-project-description))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input project-description))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input project-description))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'project-arn))
      (common-lisp:list
       (common-lisp:cons "ProjectArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'project-name))
      (common-lisp:list
       (common-lisp:cons "ProjectName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'datasets))
      (common-lisp:list
       (common-lisp:cons "Datasets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input project-description))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (project-metadata (:copier common-lisp:nil)
      (:conc-name "struct-shape-project-metadata-"))
   (project-arn common-lisp:nil :type
    (common-lisp:or project-arn common-lisp:null))
   (project-name common-lisp:nil :type
    (common-lisp:or project-name common-lisp:null))
   (creation-timestamp common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'project-metadata 'make-project-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input project-metadata))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input project-metadata))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'project-arn))
      (common-lisp:list
       (common-lisp:cons "ProjectArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'project-name))
      (common-lisp:list
       (common-lisp:cons "ProjectName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input project-metadata))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype project-metadata-list ()
   '(trivial-types:proper-list project-metadata))
 (common-lisp:defun |make-project-metadata-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list project-metadata))
   aws-sdk/generator/shape::members))
(common-lisp:deftype project-name () 'common-lisp:string)
(common-lisp:deftype query-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (lookoutvision-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)
      (resource-id :initarg :resource-id :initform common-lisp:nil :reader
       resource-not-found-exception-resource-id)
      (resource-type :initarg :resource-type :initform common-lisp:nil :reader
       resource-not-found-exception-resource-type)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message
                    'resource-not-found-exception-resource-id
                    'resource-not-found-exception-resource-type)))
(common-lisp:deftype resource-type () 'common-lisp:string)
(common-lisp:deftype retry-after-seconds () 'common-lisp:integer)
(common-lisp:deftype s3bucket-name () 'common-lisp:string)
(common-lisp:deftype s3key-prefix () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (s3location (:copier common-lisp:nil)
      (:conc-name "struct-shape-s3location-"))
   (bucket (common-lisp:error ":bucket is required") :type
    (common-lisp:or s3bucket-name common-lisp:null))
   (prefix common-lisp:nil :type
    (common-lisp:or s3key-prefix common-lisp:null)))
 (common-lisp:export (common-lisp:list 's3location 'make-s3location))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input s3location))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input s3location))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket))
      (common-lisp:list
       (common-lisp:cons "Bucket"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'prefix))
      (common-lisp:list
       (common-lisp:cons "Prefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input s3location))
   common-lisp:nil))
(common-lisp:deftype s3object-key () 'common-lisp:string)
(common-lisp:deftype s3object-version () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition service-quota-exceeded-exception
     (lookoutvision-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-quota-exceeded-exception-message)
      (resource-id :initarg :resource-id :initform common-lisp:nil :reader
       service-quota-exceeded-exception-resource-id)
      (resource-type :initarg :resource-type :initform common-lisp:nil :reader
       service-quota-exceeded-exception-resource-type)
      (quota-code :initarg :quota-code :initform common-lisp:nil :reader
       service-quota-exceeded-exception-quota-code)
      (service-code :initarg :service-code :initform common-lisp:nil :reader
       service-quota-exceeded-exception-service-code)))
 (common-lisp:export
  (common-lisp:list 'service-quota-exceeded-exception
                    'service-quota-exceeded-exception-message
                    'service-quota-exceeded-exception-resource-id
                    'service-quota-exceeded-exception-resource-type
                    'service-quota-exceeded-exception-quota-code
                    'service-quota-exceeded-exception-service-code)))
(common-lisp:progn
 (common-lisp:defstruct
     (start-model-packaging-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-model-packaging-job-request-"))
   (project-name (common-lisp:error ":project-name is required") :type
    (common-lisp:or project-name common-lisp:null))
   (model-version (common-lisp:error ":model-version is required") :type
    (common-lisp:or model-version common-lisp:null))
   (job-name common-lisp:nil :type
    (common-lisp:or model-packaging-job-name common-lisp:null))
   (configuration (common-lisp:error ":configuration is required") :type
    (common-lisp:or model-packaging-configuration common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or model-packaging-job-description common-lisp:null))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-model-packaging-job-request
                    'make-start-model-packaging-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-model-packaging-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:cons "X-Amzn-Client-Token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-model-packaging-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-version))
      (common-lisp:list
       (common-lisp:cons "ModelVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration))
      (common-lisp:list
       (common-lisp:cons "Configuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-model-packaging-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-model-packaging-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-model-packaging-job-response-"))
   (job-name common-lisp:nil :type
    (common-lisp:or model-packaging-job-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-model-packaging-job-response
                    'make-start-model-packaging-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-model-packaging-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-model-packaging-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-model-packaging-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-model-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-model-request-"))
   (project-name (common-lisp:error ":project-name is required") :type
    (common-lisp:or project-name common-lisp:null))
   (model-version (common-lisp:error ":model-version is required") :type
    (common-lisp:or model-version common-lisp:null))
   (min-inference-units (common-lisp:error ":min-inference-units is required")
    :type (common-lisp:or inference-units common-lisp:null))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null))
   (max-inference-units common-lisp:nil :type
    (common-lisp:or inference-units common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-model-request 'make-start-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input start-model-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:cons "X-Amzn-Client-Token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input start-model-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'min-inference-units))
      (common-lisp:list
       (common-lisp:cons "MinInferenceUnits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-inference-units))
      (common-lisp:list
       (common-lisp:cons "MaxInferenceUnits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input start-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-model-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-model-response-"))
   (status common-lisp:nil :type
    (common-lisp:or model-hosting-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-model-response 'make-start-model-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input start-model-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input start-model-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input start-model-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-model-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-stop-model-request-"))
   (project-name (common-lisp:error ":project-name is required") :type
    (common-lisp:or project-name common-lisp:null))
   (model-version (common-lisp:error ":model-version is required") :type
    (common-lisp:or model-version common-lisp:null))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-model-request 'make-stop-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stop-model-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:cons "X-Amzn-Client-Token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stop-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stop-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-model-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-stop-model-response-"))
   (status common-lisp:nil :type
    (common-lisp:or model-hosting-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-model-response 'make-stop-model-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stop-model-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stop-model-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stop-model-response))
   common-lisp:nil))
(common-lisp:deftype stream ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:progn
 (common-lisp:defstruct
     (tag (:copier common-lisp:nil) (:conc-name "struct-shape-tag-"))
   (key (common-lisp:error ":key is required") :type
    (common-lisp:or tag-key common-lisp:null))
   (value (common-lisp:error ":value is required") :type
    (common-lisp:or tag-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag))
   common-lisp:nil))
(common-lisp:deftype tag-arn () 'common-lisp:string)
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun |make-tag-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-tag-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or tag-arn common-lisp:null))
   (tags (common-lisp:error ":tags is required") :type
    (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:deftype target-device () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (target-platform (:copier common-lisp:nil)
      (:conc-name "struct-shape-target-platform-"))
   (os (common-lisp:error ":os is required") :type
    (common-lisp:or target-platform-os common-lisp:null))
   (arch (common-lisp:error ":arch is required") :type
    (common-lisp:or target-platform-arch common-lisp:null))
   (accelerator common-lisp:nil :type
    (common-lisp:or target-platform-accelerator common-lisp:null)))
 (common-lisp:export (common-lisp:list 'target-platform 'make-target-platform))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input target-platform))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input target-platform))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'os))
      (common-lisp:list
       (common-lisp:cons "Os"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arch))
      (common-lisp:list
       (common-lisp:cons "Arch"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'accelerator))
      (common-lisp:list
       (common-lisp:cons "Accelerator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input target-platform))
   common-lisp:nil))
(common-lisp:deftype target-platform-accelerator () 'common-lisp:string)
(common-lisp:deftype target-platform-arch () 'common-lisp:string)
(common-lisp:deftype target-platform-os () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (lookoutvision-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       throttling-exception-message)
      (quota-code :initarg :quota-code :initform common-lisp:nil :reader
       throttling-exception-quota-code)
      (service-code :initarg :service-code :initform common-lisp:nil :reader
       throttling-exception-service-code)
      (retry-after-seconds :initarg :retry-after-seconds :initform
       common-lisp:nil :reader throttling-exception-retry-after-seconds)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message
                    'throttling-exception-quota-code
                    'throttling-exception-service-code
                    'throttling-exception-retry-after-seconds)))
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or tag-arn common-lisp:null))
   (tag-keys (common-lisp:error ":tag-keys is required") :type
    (common-lisp:or tag-key-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-dataset-entries-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-dataset-entries-request-"))
   (project-name (common-lisp:error ":project-name is required") :type
    (common-lisp:or project-name common-lisp:null))
   (dataset-type (common-lisp:error ":dataset-type is required") :type
    (common-lisp:or dataset-type common-lisp:null))
   (changes (common-lisp:error ":changes is required") :type
    (common-lisp:or dataset-changes common-lisp:null))
   (client-token common-lisp:nil :type
    (common-lisp:or client-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-dataset-entries-request
                    'make-update-dataset-entries-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-dataset-entries-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:cons "X-Amzn-Client-Token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-dataset-entries-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'changes))
      (common-lisp:list
       (common-lisp:cons "Changes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-dataset-entries-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-dataset-entries-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-dataset-entries-response-"))
   (status common-lisp:nil :type
    (common-lisp:or dataset-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-dataset-entries-response
                    'make-update-dataset-entries-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-dataset-entries-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-dataset-entries-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-dataset-entries-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (lookoutvision-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       validation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-message)))
(common-lisp:progn
 (common-lisp:defun create-dataset
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key project-name dataset-type dataset-source
                     client-token)
   (common-lisp:declare
    (common-lisp:ignorable project-name dataset-type dataset-source
     client-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-dataset-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutvision-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/2020-11-20/projects/~A/datasets"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'project-name))))
                                                        "CreateDataset"
                                                        "2020-11-20"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-dataset))
(common-lisp:progn
 (common-lisp:defun create-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key project-name description client-token
                     output-config kms-key-id tags)
   (common-lisp:declare
    (common-lisp:ignorable project-name description client-token output-config
     kms-key-id tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutvision-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/2020-11-20/projects/~A/models"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'project-name))))
                                                        "CreateModel"
                                                        "2020-11-20"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-model))
(common-lisp:progn
 (common-lisp:defun create-project
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key project-name client-token)
   (common-lisp:declare (common-lisp:ignorable project-name client-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-project-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutvision-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/2020-11-20/projects"
                                                        "CreateProject"
                                                        "2020-11-20"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-project))
(common-lisp:progn
 (common-lisp:defun delete-dataset
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key project-name dataset-type client-token)
   (common-lisp:declare
    (common-lisp:ignorable project-name dataset-type client-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-dataset-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutvision-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/2020-11-20/projects/~A/datasets/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'project-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'dataset-type))))
                                                        "DeleteDataset"
                                                        "2020-11-20"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-dataset))
(common-lisp:progn
 (common-lisp:defun delete-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key project-name model-version client-token)
   (common-lisp:declare
    (common-lisp:ignorable project-name model-version client-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutvision-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/2020-11-20/projects/~A/models/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'project-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'model-version))))
                                                        "DeleteModel"
                                                        "2020-11-20"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-model))
(common-lisp:progn
 (common-lisp:defun delete-project
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key project-name client-token)
   (common-lisp:declare (common-lisp:ignorable project-name client-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-project-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutvision-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/2020-11-20/projects/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'project-name))))
                                                        "DeleteProject"
                                                        "2020-11-20"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-project))
(common-lisp:progn
 (common-lisp:defun describe-dataset
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key project-name dataset-type)
   (common-lisp:declare (common-lisp:ignorable project-name dataset-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-dataset-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutvision-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/2020-11-20/projects/~A/datasets/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'project-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'dataset-type))))
                                                        "DescribeDataset"
                                                        "2020-11-20"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-dataset))
(common-lisp:progn
 (common-lisp:defun describe-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key project-name model-version)
   (common-lisp:declare (common-lisp:ignorable project-name model-version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutvision-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/2020-11-20/projects/~A/models/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'project-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'model-version))))
                                                        "DescribeModel"
                                                        "2020-11-20"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-model))
(common-lisp:progn
 (common-lisp:defun describe-model-packaging-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key project-name job-name)
   (common-lisp:declare (common-lisp:ignorable project-name job-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-model-packaging-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutvision-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/2020-11-20/projects/~A/modelpackagingjobs/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'project-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'job-name))))
                                                        "DescribeModelPackagingJob"
                                                        "2020-11-20"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-model-packaging-job))
(common-lisp:progn
 (common-lisp:defun describe-project
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key project-name)
   (common-lisp:declare (common-lisp:ignorable project-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-project-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutvision-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/2020-11-20/projects/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'project-name))))
                                                        "DescribeProject"
                                                        "2020-11-20"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-project))
(common-lisp:progn
 (common-lisp:defun detect-anomalies
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key project-name model-version body
                     content-type)
   (common-lisp:declare
    (common-lisp:ignorable project-name model-version body content-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-detect-anomalies-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutvision-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/2020-11-20/projects/~A/models/~A/detect"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'project-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'model-version))))
                                                        "DetectAnomalies"
                                                        "2020-11-20"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'detect-anomalies))
(common-lisp:progn
 (common-lisp:defun list-dataset-entries
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key project-name dataset-type labeled
                     anomaly-class before-creation-date after-creation-date
                     next-token max-results source-ref-contains)
   (common-lisp:declare
    (common-lisp:ignorable project-name dataset-type labeled anomaly-class
     before-creation-date after-creation-date next-token max-results
     source-ref-contains))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-dataset-entries-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutvision-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/2020-11-20/projects/~A/datasets/~A/entries"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'project-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'dataset-type))))
                                                        "ListDatasetEntries"
                                                        "2020-11-20"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-dataset-entries))
(common-lisp:progn
 (common-lisp:defun list-model-packaging-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key project-name next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable project-name next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-model-packaging-jobs-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutvision-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/2020-11-20/projects/~A/modelpackagingjobs"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'project-name))))
                                                        "ListModelPackagingJobs"
                                                        "2020-11-20"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-model-packaging-jobs))
(common-lisp:progn
 (common-lisp:defun list-models
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key project-name next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable project-name next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-models-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutvision-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/2020-11-20/projects/~A/models"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'project-name))))
                                                        "ListModels"
                                                        "2020-11-20"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-models))
(common-lisp:progn
 (common-lisp:defun list-projects
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-projects-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutvision-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/2020-11-20/projects"
                                                        "ListProjects"
                                                        "2020-11-20"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-projects))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutvision-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/2020-11-20/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "ListTagsForResource"
                                                        "2020-11-20"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun start-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key project-name model-version
                     min-inference-units client-token max-inference-units)
   (common-lisp:declare
    (common-lisp:ignorable project-name model-version min-inference-units
     client-token max-inference-units))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutvision-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/2020-11-20/projects/~A/models/~A/start"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'project-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'model-version))))
                                                        "StartModel"
                                                        "2020-11-20"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-model))
(common-lisp:progn
 (common-lisp:defun start-model-packaging-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key project-name model-version job-name
                     configuration description client-token)
   (common-lisp:declare
    (common-lisp:ignorable project-name model-version job-name configuration
     description client-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-model-packaging-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutvision-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/2020-11-20/projects/~A/modelpackagingjobs"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'project-name))))
                                                        "StartModelPackagingJob"
                                                        "2020-11-20"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-model-packaging-job))
(common-lisp:progn
 (common-lisp:defun stop-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key project-name model-version client-token)
   (common-lisp:declare
    (common-lisp:ignorable project-name model-version client-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-stop-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutvision-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/2020-11-20/projects/~A/models/~A/stop"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'project-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'model-version))))
                                                        "StopModel"
                                                        "2020-11-20"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'stop-model))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutvision-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/2020-11-20/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "TagResource"
                                                        "2020-11-20"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutvision-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/2020-11-20/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "UntagResource"
                                                        "2020-11-20"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-dataset-entries
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key project-name dataset-type changes
                     client-token)
   (common-lisp:declare
    (common-lisp:ignorable project-name dataset-type changes client-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-dataset-entries-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutvision-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/2020-11-20/projects/~A/datasets/~A/entries"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'project-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'dataset-type))))
                                                        "UpdateDatasetEntries"
                                                        "2020-11-20"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-dataset-entries))
