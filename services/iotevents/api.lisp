;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/iotevents/api
  (:use)
  (:nicknames #:aws/iotevents)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/iotevents/api)
(common-lisp:progn
 (common-lisp:defclass iotevents-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "iotevents" :protocol
                        :rest-json))
 (common-lisp:export 'iotevents-request))
(common-lisp:progn
 (common-lisp:define-condition iotevents-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'iotevents-error))
(common-lisp:defvar *error-map*
  '(("InternalFailureException" . internal-failure-exception)
    ("InvalidRequestException" . invalid-request-exception)
    ("LimitExceededException" . limit-exceeded-exception)
    ("ResourceAlreadyExistsException" . resource-already-exists-exception)
    ("ResourceInUseException" . resource-in-use-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceUnavailableException" . service-unavailable-exception)
    ("ThrottlingException" . throttling-exception)
    ("UnsupportedOperationException" . unsupported-operation-exception)))
(common-lisp:progn
 (common-lisp:defstruct
     (acknowledge-flow (:copier common-lisp:nil)
      (:conc-name "struct-shape-acknowledge-flow-"))
   (enabled (common-lisp:error ":enabled is required") :type
    (common-lisp:or acknowledge-flow-enabled common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'acknowledge-flow 'make-acknowledge-flow))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input acknowledge-flow))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input acknowledge-flow))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input acknowledge-flow))
   common-lisp:nil))
(common-lisp:deftype acknowledge-flow-enabled () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct
     (action (:copier common-lisp:nil) (:conc-name "struct-shape-action-"))
   (set-variable common-lisp:nil :type
    (common-lisp:or set-variable-action common-lisp:null))
   (sns common-lisp:nil :type
    (common-lisp:or snstopic-publish-action common-lisp:null))
   (iot-topic-publish common-lisp:nil :type
    (common-lisp:or iot-topic-publish-action common-lisp:null))
   (set-timer common-lisp:nil :type
    (common-lisp:or set-timer-action common-lisp:null))
   (clear-timer common-lisp:nil :type
    (common-lisp:or clear-timer-action common-lisp:null))
   (reset-timer common-lisp:nil :type
    (common-lisp:or reset-timer-action common-lisp:null))
   (lambda common-lisp:nil :type
    (common-lisp:or lambda-action common-lisp:null))
   (iot-events common-lisp:nil :type
    (common-lisp:or iot-events-action common-lisp:null))
   (sqs common-lisp:nil :type (common-lisp:or sqs-action common-lisp:null))
   (firehose common-lisp:nil :type
    (common-lisp:or firehose-action common-lisp:null))
   (dynamo-db common-lisp:nil :type
    (common-lisp:or dynamo-dbaction common-lisp:null))
   (dynamo-dbv2 common-lisp:nil :type
    (common-lisp:or dynamo-dbv2action common-lisp:null))
   (iot-site-wise common-lisp:nil :type
    (common-lisp:or iot-site-wise-action common-lisp:null)))
 (common-lisp:export (common-lisp:list 'action 'make-action))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input action))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'set-variable))
      (common-lisp:list
       (common-lisp:cons "setVariable"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sns))
      (common-lisp:list
       (common-lisp:cons "sns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iot-topic-publish))
      (common-lisp:list
       (common-lisp:cons "iotTopicPublish"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'set-timer))
      (common-lisp:list
       (common-lisp:cons "setTimer"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'clear-timer))
      (common-lisp:list
       (common-lisp:cons "clearTimer"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reset-timer))
      (common-lisp:list
       (common-lisp:cons "resetTimer"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lambda))
      (common-lisp:list
       (common-lisp:cons "lambda"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iot-events))
      (common-lisp:list
       (common-lisp:cons "iotEvents"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sqs))
      (common-lisp:list
       (common-lisp:cons "sqs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firehose))
      (common-lisp:list
       (common-lisp:cons "firehose"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dynamo-db))
      (common-lisp:list
       (common-lisp:cons "dynamoDB"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dynamo-dbv2))
      (common-lisp:list
       (common-lisp:cons "dynamoDBv2"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iot-site-wise))
      (common-lisp:list
       (common-lisp:cons "iotSiteWise"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input action))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype actions () '(trivial-types:proper-list action))
 (common-lisp:defun |make-actions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list action))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (alarm-action (:copier common-lisp:nil)
      (:conc-name "struct-shape-alarm-action-"))
   (sns common-lisp:nil :type
    (common-lisp:or snstopic-publish-action common-lisp:null))
   (iot-topic-publish common-lisp:nil :type
    (common-lisp:or iot-topic-publish-action common-lisp:null))
   (lambda common-lisp:nil :type
    (common-lisp:or lambda-action common-lisp:null))
   (iot-events common-lisp:nil :type
    (common-lisp:or iot-events-action common-lisp:null))
   (sqs common-lisp:nil :type (common-lisp:or sqs-action common-lisp:null))
   (firehose common-lisp:nil :type
    (common-lisp:or firehose-action common-lisp:null))
   (dynamo-db common-lisp:nil :type
    (common-lisp:or dynamo-dbaction common-lisp:null))
   (dynamo-dbv2 common-lisp:nil :type
    (common-lisp:or dynamo-dbv2action common-lisp:null))
   (iot-site-wise common-lisp:nil :type
    (common-lisp:or iot-site-wise-action common-lisp:null)))
 (common-lisp:export (common-lisp:list 'alarm-action 'make-alarm-action))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input alarm-action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input alarm-action))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sns))
      (common-lisp:list
       (common-lisp:cons "sns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iot-topic-publish))
      (common-lisp:list
       (common-lisp:cons "iotTopicPublish"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lambda))
      (common-lisp:list
       (common-lisp:cons "lambda"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iot-events))
      (common-lisp:list
       (common-lisp:cons "iotEvents"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sqs))
      (common-lisp:list
       (common-lisp:cons "sqs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firehose))
      (common-lisp:list
       (common-lisp:cons "firehose"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dynamo-db))
      (common-lisp:list
       (common-lisp:cons "dynamoDB"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dynamo-dbv2))
      (common-lisp:list
       (common-lisp:cons "dynamoDBv2"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iot-site-wise))
      (common-lisp:list
       (common-lisp:cons "iotSiteWise"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input alarm-action))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype alarm-actions ()
   '(trivial-types:proper-list alarm-action))
 (common-lisp:defun |make-alarm-actions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list alarm-action))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (alarm-capabilities (:copier common-lisp:nil)
      (:conc-name "struct-shape-alarm-capabilities-"))
   (initialization-configuration common-lisp:nil :type
    (common-lisp:or initialization-configuration common-lisp:null))
   (acknowledge-flow common-lisp:nil :type
    (common-lisp:or acknowledge-flow common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'alarm-capabilities 'make-alarm-capabilities))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input alarm-capabilities))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input alarm-capabilities))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'initialization-configuration))
      (common-lisp:list
       (common-lisp:cons "initializationConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'acknowledge-flow))
      (common-lisp:list
       (common-lisp:cons "acknowledgeFlow"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input alarm-capabilities))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (alarm-event-actions (:copier common-lisp:nil)
      (:conc-name "struct-shape-alarm-event-actions-"))
   (alarm-actions common-lisp:nil :type
    (common-lisp:or alarm-actions common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'alarm-event-actions 'make-alarm-event-actions))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input alarm-event-actions))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input alarm-event-actions))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-actions))
      (common-lisp:list
       (common-lisp:cons "alarmActions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input alarm-event-actions))
   common-lisp:nil))
(common-lisp:deftype alarm-model-arn () 'common-lisp:string)
(common-lisp:deftype alarm-model-description () 'common-lisp:string)
(common-lisp:deftype alarm-model-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype alarm-model-summaries ()
   '(trivial-types:proper-list alarm-model-summary))
 (common-lisp:defun |make-alarm-model-summaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list alarm-model-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (alarm-model-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-alarm-model-summary-"))
   (creation-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (alarm-model-description common-lisp:nil :type
    (common-lisp:or alarm-model-description common-lisp:null))
   (alarm-model-name common-lisp:nil :type
    (common-lisp:or alarm-model-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'alarm-model-summary 'make-alarm-model-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input alarm-model-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input alarm-model-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "creationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'alarm-model-description))
      (common-lisp:list
       (common-lisp:cons "alarmModelDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-model-name))
      (common-lisp:list
       (common-lisp:cons "alarmModelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input alarm-model-summary))
   common-lisp:nil))
(common-lisp:deftype alarm-model-version () 'common-lisp:string)
(common-lisp:deftype alarm-model-version-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype alarm-model-version-summaries ()
   '(trivial-types:proper-list alarm-model-version-summary))
 (common-lisp:defun |make-alarm-model-version-summaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            alarm-model-version-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (alarm-model-version-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-alarm-model-version-summary-"))
   (alarm-model-name common-lisp:nil :type
    (common-lisp:or alarm-model-name common-lisp:null))
   (alarm-model-arn common-lisp:nil :type
    (common-lisp:or alarm-model-arn common-lisp:null))
   (alarm-model-version common-lisp:nil :type
    (common-lisp:or alarm-model-version common-lisp:null))
   (role-arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (last-update-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or alarm-model-version-status common-lisp:null))
   (status-message common-lisp:nil :type
    (common-lisp:or status-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'alarm-model-version-summary
                    'make-alarm-model-version-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          alarm-model-version-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          alarm-model-version-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-model-name))
      (common-lisp:list
       (common-lisp:cons "alarmModelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-model-arn))
      (common-lisp:list
       (common-lisp:cons "alarmModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-model-version))
      (common-lisp:list
       (common-lisp:cons "alarmModelVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "roleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "creationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-update-time))
      (common-lisp:list
       (common-lisp:cons "lastUpdateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-message))
      (common-lisp:list
       (common-lisp:cons "statusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          alarm-model-version-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (alarm-notification (:copier common-lisp:nil)
      (:conc-name "struct-shape-alarm-notification-"))
   (notification-actions common-lisp:nil :type
    (common-lisp:or notification-actions common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'alarm-notification 'make-alarm-notification))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input alarm-notification))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input alarm-notification))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'notification-actions))
      (common-lisp:list
       (common-lisp:cons "notificationActions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input alarm-notification))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (alarm-rule (:copier common-lisp:nil)
      (:conc-name "struct-shape-alarm-rule-"))
   (simple-rule common-lisp:nil :type
    (common-lisp:or simple-rule common-lisp:null)))
 (common-lisp:export (common-lisp:list 'alarm-rule 'make-alarm-rule))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input alarm-rule))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input alarm-rule))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'simple-rule))
      (common-lisp:list
       (common-lisp:cons "simpleRule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input alarm-rule))
   common-lisp:nil))
(common-lisp:deftype amazon-resource-name () 'common-lisp:string)
(common-lisp:deftype analysis-id () 'common-lisp:string)
(common-lisp:deftype analysis-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (analysis-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-analysis-result-"))
   (type common-lisp:nil :type (common-lisp:or analysis-type common-lisp:null))
   (level common-lisp:nil :type
    (common-lisp:or analysis-result-level common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or analysis-message common-lisp:null))
   (locations common-lisp:nil :type
    (common-lisp:or analysis-result-locations common-lisp:null)))
 (common-lisp:export (common-lisp:list 'analysis-result 'make-analysis-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input analysis-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input analysis-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'level))
      (common-lisp:list
       (common-lisp:cons "level"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'locations))
      (common-lisp:list
       (common-lisp:cons "locations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input analysis-result))
   common-lisp:nil))
(common-lisp:deftype analysis-result-level () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (analysis-result-location (:copier common-lisp:nil)
      (:conc-name "struct-shape-analysis-result-location-"))
   (path common-lisp:nil :type
    (common-lisp:or analysis-result-location-path common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'analysis-result-location 'make-analysis-result-location))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          analysis-result-location))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          analysis-result-location))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'path))
      (common-lisp:list
       (common-lisp:cons "path"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          analysis-result-location))
   common-lisp:nil))
(common-lisp:deftype analysis-result-location-path () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype analysis-result-locations ()
   '(trivial-types:proper-list analysis-result-location))
 (common-lisp:defun |make-analysis-result-locations|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            analysis-result-location))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype analysis-results ()
   '(trivial-types:proper-list analysis-result))
 (common-lisp:defun |make-analysis-results|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list analysis-result))
   aws-sdk/generator/shape::members))
(common-lisp:deftype analysis-status () 'common-lisp:string)
(common-lisp:deftype analysis-type () 'common-lisp:string)
(common-lisp:deftype asset-id () 'common-lisp:string)
(common-lisp:deftype asset-model-id () 'common-lisp:string)
(common-lisp:deftype asset-property-alias () 'common-lisp:string)
(common-lisp:deftype asset-property-boolean-value () 'common-lisp:string)
(common-lisp:deftype asset-property-double-value () 'common-lisp:string)
(common-lisp:deftype asset-property-entry-id () 'common-lisp:string)
(common-lisp:deftype asset-property-id () 'common-lisp:string)
(common-lisp:deftype asset-property-integer-value () 'common-lisp:string)
(common-lisp:deftype asset-property-offset-in-nanos () 'common-lisp:string)
(common-lisp:deftype asset-property-quality () 'common-lisp:string)
(common-lisp:deftype asset-property-string-value () 'common-lisp:string)
(common-lisp:deftype asset-property-time-in-seconds () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (asset-property-timestamp (:copier common-lisp:nil)
      (:conc-name "struct-shape-asset-property-timestamp-"))
   (time-in-seconds (common-lisp:error ":timeinseconds is required") :type
    (common-lisp:or asset-property-time-in-seconds common-lisp:null))
   (offset-in-nanos common-lisp:nil :type
    (common-lisp:or asset-property-offset-in-nanos common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'asset-property-timestamp 'make-asset-property-timestamp))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          asset-property-timestamp))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          asset-property-timestamp))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'time-in-seconds))
      (common-lisp:list
       (common-lisp:cons "timeInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'offset-in-nanos))
      (common-lisp:list
       (common-lisp:cons "offsetInNanos"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          asset-property-timestamp))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (asset-property-value (:copier common-lisp:nil)
      (:conc-name "struct-shape-asset-property-value-"))
   (value common-lisp:nil :type
    (common-lisp:or asset-property-variant common-lisp:null))
   (timestamp common-lisp:nil :type
    (common-lisp:or asset-property-timestamp common-lisp:null))
   (quality common-lisp:nil :type
    (common-lisp:or asset-property-quality common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'asset-property-value 'make-asset-property-value))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input asset-property-value))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input asset-property-value))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timestamp))
      (common-lisp:list
       (common-lisp:cons "timestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'quality))
      (common-lisp:list
       (common-lisp:cons "quality"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input asset-property-value))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (asset-property-variant (:copier common-lisp:nil)
      (:conc-name "struct-shape-asset-property-variant-"))
   (string-value common-lisp:nil :type
    (common-lisp:or asset-property-string-value common-lisp:null))
   (integer-value common-lisp:nil :type
    (common-lisp:or asset-property-integer-value common-lisp:null))
   (double-value common-lisp:nil :type
    (common-lisp:or asset-property-double-value common-lisp:null))
   (boolean-value common-lisp:nil :type
    (common-lisp:or asset-property-boolean-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'asset-property-variant 'make-asset-property-variant))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          asset-property-variant))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          asset-property-variant))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'string-value))
      (common-lisp:list
       (common-lisp:cons "stringValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integer-value))
      (common-lisp:list
       (common-lisp:cons "integerValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'double-value))
      (common-lisp:list
       (common-lisp:cons "doubleValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'boolean-value))
      (common-lisp:list
       (common-lisp:cons "booleanValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          asset-property-variant))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (attribute (:copier common-lisp:nil)
      (:conc-name "struct-shape-attribute-"))
   (json-path (common-lisp:error ":jsonpath is required") :type
    (common-lisp:or attribute-json-path common-lisp:null)))
 (common-lisp:export (common-lisp:list 'attribute 'make-attribute))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input attribute))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input attribute))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'json-path))
      (common-lisp:list
       (common-lisp:cons "jsonPath"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input attribute))
   common-lisp:nil))
(common-lisp:deftype attribute-json-path () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype attributes () '(trivial-types:proper-list attribute))
 (common-lisp:defun |make-attributes|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list attribute))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (clear-timer-action (:copier common-lisp:nil)
      (:conc-name "struct-shape-clear-timer-action-"))
   (timer-name (common-lisp:error ":timername is required") :type
    (common-lisp:or timer-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'clear-timer-action 'make-clear-timer-action))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input clear-timer-action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input clear-timer-action))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timer-name))
      (common-lisp:list
       (common-lisp:cons "timerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input clear-timer-action))
   common-lisp:nil))
(common-lisp:deftype comparison-operator () 'common-lisp:string)
(common-lisp:deftype condition () 'common-lisp:string)
(common-lisp:deftype content-expression () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (create-alarm-model-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-alarm-model-request-"))
   (alarm-model-name (common-lisp:error ":alarmmodelname is required") :type
    (common-lisp:or alarm-model-name common-lisp:null))
   (alarm-model-description common-lisp:nil :type
    (common-lisp:or alarm-model-description common-lisp:null))
   (role-arn (common-lisp:error ":rolearn is required") :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null))
   (key common-lisp:nil :type
    (common-lisp:or attribute-json-path common-lisp:null))
   (severity common-lisp:nil :type (common-lisp:or severity common-lisp:null))
   (alarm-rule (common-lisp:error ":alarmrule is required") :type
    (common-lisp:or alarm-rule common-lisp:null))
   (alarm-notification common-lisp:nil :type
    (common-lisp:or alarm-notification common-lisp:null))
   (alarm-event-actions common-lisp:nil :type
    (common-lisp:or alarm-event-actions common-lisp:null))
   (alarm-capabilities common-lisp:nil :type
    (common-lisp:or alarm-capabilities common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-alarm-model-request
                    'make-create-alarm-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-alarm-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-alarm-model-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-model-name))
      (common-lisp:list
       (common-lisp:cons "alarmModelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'alarm-model-description))
      (common-lisp:list
       (common-lisp:cons "alarmModelDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "roleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'severity))
      (common-lisp:list
       (common-lisp:cons "severity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-rule))
      (common-lisp:list
       (common-lisp:cons "alarmRule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-notification))
      (common-lisp:list
       (common-lisp:cons "alarmNotification"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-event-actions))
      (common-lisp:list
       (common-lisp:cons "alarmEventActions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-capabilities))
      (common-lisp:list
       (common-lisp:cons "alarmCapabilities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-alarm-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-alarm-model-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-alarm-model-response-"))
   (creation-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (alarm-model-arn common-lisp:nil :type
    (common-lisp:or alarm-model-arn common-lisp:null))
   (alarm-model-version common-lisp:nil :type
    (common-lisp:or alarm-model-version common-lisp:null))
   (last-update-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or alarm-model-version-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-alarm-model-response
                    'make-create-alarm-model-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-alarm-model-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-alarm-model-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "creationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-model-arn))
      (common-lisp:list
       (common-lisp:cons "alarmModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-model-version))
      (common-lisp:list
       (common-lisp:cons "alarmModelVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-update-time))
      (common-lisp:list
       (common-lisp:cons "lastUpdateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-alarm-model-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-detector-model-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-detector-model-request-"))
   (detector-model-name (common-lisp:error ":detectormodelname is required")
    :type (common-lisp:or detector-model-name common-lisp:null))
   (detector-model-definition
    (common-lisp:error ":detectormodeldefinition is required") :type
    (common-lisp:or detector-model-definition common-lisp:null))
   (detector-model-description common-lisp:nil :type
    (common-lisp:or detector-model-description common-lisp:null))
   (key common-lisp:nil :type
    (common-lisp:or attribute-json-path common-lisp:null))
   (role-arn (common-lisp:error ":rolearn is required") :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null))
   (evaluation-method common-lisp:nil :type
    (common-lisp:or evaluation-method common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-detector-model-request
                    'make-create-detector-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-detector-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-detector-model-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'detector-model-name))
      (common-lisp:list
       (common-lisp:cons "detectorModelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'detector-model-definition))
      (common-lisp:list
       (common-lisp:cons "detectorModelDefinition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'detector-model-description))
      (common-lisp:list
       (common-lisp:cons "detectorModelDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "roleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'evaluation-method))
      (common-lisp:list
       (common-lisp:cons "evaluationMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-detector-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-detector-model-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-detector-model-response-"))
   (detector-model-configuration common-lisp:nil :type
    (common-lisp:or detector-model-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-detector-model-response
                    'make-create-detector-model-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-detector-model-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-detector-model-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'detector-model-configuration))
      (common-lisp:list
       (common-lisp:cons "detectorModelConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-detector-model-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-input-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-input-request-"))
   (input-name (common-lisp:error ":inputname is required") :type
    (common-lisp:or input-name common-lisp:null))
   (input-description common-lisp:nil :type
    (common-lisp:or input-description common-lisp:null))
   (input-definition (common-lisp:error ":inputdefinition is required") :type
    (common-lisp:or input-definition common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-input-request 'make-create-input-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-input-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-input-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-name))
      (common-lisp:list
       (common-lisp:cons "inputName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-description))
      (common-lisp:list
       (common-lisp:cons "inputDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-definition))
      (common-lisp:list
       (common-lisp:cons "inputDefinition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-input-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-input-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-input-response-"))
   (input-configuration common-lisp:nil :type
    (common-lisp:or input-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-input-response 'make-create-input-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-input-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-input-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-configuration))
      (common-lisp:list
       (common-lisp:cons "inputConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-input-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-alarm-model-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-alarm-model-request-"))
   (alarm-model-name (common-lisp:error ":alarmmodelname is required") :type
    (common-lisp:or alarm-model-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-alarm-model-request
                    'make-delete-alarm-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-alarm-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-alarm-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-alarm-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-alarm-model-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-alarm-model-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-alarm-model-response
                    'make-delete-alarm-model-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-alarm-model-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-alarm-model-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-alarm-model-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-detector-model-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-detector-model-request-"))
   (detector-model-name (common-lisp:error ":detectormodelname is required")
    :type (common-lisp:or detector-model-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-detector-model-request
                    'make-delete-detector-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-detector-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-detector-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-detector-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-detector-model-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-detector-model-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-detector-model-response
                    'make-delete-detector-model-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-detector-model-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-detector-model-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-detector-model-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-input-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-input-request-"))
   (input-name (common-lisp:error ":inputname is required") :type
    (common-lisp:or input-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-input-request 'make-delete-input-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-input-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-input-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-input-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-input-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-input-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-input-response 'make-delete-input-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-input-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-input-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-input-response))
   common-lisp:nil))
(common-lisp:deftype delivery-stream-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (describe-alarm-model-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-alarm-model-request-"))
   (alarm-model-name (common-lisp:error ":alarmmodelname is required") :type
    (common-lisp:or alarm-model-name common-lisp:null))
   (alarm-model-version common-lisp:nil :type
    (common-lisp:or alarm-model-version common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-alarm-model-request
                    'make-describe-alarm-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-alarm-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-alarm-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-alarm-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-alarm-model-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-alarm-model-response-"))
   (creation-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (alarm-model-arn common-lisp:nil :type
    (common-lisp:or alarm-model-arn common-lisp:null))
   (alarm-model-version common-lisp:nil :type
    (common-lisp:or alarm-model-version common-lisp:null))
   (last-update-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or alarm-model-version-status common-lisp:null))
   (status-message common-lisp:nil :type
    (common-lisp:or status-message common-lisp:null))
   (alarm-model-name common-lisp:nil :type
    (common-lisp:or alarm-model-name common-lisp:null))
   (alarm-model-description common-lisp:nil :type
    (common-lisp:or alarm-model-description common-lisp:null))
   (role-arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (key common-lisp:nil :type
    (common-lisp:or attribute-json-path common-lisp:null))
   (severity common-lisp:nil :type (common-lisp:or severity common-lisp:null))
   (alarm-rule common-lisp:nil :type
    (common-lisp:or alarm-rule common-lisp:null))
   (alarm-notification common-lisp:nil :type
    (common-lisp:or alarm-notification common-lisp:null))
   (alarm-event-actions common-lisp:nil :type
    (common-lisp:or alarm-event-actions common-lisp:null))
   (alarm-capabilities common-lisp:nil :type
    (common-lisp:or alarm-capabilities common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-alarm-model-response
                    'make-describe-alarm-model-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-alarm-model-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-alarm-model-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "creationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-model-arn))
      (common-lisp:list
       (common-lisp:cons "alarmModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-model-version))
      (common-lisp:list
       (common-lisp:cons "alarmModelVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-update-time))
      (common-lisp:list
       (common-lisp:cons "lastUpdateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-message))
      (common-lisp:list
       (common-lisp:cons "statusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-model-name))
      (common-lisp:list
       (common-lisp:cons "alarmModelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'alarm-model-description))
      (common-lisp:list
       (common-lisp:cons "alarmModelDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "roleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'severity))
      (common-lisp:list
       (common-lisp:cons "severity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-rule))
      (common-lisp:list
       (common-lisp:cons "alarmRule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-notification))
      (common-lisp:list
       (common-lisp:cons "alarmNotification"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-event-actions))
      (common-lisp:list
       (common-lisp:cons "alarmEventActions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-capabilities))
      (common-lisp:list
       (common-lisp:cons "alarmCapabilities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-alarm-model-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-detector-model-analysis-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-detector-model-analysis-request-"))
   (analysis-id (common-lisp:error ":analysisid is required") :type
    (common-lisp:or analysis-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-detector-model-analysis-request
                    'make-describe-detector-model-analysis-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-detector-model-analysis-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-detector-model-analysis-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-detector-model-analysis-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-detector-model-analysis-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-detector-model-analysis-response-"))
   (status common-lisp:nil :type
    (common-lisp:or analysis-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-detector-model-analysis-response
                    'make-describe-detector-model-analysis-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-detector-model-analysis-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-detector-model-analysis-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-detector-model-analysis-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-detector-model-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-detector-model-request-"))
   (detector-model-name (common-lisp:error ":detectormodelname is required")
    :type (common-lisp:or detector-model-name common-lisp:null))
   (detector-model-version common-lisp:nil :type
    (common-lisp:or detector-model-version common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-detector-model-request
                    'make-describe-detector-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-detector-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-detector-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-detector-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-detector-model-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-detector-model-response-"))
   (detector-model common-lisp:nil :type
    (common-lisp:or detector-model common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-detector-model-response
                    'make-describe-detector-model-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-detector-model-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-detector-model-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'detector-model))
      (common-lisp:list
       (common-lisp:cons "detectorModel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-detector-model-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-input-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-input-request-"))
   (input-name (common-lisp:error ":inputname is required") :type
    (common-lisp:or input-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-input-request 'make-describe-input-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-input-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-input-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-input-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-input-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-input-response-"))
   (input common-lisp:nil :type (common-lisp:or input common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-input-response 'make-describe-input-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-input-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-input-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input))
      (common-lisp:list
       (common-lisp:cons "input"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-input-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-logging-options-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-logging-options-request-")))
 (common-lisp:export
  (common-lisp:list 'describe-logging-options-request
                    'make-describe-logging-options-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-logging-options-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-logging-options-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-logging-options-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-logging-options-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-logging-options-response-"))
   (logging-options common-lisp:nil :type
    (common-lisp:or logging-options common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-logging-options-response
                    'make-describe-logging-options-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-logging-options-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-logging-options-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'logging-options))
      (common-lisp:list
       (common-lisp:cons "loggingOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-logging-options-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (detector-debug-option (:copier common-lisp:nil)
      (:conc-name "struct-shape-detector-debug-option-"))
   (detector-model-name (common-lisp:error ":detectormodelname is required")
    :type (common-lisp:or detector-model-name common-lisp:null))
   (key-value common-lisp:nil :type
    (common-lisp:or key-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detector-debug-option 'make-detector-debug-option))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detector-debug-option))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detector-debug-option))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'detector-model-name))
      (common-lisp:list
       (common-lisp:cons "detectorModelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-value))
      (common-lisp:list
       (common-lisp:cons "keyValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detector-debug-option))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype detector-debug-options ()
   '(trivial-types:proper-list detector-debug-option))
 (common-lisp:defun |make-detector-debug-options|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list detector-debug-option))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (detector-model (:copier common-lisp:nil)
      (:conc-name "struct-shape-detector-model-"))
   (detector-model-definition common-lisp:nil :type
    (common-lisp:or detector-model-definition common-lisp:null))
   (detector-model-configuration common-lisp:nil :type
    (common-lisp:or detector-model-configuration common-lisp:null)))
 (common-lisp:export (common-lisp:list 'detector-model 'make-detector-model))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input detector-model))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input detector-model))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'detector-model-definition))
      (common-lisp:list
       (common-lisp:cons "detectorModelDefinition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'detector-model-configuration))
      (common-lisp:list
       (common-lisp:cons "detectorModelConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input detector-model))
   common-lisp:nil))
(common-lisp:deftype detector-model-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (detector-model-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-detector-model-configuration-"))
   (detector-model-name common-lisp:nil :type
    (common-lisp:or detector-model-name common-lisp:null))
   (detector-model-version common-lisp:nil :type
    (common-lisp:or detector-model-version common-lisp:null))
   (detector-model-description common-lisp:nil :type
    (common-lisp:or detector-model-description common-lisp:null))
   (detector-model-arn common-lisp:nil :type
    (common-lisp:or detector-model-arn common-lisp:null))
   (role-arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (last-update-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or detector-model-version-status common-lisp:null))
   (key common-lisp:nil :type
    (common-lisp:or attribute-json-path common-lisp:null))
   (evaluation-method common-lisp:nil :type
    (common-lisp:or evaluation-method common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detector-model-configuration
                    'make-detector-model-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detector-model-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detector-model-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'detector-model-name))
      (common-lisp:list
       (common-lisp:cons "detectorModelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'detector-model-version))
      (common-lisp:list
       (common-lisp:cons "detectorModelVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'detector-model-description))
      (common-lisp:list
       (common-lisp:cons "detectorModelDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'detector-model-arn))
      (common-lisp:list
       (common-lisp:cons "detectorModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "roleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "creationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-update-time))
      (common-lisp:list
       (common-lisp:cons "lastUpdateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'evaluation-method))
      (common-lisp:list
       (common-lisp:cons "evaluationMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detector-model-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (detector-model-definition (:copier common-lisp:nil)
      (:conc-name "struct-shape-detector-model-definition-"))
   (states (common-lisp:error ":states is required") :type
    (common-lisp:or states common-lisp:null))
   (initial-state-name (common-lisp:error ":initialstatename is required")
    :type (common-lisp:or state-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detector-model-definition
                    'make-detector-model-definition))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detector-model-definition))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detector-model-definition))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'states))
      (common-lisp:list
       (common-lisp:cons "states"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'initial-state-name))
      (common-lisp:list
       (common-lisp:cons "initialStateName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detector-model-definition))
   common-lisp:nil))
(common-lisp:deftype detector-model-description () 'common-lisp:string)
(common-lisp:deftype detector-model-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype detector-model-summaries ()
   '(trivial-types:proper-list detector-model-summary))
 (common-lisp:defun |make-detector-model-summaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list detector-model-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (detector-model-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-detector-model-summary-"))
   (detector-model-name common-lisp:nil :type
    (common-lisp:or detector-model-name common-lisp:null))
   (detector-model-description common-lisp:nil :type
    (common-lisp:or detector-model-description common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detector-model-summary 'make-detector-model-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detector-model-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detector-model-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'detector-model-name))
      (common-lisp:list
       (common-lisp:cons "detectorModelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'detector-model-description))
      (common-lisp:list
       (common-lisp:cons "detectorModelDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "creationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detector-model-summary))
   common-lisp:nil))
(common-lisp:deftype detector-model-version () 'common-lisp:string)
(common-lisp:deftype detector-model-version-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype detector-model-version-summaries ()
   '(trivial-types:proper-list detector-model-version-summary))
 (common-lisp:defun |make-detector-model-version-summaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            detector-model-version-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (detector-model-version-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-detector-model-version-summary-"))
   (detector-model-name common-lisp:nil :type
    (common-lisp:or detector-model-name common-lisp:null))
   (detector-model-version common-lisp:nil :type
    (common-lisp:or detector-model-version common-lisp:null))
   (detector-model-arn common-lisp:nil :type
    (common-lisp:or detector-model-arn common-lisp:null))
   (role-arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (last-update-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or detector-model-version-status common-lisp:null))
   (evaluation-method common-lisp:nil :type
    (common-lisp:or evaluation-method common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detector-model-version-summary
                    'make-detector-model-version-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detector-model-version-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detector-model-version-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'detector-model-name))
      (common-lisp:list
       (common-lisp:cons "detectorModelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'detector-model-version))
      (common-lisp:list
       (common-lisp:cons "detectorModelVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'detector-model-arn))
      (common-lisp:list
       (common-lisp:cons "detectorModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "roleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "creationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-update-time))
      (common-lisp:list
       (common-lisp:cons "lastUpdateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'evaluation-method))
      (common-lisp:list
       (common-lisp:cons "evaluationMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detector-model-version-summary))
   common-lisp:nil))
(common-lisp:deftype disabled-on-initialization () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct
     (dynamo-dbaction (:copier common-lisp:nil)
      (:conc-name "struct-shape-dynamo-dbaction-"))
   (hash-key-type common-lisp:nil :type
    (common-lisp:or dynamo-key-type common-lisp:null))
   (hash-key-field (common-lisp:error ":hashkeyfield is required") :type
    (common-lisp:or dynamo-key-field common-lisp:null))
   (hash-key-value (common-lisp:error ":hashkeyvalue is required") :type
    (common-lisp:or dynamo-key-value common-lisp:null))
   (range-key-type common-lisp:nil :type
    (common-lisp:or dynamo-key-type common-lisp:null))
   (range-key-field common-lisp:nil :type
    (common-lisp:or dynamo-key-field common-lisp:null))
   (range-key-value common-lisp:nil :type
    (common-lisp:or dynamo-key-value common-lisp:null))
   (operation common-lisp:nil :type
    (common-lisp:or dynamo-operation common-lisp:null))
   (payload-field common-lisp:nil :type
    (common-lisp:or dynamo-key-field common-lisp:null))
   (table-name (common-lisp:error ":tablename is required") :type
    (common-lisp:or dynamo-table-name common-lisp:null))
   (payload common-lisp:nil :type (common-lisp:or payload common-lisp:null)))
 (common-lisp:export (common-lisp:list 'dynamo-dbaction 'make-dynamo-dbaction))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dynamo-dbaction))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dynamo-dbaction))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hash-key-type))
      (common-lisp:list
       (common-lisp:cons "hashKeyType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hash-key-field))
      (common-lisp:list
       (common-lisp:cons "hashKeyField"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hash-key-value))
      (common-lisp:list
       (common-lisp:cons "hashKeyValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'range-key-type))
      (common-lisp:list
       (common-lisp:cons "rangeKeyType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'range-key-field))
      (common-lisp:list
       (common-lisp:cons "rangeKeyField"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'range-key-value))
      (common-lisp:list
       (common-lisp:cons "rangeKeyValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'payload-field))
      (common-lisp:list
       (common-lisp:cons "payloadField"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'table-name))
      (common-lisp:list
       (common-lisp:cons "tableName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'payload))
      (common-lisp:list
       (common-lisp:cons "payload"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dynamo-dbaction))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (dynamo-dbv2action (:copier common-lisp:nil)
      (:conc-name "struct-shape-dynamo-dbv2action-"))
   (table-name (common-lisp:error ":tablename is required") :type
    (common-lisp:or dynamo-table-name common-lisp:null))
   (payload common-lisp:nil :type (common-lisp:or payload common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'dynamo-dbv2action 'make-dynamo-dbv2action))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dynamo-dbv2action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dynamo-dbv2action))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'table-name))
      (common-lisp:list
       (common-lisp:cons "tableName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'payload))
      (common-lisp:list
       (common-lisp:cons "payload"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dynamo-dbv2action))
   common-lisp:nil))
(common-lisp:deftype dynamo-key-field () 'common-lisp:string)
(common-lisp:deftype dynamo-key-type () 'common-lisp:string)
(common-lisp:deftype dynamo-key-value () 'common-lisp:string)
(common-lisp:deftype dynamo-operation () 'common-lisp:string)
(common-lisp:deftype dynamo-table-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (email-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-email-configuration-"))
   (from (common-lisp:error ":from is required") :type
    (common-lisp:or from-email common-lisp:null))
   (content common-lisp:nil :type
    (common-lisp:or email-content common-lisp:null))
   (recipients (common-lisp:error ":recipients is required") :type
    (common-lisp:or email-recipients common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'email-configuration 'make-email-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input email-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input email-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from))
      (common-lisp:list
       (common-lisp:cons "from"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content))
      (common-lisp:list
       (common-lisp:cons "content"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recipients))
      (common-lisp:list
       (common-lisp:cons "recipients"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input email-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype email-configurations ()
   '(trivial-types:proper-list email-configuration))
 (common-lisp:defun |make-email-configurations|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list email-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (email-content (:copier common-lisp:nil)
      (:conc-name "struct-shape-email-content-"))
   (subject common-lisp:nil :type
    (common-lisp:or email-subject common-lisp:null))
   (additional-message common-lisp:nil :type
    (common-lisp:or notification-additional-message common-lisp:null)))
 (common-lisp:export (common-lisp:list 'email-content 'make-email-content))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input email-content))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input email-content))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subject))
      (common-lisp:list
       (common-lisp:cons "subject"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'additional-message))
      (common-lisp:list
       (common-lisp:cons "additionalMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input email-content))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (email-recipients (:copier common-lisp:nil)
      (:conc-name "struct-shape-email-recipients-"))
   (to common-lisp:nil :type
    (common-lisp:or recipient-details common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'email-recipients 'make-email-recipients))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input email-recipients))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input email-recipients))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'to))
      (common-lisp:list
       (common-lisp:cons "to"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input email-recipients))
   common-lisp:nil))
(common-lisp:deftype email-subject () 'common-lisp:string)
(common-lisp:deftype evaluation-method () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (event (:copier common-lisp:nil) (:conc-name "struct-shape-event-"))
   (event-name (common-lisp:error ":eventname is required") :type
    (common-lisp:or event-name common-lisp:null))
   (condition common-lisp:nil :type
    (common-lisp:or condition common-lisp:null))
   (actions common-lisp:nil :type (common-lisp:or actions common-lisp:null)))
 (common-lisp:export (common-lisp:list 'event 'make-event))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input event))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input event))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-name))
      (common-lisp:list
       (common-lisp:cons "eventName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'condition))
      (common-lisp:list
       (common-lisp:cons "condition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'actions))
      (common-lisp:list
       (common-lisp:cons "actions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input event))
   common-lisp:nil))
(common-lisp:deftype event-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype events () '(trivial-types:proper-list event))
 (common-lisp:defun |make-events|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list event))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (firehose-action (:copier common-lisp:nil)
      (:conc-name "struct-shape-firehose-action-"))
   (delivery-stream-name (common-lisp:error ":deliverystreamname is required")
    :type (common-lisp:or delivery-stream-name common-lisp:null))
   (separator common-lisp:nil :type
    (common-lisp:or firehose-separator common-lisp:null))
   (payload common-lisp:nil :type (common-lisp:or payload common-lisp:null)))
 (common-lisp:export (common-lisp:list 'firehose-action 'make-firehose-action))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input firehose-action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input firehose-action))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'delivery-stream-name))
      (common-lisp:list
       (common-lisp:cons "deliveryStreamName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'separator))
      (common-lisp:list
       (common-lisp:cons "separator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'payload))
      (common-lisp:list
       (common-lisp:cons "payload"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input firehose-action))
   common-lisp:nil))
(common-lisp:deftype firehose-separator () 'common-lisp:string)
(common-lisp:deftype from-email () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (get-detector-model-analysis-results-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-detector-model-analysis-results-request-"))
   (analysis-id (common-lisp:error ":analysisid is required") :type
    (common-lisp:or analysis-id common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-analysis-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-detector-model-analysis-results-request
                    'make-get-detector-model-analysis-results-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-detector-model-analysis-results-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-detector-model-analysis-results-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-detector-model-analysis-results-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-detector-model-analysis-results-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-detector-model-analysis-results-response-"))
   (analysis-results common-lisp:nil :type
    (common-lisp:or analysis-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-detector-model-analysis-results-response
                    'make-get-detector-model-analysis-results-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-detector-model-analysis-results-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-detector-model-analysis-results-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'analysis-results))
      (common-lisp:list
       (common-lisp:cons "analysisResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-detector-model-analysis-results-response))
   common-lisp:nil))
(common-lisp:deftype identity-store-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (initialization-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-initialization-configuration-"))
   (disabled-on-initialization
    (common-lisp:error ":disabledoninitialization is required") :type
    (common-lisp:or disabled-on-initialization common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'initialization-configuration
                    'make-initialization-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          initialization-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          initialization-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disabled-on-initialization))
      (common-lisp:list
       (common-lisp:cons "disabledOnInitialization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          initialization-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (input (:copier common-lisp:nil) (:conc-name "struct-shape-input-"))
   (input-configuration common-lisp:nil :type
    (common-lisp:or input-configuration common-lisp:null))
   (input-definition common-lisp:nil :type
    (common-lisp:or input-definition common-lisp:null)))
 (common-lisp:export (common-lisp:list 'input 'make-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-configuration))
      (common-lisp:list
       (common-lisp:cons "inputConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-definition))
      (common-lisp:list
       (common-lisp:cons "inputDefinition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input input))
   common-lisp:nil))
(common-lisp:deftype input-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (input-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-input-configuration-"))
   (input-name (common-lisp:error ":inputname is required") :type
    (common-lisp:or input-name common-lisp:null))
   (input-description common-lisp:nil :type
    (common-lisp:or input-description common-lisp:null))
   (input-arn (common-lisp:error ":inputarn is required") :type
    (common-lisp:or input-arn common-lisp:null))
   (creation-time (common-lisp:error ":creationtime is required") :type
    (common-lisp:or timestamp common-lisp:null))
   (last-update-time (common-lisp:error ":lastupdatetime is required") :type
    (common-lisp:or timestamp common-lisp:null))
   (status (common-lisp:error ":status is required") :type
    (common-lisp:or input-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'input-configuration 'make-input-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input input-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input input-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-name))
      (common-lisp:list
       (common-lisp:cons "inputName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-description))
      (common-lisp:list
       (common-lisp:cons "inputDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-arn))
      (common-lisp:list
       (common-lisp:cons "inputArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "creationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-update-time))
      (common-lisp:list
       (common-lisp:cons "lastUpdateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input input-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (input-definition (:copier common-lisp:nil)
      (:conc-name "struct-shape-input-definition-"))
   (attributes (common-lisp:error ":attributes is required") :type
    (common-lisp:or attributes common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'input-definition 'make-input-definition))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input input-definition))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input input-definition))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input input-definition))
   common-lisp:nil))
(common-lisp:deftype input-description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (input-identifier (:copier common-lisp:nil)
      (:conc-name "struct-shape-input-identifier-"))
   (iot-events-input-identifier common-lisp:nil :type
    (common-lisp:or iot-events-input-identifier common-lisp:null))
   (iot-site-wise-input-identifier common-lisp:nil :type
    (common-lisp:or iot-site-wise-input-identifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'input-identifier 'make-input-identifier))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input input-identifier))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input input-identifier))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'iot-events-input-identifier))
      (common-lisp:list
       (common-lisp:cons "iotEventsInputIdentifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'iot-site-wise-input-identifier))
      (common-lisp:list
       (common-lisp:cons "iotSiteWiseInputIdentifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input input-identifier))
   common-lisp:nil))
(common-lisp:deftype input-name () 'common-lisp:string)
(common-lisp:deftype input-property () 'common-lisp:string)
(common-lisp:deftype input-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype input-summaries ()
   '(trivial-types:proper-list input-summary))
 (common-lisp:defun |make-input-summaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list input-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (input-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-input-summary-"))
   (input-name common-lisp:nil :type
    (common-lisp:or input-name common-lisp:null))
   (input-description common-lisp:nil :type
    (common-lisp:or input-description common-lisp:null))
   (input-arn common-lisp:nil :type
    (common-lisp:or input-arn common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (last-update-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or input-status common-lisp:null)))
 (common-lisp:export (common-lisp:list 'input-summary 'make-input-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input input-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input input-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-name))
      (common-lisp:list
       (common-lisp:cons "inputName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-description))
      (common-lisp:list
       (common-lisp:cons "inputDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-arn))
      (common-lisp:list
       (common-lisp:cons "inputArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "creationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-update-time))
      (common-lisp:list
       (common-lisp:cons "lastUpdateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input input-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition internal-failure-exception
     (iotevents-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-failure-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-failure-exception
                    'internal-failure-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-request-exception
     (iotevents-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-request-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-request-exception
                    'invalid-request-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (iot-events-action (:copier common-lisp:nil)
      (:conc-name "struct-shape-iot-events-action-"))
   (input-name (common-lisp:error ":inputname is required") :type
    (common-lisp:or input-name common-lisp:null))
   (payload common-lisp:nil :type (common-lisp:or payload common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'iot-events-action 'make-iot-events-action))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input iot-events-action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input iot-events-action))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-name))
      (common-lisp:list
       (common-lisp:cons "inputName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'payload))
      (common-lisp:list
       (common-lisp:cons "payload"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input iot-events-action))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (iot-events-input-identifier (:copier common-lisp:nil)
      (:conc-name "struct-shape-iot-events-input-identifier-"))
   (input-name (common-lisp:error ":inputname is required") :type
    (common-lisp:or input-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'iot-events-input-identifier
                    'make-iot-events-input-identifier))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          iot-events-input-identifier))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          iot-events-input-identifier))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-name))
      (common-lisp:list
       (common-lisp:cons "inputName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          iot-events-input-identifier))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (iot-site-wise-action (:copier common-lisp:nil)
      (:conc-name "struct-shape-iot-site-wise-action-"))
   (entry-id common-lisp:nil :type
    (common-lisp:or asset-property-entry-id common-lisp:null))
   (asset-id common-lisp:nil :type (common-lisp:or asset-id common-lisp:null))
   (property-id common-lisp:nil :type
    (common-lisp:or asset-property-id common-lisp:null))
   (property-alias common-lisp:nil :type
    (common-lisp:or asset-property-alias common-lisp:null))
   (property-value common-lisp:nil :type
    (common-lisp:or asset-property-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'iot-site-wise-action 'make-iot-site-wise-action))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input iot-site-wise-action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input iot-site-wise-action))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entry-id))
      (common-lisp:list
       (common-lisp:cons "entryId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'asset-id))
      (common-lisp:list
       (common-lisp:cons "assetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'property-id))
      (common-lisp:list
       (common-lisp:cons "propertyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'property-alias))
      (common-lisp:list
       (common-lisp:cons "propertyAlias"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'property-value))
      (common-lisp:list
       (common-lisp:cons "propertyValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input iot-site-wise-action))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (iot-site-wise-asset-model-property-identifier (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-iot-site-wise-asset-model-property-identifier-"))
   (asset-model-id (common-lisp:error ":assetmodelid is required") :type
    (common-lisp:or asset-model-id common-lisp:null))
   (property-id (common-lisp:error ":propertyid is required") :type
    (common-lisp:or asset-property-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'iot-site-wise-asset-model-property-identifier
                    'make-iot-site-wise-asset-model-property-identifier))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          iot-site-wise-asset-model-property-identifier))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          iot-site-wise-asset-model-property-identifier))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'asset-model-id))
      (common-lisp:list
       (common-lisp:cons "assetModelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'property-id))
      (common-lisp:list
       (common-lisp:cons "propertyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          iot-site-wise-asset-model-property-identifier))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (iot-site-wise-input-identifier (:copier common-lisp:nil)
      (:conc-name "struct-shape-iot-site-wise-input-identifier-"))
   (iot-site-wise-asset-model-property-identifier common-lisp:nil :type
    (common-lisp:or iot-site-wise-asset-model-property-identifier
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'iot-site-wise-input-identifier
                    'make-iot-site-wise-input-identifier))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          iot-site-wise-input-identifier))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          iot-site-wise-input-identifier))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'iot-site-wise-asset-model-property-identifier))
      (common-lisp:list
       (common-lisp:cons "iotSiteWiseAssetModelPropertyIdentifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          iot-site-wise-input-identifier))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (iot-topic-publish-action (:copier common-lisp:nil)
      (:conc-name "struct-shape-iot-topic-publish-action-"))
   (mqtt-topic (common-lisp:error ":mqtttopic is required") :type
    (common-lisp:or mqtttopic common-lisp:null))
   (payload common-lisp:nil :type (common-lisp:or payload common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'iot-topic-publish-action 'make-iot-topic-publish-action))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          iot-topic-publish-action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          iot-topic-publish-action))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mqtt-topic))
      (common-lisp:list
       (common-lisp:cons "mqttTopic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'payload))
      (common-lisp:list
       (common-lisp:cons "payload"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          iot-topic-publish-action))
   common-lisp:nil))
(common-lisp:deftype key-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (lambda-action (:copier common-lisp:nil)
      (:conc-name "struct-shape-lambda-action-"))
   (function-arn (common-lisp:error ":functionarn is required") :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (payload common-lisp:nil :type (common-lisp:or payload common-lisp:null)))
 (common-lisp:export (common-lisp:list 'lambda-action 'make-lambda-action))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input lambda-action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input lambda-action))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'function-arn))
      (common-lisp:list
       (common-lisp:cons "functionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'payload))
      (common-lisp:list
       (common-lisp:cons "payload"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input lambda-action))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition limit-exceeded-exception
     (iotevents-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       limit-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception
                    'limit-exceeded-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (list-alarm-model-versions-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-alarm-model-versions-request-"))
   (alarm-model-name (common-lisp:error ":alarmmodelname is required") :type
    (common-lisp:or alarm-model-name common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-alarm-model-versions-request
                    'make-list-alarm-model-versions-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-alarm-model-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-alarm-model-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-alarm-model-versions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-alarm-model-versions-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-alarm-model-versions-response-"))
   (alarm-model-version-summaries common-lisp:nil :type
    (common-lisp:or alarm-model-version-summaries common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-alarm-model-versions-response
                    'make-list-alarm-model-versions-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-alarm-model-versions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-alarm-model-versions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'alarm-model-version-summaries))
      (common-lisp:list
       (common-lisp:cons "alarmModelVersionSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-alarm-model-versions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-alarm-models-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-alarm-models-request-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-alarm-models-request
                    'make-list-alarm-models-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-alarm-models-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-alarm-models-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-alarm-models-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-alarm-models-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-alarm-models-response-"))
   (alarm-model-summaries common-lisp:nil :type
    (common-lisp:or alarm-model-summaries common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-alarm-models-response
                    'make-list-alarm-models-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-alarm-models-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-alarm-models-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'alarm-model-summaries))
      (common-lisp:list
       (common-lisp:cons "alarmModelSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-alarm-models-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-detector-model-versions-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-detector-model-versions-request-"))
   (detector-model-name (common-lisp:error ":detectormodelname is required")
    :type (common-lisp:or detector-model-name common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-detector-model-versions-request
                    'make-list-detector-model-versions-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-detector-model-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-detector-model-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-detector-model-versions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-detector-model-versions-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-detector-model-versions-response-"))
   (detector-model-version-summaries common-lisp:nil :type
    (common-lisp:or detector-model-version-summaries common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-detector-model-versions-response
                    'make-list-detector-model-versions-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-detector-model-versions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-detector-model-versions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'detector-model-version-summaries))
      (common-lisp:list
       (common-lisp:cons "detectorModelVersionSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-detector-model-versions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-detector-models-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-detector-models-request-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-detector-models-request
                    'make-list-detector-models-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-detector-models-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-detector-models-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-detector-models-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-detector-models-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-detector-models-response-"))
   (detector-model-summaries common-lisp:nil :type
    (common-lisp:or detector-model-summaries common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-detector-models-response
                    'make-list-detector-models-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-detector-models-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-detector-models-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'detector-model-summaries))
      (common-lisp:list
       (common-lisp:cons "detectorModelSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-detector-models-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-input-routings-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-input-routings-request-"))
   (input-identifier (common-lisp:error ":inputidentifier is required") :type
    (common-lisp:or input-identifier common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-input-routings-request
                    'make-list-input-routings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-input-routings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-input-routings-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-identifier))
      (common-lisp:list
       (common-lisp:cons "inputIdentifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-input-routings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-input-routings-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-input-routings-response-"))
   (routed-resources common-lisp:nil :type
    (common-lisp:or routed-resources common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-input-routings-response
                    'make-list-input-routings-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-input-routings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-input-routings-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'routed-resources))
      (common-lisp:list
       (common-lisp:cons "routedResources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-input-routings-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-inputs-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-inputs-request-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-inputs-request 'make-list-inputs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-inputs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-inputs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-inputs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-inputs-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-inputs-response-"))
   (input-summaries common-lisp:nil :type
    (common-lisp:or input-summaries common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-inputs-response 'make-list-inputs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-inputs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-inputs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-summaries))
      (common-lisp:list
       (common-lisp:cons "inputSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-inputs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-request-"))
   (resource-arn (common-lisp:error ":resourcearn is required") :type
    (common-lisp:or amazon-resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-response-"))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:deftype logging-enabled () 'common-lisp:boolean)
(common-lisp:deftype logging-level () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (logging-options (:copier common-lisp:nil)
      (:conc-name "struct-shape-logging-options-"))
   (role-arn (common-lisp:error ":rolearn is required") :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (level (common-lisp:error ":level is required") :type
    (common-lisp:or logging-level common-lisp:null))
   (enabled (common-lisp:error ":enabled is required") :type
    (common-lisp:or logging-enabled common-lisp:null))
   (detector-debug-options common-lisp:nil :type
    (common-lisp:or detector-debug-options common-lisp:null)))
 (common-lisp:export (common-lisp:list 'logging-options 'make-logging-options))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input logging-options))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input logging-options))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "roleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'level))
      (common-lisp:list
       (common-lisp:cons "level"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'detector-debug-options))
      (common-lisp:list
       (common-lisp:cons "detectorDebugOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input logging-options))
   common-lisp:nil))
(common-lisp:deftype mqtttopic () 'common-lisp:string)
(common-lisp:deftype max-analysis-results () 'common-lisp:integer)
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (notification-action (:copier common-lisp:nil)
      (:conc-name "struct-shape-notification-action-"))
   (action (common-lisp:error ":action is required") :type
    (common-lisp:or notification-target-actions common-lisp:null))
   (sms-configurations common-lisp:nil :type
    (common-lisp:or smsconfigurations common-lisp:null))
   (email-configurations common-lisp:nil :type
    (common-lisp:or email-configurations common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'notification-action 'make-notification-action))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input notification-action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input notification-action))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action))
      (common-lisp:list
       (common-lisp:cons "action"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sms-configurations))
      (common-lisp:list
       (common-lisp:cons "smsConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'email-configurations))
      (common-lisp:list
       (common-lisp:cons "emailConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input notification-action))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype notification-actions ()
   '(trivial-types:proper-list notification-action))
 (common-lisp:defun |make-notification-actions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list notification-action))
   aws-sdk/generator/shape::members))
(common-lisp:deftype notification-additional-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (notification-target-actions (:copier common-lisp:nil)
      (:conc-name "struct-shape-notification-target-actions-"))
   (lambda-action common-lisp:nil :type
    (common-lisp:or lambda-action common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'notification-target-actions
                    'make-notification-target-actions))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          notification-target-actions))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          notification-target-actions))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lambda-action))
      (common-lisp:list
       (common-lisp:cons "lambdaAction"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          notification-target-actions))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (on-enter-lifecycle (:copier common-lisp:nil)
      (:conc-name "struct-shape-on-enter-lifecycle-"))
   (events common-lisp:nil :type (common-lisp:or events common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'on-enter-lifecycle 'make-on-enter-lifecycle))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input on-enter-lifecycle))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input on-enter-lifecycle))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'events))
      (common-lisp:list
       (common-lisp:cons "events"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input on-enter-lifecycle))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (on-exit-lifecycle (:copier common-lisp:nil)
      (:conc-name "struct-shape-on-exit-lifecycle-"))
   (events common-lisp:nil :type (common-lisp:or events common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'on-exit-lifecycle 'make-on-exit-lifecycle))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input on-exit-lifecycle))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input on-exit-lifecycle))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'events))
      (common-lisp:list
       (common-lisp:cons "events"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input on-exit-lifecycle))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (on-input-lifecycle (:copier common-lisp:nil)
      (:conc-name "struct-shape-on-input-lifecycle-"))
   (events common-lisp:nil :type (common-lisp:or events common-lisp:null))
   (transition-events common-lisp:nil :type
    (common-lisp:or transition-events common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'on-input-lifecycle 'make-on-input-lifecycle))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input on-input-lifecycle))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input on-input-lifecycle))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'events))
      (common-lisp:list
       (common-lisp:cons "events"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'transition-events))
      (common-lisp:list
       (common-lisp:cons "transitionEvents"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input on-input-lifecycle))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (payload (:copier common-lisp:nil) (:conc-name "struct-shape-payload-"))
   (content-expression (common-lisp:error ":contentexpression is required")
    :type (common-lisp:or content-expression common-lisp:null))
   (type (common-lisp:error ":type is required") :type
    (common-lisp:or payload-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'payload 'make-payload))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input payload))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input payload))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-expression))
      (common-lisp:list
       (common-lisp:cons "contentExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input payload))
   common-lisp:nil))
(common-lisp:deftype payload-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (put-logging-options-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-logging-options-request-"))
   (logging-options (common-lisp:error ":loggingoptions is required") :type
    (common-lisp:or logging-options common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-logging-options-request
                    'make-put-logging-options-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-logging-options-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-logging-options-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'logging-options))
      (common-lisp:list
       (common-lisp:cons "loggingOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-logging-options-request))
   common-lisp:nil))
(common-lisp:deftype queue-url () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (recipient-detail (:copier common-lisp:nil)
      (:conc-name "struct-shape-recipient-detail-"))
   (sso-identity common-lisp:nil :type
    (common-lisp:or ssoidentity common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'recipient-detail 'make-recipient-detail))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input recipient-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input recipient-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sso-identity))
      (common-lisp:list
       (common-lisp:cons "ssoIdentity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input recipient-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype recipient-details ()
   '(trivial-types:proper-list recipient-detail))
 (common-lisp:defun |make-recipient-details|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list recipient-detail))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (reset-timer-action (:copier common-lisp:nil)
      (:conc-name "struct-shape-reset-timer-action-"))
   (timer-name (common-lisp:error ":timername is required") :type
    (common-lisp:or timer-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'reset-timer-action 'make-reset-timer-action))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input reset-timer-action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input reset-timer-action))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timer-name))
      (common-lisp:list
       (common-lisp:cons "timerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input reset-timer-action))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition resource-already-exists-exception
     (iotevents-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-already-exists-exception-message)
      (resource-id :initarg :resource-id :initform common-lisp:nil :reader
       resource-already-exists-exception-resource-id)
      (resource-arn :initarg :resource-arn :initform common-lisp:nil :reader
       resource-already-exists-exception-resource-arn)))
 (common-lisp:export
  (common-lisp:list 'resource-already-exists-exception
                    'resource-already-exists-exception-message
                    'resource-already-exists-exception-resource-id
                    'resource-already-exists-exception-resource-arn)))
(common-lisp:progn
 (common-lisp:define-condition resource-in-use-exception
     (iotevents-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-in-use-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-in-use-exception
                    'resource-in-use-exception-message)))
(common-lisp:deftype resource-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (iotevents-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (routed-resource (:copier common-lisp:nil)
      (:conc-name "struct-shape-routed-resource-"))
   (name common-lisp:nil :type (common-lisp:or resource-name common-lisp:null))
   (arn common-lisp:nil :type
    (common-lisp:or amazon-resource-name common-lisp:null)))
 (common-lisp:export (common-lisp:list 'routed-resource 'make-routed-resource))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input routed-resource))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input routed-resource))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input routed-resource))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype routed-resources ()
   '(trivial-types:proper-list routed-resource))
 (common-lisp:defun |make-routed-resources|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list routed-resource))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (smsconfiguration (:copier common-lisp:nil)
      (:conc-name "struct-shape-smsconfiguration-"))
   (sender-id common-lisp:nil :type
    (common-lisp:or smssender-id common-lisp:null))
   (additional-message common-lisp:nil :type
    (common-lisp:or notification-additional-message common-lisp:null))
   (recipients (common-lisp:error ":recipients is required") :type
    (common-lisp:or recipient-details common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'smsconfiguration 'make-smsconfiguration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input smsconfiguration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input smsconfiguration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sender-id))
      (common-lisp:list
       (common-lisp:cons "senderId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'additional-message))
      (common-lisp:list
       (common-lisp:cons "additionalMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recipients))
      (common-lisp:list
       (common-lisp:cons "recipients"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input smsconfiguration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype smsconfigurations ()
   '(trivial-types:proper-list smsconfiguration))
 (common-lisp:defun |make-smsconfigurations|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list smsconfiguration))
   aws-sdk/generator/shape::members))
(common-lisp:deftype smssender-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (snstopic-publish-action (:copier common-lisp:nil)
      (:conc-name "struct-shape-snstopic-publish-action-"))
   (target-arn (common-lisp:error ":targetarn is required") :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (payload common-lisp:nil :type (common-lisp:or payload common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'snstopic-publish-action 'make-snstopic-publish-action))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          snstopic-publish-action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          snstopic-publish-action))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-arn))
      (common-lisp:list
       (common-lisp:cons "targetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'payload))
      (common-lisp:list
       (common-lisp:cons "payload"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          snstopic-publish-action))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (ssoidentity (:copier common-lisp:nil)
      (:conc-name "struct-shape-ssoidentity-"))
   (identity-store-id (common-lisp:error ":identitystoreid is required") :type
    (common-lisp:or identity-store-id common-lisp:null))
   (user-id common-lisp:nil :type
    (common-lisp:or ssoreference-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'ssoidentity 'make-ssoidentity))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input ssoidentity))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input ssoidentity))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-store-id))
      (common-lisp:list
       (common-lisp:cons "identityStoreId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-id))
      (common-lisp:list
       (common-lisp:cons "userId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input ssoidentity))
   common-lisp:nil))
(common-lisp:deftype ssoreference-id () 'common-lisp:string)
(common-lisp:deftype seconds () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition service-unavailable-exception
     (iotevents-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-unavailable-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-unavailable-exception
                    'service-unavailable-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (set-timer-action (:copier common-lisp:nil)
      (:conc-name "struct-shape-set-timer-action-"))
   (timer-name (common-lisp:error ":timername is required") :type
    (common-lisp:or timer-name common-lisp:null))
   (seconds common-lisp:nil :type (common-lisp:or seconds common-lisp:null))
   (duration-expression common-lisp:nil :type
    (common-lisp:or variable-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-timer-action 'make-set-timer-action))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input set-timer-action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input set-timer-action))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timer-name))
      (common-lisp:list
       (common-lisp:cons "timerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'seconds))
      (common-lisp:list
       (common-lisp:cons "seconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'duration-expression))
      (common-lisp:list
       (common-lisp:cons "durationExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input set-timer-action))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (set-variable-action (:copier common-lisp:nil)
      (:conc-name "struct-shape-set-variable-action-"))
   (variable-name (common-lisp:error ":variablename is required") :type
    (common-lisp:or variable-name common-lisp:null))
   (value (common-lisp:error ":value is required") :type
    (common-lisp:or variable-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-variable-action 'make-set-variable-action))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input set-variable-action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input set-variable-action))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'variable-name))
      (common-lisp:list
       (common-lisp:cons "variableName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input set-variable-action))
   common-lisp:nil))
(common-lisp:deftype severity () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (simple-rule (:copier common-lisp:nil)
      (:conc-name "struct-shape-simple-rule-"))
   (input-property (common-lisp:error ":inputproperty is required") :type
    (common-lisp:or input-property common-lisp:null))
   (comparison-operator (common-lisp:error ":comparisonoperator is required")
    :type (common-lisp:or comparison-operator common-lisp:null))
   (threshold (common-lisp:error ":threshold is required") :type
    (common-lisp:or threshold common-lisp:null)))
 (common-lisp:export (common-lisp:list 'simple-rule 'make-simple-rule))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input simple-rule))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input simple-rule))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-property))
      (common-lisp:list
       (common-lisp:cons "inputProperty"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'comparison-operator))
      (common-lisp:list
       (common-lisp:cons "comparisonOperator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'threshold))
      (common-lisp:list
       (common-lisp:cons "threshold"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input simple-rule))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (sqs-action (:copier common-lisp:nil)
      (:conc-name "struct-shape-sqs-action-"))
   (queue-url (common-lisp:error ":queueurl is required") :type
    (common-lisp:or queue-url common-lisp:null))
   (use-base64 common-lisp:nil :type
    (common-lisp:or use-base64 common-lisp:null))
   (payload common-lisp:nil :type (common-lisp:or payload common-lisp:null)))
 (common-lisp:export (common-lisp:list 'sqs-action 'make-sqs-action))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input sqs-action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input sqs-action))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'queue-url))
      (common-lisp:list
       (common-lisp:cons "queueUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'use-base64))
      (common-lisp:list
       (common-lisp:cons "useBase64"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'payload))
      (common-lisp:list
       (common-lisp:cons "payload"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input sqs-action))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-detector-model-analysis-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-detector-model-analysis-request-"))
   (detector-model-definition
    (common-lisp:error ":detectormodeldefinition is required") :type
    (common-lisp:or detector-model-definition common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-detector-model-analysis-request
                    'make-start-detector-model-analysis-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-detector-model-analysis-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-detector-model-analysis-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'detector-model-definition))
      (common-lisp:list
       (common-lisp:cons "detectorModelDefinition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-detector-model-analysis-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-detector-model-analysis-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-detector-model-analysis-response-"))
   (analysis-id common-lisp:nil :type
    (common-lisp:or analysis-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-detector-model-analysis-response
                    'make-start-detector-model-analysis-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-detector-model-analysis-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-detector-model-analysis-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'analysis-id))
      (common-lisp:list
       (common-lisp:cons "analysisId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-detector-model-analysis-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (state (:copier common-lisp:nil) (:conc-name "struct-shape-state-"))
   (state-name (common-lisp:error ":statename is required") :type
    (common-lisp:or state-name common-lisp:null))
   (on-input common-lisp:nil :type
    (common-lisp:or on-input-lifecycle common-lisp:null))
   (on-enter common-lisp:nil :type
    (common-lisp:or on-enter-lifecycle common-lisp:null))
   (on-exit common-lisp:nil :type
    (common-lisp:or on-exit-lifecycle common-lisp:null)))
 (common-lisp:export (common-lisp:list 'state 'make-state))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input state))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input state))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state-name))
      (common-lisp:list
       (common-lisp:cons "stateName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'on-input))
      (common-lisp:list
       (common-lisp:cons "onInput"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'on-enter))
      (common-lisp:list
       (common-lisp:cons "onEnter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'on-exit))
      (common-lisp:list
       (common-lisp:cons "onExit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input state))
   common-lisp:nil))
(common-lisp:deftype state-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype states () '(trivial-types:proper-list state))
 (common-lisp:defun |make-states|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list state))
   aws-sdk/generator/shape::members))
(common-lisp:deftype status-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (tag (:copier common-lisp:nil) (:conc-name "struct-shape-tag-"))
   (key (common-lisp:error ":key is required") :type
    (common-lisp:or tag-key common-lisp:null))
   (value (common-lisp:error ":value is required") :type
    (common-lisp:or tag-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag))
   common-lisp:nil))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-keys () '(trivial-types:proper-list tag-key))
 (common-lisp:defun |make-tag-keys|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-request-"))
   (resource-arn (common-lisp:error ":resourcearn is required") :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (tags (common-lisp:error ":tags is required") :type
    (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tags () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-tags|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:deftype threshold () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (iotevents-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       throttling-exception-message)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message)))
(common-lisp:deftype timer-name () 'common-lisp:string)
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (transition-event (:copier common-lisp:nil)
      (:conc-name "struct-shape-transition-event-"))
   (event-name (common-lisp:error ":eventname is required") :type
    (common-lisp:or event-name common-lisp:null))
   (condition (common-lisp:error ":condition is required") :type
    (common-lisp:or condition common-lisp:null))
   (actions common-lisp:nil :type (common-lisp:or actions common-lisp:null))
   (next-state (common-lisp:error ":nextstate is required") :type
    (common-lisp:or state-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'transition-event 'make-transition-event))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input transition-event))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input transition-event))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-name))
      (common-lisp:list
       (common-lisp:cons "eventName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'condition))
      (common-lisp:list
       (common-lisp:cons "condition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'actions))
      (common-lisp:list
       (common-lisp:cons "actions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-state))
      (common-lisp:list
       (common-lisp:cons "nextState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input transition-event))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype transition-events ()
   '(trivial-types:proper-list transition-event))
 (common-lisp:defun |make-transition-events|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list transition-event))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition unsupported-operation-exception
     (iotevents-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       unsupported-operation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'unsupported-operation-exception
                    'unsupported-operation-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-request-"))
   (resource-arn (common-lisp:error ":resourcearn is required") :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (tag-keys (common-lisp:error ":tagkeys is required") :type
    (common-lisp:or tag-keys common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-alarm-model-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-alarm-model-request-"))
   (alarm-model-name (common-lisp:error ":alarmmodelname is required") :type
    (common-lisp:or alarm-model-name common-lisp:null))
   (alarm-model-description common-lisp:nil :type
    (common-lisp:or alarm-model-description common-lisp:null))
   (role-arn (common-lisp:error ":rolearn is required") :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (severity common-lisp:nil :type (common-lisp:or severity common-lisp:null))
   (alarm-rule (common-lisp:error ":alarmrule is required") :type
    (common-lisp:or alarm-rule common-lisp:null))
   (alarm-notification common-lisp:nil :type
    (common-lisp:or alarm-notification common-lisp:null))
   (alarm-event-actions common-lisp:nil :type
    (common-lisp:or alarm-event-actions common-lisp:null))
   (alarm-capabilities common-lisp:nil :type
    (common-lisp:or alarm-capabilities common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-alarm-model-request
                    'make-update-alarm-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-alarm-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-alarm-model-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'alarm-model-description))
      (common-lisp:list
       (common-lisp:cons "alarmModelDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "roleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'severity))
      (common-lisp:list
       (common-lisp:cons "severity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-rule))
      (common-lisp:list
       (common-lisp:cons "alarmRule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-notification))
      (common-lisp:list
       (common-lisp:cons "alarmNotification"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-event-actions))
      (common-lisp:list
       (common-lisp:cons "alarmEventActions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-capabilities))
      (common-lisp:list
       (common-lisp:cons "alarmCapabilities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-alarm-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-alarm-model-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-alarm-model-response-"))
   (creation-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (alarm-model-arn common-lisp:nil :type
    (common-lisp:or alarm-model-arn common-lisp:null))
   (alarm-model-version common-lisp:nil :type
    (common-lisp:or alarm-model-version common-lisp:null))
   (last-update-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or alarm-model-version-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-alarm-model-response
                    'make-update-alarm-model-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-alarm-model-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-alarm-model-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "creationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-model-arn))
      (common-lisp:list
       (common-lisp:cons "alarmModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-model-version))
      (common-lisp:list
       (common-lisp:cons "alarmModelVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-update-time))
      (common-lisp:list
       (common-lisp:cons "lastUpdateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-alarm-model-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-detector-model-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-detector-model-request-"))
   (detector-model-name (common-lisp:error ":detectormodelname is required")
    :type (common-lisp:or detector-model-name common-lisp:null))
   (detector-model-definition
    (common-lisp:error ":detectormodeldefinition is required") :type
    (common-lisp:or detector-model-definition common-lisp:null))
   (detector-model-description common-lisp:nil :type
    (common-lisp:or detector-model-description common-lisp:null))
   (role-arn (common-lisp:error ":rolearn is required") :type
    (common-lisp:or amazon-resource-name common-lisp:null))
   (evaluation-method common-lisp:nil :type
    (common-lisp:or evaluation-method common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-detector-model-request
                    'make-update-detector-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-detector-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-detector-model-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'detector-model-definition))
      (common-lisp:list
       (common-lisp:cons "detectorModelDefinition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'detector-model-description))
      (common-lisp:list
       (common-lisp:cons "detectorModelDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "roleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'evaluation-method))
      (common-lisp:list
       (common-lisp:cons "evaluationMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-detector-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-detector-model-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-detector-model-response-"))
   (detector-model-configuration common-lisp:nil :type
    (common-lisp:or detector-model-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-detector-model-response
                    'make-update-detector-model-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-detector-model-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-detector-model-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'detector-model-configuration))
      (common-lisp:list
       (common-lisp:cons "detectorModelConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-detector-model-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-input-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-input-request-"))
   (input-name (common-lisp:error ":inputname is required") :type
    (common-lisp:or input-name common-lisp:null))
   (input-description common-lisp:nil :type
    (common-lisp:or input-description common-lisp:null))
   (input-definition (common-lisp:error ":inputdefinition is required") :type
    (common-lisp:or input-definition common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-input-request 'make-update-input-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-input-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-input-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-description))
      (common-lisp:list
       (common-lisp:cons "inputDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-definition))
      (common-lisp:list
       (common-lisp:cons "inputDefinition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-input-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-input-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-input-response-"))
   (input-configuration common-lisp:nil :type
    (common-lisp:or input-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-input-response 'make-update-input-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-input-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-input-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-configuration))
      (common-lisp:list
       (common-lisp:cons "inputConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-input-response))
   common-lisp:nil))
(common-lisp:deftype use-base64 () 'common-lisp:boolean)
(common-lisp:deftype variable-name () 'common-lisp:string)
(common-lisp:deftype variable-value () 'common-lisp:string)
(common-lisp:deftype |errorMessage| () 'common-lisp:string)
(common-lisp:deftype |resourceArn| () 'common-lisp:string)
(common-lisp:deftype |resourceId| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun create-alarm-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key alarm-model-name alarm-model-description
                     role-arn tags key severity alarm-rule alarm-notification
                     alarm-event-actions alarm-capabilities)
   (common-lisp:declare
    (common-lisp:ignorable alarm-model-name alarm-model-description role-arn
     tags key severity alarm-rule alarm-notification alarm-event-actions
     alarm-capabilities))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-alarm-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/alarm-models"
                                                        "CreateAlarmModel"
                                                        "2018-07-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-alarm-model))
(common-lisp:progn
 (common-lisp:defun create-detector-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key detector-model-name
                     detector-model-definition detector-model-description key
                     role-arn tags evaluation-method)
   (common-lisp:declare
    (common-lisp:ignorable detector-model-name detector-model-definition
     detector-model-description key role-arn tags evaluation-method))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-detector-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/detector-models"
                                                        "CreateDetectorModel"
                                                        "2018-07-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-detector-model))
(common-lisp:progn
 (common-lisp:defun create-input
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key input-name input-description
                     input-definition tags)
   (common-lisp:declare
    (common-lisp:ignorable input-name input-description input-definition tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-input-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/inputs" "CreateInput"
                                                        "2018-07-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-input))
(common-lisp:progn
 (common-lisp:defun delete-alarm-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key alarm-model-name)
   (common-lisp:declare (common-lisp:ignorable alarm-model-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-alarm-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/alarm-models/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'alarm-model-name))))
                                                        "DeleteAlarmModel"
                                                        "2018-07-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-alarm-model))
(common-lisp:progn
 (common-lisp:defun delete-detector-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key detector-model-name)
   (common-lisp:declare (common-lisp:ignorable detector-model-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-detector-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/detector-models/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'detector-model-name))))
                                                        "DeleteDetectorModel"
                                                        "2018-07-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-detector-model))
(common-lisp:progn
 (common-lisp:defun delete-input
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key input-name)
   (common-lisp:declare (common-lisp:ignorable input-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-input-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/inputs/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'input-name))))
                                                        "DeleteInput"
                                                        "2018-07-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-input))
(common-lisp:progn
 (common-lisp:defun describe-alarm-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key alarm-model-name alarm-model-version)
   (common-lisp:declare
    (common-lisp:ignorable alarm-model-name alarm-model-version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-alarm-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/alarm-models/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'alarm-model-name))))
                                                        "DescribeAlarmModel"
                                                        "2018-07-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-alarm-model))
(common-lisp:progn
 (common-lisp:defun describe-detector-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key detector-model-name
                     detector-model-version)
   (common-lisp:declare
    (common-lisp:ignorable detector-model-name detector-model-version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-detector-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/detector-models/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'detector-model-name))))
                                                        "DescribeDetectorModel"
                                                        "2018-07-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-detector-model))
(common-lisp:progn
 (common-lisp:defun describe-detector-model-analysis
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key analysis-id)
   (common-lisp:declare (common-lisp:ignorable analysis-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-detector-model-analysis-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/analysis/detector-models/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'analysis-id))))
                                                        "DescribeDetectorModelAnalysis"
                                                        "2018-07-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-detector-model-analysis))
(common-lisp:progn
 (common-lisp:defun describe-input
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key input-name)
   (common-lisp:declare (common-lisp:ignorable input-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-input-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/inputs/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'input-name))))
                                                        "DescribeInput"
                                                        "2018-07-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-input))
(common-lisp:progn
 (common-lisp:defun describe-logging-options ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'iotevents-request :method "GET" :path
                                "/logging" :protocol :rest-json :operation
                                "DescribeLoggingOptions" :params
                                `(("Action" ,@"DescribeLoggingOptions")
                                  ("Version" ,@"2018-07-27"))))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'describe-logging-options))
(common-lisp:progn
 (common-lisp:defun get-detector-model-analysis-results
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key analysis-id next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable analysis-id next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-detector-model-analysis-results-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/analysis/detector-models/~A/results"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'analysis-id))))
                                                        "GetDetectorModelAnalysisResults"
                                                        "2018-07-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-detector-model-analysis-results))
(common-lisp:progn
 (common-lisp:defun list-alarm-model-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key alarm-model-name next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable alarm-model-name next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-alarm-model-versions-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/alarm-models/~A/versions"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'alarm-model-name))))
                                                        "ListAlarmModelVersions"
                                                        "2018-07-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-alarm-model-versions))
(common-lisp:progn
 (common-lisp:defun list-alarm-models
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-alarm-models-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/alarm-models"
                                                        "ListAlarmModels"
                                                        "2018-07-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-alarm-models))
(common-lisp:progn
 (common-lisp:defun list-detector-model-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key detector-model-name next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable detector-model-name next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-detector-model-versions-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/detector-models/~A/versions"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'detector-model-name))))
                                                        "ListDetectorModelVersions"
                                                        "2018-07-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-detector-model-versions))
(common-lisp:progn
 (common-lisp:defun list-detector-models
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-detector-models-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/detector-models"
                                                        "ListDetectorModels"
                                                        "2018-07-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-detector-models))
(common-lisp:progn
 (common-lisp:defun list-input-routings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key input-identifier max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable input-identifier max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-input-routings-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/input-routings"
                                                        "ListInputRoutings"
                                                        "2018-07-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-input-routings))
(common-lisp:progn
 (common-lisp:defun list-inputs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-inputs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/inputs" "ListInputs"
                                                        "2018-07-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-inputs))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/tags"
                                                        "ListTagsForResource"
                                                        "2018-07-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun put-logging-options
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key logging-options)
   (common-lisp:declare (common-lisp:ignorable logging-options))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-logging-options-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        "/logging"
                                                        "PutLoggingOptions"
                                                        "2018-07-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-logging-options))
(common-lisp:progn
 (common-lisp:defun start-detector-model-analysis
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key detector-model-definition)
   (common-lisp:declare (common-lisp:ignorable detector-model-definition))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-detector-model-analysis-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/analysis/detector-models/"
                                                        "StartDetectorModelAnalysis"
                                                        "2018-07-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-detector-model-analysis))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/tags" "TagResource"
                                                        "2018-07-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        "/tags" "UntagResource"
                                                        "2018-07-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-alarm-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key alarm-model-name alarm-model-description
                     role-arn severity alarm-rule alarm-notification
                     alarm-event-actions alarm-capabilities)
   (common-lisp:declare
    (common-lisp:ignorable alarm-model-name alarm-model-description role-arn
     severity alarm-rule alarm-notification alarm-event-actions
     alarm-capabilities))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-alarm-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/alarm-models/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'alarm-model-name))))
                                                        "UpdateAlarmModel"
                                                        "2018-07-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-alarm-model))
(common-lisp:progn
 (common-lisp:defun update-detector-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key detector-model-name
                     detector-model-definition detector-model-description
                     role-arn evaluation-method)
   (common-lisp:declare
    (common-lisp:ignorable detector-model-name detector-model-definition
     detector-model-description role-arn evaluation-method))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-detector-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/detector-models/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'detector-model-name))))
                                                        "UpdateDetectorModel"
                                                        "2018-07-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-detector-model))
(common-lisp:progn
 (common-lisp:defun update-input
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key input-name input-description
                     input-definition)
   (common-lisp:declare
    (common-lisp:ignorable input-name input-description input-definition))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-input-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/inputs/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'input-name))))
                                                        "UpdateInput"
                                                        "2018-07-27"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-input))
