;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/appintegrations/api
  (:use)
  (:nicknames #:aws/appintegrations)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/appintegrations/api)
(common-lisp:progn
 (common-lisp:defclass appintegrations-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "appintegrations" :protocol
                        :rest-json))
 (common-lisp:export 'appintegrations-request))
(common-lisp:progn
 (common-lisp:define-condition appintegrations-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'appintegrations-error))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("DuplicateResourceException" . duplicate-resource-exception)
    ("InternalServiceError" . internal-service-error)
    ("InvalidRequestException" . invalid-request-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ResourceQuotaExceededException" . resource-quota-exceeded-exception)
    ("ThrottlingException" . throttling-exception)))
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (appintegrations-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       access-denied-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-message)))
(common-lisp:deftype arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype client-association-metadata () 'common-lisp:hash-table)
 (common-lisp:defun |make-client-association-metadata|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype client-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass create-data-integration-request common-lisp:nil
                       ((object-configuration :initarg :object-configuration
                         :type
                         (common-lisp:or object-configuration common-lisp:null)
                         :accessor
                         %create-data-integration-request-object-configuration
                         :initform common-lisp:nil)
                        (file-configuration :initarg :file-configuration :type
                         (common-lisp:or file-configuration common-lisp:null)
                         :accessor
                         %create-data-integration-request-file-configuration
                         :initform common-lisp:nil)
                        (client-token :initarg :client-token :type
                         (common-lisp:or idempotency-token common-lisp:null)
                         :accessor
                         %create-data-integration-request-client-token
                         :initform common-lisp:nil)
                        (tags :initarg :tags :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %create-data-integration-request-tags :initform
                         common-lisp:nil)
                        (schedule-config :initarg :schedule-config :type
                         (common-lisp:or schedule-configuration
                                         common-lisp:null)
                         :accessor
                         %create-data-integration-request-schedule-config
                         :initform
                         (common-lisp:error ":schedule-config is required"))
                        (source-uri :initarg :source-uri :type
                         (common-lisp:or source-uri common-lisp:null) :accessor
                         %create-data-integration-request-source-uri :initform
                         (common-lisp:error ":source-uri is required"))
                        (kms-key :initarg :kms-key :type
                         (common-lisp:or non-blank-string common-lisp:null)
                         :accessor %create-data-integration-request-kms-key
                         :initform (common-lisp:error ":kms-key is required"))
                        (description :initarg :description :type
                         (common-lisp:or description common-lisp:null)
                         :accessor %create-data-integration-request-description
                         :initform common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or name common-lisp:null) :accessor
                         %create-data-integration-request-name :initform
                         (common-lisp:error ":name is required"))))
 (common-lisp:export
  (common-lisp:list 'create-data-integration-request
                    'make-create-data-integration-request))
 (common-lisp:defun make-create-data-integration-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key object-configuration file-configuration
                     client-token tags schedule-config source-uri kms-key
                     description name)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-data-integration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-data-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-data-integration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key))
      (common-lisp:list
       (common-lisp:cons "KmsKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-uri))
      (common-lisp:list
       (common-lisp:cons "SourceURI"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schedule-config))
      (common-lisp:list
       (common-lisp:cons "ScheduleConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-configuration))
      (common-lisp:list
       (common-lisp:cons "FileConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'object-configuration))
      (common-lisp:list
       (common-lisp:cons "ObjectConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-data-integration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-data-integration-response common-lisp:nil
                       ((object-configuration :initarg :object-configuration
                         :type
                         (common-lisp:or object-configuration common-lisp:null)
                         :accessor
                         %create-data-integration-response-object-configuration
                         :initform common-lisp:nil)
                        (file-configuration :initarg :file-configuration :type
                         (common-lisp:or file-configuration common-lisp:null)
                         :accessor
                         %create-data-integration-response-file-configuration
                         :initform common-lisp:nil)
                        (client-token :initarg :client-token :type
                         (common-lisp:or idempotency-token common-lisp:null)
                         :accessor
                         %create-data-integration-response-client-token
                         :initform common-lisp:nil)
                        (tags :initarg :tags :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %create-data-integration-response-tags :initform
                         common-lisp:nil)
                        (schedule-configuration :initarg
                         :schedule-configuration :type
                         (common-lisp:or schedule-configuration
                                         common-lisp:null)
                         :accessor
                         %create-data-integration-response-schedule-configuration
                         :initform common-lisp:nil)
                        (source-uri :initarg :source-uri :type
                         (common-lisp:or source-uri common-lisp:null) :accessor
                         %create-data-integration-response-source-uri :initform
                         common-lisp:nil)
                        (kms-key :initarg :kms-key :type
                         (common-lisp:or non-blank-string common-lisp:null)
                         :accessor %create-data-integration-response-kms-key
                         :initform common-lisp:nil)
                        (description :initarg :description :type
                         (common-lisp:or description common-lisp:null)
                         :accessor
                         %create-data-integration-response-description
                         :initform common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or name common-lisp:null) :accessor
                         %create-data-integration-response-name :initform
                         common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         %create-data-integration-response-id :initform
                         common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %create-data-integration-response-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-data-integration-response
                    'make-create-data-integration-response))
 (common-lisp:defun make-create-data-integration-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key object-configuration file-configuration
                     client-token tags schedule-configuration source-uri
                     kms-key description name id arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-data-integration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-data-integration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-data-integration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key))
      (common-lisp:list
       (common-lisp:cons "KmsKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-uri))
      (common-lisp:list
       (common-lisp:cons "SourceURI"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'schedule-configuration))
      (common-lisp:list
       (common-lisp:cons "ScheduleConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-configuration))
      (common-lisp:list
       (common-lisp:cons "FileConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'object-configuration))
      (common-lisp:list
       (common-lisp:cons "ObjectConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-data-integration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-event-integration-request common-lisp:nil
                       ((tags :initarg :tags :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %create-event-integration-request-tags :initform
                         common-lisp:nil)
                        (client-token :initarg :client-token :type
                         (common-lisp:or idempotency-token common-lisp:null)
                         :accessor
                         %create-event-integration-request-client-token
                         :initform common-lisp:nil)
                        (event-bridge-bus :initarg :event-bridge-bus :type
                         (common-lisp:or event-bridge-bus common-lisp:null)
                         :accessor
                         %create-event-integration-request-event-bridge-bus
                         :initform
                         (common-lisp:error ":event-bridge-bus is required"))
                        (event-filter :initarg :event-filter :type
                         (common-lisp:or event-filter common-lisp:null)
                         :accessor
                         %create-event-integration-request-event-filter
                         :initform
                         (common-lisp:error ":event-filter is required"))
                        (description :initarg :description :type
                         (common-lisp:or description common-lisp:null)
                         :accessor
                         %create-event-integration-request-description
                         :initform common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or name common-lisp:null) :accessor
                         %create-event-integration-request-name :initform
                         (common-lisp:error ":name is required"))))
 (common-lisp:export
  (common-lisp:list 'create-event-integration-request
                    'make-create-event-integration-request))
 (common-lisp:defun make-create-event-integration-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags client-token event-bridge-bus
                     event-filter description name)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-event-integration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-event-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-event-integration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-filter))
      (common-lisp:list
       (common-lisp:cons "EventFilter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-bridge-bus))
      (common-lisp:list
       (common-lisp:cons "EventBridgeBus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-event-integration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-event-integration-response common-lisp:nil
                       ((event-integration-arn :initarg :event-integration-arn
                         :type (common-lisp:or arn common-lisp:null) :accessor
                         %create-event-integration-response-event-integration-arn
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-event-integration-response
                    'make-create-event-integration-response))
 (common-lisp:defun make-create-event-integration-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key event-integration-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-event-integration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-event-integration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-event-integration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'event-integration-arn))
      (common-lisp:list
       (common-lisp:cons "EventIntegrationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-event-integration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass data-integration-association-summary common-lisp:nil
                       ((client-id :initarg :client-id :type
                         (common-lisp:or client-id common-lisp:null) :accessor
                         %data-integration-association-summary-client-id
                         :initform common-lisp:nil)
                        (data-integration-arn :initarg :data-integration-arn
                         :type (common-lisp:or arn common-lisp:null) :accessor
                         %data-integration-association-summary-data-integration-arn
                         :initform common-lisp:nil)
                        (data-integration-association-arn :initarg
                         :data-integration-association-arn :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %data-integration-association-summary-data-integration-association-arn
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'data-integration-association-summary
                    'make-data-integration-association-summary))
 (common-lisp:defun make-data-integration-association-summary
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key client-id data-integration-arn
                     data-integration-association-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'data-integration-association-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          data-integration-association-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          data-integration-association-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-integration-association-arn))
      (common-lisp:list
       (common-lisp:cons "DataIntegrationAssociationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-integration-arn))
      (common-lisp:list
       (common-lisp:cons "DataIntegrationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-id))
      (common-lisp:list
       (common-lisp:cons "ClientId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          data-integration-association-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype data-integration-associations-list ()
   '(trivial-types:proper-list data-integration-association-summary))
 (common-lisp:defun |make-data-integration-associations-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            data-integration-association-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass data-integration-summary common-lisp:nil
                       ((source-uri :initarg :source-uri :type
                         (common-lisp:or source-uri common-lisp:null) :accessor
                         %data-integration-summary-source-uri :initform
                         common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or name common-lisp:null) :accessor
                         %data-integration-summary-name :initform
                         common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %data-integration-summary-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'data-integration-summary 'make-data-integration-summary))
 (common-lisp:defun make-data-integration-summary
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key source-uri name arn)
   (common-lisp:apply #'common-lisp:make-instance 'data-integration-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          data-integration-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          data-integration-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-uri))
      (common-lisp:list
       (common-lisp:cons "SourceURI"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          data-integration-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype data-integrations-list ()
   '(trivial-types:proper-list data-integration-summary))
 (common-lisp:defun |make-data-integrations-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            data-integration-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass delete-data-integration-request common-lisp:nil
                       ((data-integration-identifier :initarg
                         :data-integration-identifier :type
                         (common-lisp:or identifier common-lisp:null) :accessor
                         %delete-data-integration-request-data-integration-identifier
                         :initform
                         (common-lisp:error
                          ":data-integration-identifier is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-data-integration-request
                    'make-delete-data-integration-request))
 (common-lisp:defun make-delete-data-integration-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key data-integration-identifier)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-data-integration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-data-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-data-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-data-integration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-data-integration-response common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'delete-data-integration-response
                    'make-delete-data-integration-response))
 (common-lisp:defun make-delete-data-integration-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-data-integration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-data-integration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-data-integration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-data-integration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-event-integration-request common-lisp:nil
                       ((name :initarg :name :type
                         (common-lisp:or name common-lisp:null) :accessor
                         %delete-event-integration-request-name :initform
                         (common-lisp:error ":name is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-event-integration-request
                    'make-delete-event-integration-request))
 (common-lisp:defun make-delete-event-integration-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key name)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-event-integration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-event-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-event-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-event-integration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-event-integration-response common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'delete-event-integration-response
                    'make-delete-event-integration-response))
 (common-lisp:defun make-delete-event-integration-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-event-integration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-event-integration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-event-integration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-event-integration-response))
   common-lisp:nil))
(common-lisp:deftype description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition duplicate-resource-exception
     (appintegrations-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       duplicate-resource-exception-message)))
 (common-lisp:export
  (common-lisp:list 'duplicate-resource-exception
                    'duplicate-resource-exception-message)))
(common-lisp:deftype event-bridge-bus () 'common-lisp:string)
(common-lisp:deftype event-bridge-rule-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass event-filter common-lisp:nil
                       ((source :initarg :source :type
                         (common-lisp:or source common-lisp:null) :accessor
                         %event-filter-source :initform
                         (common-lisp:error ":source is required"))))
 (common-lisp:export (common-lisp:list 'event-filter 'make-event-filter))
 (common-lisp:defun make-event-filter
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key source)
   (common-lisp:apply #'common-lisp:make-instance 'event-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input event-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input event-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source))
      (common-lisp:list
       (common-lisp:cons "Source"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input event-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass event-integration common-lisp:nil
                       ((tags :initarg :tags :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %event-integration-tags :initform common-lisp:nil)
                        (event-bridge-bus :initarg :event-bridge-bus :type
                         (common-lisp:or event-bridge-bus common-lisp:null)
                         :accessor %event-integration-event-bridge-bus
                         :initform common-lisp:nil)
                        (event-filter :initarg :event-filter :type
                         (common-lisp:or event-filter common-lisp:null)
                         :accessor %event-integration-event-filter :initform
                         common-lisp:nil)
                        (description :initarg :description :type
                         (common-lisp:or description common-lisp:null)
                         :accessor %event-integration-description :initform
                         common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or name common-lisp:null) :accessor
                         %event-integration-name :initform common-lisp:nil)
                        (event-integration-arn :initarg :event-integration-arn
                         :type (common-lisp:or arn common-lisp:null) :accessor
                         %event-integration-event-integration-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'event-integration 'make-event-integration))
 (common-lisp:defun make-event-integration
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags event-bridge-bus event-filter
                     description name event-integration-arn)
   (common-lisp:apply #'common-lisp:make-instance 'event-integration
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input event-integration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input event-integration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'event-integration-arn))
      (common-lisp:list
       (common-lisp:cons "EventIntegrationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-filter))
      (common-lisp:list
       (common-lisp:cons "EventFilter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-bridge-bus))
      (common-lisp:list
       (common-lisp:cons "EventBridgeBus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input event-integration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass event-integration-association common-lisp:nil
                       ((client-association-metadata :initarg
                         :client-association-metadata :type
                         (common-lisp:or client-association-metadata
                                         common-lisp:null)
                         :accessor
                         %event-integration-association-client-association-metadata
                         :initform common-lisp:nil)
                        (event-bridge-rule-name :initarg
                         :event-bridge-rule-name :type
                         (common-lisp:or event-bridge-rule-name
                                         common-lisp:null)
                         :accessor
                         %event-integration-association-event-bridge-rule-name
                         :initform common-lisp:nil)
                        (client-id :initarg :client-id :type
                         (common-lisp:or client-id common-lisp:null) :accessor
                         %event-integration-association-client-id :initform
                         common-lisp:nil)
                        (event-integration-name :initarg
                         :event-integration-name :type
                         (common-lisp:or name common-lisp:null) :accessor
                         %event-integration-association-event-integration-name
                         :initform common-lisp:nil)
                        (event-integration-association-id :initarg
                         :event-integration-association-id :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         %event-integration-association-event-integration-association-id
                         :initform common-lisp:nil)
                        (event-integration-association-arn :initarg
                         :event-integration-association-arn :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %event-integration-association-event-integration-association-arn
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'event-integration-association
                    'make-event-integration-association))
 (common-lisp:defun make-event-integration-association
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key client-association-metadata
                     event-bridge-rule-name client-id event-integration-name
                     event-integration-association-id
                     event-integration-association-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'event-integration-association
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          event-integration-association))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          event-integration-association))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'event-integration-association-arn))
      (common-lisp:list
       (common-lisp:cons "EventIntegrationAssociationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'event-integration-association-id))
      (common-lisp:list
       (common-lisp:cons "EventIntegrationAssociationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'event-integration-name))
      (common-lisp:list
       (common-lisp:cons "EventIntegrationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-id))
      (common-lisp:list
       (common-lisp:cons "ClientId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'event-bridge-rule-name))
      (common-lisp:list
       (common-lisp:cons "EventBridgeRuleName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-association-metadata))
      (common-lisp:list
       (common-lisp:cons "ClientAssociationMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          event-integration-association))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype event-integration-associations-list ()
   '(trivial-types:proper-list event-integration-association))
 (common-lisp:defun |make-event-integration-associations-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            event-integration-association))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype event-integrations-list ()
   '(trivial-types:proper-list event-integration))
 (common-lisp:defun |make-event-integrations-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list event-integration))
   aws-sdk/generator/shape::members))
(common-lisp:deftype fields () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype fields-list () '(trivial-types:proper-list fields))
 (common-lisp:defun |make-fields-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list fields))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype fields-map () 'common-lisp:hash-table)
 (common-lisp:defun |make-fields-map| (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass file-configuration common-lisp:nil
                       ((filters :initarg :filters :type
                         (common-lisp:or fields-map common-lisp:null) :accessor
                         %file-configuration-filters :initform common-lisp:nil)
                        (folders :initarg :folders :type
                         (common-lisp:or folder-list common-lisp:null)
                         :accessor %file-configuration-folders :initform
                         (common-lisp:error ":folders is required"))))
 (common-lisp:export
  (common-lisp:list 'file-configuration 'make-file-configuration))
 (common-lisp:defun make-file-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key filters folders)
   (common-lisp:apply #'common-lisp:make-instance 'file-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input file-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input file-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'folders))
      (common-lisp:list
       (common-lisp:cons "Folders"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "Filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input file-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype folder-list ()
   '(trivial-types:proper-list non-blank-long-string))
 (common-lisp:defun |make-folder-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list non-blank-long-string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass get-data-integration-request common-lisp:nil
                       ((identifier :initarg :identifier :type
                         (common-lisp:or identifier common-lisp:null) :accessor
                         %get-data-integration-request-identifier :initform
                         (common-lisp:error ":identifier is required"))))
 (common-lisp:export
  (common-lisp:list 'get-data-integration-request
                    'make-get-data-integration-request))
 (common-lisp:defun make-get-data-integration-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key identifier)
   (common-lisp:apply #'common-lisp:make-instance 'get-data-integration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-data-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-data-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-data-integration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-data-integration-response common-lisp:nil
                       ((object-configuration :initarg :object-configuration
                         :type
                         (common-lisp:or object-configuration common-lisp:null)
                         :accessor
                         %get-data-integration-response-object-configuration
                         :initform common-lisp:nil)
                        (file-configuration :initarg :file-configuration :type
                         (common-lisp:or file-configuration common-lisp:null)
                         :accessor
                         %get-data-integration-response-file-configuration
                         :initform common-lisp:nil)
                        (tags :initarg :tags :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %get-data-integration-response-tags :initform
                         common-lisp:nil)
                        (schedule-configuration :initarg
                         :schedule-configuration :type
                         (common-lisp:or schedule-configuration
                                         common-lisp:null)
                         :accessor
                         %get-data-integration-response-schedule-configuration
                         :initform common-lisp:nil)
                        (source-uri :initarg :source-uri :type
                         (common-lisp:or source-uri common-lisp:null) :accessor
                         %get-data-integration-response-source-uri :initform
                         common-lisp:nil)
                        (kms-key :initarg :kms-key :type
                         (common-lisp:or non-blank-string common-lisp:null)
                         :accessor %get-data-integration-response-kms-key
                         :initform common-lisp:nil)
                        (description :initarg :description :type
                         (common-lisp:or description common-lisp:null)
                         :accessor %get-data-integration-response-description
                         :initform common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or name common-lisp:null) :accessor
                         %get-data-integration-response-name :initform
                         common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         %get-data-integration-response-id :initform
                         common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %get-data-integration-response-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-data-integration-response
                    'make-get-data-integration-response))
 (common-lisp:defun make-get-data-integration-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key object-configuration file-configuration
                     tags schedule-configuration source-uri kms-key description
                     name id arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-data-integration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-data-integration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-data-integration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key))
      (common-lisp:list
       (common-lisp:cons "KmsKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-uri))
      (common-lisp:list
       (common-lisp:cons "SourceURI"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'schedule-configuration))
      (common-lisp:list
       (common-lisp:cons "ScheduleConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-configuration))
      (common-lisp:list
       (common-lisp:cons "FileConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'object-configuration))
      (common-lisp:list
       (common-lisp:cons "ObjectConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-data-integration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-event-integration-request common-lisp:nil
                       ((name :initarg :name :type
                         (common-lisp:or name common-lisp:null) :accessor
                         %get-event-integration-request-name :initform
                         (common-lisp:error ":name is required"))))
 (common-lisp:export
  (common-lisp:list 'get-event-integration-request
                    'make-get-event-integration-request))
 (common-lisp:defun make-get-event-integration-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key name)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-event-integration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-event-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-event-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-event-integration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-event-integration-response common-lisp:nil
                       ((tags :initarg :tags :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %get-event-integration-response-tags :initform
                         common-lisp:nil)
                        (event-filter :initarg :event-filter :type
                         (common-lisp:or event-filter common-lisp:null)
                         :accessor %get-event-integration-response-event-filter
                         :initform common-lisp:nil)
                        (event-bridge-bus :initarg :event-bridge-bus :type
                         (common-lisp:or event-bridge-bus common-lisp:null)
                         :accessor
                         %get-event-integration-response-event-bridge-bus
                         :initform common-lisp:nil)
                        (event-integration-arn :initarg :event-integration-arn
                         :type (common-lisp:or arn common-lisp:null) :accessor
                         %get-event-integration-response-event-integration-arn
                         :initform common-lisp:nil)
                        (description :initarg :description :type
                         (common-lisp:or description common-lisp:null)
                         :accessor %get-event-integration-response-description
                         :initform common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or name common-lisp:null) :accessor
                         %get-event-integration-response-name :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-event-integration-response
                    'make-get-event-integration-response))
 (common-lisp:defun make-get-event-integration-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags event-filter event-bridge-bus
                     event-integration-arn description name)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-event-integration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-event-integration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-event-integration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'event-integration-arn))
      (common-lisp:list
       (common-lisp:cons "EventIntegrationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-bridge-bus))
      (common-lisp:list
       (common-lisp:cons "EventBridgeBus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-filter))
      (common-lisp:list
       (common-lisp:cons "EventFilter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-event-integration-response))
   common-lisp:nil))
(common-lisp:deftype idempotency-token () 'common-lisp:string)
(common-lisp:deftype identifier () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition internal-service-error
     (appintegrations-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-service-error-message)))
 (common-lisp:export
  (common-lisp:list 'internal-service-error 'internal-service-error-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-request-exception
     (appintegrations-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-request-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-request-exception
                    'invalid-request-exception-message)))
(common-lisp:progn
 (common-lisp:defclass list-data-integration-associations-request
                       common-lisp:nil
                       ((max-results :initarg :max-results :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         %list-data-integration-associations-request-max-results
                         :initform common-lisp:nil)
                        (next-token :initarg :next-token :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-data-integration-associations-request-next-token
                         :initform common-lisp:nil)
                        (data-integration-identifier :initarg
                         :data-integration-identifier :type
                         (common-lisp:or identifier common-lisp:null) :accessor
                         %list-data-integration-associations-request-data-integration-identifier
                         :initform
                         (common-lisp:error
                          ":data-integration-identifier is required"))))
 (common-lisp:export
  (common-lisp:list 'list-data-integration-associations-request
                    'make-list-data-integration-associations-request))
 (common-lisp:defun make-list-data-integration-associations-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key max-results next-token
                     data-integration-identifier)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-data-integration-associations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-data-integration-associations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-data-integration-associations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-data-integration-associations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-data-integration-associations-response
                       common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-data-integration-associations-response-next-token
                         :initform common-lisp:nil)
                        (data-integration-associations :initarg
                         :data-integration-associations :type
                         (common-lisp:or data-integration-associations-list
                                         common-lisp:null)
                         :accessor
                         %list-data-integration-associations-response-data-integration-associations
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-data-integration-associations-response
                    'make-list-data-integration-associations-response))
 (common-lisp:defun make-list-data-integration-associations-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token data-integration-associations)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-data-integration-associations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-data-integration-associations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-data-integration-associations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-integration-associations))
      (common-lisp:list
       (common-lisp:cons "DataIntegrationAssociations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-data-integration-associations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-data-integrations-request common-lisp:nil
                       ((max-results :initarg :max-results :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor %list-data-integrations-request-max-results
                         :initform common-lisp:nil)
                        (next-token :initarg :next-token :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-data-integrations-request-next-token :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-data-integrations-request
                    'make-list-data-integrations-request))
 (common-lisp:defun make-list-data-integrations-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key max-results next-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-data-integrations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-data-integrations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-data-integrations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-data-integrations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-data-integrations-response common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-data-integrations-response-next-token :initform
                         common-lisp:nil)
                        (data-integrations :initarg :data-integrations :type
                         (common-lisp:or data-integrations-list
                                         common-lisp:null)
                         :accessor
                         %list-data-integrations-response-data-integrations
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-data-integrations-response
                    'make-list-data-integrations-response))
 (common-lisp:defun make-list-data-integrations-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token data-integrations)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-data-integrations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-data-integrations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-data-integrations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-integrations))
      (common-lisp:list
       (common-lisp:cons "DataIntegrations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-data-integrations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-event-integration-associations-request
                       common-lisp:nil
                       ((max-results :initarg :max-results :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         %list-event-integration-associations-request-max-results
                         :initform common-lisp:nil)
                        (next-token :initarg :next-token :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-event-integration-associations-request-next-token
                         :initform common-lisp:nil)
                        (event-integration-name :initarg
                         :event-integration-name :type
                         (common-lisp:or name common-lisp:null) :accessor
                         %list-event-integration-associations-request-event-integration-name
                         :initform
                         (common-lisp:error
                          ":event-integration-name is required"))))
 (common-lisp:export
  (common-lisp:list 'list-event-integration-associations-request
                    'make-list-event-integration-associations-request))
 (common-lisp:defun make-list-event-integration-associations-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key max-results next-token
                     event-integration-name)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-event-integration-associations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-event-integration-associations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-event-integration-associations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-event-integration-associations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-event-integration-associations-response
                       common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-event-integration-associations-response-next-token
                         :initform common-lisp:nil)
                        (event-integration-associations :initarg
                         :event-integration-associations :type
                         (common-lisp:or event-integration-associations-list
                                         common-lisp:null)
                         :accessor
                         %list-event-integration-associations-response-event-integration-associations
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-event-integration-associations-response
                    'make-list-event-integration-associations-response))
 (common-lisp:defun make-list-event-integration-associations-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token
                     event-integration-associations)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-event-integration-associations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-event-integration-associations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-event-integration-associations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'event-integration-associations))
      (common-lisp:list
       (common-lisp:cons "EventIntegrationAssociations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-event-integration-associations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-event-integrations-request common-lisp:nil
                       ((max-results :initarg :max-results :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor %list-event-integrations-request-max-results
                         :initform common-lisp:nil)
                        (next-token :initarg :next-token :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-event-integrations-request-next-token :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-event-integrations-request
                    'make-list-event-integrations-request))
 (common-lisp:defun make-list-event-integrations-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key max-results next-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-event-integrations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-event-integrations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-event-integrations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-event-integrations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-event-integrations-response common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-event-integrations-response-next-token :initform
                         common-lisp:nil)
                        (event-integrations :initarg :event-integrations :type
                         (common-lisp:or event-integrations-list
                                         common-lisp:null)
                         :accessor
                         %list-event-integrations-response-event-integrations
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-event-integrations-response
                    'make-list-event-integrations-response))
 (common-lisp:defun make-list-event-integrations-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token event-integrations)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-event-integrations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-event-integrations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-event-integrations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-integrations))
      (common-lisp:list
       (common-lisp:cons "EventIntegrations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-event-integrations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-request common-lisp:nil
                       ((resource-arn :initarg :|resourceArn| :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %list-tags-for-resource-request-resource-arn :initform
                         (common-lisp:error ":resourcearn is required"))))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defun make-list-tags-for-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-response common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %list-tags-for-resource-response-tags :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defun make-list-tags-for-resource-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype message () 'common-lisp:string)
(common-lisp:deftype name () 'common-lisp:string)
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:deftype non-blank-long-string () 'common-lisp:string)
(common-lisp:deftype non-blank-string () 'common-lisp:string)
(common-lisp:deftype object () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype object-configuration () 'common-lisp:hash-table)
 (common-lisp:defun |make-object-configuration|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (appintegrations-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition resource-quota-exceeded-exception
     (appintegrations-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-quota-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-quota-exceeded-exception
                    'resource-quota-exceeded-exception-message)))
(common-lisp:progn
 (common-lisp:defclass schedule-configuration common-lisp:nil
                       ((schedule-expression :initarg :schedule-expression
                         :type
                         (common-lisp:or non-blank-string common-lisp:null)
                         :accessor %schedule-configuration-schedule-expression
                         :initform
                         (common-lisp:error
                          ":schedule-expression is required"))
                        (object :initarg :object :type
                         (common-lisp:or object common-lisp:null) :accessor
                         %schedule-configuration-object :initform
                         common-lisp:nil)
                        (first-execution-from :initarg :first-execution-from
                         :type
                         (common-lisp:or non-blank-string common-lisp:null)
                         :accessor %schedule-configuration-first-execution-from
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'schedule-configuration 'make-schedule-configuration))
 (common-lisp:defun make-schedule-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key schedule-expression object
                     first-execution-from)
   (common-lisp:apply #'common-lisp:make-instance 'schedule-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          schedule-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          schedule-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'first-execution-from))
      (common-lisp:list
       (common-lisp:cons "FirstExecutionFrom"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'object))
      (common-lisp:list
       (common-lisp:cons "Object"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schedule-expression))
      (common-lisp:list
       (common-lisp:cons "ScheduleExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          schedule-configuration))
   common-lisp:nil))
(common-lisp:deftype source () 'common-lisp:string)
(common-lisp:deftype source-uri () 'common-lisp:string)
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun |make-tag-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-map () 'common-lisp:hash-table)
 (common-lisp:defun |make-tag-map| (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass tag-resource-request common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %tag-resource-request-tags :initform
                         (common-lisp:error ":tags is required"))
                        (resource-arn :initarg :|resourceArn| :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %tag-resource-request-resource-arn :initform
                         (common-lisp:error ":resourcearn is required"))))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defun make-tag-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags resource-arn)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-resource-response common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defun make-tag-resource-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (appintegrations-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       throttling-exception-message)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message)))
(common-lisp:deftype uuid () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass untag-resource-request common-lisp:nil
                       ((tag-keys :initarg :|tagKeys| :type
                         (common-lisp:or tag-key-list common-lisp:null)
                         :accessor %untag-resource-request-tag-keys :initform
                         (common-lisp:error ":tagkeys is required"))
                        (resource-arn :initarg :|resourceArn| :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %untag-resource-request-resource-arn :initform
                         (common-lisp:error ":resourcearn is required"))))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defun make-untag-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tag-keys resource-arn)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass untag-resource-response common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defun make-untag-resource-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-data-integration-request common-lisp:nil
                       ((description :initarg :description :type
                         (common-lisp:or description common-lisp:null)
                         :accessor %update-data-integration-request-description
                         :initform common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or name common-lisp:null) :accessor
                         %update-data-integration-request-name :initform
                         common-lisp:nil)
                        (identifier :initarg :identifier :type
                         (common-lisp:or identifier common-lisp:null) :accessor
                         %update-data-integration-request-identifier :initform
                         (common-lisp:error ":identifier is required"))))
 (common-lisp:export
  (common-lisp:list 'update-data-integration-request
                    'make-update-data-integration-request))
 (common-lisp:defun make-update-data-integration-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key description name identifier)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-data-integration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-data-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-data-integration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-data-integration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-data-integration-response common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'update-data-integration-response
                    'make-update-data-integration-response))
 (common-lisp:defun make-update-data-integration-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-data-integration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-data-integration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-data-integration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-data-integration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-event-integration-request common-lisp:nil
                       ((description :initarg :description :type
                         (common-lisp:or description common-lisp:null)
                         :accessor
                         %update-event-integration-request-description
                         :initform common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or name common-lisp:null) :accessor
                         %update-event-integration-request-name :initform
                         (common-lisp:error ":name is required"))))
 (common-lisp:export
  (common-lisp:list 'update-event-integration-request
                    'make-update-event-integration-request))
 (common-lisp:defun make-update-event-integration-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key description name)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-event-integration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-event-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-event-integration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-event-integration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-event-integration-response common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'update-event-integration-response
                    'make-update-event-integration-response))
 (common-lisp:defun make-update-event-integration-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-event-integration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-event-integration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-event-integration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-event-integration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defun create-data-integration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description kms-key source-uri
                     schedule-config tags client-token file-configuration
                     object-configuration)
   (common-lisp:declare
    (common-lisp:ignorable name description kms-key source-uri schedule-config
     tags client-token file-configuration object-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-data-integration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'appintegrations-request aws-sdk/generator/operation::input "POST"
        :rest-json "/dataIntegrations" "CreateDataIntegration" "2020-07-29"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-data-integration))
(common-lisp:progn
 (common-lisp:defun create-event-integration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description event-filter
                     event-bridge-bus client-token tags)
   (common-lisp:declare
    (common-lisp:ignorable name description event-filter event-bridge-bus
     client-token tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-event-integration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'appintegrations-request aws-sdk/generator/operation::input "POST"
        :rest-json "/eventIntegrations" "CreateEventIntegration" "2020-07-29"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-event-integration))
(common-lisp:progn
 (common-lisp:defun delete-data-integration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key data-integration-identifier)
   (common-lisp:declare (common-lisp:ignorable data-integration-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-data-integration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'appintegrations-request aws-sdk/generator/operation::input "DELETE"
        :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/dataIntegrations/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'identifier))))
        "DeleteDataIntegration" "2020-07-29"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-data-integration))
(common-lisp:progn
 (common-lisp:defun delete-event-integration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-event-integration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'appintegrations-request aws-sdk/generator/operation::input "DELETE"
        :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/eventIntegrations/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input 'name))))
        "DeleteEventIntegration" "2020-07-29"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-event-integration))
(common-lisp:progn
 (common-lisp:defun get-data-integration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identifier)
   (common-lisp:declare (common-lisp:ignorable identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-data-integration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'appintegrations-request aws-sdk/generator/operation::input "GET"
        :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/dataIntegrations/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'identifier))))
        "GetDataIntegration" "2020-07-29"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-data-integration))
(common-lisp:progn
 (common-lisp:defun get-event-integration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-event-integration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'appintegrations-request aws-sdk/generator/operation::input "GET"
        :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/eventIntegrations/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input 'name))))
        "GetEventIntegration" "2020-07-29"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-event-integration))
(common-lisp:progn
 (common-lisp:defun list-data-integration-associations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key data-integration-identifier next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable data-integration-identifier next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-data-integration-associations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'appintegrations-request aws-sdk/generator/operation::input "GET"
        :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/dataIntegrations/~A/associations"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'identifier))))
        "ListDataIntegrationAssociations" "2020-07-29"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-data-integration-associations))
(common-lisp:progn
 (common-lisp:defun list-data-integrations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-data-integrations-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'appintegrations-request aws-sdk/generator/operation::input "GET"
        :rest-json "/dataIntegrations" "ListDataIntegrations" "2020-07-29"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-data-integrations))
(common-lisp:progn
 (common-lisp:defun list-event-integration-associations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key event-integration-name next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable event-integration-name next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-event-integration-associations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'appintegrations-request aws-sdk/generator/operation::input "GET"
        :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/eventIntegrations/~A/associations"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input 'name))))
        "ListEventIntegrationAssociations" "2020-07-29"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-event-integration-associations))
(common-lisp:progn
 (common-lisp:defun list-event-integrations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-event-integrations-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'appintegrations-request aws-sdk/generator/operation::input "GET"
        :rest-json "/eventIntegrations" "ListEventIntegrations" "2020-07-29"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-event-integrations))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'appintegrations-request aws-sdk/generator/operation::input "GET"
        :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-arn))))
        "ListTagsForResource" "2020-07-29"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'appintegrations-request aws-sdk/generator/operation::input "POST"
        :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-arn))))
        "TagResource" "2020-07-29"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'appintegrations-request aws-sdk/generator/operation::input "DELETE"
        :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-arn))))
        "UntagResource" "2020-07-29"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-data-integration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identifier name description)
   (common-lisp:declare (common-lisp:ignorable identifier name description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-data-integration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'appintegrations-request aws-sdk/generator/operation::input "PATCH"
        :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/dataIntegrations/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'identifier))))
        "UpdateDataIntegration" "2020-07-29"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-data-integration))
(common-lisp:progn
 (common-lisp:defun update-event-integration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description)
   (common-lisp:declare (common-lisp:ignorable name description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-event-integration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'appintegrations-request aws-sdk/generator/operation::input "PATCH"
        :rest-json
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/eventIntegrations/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input 'name))))
        "UpdateEventIntegration" "2020-07-29"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-event-integration))
