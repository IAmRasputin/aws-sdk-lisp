;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/network-firewall/api
  (:use)
  (:nicknames #:aws/network-firewall)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/network-firewall/api)
(common-lisp:progn
 (common-lisp:defclass network-firewall-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "network-firewall"))
 (common-lisp:export 'network-firewall-request))
(common-lisp:progn
 (common-lisp:define-condition network-firewall-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'network-firewall-error))
(common-lisp:defvar *error-map*
  '(("InsufficientCapacityException" . insufficient-capacity-exception)
    ("InternalServerError" . internal-server-error)
    ("InvalidOperationException" . invalid-operation-exception)
    ("InvalidRequestException" . invalid-request-exception)
    ("InvalidResourcePolicyException" . invalid-resource-policy-exception)
    ("InvalidTokenException" . invalid-token-exception)
    ("LimitExceededException" . limit-exceeded-exception)
    ("LogDestinationPermissionException"
     . log-destination-permission-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ResourceOwnerCheckException" . resource-owner-check-exception)
    ("ThrottlingException" . throttling-exception)
    ("UnsupportedOperationException" . unsupported-operation-exception)))
(common-lisp:progn
 (common-lisp:defstruct
     (action-definition (:copier common-lisp:nil)
      (:conc-name "struct-shape-action-definition-"))
   (publish-metric-action common-lisp:nil :type
    (common-lisp:or publish-metric-action common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'action-definition 'make-action-definition))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input action-definition))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input action-definition))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'publish-metric-action))
      (common-lisp:list
       (common-lisp:cons "PublishMetricAction"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input action-definition))
   common-lisp:nil))
(common-lisp:deftype action-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (address (:copier common-lisp:nil) (:conc-name "struct-shape-address-"))
   (address-definition (common-lisp:error ":address-definition is required")
    :type (common-lisp:or address-definition common-lisp:null)))
 (common-lisp:export (common-lisp:list 'address 'make-address))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input address))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input address))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'address-definition))
      (common-lisp:list
       (common-lisp:cons "AddressDefinition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input address))
   common-lisp:nil))
(common-lisp:deftype address-definition () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype addresses () '(trivial-types:proper-list address))
 (common-lisp:defun |make-addresses|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list address))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-firewall-policy-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-associate-firewall-policy-request-"))
   (update-token common-lisp:nil :type
    (common-lisp:or update-token common-lisp:null))
   (firewall-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (firewall-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (firewall-policy-arn (common-lisp:error ":firewall-policy-arn is required")
    :type (common-lisp:or resource-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'associate-firewall-policy-request
                    'make-associate-firewall-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-firewall-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-firewall-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-token))
      (common-lisp:list
       (common-lisp:cons "UpdateToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-arn))
      (common-lisp:list
       (common-lisp:cons "FirewallArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-name))
      (common-lisp:list
       (common-lisp:cons "FirewallName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-policy-arn))
      (common-lisp:list
       (common-lisp:cons "FirewallPolicyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-firewall-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-firewall-policy-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-associate-firewall-policy-response-"))
   (firewall-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (firewall-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (firewall-policy-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (update-token common-lisp:nil :type
    (common-lisp:or update-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'associate-firewall-policy-response
                    'make-associate-firewall-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-firewall-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-firewall-policy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-arn))
      (common-lisp:list
       (common-lisp:cons "FirewallArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-name))
      (common-lisp:list
       (common-lisp:cons "FirewallName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-policy-arn))
      (common-lisp:list
       (common-lisp:cons "FirewallPolicyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-token))
      (common-lisp:list
       (common-lisp:cons "UpdateToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-firewall-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-subnets-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-associate-subnets-request-"))
   (update-token common-lisp:nil :type
    (common-lisp:or update-token common-lisp:null))
   (firewall-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (firewall-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (subnet-mappings (common-lisp:error ":subnet-mappings is required") :type
    (common-lisp:or subnet-mappings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'associate-subnets-request
                    'make-associate-subnets-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-subnets-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-subnets-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-token))
      (common-lisp:list
       (common-lisp:cons "UpdateToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-arn))
      (common-lisp:list
       (common-lisp:cons "FirewallArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-name))
      (common-lisp:list
       (common-lisp:cons "FirewallName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-mappings))
      (common-lisp:list
       (common-lisp:cons "SubnetMappings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-subnets-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-subnets-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-associate-subnets-response-"))
   (firewall-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (firewall-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (subnet-mappings common-lisp:nil :type
    (common-lisp:or subnet-mappings common-lisp:null))
   (update-token common-lisp:nil :type
    (common-lisp:or update-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'associate-subnets-response
                    'make-associate-subnets-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-subnets-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-subnets-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-arn))
      (common-lisp:list
       (common-lisp:cons "FirewallArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-name))
      (common-lisp:list
       (common-lisp:cons "FirewallName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-mappings))
      (common-lisp:list
       (common-lisp:cons "SubnetMappings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-token))
      (common-lisp:list
       (common-lisp:cons "UpdateToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-subnets-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (attachment (:copier common-lisp:nil)
      (:conc-name "struct-shape-attachment-"))
   (subnet-id common-lisp:nil :type
    (common-lisp:or az-subnet common-lisp:null))
   (endpoint-id common-lisp:nil :type
    (common-lisp:or endpoint-id common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or attachment-status common-lisp:null))
   (status-message common-lisp:nil :type
    (common-lisp:or status-message common-lisp:null)))
 (common-lisp:export (common-lisp:list 'attachment 'make-attachment))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input attachment))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input attachment))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-id))
      (common-lisp:list
       (common-lisp:cons "SubnetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-id))
      (common-lisp:list
       (common-lisp:cons "EndpointId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-message))
      (common-lisp:list
       (common-lisp:cons "StatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input attachment))
   common-lisp:nil))
(common-lisp:deftype attachment-status () 'common-lisp:string)
(common-lisp:deftype availability-zone () 'common-lisp:string)
(common-lisp:deftype az-subnet () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype az-subnets () '(trivial-types:proper-list az-subnet))
 (common-lisp:defun |make-az-subnets|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list az-subnet))
   aws-sdk/generator/shape::members))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:deftype cidrcount () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (cidrsummary (:copier common-lisp:nil)
      (:conc-name "struct-shape-cidrsummary-"))
   (available-cidrcount common-lisp:nil :type
    (common-lisp:or cidrcount common-lisp:null))
   (utilized-cidrcount common-lisp:nil :type
    (common-lisp:or cidrcount common-lisp:null))
   (ipset-references common-lisp:nil :type
    (common-lisp:or ipset-metadata-map common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cidrsummary 'make-cidrsummary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input cidrsummary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input cidrsummary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'available-cidrcount))
      (common-lisp:list
       (common-lisp:cons "AvailableCIDRCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'utilized-cidrcount))
      (common-lisp:list
       (common-lisp:cons "UtilizedCIDRCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ipset-references))
      (common-lisp:list
       (common-lisp:cons "IPSetReferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input cidrsummary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (capacity-usage-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-capacity-usage-summary-"))
   (cidrs common-lisp:nil :type (common-lisp:or cidrsummary common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'capacity-usage-summary 'make-capacity-usage-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          capacity-usage-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          capacity-usage-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cidrs))
      (common-lisp:list
       (common-lisp:cons "CIDRs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          capacity-usage-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype certificates ()
   '(trivial-types:proper-list tls-certificate-data))
 (common-lisp:defun |make-certificates|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tls-certificate-data))
   aws-sdk/generator/shape::members))
(common-lisp:deftype collection-member-string () 'common-lisp:string)
(common-lisp:deftype configuration-sync-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (create-firewall-policy-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-firewall-policy-request-"))
   (firewall-policy-name
    (common-lisp:error ":firewall-policy-name is required") :type
    (common-lisp:or resource-name common-lisp:null))
   (firewall-policy (common-lisp:error ":firewall-policy is required") :type
    (common-lisp:or firewall-policy common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (encryption-configuration common-lisp:nil :type
    (common-lisp:or encryption-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-firewall-policy-request
                    'make-create-firewall-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-firewall-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-firewall-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'firewall-policy-name))
      (common-lisp:list
       (common-lisp:cons "FirewallPolicyName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-policy))
      (common-lisp:list
       (common-lisp:cons "FirewallPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dry-run))
      (common-lisp:list
       (common-lisp:cons "DryRun"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'encryption-configuration))
      (common-lisp:list
       (common-lisp:cons "EncryptionConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-firewall-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-firewall-policy-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-firewall-policy-response-"))
   (update-token (common-lisp:error ":update-token is required") :type
    (common-lisp:or update-token common-lisp:null))
   (firewall-policy-response
    (common-lisp:error ":firewall-policy-response is required") :type
    (common-lisp:or firewall-policy-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-firewall-policy-response
                    'make-create-firewall-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-firewall-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-firewall-policy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-token))
      (common-lisp:list
       (common-lisp:cons "UpdateToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'firewall-policy-response))
      (common-lisp:list
       (common-lisp:cons "FirewallPolicyResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-firewall-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-firewall-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-firewall-request-"))
   (firewall-name (common-lisp:error ":firewall-name is required") :type
    (common-lisp:or resource-name common-lisp:null))
   (firewall-policy-arn (common-lisp:error ":firewall-policy-arn is required")
    :type (common-lisp:or resource-arn common-lisp:null))
   (vpc-id (common-lisp:error ":vpc-id is required") :type
    (common-lisp:or vpc-id common-lisp:null))
   (subnet-mappings (common-lisp:error ":subnet-mappings is required") :type
    (common-lisp:or subnet-mappings common-lisp:null))
   (delete-protection common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (subnet-change-protection common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (firewall-policy-change-protection common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (encryption-configuration common-lisp:nil :type
    (common-lisp:or encryption-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-firewall-request 'make-create-firewall-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-firewall-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-firewall-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-name))
      (common-lisp:list
       (common-lisp:cons "FirewallName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-policy-arn))
      (common-lisp:list
       (common-lisp:cons "FirewallPolicyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-id))
      (common-lisp:list
       (common-lisp:cons "VpcId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-mappings))
      (common-lisp:list
       (common-lisp:cons "SubnetMappings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'delete-protection))
      (common-lisp:list
       (common-lisp:cons "DeleteProtection"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'subnet-change-protection))
      (common-lisp:list
       (common-lisp:cons "SubnetChangeProtection"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'firewall-policy-change-protection))
      (common-lisp:list
       (common-lisp:cons "FirewallPolicyChangeProtection"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'encryption-configuration))
      (common-lisp:list
       (common-lisp:cons "EncryptionConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-firewall-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-firewall-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-firewall-response-"))
   (firewall common-lisp:nil :type (common-lisp:or firewall common-lisp:null))
   (firewall-status common-lisp:nil :type
    (common-lisp:or firewall-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-firewall-response 'make-create-firewall-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-firewall-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-firewall-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall))
      (common-lisp:list
       (common-lisp:cons "Firewall"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-status))
      (common-lisp:list
       (common-lisp:cons "FirewallStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-firewall-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-rule-group-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-rule-group-request-"))
   (rule-group-name (common-lisp:error ":rule-group-name is required") :type
    (common-lisp:or resource-name common-lisp:null))
   (rule-group common-lisp:nil :type
    (common-lisp:or rule-group common-lisp:null))
   (rules common-lisp:nil :type (common-lisp:or rules-string common-lisp:null))
   (type (common-lisp:error ":type is required") :type
    (common-lisp:or rule-group-type common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (capacity (common-lisp:error ":capacity is required") :type
    (common-lisp:or rule-capacity common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (encryption-configuration common-lisp:nil :type
    (common-lisp:or encryption-configuration common-lisp:null))
   (source-metadata common-lisp:nil :type
    (common-lisp:or source-metadata common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-rule-group-request
                    'make-create-rule-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-rule-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-rule-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-group-name))
      (common-lisp:list
       (common-lisp:cons "RuleGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-group))
      (common-lisp:list
       (common-lisp:cons "RuleGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rules))
      (common-lisp:list
       (common-lisp:cons "Rules"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'capacity))
      (common-lisp:list
       (common-lisp:cons "Capacity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dry-run))
      (common-lisp:list
       (common-lisp:cons "DryRun"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'encryption-configuration))
      (common-lisp:list
       (common-lisp:cons "EncryptionConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-metadata))
      (common-lisp:list
       (common-lisp:cons "SourceMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-rule-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-rule-group-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-rule-group-response-"))
   (update-token (common-lisp:error ":update-token is required") :type
    (common-lisp:or update-token common-lisp:null))
   (rule-group-response (common-lisp:error ":rule-group-response is required")
    :type (common-lisp:or rule-group-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-rule-group-response
                    'make-create-rule-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-rule-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-rule-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-token))
      (common-lisp:list
       (common-lisp:cons "UpdateToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-group-response))
      (common-lisp:list
       (common-lisp:cons "RuleGroupResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-rule-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-tlsinspection-configuration-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-tlsinspection-configuration-request-"))
   (tlsinspection-configuration-name
    (common-lisp:error ":tlsinspection-configuration-name is required") :type
    (common-lisp:or resource-name common-lisp:null))
   (tlsinspection-configuration
    (common-lisp:error ":tlsinspection-configuration is required") :type
    (common-lisp:or tlsinspection-configuration common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (encryption-configuration common-lisp:nil :type
    (common-lisp:or encryption-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-tlsinspection-configuration-request
                    'make-create-tlsinspection-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-tlsinspection-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-tlsinspection-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'tlsinspection-configuration-name))
      (common-lisp:list
       (common-lisp:cons "TLSInspectionConfigurationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'tlsinspection-configuration))
      (common-lisp:list
       (common-lisp:cons "TLSInspectionConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'encryption-configuration))
      (common-lisp:list
       (common-lisp:cons "EncryptionConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-tlsinspection-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-tlsinspection-configuration-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-tlsinspection-configuration-response-"))
   (update-token (common-lisp:error ":update-token is required") :type
    (common-lisp:or update-token common-lisp:null))
   (tlsinspection-configuration-response
    (common-lisp:error ":tlsinspection-configuration-response is required")
    :type
    (common-lisp:or tlsinspection-configuration-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-tlsinspection-configuration-response
                    'make-create-tlsinspection-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-tlsinspection-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-tlsinspection-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-token))
      (common-lisp:list
       (common-lisp:cons "UpdateToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'tlsinspection-configuration-response))
      (common-lisp:list
       (common-lisp:cons "TLSInspectionConfigurationResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-tlsinspection-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (custom-action (:copier common-lisp:nil)
      (:conc-name "struct-shape-custom-action-"))
   (action-name (common-lisp:error ":action-name is required") :type
    (common-lisp:or action-name common-lisp:null))
   (action-definition (common-lisp:error ":action-definition is required")
    :type (common-lisp:or action-definition common-lisp:null)))
 (common-lisp:export (common-lisp:list 'custom-action 'make-custom-action))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input custom-action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input custom-action))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action-name))
      (common-lisp:list
       (common-lisp:cons "ActionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action-definition))
      (common-lisp:list
       (common-lisp:cons "ActionDefinition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input custom-action))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype custom-actions ()
   '(trivial-types:proper-list custom-action))
 (common-lisp:defun |make-custom-actions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list custom-action))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-firewall-policy-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-firewall-policy-request-"))
   (firewall-policy-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (firewall-policy-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-firewall-policy-request
                    'make-delete-firewall-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-firewall-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-firewall-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'firewall-policy-name))
      (common-lisp:list
       (common-lisp:cons "FirewallPolicyName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-policy-arn))
      (common-lisp:list
       (common-lisp:cons "FirewallPolicyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-firewall-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-firewall-policy-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-firewall-policy-response-"))
   (firewall-policy-response
    (common-lisp:error ":firewall-policy-response is required") :type
    (common-lisp:or firewall-policy-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-firewall-policy-response
                    'make-delete-firewall-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-firewall-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-firewall-policy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'firewall-policy-response))
      (common-lisp:list
       (common-lisp:cons "FirewallPolicyResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-firewall-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-firewall-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-firewall-request-"))
   (firewall-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (firewall-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-firewall-request 'make-delete-firewall-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-firewall-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-firewall-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-name))
      (common-lisp:list
       (common-lisp:cons "FirewallName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-arn))
      (common-lisp:list
       (common-lisp:cons "FirewallArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-firewall-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-firewall-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-firewall-response-"))
   (firewall common-lisp:nil :type (common-lisp:or firewall common-lisp:null))
   (firewall-status common-lisp:nil :type
    (common-lisp:or firewall-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-firewall-response 'make-delete-firewall-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-firewall-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-firewall-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall))
      (common-lisp:list
       (common-lisp:cons "Firewall"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-status))
      (common-lisp:list
       (common-lisp:cons "FirewallStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-firewall-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-resource-policy-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-resource-policy-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or resource-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-resource-policy-request
                    'make-delete-resource-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-resource-policy-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-resource-policy-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-resource-policy-response
                    'make-delete-resource-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-rule-group-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-rule-group-request-"))
   (rule-group-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (rule-group-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or rule-group-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-rule-group-request
                    'make-delete-rule-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-rule-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-rule-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-group-name))
      (common-lisp:list
       (common-lisp:cons "RuleGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-group-arn))
      (common-lisp:list
       (common-lisp:cons "RuleGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-rule-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-rule-group-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-rule-group-response-"))
   (rule-group-response (common-lisp:error ":rule-group-response is required")
    :type (common-lisp:or rule-group-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-rule-group-response
                    'make-delete-rule-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-rule-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-rule-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-group-response))
      (common-lisp:list
       (common-lisp:cons "RuleGroupResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-rule-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-tlsinspection-configuration-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-tlsinspection-configuration-request-"))
   (tlsinspection-configuration-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (tlsinspection-configuration-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-tlsinspection-configuration-request
                    'make-delete-tlsinspection-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-tlsinspection-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-tlsinspection-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'tlsinspection-configuration-arn))
      (common-lisp:list
       (common-lisp:cons "TLSInspectionConfigurationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'tlsinspection-configuration-name))
      (common-lisp:list
       (common-lisp:cons "TLSInspectionConfigurationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-tlsinspection-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-tlsinspection-configuration-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-tlsinspection-configuration-response-"))
   (tlsinspection-configuration-response
    (common-lisp:error ":tlsinspection-configuration-response is required")
    :type
    (common-lisp:or tlsinspection-configuration-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-tlsinspection-configuration-response
                    'make-delete-tlsinspection-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-tlsinspection-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-tlsinspection-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'tlsinspection-configuration-response))
      (common-lisp:list
       (common-lisp:cons "TLSInspectionConfigurationResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-tlsinspection-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-firewall-policy-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-firewall-policy-request-"))
   (firewall-policy-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (firewall-policy-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-firewall-policy-request
                    'make-describe-firewall-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-firewall-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-firewall-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'firewall-policy-name))
      (common-lisp:list
       (common-lisp:cons "FirewallPolicyName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-policy-arn))
      (common-lisp:list
       (common-lisp:cons "FirewallPolicyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-firewall-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-firewall-policy-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-firewall-policy-response-"))
   (update-token (common-lisp:error ":update-token is required") :type
    (common-lisp:or update-token common-lisp:null))
   (firewall-policy-response
    (common-lisp:error ":firewall-policy-response is required") :type
    (common-lisp:or firewall-policy-response common-lisp:null))
   (firewall-policy common-lisp:nil :type
    (common-lisp:or firewall-policy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-firewall-policy-response
                    'make-describe-firewall-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-firewall-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-firewall-policy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-token))
      (common-lisp:list
       (common-lisp:cons "UpdateToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'firewall-policy-response))
      (common-lisp:list
       (common-lisp:cons "FirewallPolicyResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-policy))
      (common-lisp:list
       (common-lisp:cons "FirewallPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-firewall-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-firewall-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-firewall-request-"))
   (firewall-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (firewall-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-firewall-request
                    'make-describe-firewall-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-firewall-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-firewall-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-name))
      (common-lisp:list
       (common-lisp:cons "FirewallName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-arn))
      (common-lisp:list
       (common-lisp:cons "FirewallArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-firewall-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-firewall-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-firewall-response-"))
   (update-token common-lisp:nil :type
    (common-lisp:or update-token common-lisp:null))
   (firewall common-lisp:nil :type (common-lisp:or firewall common-lisp:null))
   (firewall-status common-lisp:nil :type
    (common-lisp:or firewall-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-firewall-response
                    'make-describe-firewall-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-firewall-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-firewall-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-token))
      (common-lisp:list
       (common-lisp:cons "UpdateToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall))
      (common-lisp:list
       (common-lisp:cons "Firewall"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-status))
      (common-lisp:list
       (common-lisp:cons "FirewallStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-firewall-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-logging-configuration-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-logging-configuration-request-"))
   (firewall-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (firewall-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-logging-configuration-request
                    'make-describe-logging-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-logging-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-logging-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-arn))
      (common-lisp:list
       (common-lisp:cons "FirewallArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-name))
      (common-lisp:list
       (common-lisp:cons "FirewallName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-logging-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-logging-configuration-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-logging-configuration-response-"))
   (firewall-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (logging-configuration common-lisp:nil :type
    (common-lisp:or logging-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-logging-configuration-response
                    'make-describe-logging-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-logging-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-logging-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-arn))
      (common-lisp:list
       (common-lisp:cons "FirewallArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'logging-configuration))
      (common-lisp:list
       (common-lisp:cons "LoggingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-logging-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-resource-policy-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-resource-policy-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or resource-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-resource-policy-request
                    'make-describe-resource-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-resource-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-resource-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-resource-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-resource-policy-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-resource-policy-response-"))
   (policy common-lisp:nil :type
    (common-lisp:or policy-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-resource-policy-response
                    'make-describe-resource-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-resource-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-resource-policy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "Policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-resource-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-rule-group-metadata-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-rule-group-metadata-request-"))
   (rule-group-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (rule-group-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or rule-group-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-rule-group-metadata-request
                    'make-describe-rule-group-metadata-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-rule-group-metadata-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-rule-group-metadata-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-group-name))
      (common-lisp:list
       (common-lisp:cons "RuleGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-group-arn))
      (common-lisp:list
       (common-lisp:cons "RuleGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-rule-group-metadata-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-rule-group-metadata-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-rule-group-metadata-response-"))
   (rule-group-arn (common-lisp:error ":rule-group-arn is required") :type
    (common-lisp:or resource-arn common-lisp:null))
   (rule-group-name (common-lisp:error ":rule-group-name is required") :type
    (common-lisp:or resource-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or rule-group-type common-lisp:null))
   (capacity common-lisp:nil :type
    (common-lisp:or rule-capacity common-lisp:null))
   (stateful-rule-options common-lisp:nil :type
    (common-lisp:or stateful-rule-options common-lisp:null))
   (last-modified-time common-lisp:nil :type
    (common-lisp:or last-update-time common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-rule-group-metadata-response
                    'make-describe-rule-group-metadata-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-rule-group-metadata-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-rule-group-metadata-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-group-arn))
      (common-lisp:list
       (common-lisp:cons "RuleGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-group-name))
      (common-lisp:list
       (common-lisp:cons "RuleGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'capacity))
      (common-lisp:list
       (common-lisp:cons "Capacity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'stateful-rule-options))
      (common-lisp:list
       (common-lisp:cons "StatefulRuleOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-rule-group-metadata-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-rule-group-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-rule-group-request-"))
   (rule-group-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (rule-group-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or rule-group-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-rule-group-request
                    'make-describe-rule-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-rule-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-rule-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-group-name))
      (common-lisp:list
       (common-lisp:cons "RuleGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-group-arn))
      (common-lisp:list
       (common-lisp:cons "RuleGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-rule-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-rule-group-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-rule-group-response-"))
   (update-token (common-lisp:error ":update-token is required") :type
    (common-lisp:or update-token common-lisp:null))
   (rule-group common-lisp:nil :type
    (common-lisp:or rule-group common-lisp:null))
   (rule-group-response (common-lisp:error ":rule-group-response is required")
    :type (common-lisp:or rule-group-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-rule-group-response
                    'make-describe-rule-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-rule-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-rule-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-token))
      (common-lisp:list
       (common-lisp:cons "UpdateToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-group))
      (common-lisp:list
       (common-lisp:cons "RuleGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-group-response))
      (common-lisp:list
       (common-lisp:cons "RuleGroupResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-rule-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-tlsinspection-configuration-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-describe-tlsinspection-configuration-request-"))
   (tlsinspection-configuration-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (tlsinspection-configuration-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-tlsinspection-configuration-request
                    'make-describe-tlsinspection-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-tlsinspection-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-tlsinspection-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'tlsinspection-configuration-arn))
      (common-lisp:list
       (common-lisp:cons "TLSInspectionConfigurationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'tlsinspection-configuration-name))
      (common-lisp:list
       (common-lisp:cons "TLSInspectionConfigurationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-tlsinspection-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-tlsinspection-configuration-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-describe-tlsinspection-configuration-response-"))
   (update-token (common-lisp:error ":update-token is required") :type
    (common-lisp:or update-token common-lisp:null))
   (tlsinspection-configuration common-lisp:nil :type
    (common-lisp:or tlsinspection-configuration common-lisp:null))
   (tlsinspection-configuration-response
    (common-lisp:error ":tlsinspection-configuration-response is required")
    :type
    (common-lisp:or tlsinspection-configuration-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-tlsinspection-configuration-response
                    'make-describe-tlsinspection-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-tlsinspection-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-tlsinspection-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-token))
      (common-lisp:list
       (common-lisp:cons "UpdateToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'tlsinspection-configuration))
      (common-lisp:list
       (common-lisp:cons "TLSInspectionConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'tlsinspection-configuration-response))
      (common-lisp:list
       (common-lisp:cons "TLSInspectionConfigurationResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-tlsinspection-configuration-response))
   common-lisp:nil))
(common-lisp:deftype description () 'common-lisp:string)
(common-lisp:deftype destination () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (dimension (:copier common-lisp:nil)
      (:conc-name "struct-shape-dimension-"))
   (value (common-lisp:error ":value is required") :type
    (common-lisp:or dimension-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'dimension 'make-dimension))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dimension))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dimension))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dimension))
   common-lisp:nil))
(common-lisp:deftype dimension-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype dimensions () '(trivial-types:proper-list dimension))
 (common-lisp:defun |make-dimensions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list dimension))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-subnets-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-disassociate-subnets-request-"))
   (update-token common-lisp:nil :type
    (common-lisp:or update-token common-lisp:null))
   (firewall-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (firewall-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (subnet-ids (common-lisp:error ":subnet-ids is required") :type
    (common-lisp:or az-subnets common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disassociate-subnets-request
                    'make-disassociate-subnets-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-subnets-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-subnets-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-token))
      (common-lisp:list
       (common-lisp:cons "UpdateToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-arn))
      (common-lisp:list
       (common-lisp:cons "FirewallArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-name))
      (common-lisp:list
       (common-lisp:cons "FirewallName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-ids))
      (common-lisp:list
       (common-lisp:cons "SubnetIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-subnets-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-subnets-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-disassociate-subnets-response-"))
   (firewall-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (firewall-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (subnet-mappings common-lisp:nil :type
    (common-lisp:or subnet-mappings common-lisp:null))
   (update-token common-lisp:nil :type
    (common-lisp:or update-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disassociate-subnets-response
                    'make-disassociate-subnets-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-subnets-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-subnets-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-arn))
      (common-lisp:list
       (common-lisp:cons "FirewallArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-name))
      (common-lisp:list
       (common-lisp:cons "FirewallName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-mappings))
      (common-lisp:list
       (common-lisp:cons "SubnetMappings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-token))
      (common-lisp:list
       (common-lisp:cons "UpdateToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-subnets-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (encryption-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-encryption-configuration-"))
   (key-id common-lisp:nil :type (common-lisp:or key-id common-lisp:null))
   (type (common-lisp:error ":type is required") :type
    (common-lisp:or encryption-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'encryption-configuration 'make-encryption-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          encryption-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          encryption-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-id))
      (common-lisp:list
       (common-lisp:cons "KeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          encryption-configuration))
   common-lisp:nil))
(common-lisp:deftype encryption-type () 'common-lisp:string)
(common-lisp:deftype endpoint-id () 'common-lisp:string)
(common-lisp:deftype error-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (firewall (:copier common-lisp:nil) (:conc-name "struct-shape-firewall-"))
   (firewall-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (firewall-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (firewall-policy-arn (common-lisp:error ":firewall-policy-arn is required")
    :type (common-lisp:or resource-arn common-lisp:null))
   (vpc-id (common-lisp:error ":vpc-id is required") :type
    (common-lisp:or vpc-id common-lisp:null))
   (subnet-mappings (common-lisp:error ":subnet-mappings is required") :type
    (common-lisp:or subnet-mappings common-lisp:null))
   (delete-protection common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (subnet-change-protection common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (firewall-policy-change-protection common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (firewall-id (common-lisp:error ":firewall-id is required") :type
    (common-lisp:or resource-id common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (encryption-configuration common-lisp:nil :type
    (common-lisp:or encryption-configuration common-lisp:null)))
 (common-lisp:export (common-lisp:list 'firewall 'make-firewall))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input firewall))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input firewall))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-name))
      (common-lisp:list
       (common-lisp:cons "FirewallName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-arn))
      (common-lisp:list
       (common-lisp:cons "FirewallArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-policy-arn))
      (common-lisp:list
       (common-lisp:cons "FirewallPolicyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-id))
      (common-lisp:list
       (common-lisp:cons "VpcId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-mappings))
      (common-lisp:list
       (common-lisp:cons "SubnetMappings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'delete-protection))
      (common-lisp:list
       (common-lisp:cons "DeleteProtection"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'subnet-change-protection))
      (common-lisp:list
       (common-lisp:cons "SubnetChangeProtection"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'firewall-policy-change-protection))
      (common-lisp:list
       (common-lisp:cons "FirewallPolicyChangeProtection"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-id))
      (common-lisp:list
       (common-lisp:cons "FirewallId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'encryption-configuration))
      (common-lisp:list
       (common-lisp:cons "EncryptionConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input firewall))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (firewall-metadata (:copier common-lisp:nil)
      (:conc-name "struct-shape-firewall-metadata-"))
   (firewall-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (firewall-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'firewall-metadata 'make-firewall-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input firewall-metadata))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input firewall-metadata))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-name))
      (common-lisp:list
       (common-lisp:cons "FirewallName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-arn))
      (common-lisp:list
       (common-lisp:cons "FirewallArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input firewall-metadata))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype firewall-policies ()
   '(trivial-types:proper-list firewall-policy-metadata))
 (common-lisp:defun |make-firewall-policies|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            firewall-policy-metadata))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (firewall-policy (:copier common-lisp:nil)
      (:conc-name "struct-shape-firewall-policy-"))
   (stateless-rule-group-references common-lisp:nil :type
    (common-lisp:or stateless-rule-group-references common-lisp:null))
   (stateless-default-actions
    (common-lisp:error ":stateless-default-actions is required") :type
    (common-lisp:or stateless-actions common-lisp:null))
   (stateless-fragment-default-actions
    (common-lisp:error ":stateless-fragment-default-actions is required") :type
    (common-lisp:or stateless-actions common-lisp:null))
   (stateless-custom-actions common-lisp:nil :type
    (common-lisp:or custom-actions common-lisp:null))
   (stateful-rule-group-references common-lisp:nil :type
    (common-lisp:or stateful-rule-group-references common-lisp:null))
   (stateful-default-actions common-lisp:nil :type
    (common-lisp:or stateful-actions common-lisp:null))
   (stateful-engine-options common-lisp:nil :type
    (common-lisp:or stateful-engine-options common-lisp:null))
   (tlsinspection-configuration-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null)))
 (common-lisp:export (common-lisp:list 'firewall-policy 'make-firewall-policy))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input firewall-policy))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input firewall-policy))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'stateless-rule-group-references))
      (common-lisp:list
       (common-lisp:cons "StatelessRuleGroupReferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'stateless-default-actions))
      (common-lisp:list
       (common-lisp:cons "StatelessDefaultActions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'stateless-fragment-default-actions))
      (common-lisp:list
       (common-lisp:cons "StatelessFragmentDefaultActions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'stateless-custom-actions))
      (common-lisp:list
       (common-lisp:cons "StatelessCustomActions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'stateful-rule-group-references))
      (common-lisp:list
       (common-lisp:cons "StatefulRuleGroupReferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'stateful-default-actions))
      (common-lisp:list
       (common-lisp:cons "StatefulDefaultActions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'stateful-engine-options))
      (common-lisp:list
       (common-lisp:cons "StatefulEngineOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'tlsinspection-configuration-arn))
      (common-lisp:list
       (common-lisp:cons "TLSInspectionConfigurationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input firewall-policy))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (firewall-policy-metadata (:copier common-lisp:nil)
      (:conc-name "struct-shape-firewall-policy-metadata-"))
   (name common-lisp:nil :type (common-lisp:or resource-name common-lisp:null))
   (arn common-lisp:nil :type (common-lisp:or resource-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'firewall-policy-metadata 'make-firewall-policy-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          firewall-policy-metadata))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          firewall-policy-metadata))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          firewall-policy-metadata))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (firewall-policy-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-firewall-policy-response-"))
   (firewall-policy-name
    (common-lisp:error ":firewall-policy-name is required") :type
    (common-lisp:or resource-name common-lisp:null))
   (firewall-policy-arn (common-lisp:error ":firewall-policy-arn is required")
    :type (common-lisp:or resource-arn common-lisp:null))
   (firewall-policy-id (common-lisp:error ":firewall-policy-id is required")
    :type (common-lisp:or resource-id common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (firewall-policy-status common-lisp:nil :type
    (common-lisp:or resource-status common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (consumed-stateless-rule-capacity common-lisp:nil :type
    (common-lisp:or rule-capacity common-lisp:null))
   (consumed-stateful-rule-capacity common-lisp:nil :type
    (common-lisp:or rule-capacity common-lisp:null))
   (number-of-associations common-lisp:nil :type
    (common-lisp:or number-of-associations common-lisp:null))
   (encryption-configuration common-lisp:nil :type
    (common-lisp:or encryption-configuration common-lisp:null))
   (last-modified-time common-lisp:nil :type
    (common-lisp:or last-update-time common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'firewall-policy-response 'make-firewall-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          firewall-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          firewall-policy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'firewall-policy-name))
      (common-lisp:list
       (common-lisp:cons "FirewallPolicyName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-policy-arn))
      (common-lisp:list
       (common-lisp:cons "FirewallPolicyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-policy-id))
      (common-lisp:list
       (common-lisp:cons "FirewallPolicyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'firewall-policy-status))
      (common-lisp:list
       (common-lisp:cons "FirewallPolicyStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'consumed-stateless-rule-capacity))
      (common-lisp:list
       (common-lisp:cons "ConsumedStatelessRuleCapacity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'consumed-stateful-rule-capacity))
      (common-lisp:list
       (common-lisp:cons "ConsumedStatefulRuleCapacity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-of-associations))
      (common-lisp:list
       (common-lisp:cons "NumberOfAssociations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'encryption-configuration))
      (common-lisp:list
       (common-lisp:cons "EncryptionConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          firewall-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (firewall-status (:copier common-lisp:nil)
      (:conc-name "struct-shape-firewall-status-"))
   (status (common-lisp:error ":status is required") :type
    (common-lisp:or firewall-status-value common-lisp:null))
   (configuration-sync-state-summary
    (common-lisp:error ":configuration-sync-state-summary is required") :type
    (common-lisp:or configuration-sync-state common-lisp:null))
   (sync-states common-lisp:nil :type
    (common-lisp:or sync-states common-lisp:null))
   (capacity-usage-summary common-lisp:nil :type
    (common-lisp:or capacity-usage-summary common-lisp:null)))
 (common-lisp:export (common-lisp:list 'firewall-status 'make-firewall-status))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input firewall-status))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input firewall-status))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configuration-sync-state-summary))
      (common-lisp:list
       (common-lisp:cons "ConfigurationSyncStateSummary"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sync-states))
      (common-lisp:list
       (common-lisp:cons "SyncStates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'capacity-usage-summary))
      (common-lisp:list
       (common-lisp:cons "CapacityUsageSummary"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input firewall-status))
   common-lisp:nil))
(common-lisp:deftype firewall-status-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype firewalls ()
   '(trivial-types:proper-list firewall-metadata))
 (common-lisp:defun |make-firewalls|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list firewall-metadata))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype flags () '(trivial-types:proper-list tcpflag))
 (common-lisp:defun |make-flags|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tcpflag))
   aws-sdk/generator/shape::members))
(common-lisp:deftype generated-rules-type () 'common-lisp:string)
(common-lisp:deftype hash-map-key () 'common-lisp:string)
(common-lisp:deftype hash-map-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (header (:copier common-lisp:nil) (:conc-name "struct-shape-header-"))
   (protocol (common-lisp:error ":protocol is required") :type
    (common-lisp:or stateful-rule-protocol common-lisp:null))
   (source (common-lisp:error ":source is required") :type
    (common-lisp:or source common-lisp:null))
   (source-port (common-lisp:error ":source-port is required") :type
    (common-lisp:or port common-lisp:null))
   (direction (common-lisp:error ":direction is required") :type
    (common-lisp:or stateful-rule-direction common-lisp:null))
   (destination (common-lisp:error ":destination is required") :type
    (common-lisp:or destination common-lisp:null))
   (destination-port (common-lisp:error ":destination-port is required") :type
    (common-lisp:or port common-lisp:null)))
 (common-lisp:export (common-lisp:list 'header 'make-header))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input header))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input header))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol))
      (common-lisp:list
       (common-lisp:cons "Protocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source))
      (common-lisp:list
       (common-lisp:cons "Source"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-port))
      (common-lisp:list
       (common-lisp:cons "SourcePort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'direction))
      (common-lisp:list
       (common-lisp:cons "Direction"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination))
      (common-lisp:list
       (common-lisp:cons "Destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination-port))
      (common-lisp:list
       (common-lisp:cons "DestinationPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input header))
   common-lisp:nil))
(common-lisp:deftype ipaddress-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (ipset (:copier common-lisp:nil) (:conc-name "struct-shape-ipset-"))
   (definition (common-lisp:error ":definition is required") :type
    (common-lisp:or variable-definition-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'ipset 'make-ipset))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input ipset))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input ipset))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'definition))
      (common-lisp:list
       (common-lisp:cons "Definition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input ipset))
   common-lisp:nil))
(common-lisp:deftype ipset-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (ipset-metadata (:copier common-lisp:nil)
      (:conc-name "struct-shape-ipset-metadata-"))
   (resolved-cidrcount common-lisp:nil :type
    (common-lisp:or cidrcount common-lisp:null)))
 (common-lisp:export (common-lisp:list 'ipset-metadata 'make-ipset-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input ipset-metadata))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input ipset-metadata))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resolved-cidrcount))
      (common-lisp:list
       (common-lisp:cons "ResolvedCIDRCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input ipset-metadata))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype ipset-metadata-map () 'common-lisp:hash-table)
 (common-lisp:defun |make-ipset-metadata-map|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defstruct
     (ipset-reference (:copier common-lisp:nil)
      (:conc-name "struct-shape-ipset-reference-"))
   (reference-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null)))
 (common-lisp:export (common-lisp:list 'ipset-reference 'make-ipset-reference))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input ipset-reference))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input ipset-reference))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reference-arn))
      (common-lisp:list
       (common-lisp:cons "ReferenceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input ipset-reference))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype ipset-reference-map () 'common-lisp:hash-table)
 (common-lisp:defun |make-ipset-reference-map|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype ipset-reference-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype ipsets () 'common-lisp:hash-table)
 (common-lisp:defun |make-ipsets| (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:define-condition insufficient-capacity-exception
     (network-firewall-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       insufficient-capacity-exception-message)))
 (common-lisp:export
  (common-lisp:list 'insufficient-capacity-exception
                    'insufficient-capacity-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition internal-server-error
     (network-firewall-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-error-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-error 'internal-server-error-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-operation-exception
     (network-firewall-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-operation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-operation-exception
                    'invalid-operation-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-request-exception
     (network-firewall-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-request-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-request-exception
                    'invalid-request-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-resource-policy-exception
     (network-firewall-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-resource-policy-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-resource-policy-exception
                    'invalid-resource-policy-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-token-exception
     (network-firewall-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-token-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-token-exception 'invalid-token-exception-message)))
(common-lisp:deftype key-id () 'common-lisp:string)
(common-lisp:deftype keyword () 'common-lisp:string)
(common-lisp:deftype last-update-time () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition limit-exceeded-exception
     (network-firewall-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       limit-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception
                    'limit-exceeded-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (list-firewall-policies-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-firewall-policies-request-"))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or pagination-max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-firewall-policies-request
                    'make-list-firewall-policies-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-firewall-policies-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-firewall-policies-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-firewall-policies-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-firewall-policies-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-firewall-policies-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (firewall-policies common-lisp:nil :type
    (common-lisp:or firewall-policies common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-firewall-policies-response
                    'make-list-firewall-policies-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-firewall-policies-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-firewall-policies-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-policies))
      (common-lisp:list
       (common-lisp:cons "FirewallPolicies"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-firewall-policies-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-firewalls-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-firewalls-request-"))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (vpc-ids common-lisp:nil :type (common-lisp:or vpc-ids common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or pagination-max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-firewalls-request 'make-list-firewalls-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-firewalls-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-firewalls-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-ids))
      (common-lisp:list
       (common-lisp:cons "VpcIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-firewalls-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-firewalls-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-firewalls-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (firewalls common-lisp:nil :type
    (common-lisp:or firewalls common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-firewalls-response 'make-list-firewalls-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-firewalls-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-firewalls-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewalls))
      (common-lisp:list
       (common-lisp:cons "Firewalls"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-firewalls-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-rule-groups-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-rule-groups-request-"))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or pagination-max-results common-lisp:null))
   (scope common-lisp:nil :type
    (common-lisp:or resource-managed-status common-lisp:null))
   (managed-type common-lisp:nil :type
    (common-lisp:or resource-managed-type common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or rule-group-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-rule-groups-request 'make-list-rule-groups-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-rule-groups-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-rule-groups-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scope))
      (common-lisp:list
       (common-lisp:cons "Scope"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'managed-type))
      (common-lisp:list
       (common-lisp:cons "ManagedType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-rule-groups-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-rule-groups-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-rule-groups-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (rule-groups common-lisp:nil :type
    (common-lisp:or rule-groups common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-rule-groups-response
                    'make-list-rule-groups-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-rule-groups-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-rule-groups-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-groups))
      (common-lisp:list
       (common-lisp:cons "RuleGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-rule-groups-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tlsinspection-configurations-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tlsinspection-configurations-request-"))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or pagination-max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tlsinspection-configurations-request
                    'make-list-tlsinspection-configurations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tlsinspection-configurations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tlsinspection-configurations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tlsinspection-configurations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tlsinspection-configurations-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tlsinspection-configurations-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (tlsinspection-configurations common-lisp:nil :type
    (common-lisp:or tlsinspection-configurations common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tlsinspection-configurations-response
                    'make-list-tlsinspection-configurations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tlsinspection-configurations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tlsinspection-configurations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'tlsinspection-configurations))
      (common-lisp:list
       (common-lisp:cons "TLSInspectionConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tlsinspection-configurations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-request-"))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or tags-pagination-max-results common-lisp:null))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or resource-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (log-destination-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-log-destination-config-"))
   (log-type (common-lisp:error ":log-type is required") :type
    (common-lisp:or log-type common-lisp:null))
   (log-destination-type
    (common-lisp:error ":log-destination-type is required") :type
    (common-lisp:or log-destination-type common-lisp:null))
   (log-destination (common-lisp:error ":log-destination is required") :type
    (common-lisp:or log-destination-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'log-destination-config 'make-log-destination-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          log-destination-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          log-destination-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-type))
      (common-lisp:list
       (common-lisp:cons "LogType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'log-destination-type))
      (common-lisp:list
       (common-lisp:cons "LogDestinationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-destination))
      (common-lisp:list
       (common-lisp:cons "LogDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          log-destination-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype log-destination-configs ()
   '(trivial-types:proper-list log-destination-config))
 (common-lisp:defun |make-log-destination-configs|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list log-destination-config))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype log-destination-map () 'common-lisp:hash-table)
 (common-lisp:defun |make-log-destination-map|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:define-condition log-destination-permission-exception
     (network-firewall-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       log-destination-permission-exception-message)))
 (common-lisp:export
  (common-lisp:list 'log-destination-permission-exception
                    'log-destination-permission-exception-message)))
(common-lisp:deftype log-destination-type () 'common-lisp:string)
(common-lisp:deftype log-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (logging-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-logging-configuration-"))
   (log-destination-configs
    (common-lisp:error ":log-destination-configs is required") :type
    (common-lisp:or log-destination-configs common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'logging-configuration 'make-logging-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          logging-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          logging-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'log-destination-configs))
      (common-lisp:list
       (common-lisp:cons "LogDestinationConfigs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          logging-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (match-attributes (:copier common-lisp:nil)
      (:conc-name "struct-shape-match-attributes-"))
   (sources common-lisp:nil :type (common-lisp:or addresses common-lisp:null))
   (destinations common-lisp:nil :type
    (common-lisp:or addresses common-lisp:null))
   (source-ports common-lisp:nil :type
    (common-lisp:or port-ranges common-lisp:null))
   (destination-ports common-lisp:nil :type
    (common-lisp:or port-ranges common-lisp:null))
   (protocols common-lisp:nil :type
    (common-lisp:or protocol-numbers common-lisp:null))
   (tcpflags common-lisp:nil :type (common-lisp:or tcpflags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'match-attributes 'make-match-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input match-attributes))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input match-attributes))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sources))
      (common-lisp:list
       (common-lisp:cons "Sources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destinations))
      (common-lisp:list
       (common-lisp:cons "Destinations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-ports))
      (common-lisp:list
       (common-lisp:cons "SourcePorts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination-ports))
      (common-lisp:list
       (common-lisp:cons "DestinationPorts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocols))
      (common-lisp:list
       (common-lisp:cons "Protocols"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tcpflags))
      (common-lisp:list
       (common-lisp:cons "TCPFlags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input match-attributes))
   common-lisp:nil))
(common-lisp:deftype number-of-associations () 'common-lisp:integer)
(common-lisp:deftype override-action () 'common-lisp:string)
(common-lisp:deftype pagination-max-results () 'common-lisp:integer)
(common-lisp:deftype pagination-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (per-object-status (:copier common-lisp:nil)
      (:conc-name "struct-shape-per-object-status-"))
   (sync-status common-lisp:nil :type
    (common-lisp:or per-object-sync-status common-lisp:null))
   (update-token common-lisp:nil :type
    (common-lisp:or update-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'per-object-status 'make-per-object-status))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input per-object-status))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input per-object-status))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sync-status))
      (common-lisp:list
       (common-lisp:cons "SyncStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-token))
      (common-lisp:list
       (common-lisp:cons "UpdateToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input per-object-status))
   common-lisp:nil))
(common-lisp:deftype per-object-sync-status () 'common-lisp:string)
(common-lisp:deftype policy-string () 'common-lisp:string)
(common-lisp:deftype port () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (port-range (:copier common-lisp:nil)
      (:conc-name "struct-shape-port-range-"))
   (from-port (common-lisp:error ":from-port is required") :type
    (common-lisp:or port-range-bound common-lisp:null))
   (to-port (common-lisp:error ":to-port is required") :type
    (common-lisp:or port-range-bound common-lisp:null)))
 (common-lisp:export (common-lisp:list 'port-range 'make-port-range))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input port-range))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input port-range))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from-port))
      (common-lisp:list
       (common-lisp:cons "FromPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'to-port))
      (common-lisp:list
       (common-lisp:cons "ToPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input port-range))
   common-lisp:nil))
(common-lisp:deftype port-range-bound () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype port-ranges () '(trivial-types:proper-list port-range))
 (common-lisp:defun |make-port-ranges|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list port-range))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (port-set (:copier common-lisp:nil) (:conc-name "struct-shape-port-set-"))
   (definition common-lisp:nil :type
    (common-lisp:or variable-definition-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'port-set 'make-port-set))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input port-set))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input port-set))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'definition))
      (common-lisp:list
       (common-lisp:cons "Definition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input port-set))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype port-sets () 'common-lisp:hash-table)
 (common-lisp:defun |make-port-sets| (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype priority () 'common-lisp:integer)
(common-lisp:deftype protocol-number () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype protocol-numbers ()
   '(trivial-types:proper-list protocol-number))
 (common-lisp:defun |make-protocol-numbers|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list protocol-number))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (publish-metric-action (:copier common-lisp:nil)
      (:conc-name "struct-shape-publish-metric-action-"))
   (dimensions (common-lisp:error ":dimensions is required") :type
    (common-lisp:or dimensions common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'publish-metric-action 'make-publish-metric-action))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          publish-metric-action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          publish-metric-action))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dimensions))
      (common-lisp:list
       (common-lisp:cons "Dimensions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          publish-metric-action))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-resource-policy-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-resource-policy-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or resource-arn common-lisp:null))
   (policy (common-lisp:error ":policy is required") :type
    (common-lisp:or policy-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-resource-policy-request
                    'make-put-resource-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-resource-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-resource-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "Policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-resource-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-resource-policy-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-resource-policy-response-")))
 (common-lisp:export
  (common-lisp:list 'put-resource-policy-response
                    'make-put-resource-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-resource-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-resource-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-resource-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (reference-sets (:copier common-lisp:nil)
      (:conc-name "struct-shape-reference-sets-"))
   (ipset-references common-lisp:nil :type
    (common-lisp:or ipset-reference-map common-lisp:null)))
 (common-lisp:export (common-lisp:list 'reference-sets 'make-reference-sets))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input reference-sets))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input reference-sets))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ipset-references))
      (common-lisp:list
       (common-lisp:cons "IPSetReferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input reference-sets))
   common-lisp:nil))
(common-lisp:deftype resource-arn () 'common-lisp:string)
(common-lisp:deftype resource-id () 'common-lisp:string)
(common-lisp:deftype resource-managed-status () 'common-lisp:string)
(common-lisp:deftype resource-managed-type () 'common-lisp:string)
(common-lisp:deftype resource-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (network-firewall-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition resource-owner-check-exception
     (network-firewall-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-owner-check-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-owner-check-exception
                    'resource-owner-check-exception-message)))
(common-lisp:deftype resource-status () 'common-lisp:string)
(common-lisp:deftype rule-capacity () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (rule-definition (:copier common-lisp:nil)
      (:conc-name "struct-shape-rule-definition-"))
   (match-attributes (common-lisp:error ":match-attributes is required") :type
    (common-lisp:or match-attributes common-lisp:null))
   (actions (common-lisp:error ":actions is required") :type
    (common-lisp:or stateless-actions common-lisp:null)))
 (common-lisp:export (common-lisp:list 'rule-definition 'make-rule-definition))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input rule-definition))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input rule-definition))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'match-attributes))
      (common-lisp:list
       (common-lisp:cons "MatchAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'actions))
      (common-lisp:list
       (common-lisp:cons "Actions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input rule-definition))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (rule-group (:copier common-lisp:nil)
      (:conc-name "struct-shape-rule-group-"))
   (rule-variables common-lisp:nil :type
    (common-lisp:or rule-variables common-lisp:null))
   (reference-sets common-lisp:nil :type
    (common-lisp:or reference-sets common-lisp:null))
   (rules-source (common-lisp:error ":rules-source is required") :type
    (common-lisp:or rules-source common-lisp:null))
   (stateful-rule-options common-lisp:nil :type
    (common-lisp:or stateful-rule-options common-lisp:null)))
 (common-lisp:export (common-lisp:list 'rule-group 'make-rule-group))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input rule-group))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input rule-group))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-variables))
      (common-lisp:list
       (common-lisp:cons "RuleVariables"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reference-sets))
      (common-lisp:list
       (common-lisp:cons "ReferenceSets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rules-source))
      (common-lisp:list
       (common-lisp:cons "RulesSource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'stateful-rule-options))
      (common-lisp:list
       (common-lisp:cons "StatefulRuleOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input rule-group))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (rule-group-metadata (:copier common-lisp:nil)
      (:conc-name "struct-shape-rule-group-metadata-"))
   (name common-lisp:nil :type (common-lisp:or resource-name common-lisp:null))
   (arn common-lisp:nil :type (common-lisp:or resource-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'rule-group-metadata 'make-rule-group-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input rule-group-metadata))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input rule-group-metadata))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input rule-group-metadata))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (rule-group-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-rule-group-response-"))
   (rule-group-arn (common-lisp:error ":rule-group-arn is required") :type
    (common-lisp:or resource-arn common-lisp:null))
   (rule-group-name (common-lisp:error ":rule-group-name is required") :type
    (common-lisp:or resource-name common-lisp:null))
   (rule-group-id (common-lisp:error ":rule-group-id is required") :type
    (common-lisp:or resource-id common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or rule-group-type common-lisp:null))
   (capacity common-lisp:nil :type
    (common-lisp:or rule-capacity common-lisp:null))
   (rule-group-status common-lisp:nil :type
    (common-lisp:or resource-status common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (consumed-capacity common-lisp:nil :type
    (common-lisp:or rule-capacity common-lisp:null))
   (number-of-associations common-lisp:nil :type
    (common-lisp:or number-of-associations common-lisp:null))
   (encryption-configuration common-lisp:nil :type
    (common-lisp:or encryption-configuration common-lisp:null))
   (source-metadata common-lisp:nil :type
    (common-lisp:or source-metadata common-lisp:null))
   (sns-topic common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (last-modified-time common-lisp:nil :type
    (common-lisp:or last-update-time common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'rule-group-response 'make-rule-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input rule-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input rule-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-group-arn))
      (common-lisp:list
       (common-lisp:cons "RuleGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-group-name))
      (common-lisp:list
       (common-lisp:cons "RuleGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-group-id))
      (common-lisp:list
       (common-lisp:cons "RuleGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'capacity))
      (common-lisp:list
       (common-lisp:cons "Capacity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-group-status))
      (common-lisp:list
       (common-lisp:cons "RuleGroupStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'consumed-capacity))
      (common-lisp:list
       (common-lisp:cons "ConsumedCapacity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-of-associations))
      (common-lisp:list
       (common-lisp:cons "NumberOfAssociations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'encryption-configuration))
      (common-lisp:list
       (common-lisp:cons "EncryptionConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-metadata))
      (common-lisp:list
       (common-lisp:cons "SourceMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sns-topic))
      (common-lisp:list
       (common-lisp:cons "SnsTopic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input rule-group-response))
   common-lisp:nil))
(common-lisp:deftype rule-group-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype rule-groups ()
   '(trivial-types:proper-list rule-group-metadata))
 (common-lisp:defun |make-rule-groups|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list rule-group-metadata))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (rule-option (:copier common-lisp:nil)
      (:conc-name "struct-shape-rule-option-"))
   (keyword (common-lisp:error ":keyword is required") :type
    (common-lisp:or keyword common-lisp:null))
   (settings common-lisp:nil :type (common-lisp:or settings common-lisp:null)))
 (common-lisp:export (common-lisp:list 'rule-option 'make-rule-option))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input rule-option))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input rule-option))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'keyword))
      (common-lisp:list
       (common-lisp:cons "Keyword"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'settings))
      (common-lisp:list
       (common-lisp:cons "Settings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input rule-option))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype rule-options () '(trivial-types:proper-list rule-option))
 (common-lisp:defun |make-rule-options|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list rule-option))
   aws-sdk/generator/shape::members))
(common-lisp:deftype rule-order () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype rule-targets ()
   '(trivial-types:proper-list collection-member-string))
 (common-lisp:defun |make-rule-targets|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            collection-member-string))
   aws-sdk/generator/shape::members))
(common-lisp:deftype rule-variable-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (rule-variables (:copier common-lisp:nil)
      (:conc-name "struct-shape-rule-variables-"))
   (ipsets common-lisp:nil :type (common-lisp:or ipsets common-lisp:null))
   (port-sets common-lisp:nil :type
    (common-lisp:or port-sets common-lisp:null)))
 (common-lisp:export (common-lisp:list 'rule-variables 'make-rule-variables))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input rule-variables))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input rule-variables))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ipsets))
      (common-lisp:list
       (common-lisp:cons "IPSets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'port-sets))
      (common-lisp:list
       (common-lisp:cons "PortSets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input rule-variables))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (rules-source (:copier common-lisp:nil)
      (:conc-name "struct-shape-rules-source-"))
   (rules-string common-lisp:nil :type
    (common-lisp:or rules-string common-lisp:null))
   (rules-source-list common-lisp:nil :type
    (common-lisp:or rules-source-list common-lisp:null))
   (stateful-rules common-lisp:nil :type
    (common-lisp:or stateful-rules common-lisp:null))
   (stateless-rules-and-custom-actions common-lisp:nil :type
    (common-lisp:or stateless-rules-and-custom-actions common-lisp:null)))
 (common-lisp:export (common-lisp:list 'rules-source 'make-rules-source))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input rules-source))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input rules-source))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rules-string))
      (common-lisp:list
       (common-lisp:cons "RulesString"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rules-source-list))
      (common-lisp:list
       (common-lisp:cons "RulesSourceList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stateful-rules))
      (common-lisp:list
       (common-lisp:cons "StatefulRules"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'stateless-rules-and-custom-actions))
      (common-lisp:list
       (common-lisp:cons "StatelessRulesAndCustomActions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input rules-source))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (rules-source-list (:copier common-lisp:nil)
      (:conc-name "struct-shape-rules-source-list-"))
   (targets (common-lisp:error ":targets is required") :type
    (common-lisp:or rule-targets common-lisp:null))
   (target-types (common-lisp:error ":target-types is required") :type
    (common-lisp:or target-types common-lisp:null))
   (generated-rules-type
    (common-lisp:error ":generated-rules-type is required") :type
    (common-lisp:or generated-rules-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'rules-source-list 'make-rules-source-list))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input rules-source-list))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input rules-source-list))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'targets))
      (common-lisp:list
       (common-lisp:cons "Targets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-types))
      (common-lisp:list
       (common-lisp:cons "TargetTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'generated-rules-type))
      (common-lisp:list
       (common-lisp:cons "GeneratedRulesType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input rules-source-list))
   common-lisp:nil))
(common-lisp:deftype rules-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (server-certificate (:copier common-lisp:nil)
      (:conc-name "struct-shape-server-certificate-"))
   (resource-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'server-certificate 'make-server-certificate))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input server-certificate))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input server-certificate))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input server-certificate))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (server-certificate-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-server-certificate-configuration-"))
   (server-certificates common-lisp:nil :type
    (common-lisp:or server-certificates common-lisp:null))
   (scopes common-lisp:nil :type
    (common-lisp:or server-certificate-scopes common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'server-certificate-configuration
                    'make-server-certificate-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          server-certificate-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          server-certificate-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'server-certificates))
      (common-lisp:list
       (common-lisp:cons "ServerCertificates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scopes))
      (common-lisp:list
       (common-lisp:cons "Scopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          server-certificate-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype server-certificate-configurations ()
   '(trivial-types:proper-list server-certificate-configuration))
 (common-lisp:defun |make-server-certificate-configurations|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            server-certificate-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (server-certificate-scope (:copier common-lisp:nil)
      (:conc-name "struct-shape-server-certificate-scope-"))
   (sources common-lisp:nil :type (common-lisp:or addresses common-lisp:null))
   (destinations common-lisp:nil :type
    (common-lisp:or addresses common-lisp:null))
   (source-ports common-lisp:nil :type
    (common-lisp:or port-ranges common-lisp:null))
   (destination-ports common-lisp:nil :type
    (common-lisp:or port-ranges common-lisp:null))
   (protocols common-lisp:nil :type
    (common-lisp:or protocol-numbers common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'server-certificate-scope 'make-server-certificate-scope))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          server-certificate-scope))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          server-certificate-scope))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sources))
      (common-lisp:list
       (common-lisp:cons "Sources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destinations))
      (common-lisp:list
       (common-lisp:cons "Destinations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-ports))
      (common-lisp:list
       (common-lisp:cons "SourcePorts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination-ports))
      (common-lisp:list
       (common-lisp:cons "DestinationPorts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocols))
      (common-lisp:list
       (common-lisp:cons "Protocols"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          server-certificate-scope))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype server-certificate-scopes ()
   '(trivial-types:proper-list server-certificate-scope))
 (common-lisp:defun |make-server-certificate-scopes|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            server-certificate-scope))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype server-certificates ()
   '(trivial-types:proper-list server-certificate))
 (common-lisp:defun |make-server-certificates|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list server-certificate))
   aws-sdk/generator/shape::members))
(common-lisp:deftype setting () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype settings () '(trivial-types:proper-list setting))
 (common-lisp:defun |make-settings|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list setting))
   aws-sdk/generator/shape::members))
(common-lisp:deftype source () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (source-metadata (:copier common-lisp:nil)
      (:conc-name "struct-shape-source-metadata-"))
   (source-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (source-update-token common-lisp:nil :type
    (common-lisp:or update-token common-lisp:null)))
 (common-lisp:export (common-lisp:list 'source-metadata 'make-source-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input source-metadata))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input source-metadata))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-arn))
      (common-lisp:list
       (common-lisp:cons "SourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-update-token))
      (common-lisp:list
       (common-lisp:cons "SourceUpdateToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input source-metadata))
   common-lisp:nil))
(common-lisp:deftype stateful-action () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype stateful-actions ()
   '(trivial-types:proper-list collection-member-string))
 (common-lisp:defun |make-stateful-actions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            collection-member-string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (stateful-engine-options (:copier common-lisp:nil)
      (:conc-name "struct-shape-stateful-engine-options-"))
   (rule-order common-lisp:nil :type
    (common-lisp:or rule-order common-lisp:null))
   (stream-exception-policy common-lisp:nil :type
    (common-lisp:or stream-exception-policy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stateful-engine-options 'make-stateful-engine-options))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stateful-engine-options))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stateful-engine-options))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-order))
      (common-lisp:list
       (common-lisp:cons "RuleOrder"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'stream-exception-policy))
      (common-lisp:list
       (common-lisp:cons "StreamExceptionPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stateful-engine-options))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stateful-rule (:copier common-lisp:nil)
      (:conc-name "struct-shape-stateful-rule-"))
   (action (common-lisp:error ":action is required") :type
    (common-lisp:or stateful-action common-lisp:null))
   (header (common-lisp:error ":header is required") :type
    (common-lisp:or header common-lisp:null))
   (rule-options (common-lisp:error ":rule-options is required") :type
    (common-lisp:or rule-options common-lisp:null)))
 (common-lisp:export (common-lisp:list 'stateful-rule 'make-stateful-rule))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stateful-rule))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stateful-rule))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action))
      (common-lisp:list
       (common-lisp:cons "Action"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'header))
      (common-lisp:list
       (common-lisp:cons "Header"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-options))
      (common-lisp:list
       (common-lisp:cons "RuleOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stateful-rule))
   common-lisp:nil))
(common-lisp:deftype stateful-rule-direction () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (stateful-rule-group-override (:copier common-lisp:nil)
      (:conc-name "struct-shape-stateful-rule-group-override-"))
   (action common-lisp:nil :type
    (common-lisp:or override-action common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stateful-rule-group-override
                    'make-stateful-rule-group-override))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stateful-rule-group-override))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stateful-rule-group-override))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action))
      (common-lisp:list
       (common-lisp:cons "Action"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stateful-rule-group-override))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stateful-rule-group-reference (:copier common-lisp:nil)
      (:conc-name "struct-shape-stateful-rule-group-reference-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or resource-arn common-lisp:null))
   (priority common-lisp:nil :type (common-lisp:or priority common-lisp:null))
   (override common-lisp:nil :type
    (common-lisp:or stateful-rule-group-override common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stateful-rule-group-reference
                    'make-stateful-rule-group-reference))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stateful-rule-group-reference))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stateful-rule-group-reference))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'priority))
      (common-lisp:list
       (common-lisp:cons "Priority"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'override))
      (common-lisp:list
       (common-lisp:cons "Override"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stateful-rule-group-reference))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype stateful-rule-group-references ()
   '(trivial-types:proper-list stateful-rule-group-reference))
 (common-lisp:defun |make-stateful-rule-group-references|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            stateful-rule-group-reference))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (stateful-rule-options (:copier common-lisp:nil)
      (:conc-name "struct-shape-stateful-rule-options-"))
   (rule-order common-lisp:nil :type
    (common-lisp:or rule-order common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stateful-rule-options 'make-stateful-rule-options))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stateful-rule-options))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stateful-rule-options))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-order))
      (common-lisp:list
       (common-lisp:cons "RuleOrder"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stateful-rule-options))
   common-lisp:nil))
(common-lisp:deftype stateful-rule-protocol () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype stateful-rules ()
   '(trivial-types:proper-list stateful-rule))
 (common-lisp:defun |make-stateful-rules|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list stateful-rule))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype stateless-actions ()
   '(trivial-types:proper-list collection-member-string))
 (common-lisp:defun |make-stateless-actions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            collection-member-string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (stateless-rule (:copier common-lisp:nil)
      (:conc-name "struct-shape-stateless-rule-"))
   (rule-definition (common-lisp:error ":rule-definition is required") :type
    (common-lisp:or rule-definition common-lisp:null))
   (priority (common-lisp:error ":priority is required") :type
    (common-lisp:or priority common-lisp:null)))
 (common-lisp:export (common-lisp:list 'stateless-rule 'make-stateless-rule))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stateless-rule))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stateless-rule))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-definition))
      (common-lisp:list
       (common-lisp:cons "RuleDefinition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'priority))
      (common-lisp:list
       (common-lisp:cons "Priority"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stateless-rule))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stateless-rule-group-reference (:copier common-lisp:nil)
      (:conc-name "struct-shape-stateless-rule-group-reference-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or resource-arn common-lisp:null))
   (priority (common-lisp:error ":priority is required") :type
    (common-lisp:or priority common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stateless-rule-group-reference
                    'make-stateless-rule-group-reference))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stateless-rule-group-reference))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stateless-rule-group-reference))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'priority))
      (common-lisp:list
       (common-lisp:cons "Priority"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stateless-rule-group-reference))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype stateless-rule-group-references ()
   '(trivial-types:proper-list stateless-rule-group-reference))
 (common-lisp:defun |make-stateless-rule-group-references|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            stateless-rule-group-reference))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype stateless-rules ()
   '(trivial-types:proper-list stateless-rule))
 (common-lisp:defun |make-stateless-rules|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list stateless-rule))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (stateless-rules-and-custom-actions (:copier common-lisp:nil)
      (:conc-name "struct-shape-stateless-rules-and-custom-actions-"))
   (stateless-rules (common-lisp:error ":stateless-rules is required") :type
    (common-lisp:or stateless-rules common-lisp:null))
   (custom-actions common-lisp:nil :type
    (common-lisp:or custom-actions common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stateless-rules-and-custom-actions
                    'make-stateless-rules-and-custom-actions))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stateless-rules-and-custom-actions))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stateless-rules-and-custom-actions))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stateless-rules))
      (common-lisp:list
       (common-lisp:cons "StatelessRules"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'custom-actions))
      (common-lisp:list
       (common-lisp:cons "CustomActions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stateless-rules-and-custom-actions))
   common-lisp:nil))
(common-lisp:deftype status-message () 'common-lisp:string)
(common-lisp:deftype status-reason () 'common-lisp:string)
(common-lisp:deftype stream-exception-policy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (subnet-mapping (:copier common-lisp:nil)
      (:conc-name "struct-shape-subnet-mapping-"))
   (subnet-id (common-lisp:error ":subnet-id is required") :type
    (common-lisp:or collection-member-string common-lisp:null))
   (ipaddress-type common-lisp:nil :type
    (common-lisp:or ipaddress-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'subnet-mapping 'make-subnet-mapping))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input subnet-mapping))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input subnet-mapping))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-id))
      (common-lisp:list
       (common-lisp:cons "SubnetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ipaddress-type))
      (common-lisp:list
       (common-lisp:cons "IPAddressType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input subnet-mapping))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype subnet-mappings ()
   '(trivial-types:proper-list subnet-mapping))
 (common-lisp:defun |make-subnet-mappings|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list subnet-mapping))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (sync-state (:copier common-lisp:nil)
      (:conc-name "struct-shape-sync-state-"))
   (attachment common-lisp:nil :type
    (common-lisp:or attachment common-lisp:null))
   (config common-lisp:nil :type
    (common-lisp:or sync-state-config common-lisp:null)))
 (common-lisp:export (common-lisp:list 'sync-state 'make-sync-state))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input sync-state))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input sync-state))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attachment))
      (common-lisp:list
       (common-lisp:cons "Attachment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'config))
      (common-lisp:list
       (common-lisp:cons "Config"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input sync-state))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype sync-state-config () 'common-lisp:hash-table)
 (common-lisp:defun |make-sync-state-config|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype sync-states () 'common-lisp:hash-table)
 (common-lisp:defun |make-sync-states| (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype tcpflag () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (tcpflag-field (:copier common-lisp:nil)
      (:conc-name "struct-shape-tcpflag-field-"))
   (flags (common-lisp:error ":flags is required") :type
    (common-lisp:or flags common-lisp:null))
   (masks common-lisp:nil :type (common-lisp:or flags common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tcpflag-field 'make-tcpflag-field))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tcpflag-field))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tcpflag-field))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flags))
      (common-lisp:list
       (common-lisp:cons "Flags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'masks))
      (common-lisp:list
       (common-lisp:cons "Masks"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tcpflag-field))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype tcpflags () '(trivial-types:proper-list tcpflag-field))
 (common-lisp:defun |make-tcpflags|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tcpflag-field))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (tlsinspection-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-tlsinspection-configuration-"))
   (server-certificate-configurations common-lisp:nil :type
    (common-lisp:or server-certificate-configurations common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tlsinspection-configuration
                    'make-tlsinspection-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tlsinspection-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tlsinspection-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'server-certificate-configurations))
      (common-lisp:list
       (common-lisp:cons "ServerCertificateConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tlsinspection-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (tlsinspection-configuration-metadata (:copier common-lisp:nil)
      (:conc-name "struct-shape-tlsinspection-configuration-metadata-"))
   (name common-lisp:nil :type (common-lisp:or resource-name common-lisp:null))
   (arn common-lisp:nil :type (common-lisp:or resource-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tlsinspection-configuration-metadata
                    'make-tlsinspection-configuration-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tlsinspection-configuration-metadata))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tlsinspection-configuration-metadata))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tlsinspection-configuration-metadata))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (tlsinspection-configuration-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-tlsinspection-configuration-response-"))
   (tlsinspection-configuration-arn
    (common-lisp:error ":tlsinspection-configuration-arn is required") :type
    (common-lisp:or resource-arn common-lisp:null))
   (tlsinspection-configuration-name
    (common-lisp:error ":tlsinspection-configuration-name is required") :type
    (common-lisp:or resource-name common-lisp:null))
   (tlsinspection-configuration-id
    (common-lisp:error ":tlsinspection-configuration-id is required") :type
    (common-lisp:or resource-id common-lisp:null))
   (tlsinspection-configuration-status common-lisp:nil :type
    (common-lisp:or resource-status common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (last-modified-time common-lisp:nil :type
    (common-lisp:or last-update-time common-lisp:null))
   (number-of-associations common-lisp:nil :type
    (common-lisp:or number-of-associations common-lisp:null))
   (encryption-configuration common-lisp:nil :type
    (common-lisp:or encryption-configuration common-lisp:null))
   (certificates common-lisp:nil :type
    (common-lisp:or certificates common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tlsinspection-configuration-response
                    'make-tlsinspection-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tlsinspection-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tlsinspection-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'tlsinspection-configuration-arn))
      (common-lisp:list
       (common-lisp:cons "TLSInspectionConfigurationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'tlsinspection-configuration-name))
      (common-lisp:list
       (common-lisp:cons "TLSInspectionConfigurationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'tlsinspection-configuration-id))
      (common-lisp:list
       (common-lisp:cons "TLSInspectionConfigurationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'tlsinspection-configuration-status))
      (common-lisp:list
       (common-lisp:cons "TLSInspectionConfigurationStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-of-associations))
      (common-lisp:list
       (common-lisp:cons "NumberOfAssociations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'encryption-configuration))
      (common-lisp:list
       (common-lisp:cons "EncryptionConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificates))
      (common-lisp:list
       (common-lisp:cons "Certificates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tlsinspection-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype tlsinspection-configurations ()
   '(trivial-types:proper-list tlsinspection-configuration-metadata))
 (common-lisp:defun |make-tlsinspection-configurations|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            tlsinspection-configuration-metadata))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (tag (:copier common-lisp:nil) (:conc-name "struct-shape-tag-"))
   (key (common-lisp:error ":key is required") :type
    (common-lisp:or tag-key common-lisp:null))
   (value (common-lisp:error ":value is required") :type
    (common-lisp:or tag-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag))
   common-lisp:nil))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun |make-tag-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-tag-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or resource-arn common-lisp:null))
   (tags (common-lisp:error ":tags is required") :type
    (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:deftype tags-pagination-max-results () 'common-lisp:integer)
(common-lisp:deftype target-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype target-types () '(trivial-types:proper-list target-type))
 (common-lisp:defun |make-target-types|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list target-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (network-firewall-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       throttling-exception-message)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (tls-certificate-data (:copier common-lisp:nil)
      (:conc-name "struct-shape-tls-certificate-data-"))
   (certificate-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (certificate-serial common-lisp:nil :type
    (common-lisp:or collection-member-string common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or collection-member-string common-lisp:null))
   (status-message common-lisp:nil :type
    (common-lisp:or status-reason common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tls-certificate-data 'make-tls-certificate-data))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tls-certificate-data))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tls-certificate-data))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate-arn))
      (common-lisp:list
       (common-lisp:cons "CertificateArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate-serial))
      (common-lisp:list
       (common-lisp:cons "CertificateSerial"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-message))
      (common-lisp:list
       (common-lisp:cons "StatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tls-certificate-data))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition unsupported-operation-exception
     (network-firewall-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       unsupported-operation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'unsupported-operation-exception
                    'unsupported-operation-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or resource-arn common-lisp:null))
   (tag-keys (common-lisp:error ":tag-keys is required") :type
    (common-lisp:or tag-key-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-keys))
      (common-lisp:list
       (common-lisp:cons "TagKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-firewall-delete-protection-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-firewall-delete-protection-request-"))
   (update-token common-lisp:nil :type
    (common-lisp:or update-token common-lisp:null))
   (firewall-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (firewall-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (delete-protection (common-lisp:error ":delete-protection is required")
    :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-firewall-delete-protection-request
                    'make-update-firewall-delete-protection-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-firewall-delete-protection-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-firewall-delete-protection-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-token))
      (common-lisp:list
       (common-lisp:cons "UpdateToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-arn))
      (common-lisp:list
       (common-lisp:cons "FirewallArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-name))
      (common-lisp:list
       (common-lisp:cons "FirewallName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'delete-protection))
      (common-lisp:list
       (common-lisp:cons "DeleteProtection"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-firewall-delete-protection-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-firewall-delete-protection-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-firewall-delete-protection-response-"))
   (firewall-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (firewall-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (delete-protection common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (update-token common-lisp:nil :type
    (common-lisp:or update-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-firewall-delete-protection-response
                    'make-update-firewall-delete-protection-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-firewall-delete-protection-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-firewall-delete-protection-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-arn))
      (common-lisp:list
       (common-lisp:cons "FirewallArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-name))
      (common-lisp:list
       (common-lisp:cons "FirewallName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'delete-protection))
      (common-lisp:list
       (common-lisp:cons "DeleteProtection"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-token))
      (common-lisp:list
       (common-lisp:cons "UpdateToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-firewall-delete-protection-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-firewall-description-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-firewall-description-request-"))
   (update-token common-lisp:nil :type
    (common-lisp:or update-token common-lisp:null))
   (firewall-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (firewall-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-firewall-description-request
                    'make-update-firewall-description-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-firewall-description-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-firewall-description-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-token))
      (common-lisp:list
       (common-lisp:cons "UpdateToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-arn))
      (common-lisp:list
       (common-lisp:cons "FirewallArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-name))
      (common-lisp:list
       (common-lisp:cons "FirewallName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-firewall-description-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-firewall-description-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-firewall-description-response-"))
   (firewall-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (firewall-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (update-token common-lisp:nil :type
    (common-lisp:or update-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-firewall-description-response
                    'make-update-firewall-description-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-firewall-description-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-firewall-description-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-arn))
      (common-lisp:list
       (common-lisp:cons "FirewallArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-name))
      (common-lisp:list
       (common-lisp:cons "FirewallName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-token))
      (common-lisp:list
       (common-lisp:cons "UpdateToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-firewall-description-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-firewall-encryption-configuration-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-update-firewall-encryption-configuration-request-"))
   (update-token common-lisp:nil :type
    (common-lisp:or update-token common-lisp:null))
   (firewall-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (firewall-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (encryption-configuration common-lisp:nil :type
    (common-lisp:or encryption-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-firewall-encryption-configuration-request
                    'make-update-firewall-encryption-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-firewall-encryption-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-firewall-encryption-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-token))
      (common-lisp:list
       (common-lisp:cons "UpdateToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-arn))
      (common-lisp:list
       (common-lisp:cons "FirewallArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-name))
      (common-lisp:list
       (common-lisp:cons "FirewallName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'encryption-configuration))
      (common-lisp:list
       (common-lisp:cons "EncryptionConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-firewall-encryption-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-firewall-encryption-configuration-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-update-firewall-encryption-configuration-response-"))
   (firewall-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (firewall-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (update-token common-lisp:nil :type
    (common-lisp:or update-token common-lisp:null))
   (encryption-configuration common-lisp:nil :type
    (common-lisp:or encryption-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-firewall-encryption-configuration-response
                    'make-update-firewall-encryption-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-firewall-encryption-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-firewall-encryption-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-arn))
      (common-lisp:list
       (common-lisp:cons "FirewallArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-name))
      (common-lisp:list
       (common-lisp:cons "FirewallName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-token))
      (common-lisp:list
       (common-lisp:cons "UpdateToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'encryption-configuration))
      (common-lisp:list
       (common-lisp:cons "EncryptionConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-firewall-encryption-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-firewall-policy-change-protection-request
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-update-firewall-policy-change-protection-request-"))
   (update-token common-lisp:nil :type
    (common-lisp:or update-token common-lisp:null))
   (firewall-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (firewall-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (firewall-policy-change-protection
    (common-lisp:error ":firewall-policy-change-protection is required") :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-firewall-policy-change-protection-request
                    'make-update-firewall-policy-change-protection-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-firewall-policy-change-protection-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-firewall-policy-change-protection-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-token))
      (common-lisp:list
       (common-lisp:cons "UpdateToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-arn))
      (common-lisp:list
       (common-lisp:cons "FirewallArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-name))
      (common-lisp:list
       (common-lisp:cons "FirewallName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'firewall-policy-change-protection))
      (common-lisp:list
       (common-lisp:cons "FirewallPolicyChangeProtection"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-firewall-policy-change-protection-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-firewall-policy-change-protection-response
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-update-firewall-policy-change-protection-response-"))
   (update-token common-lisp:nil :type
    (common-lisp:or update-token common-lisp:null))
   (firewall-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (firewall-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (firewall-policy-change-protection common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-firewall-policy-change-protection-response
                    'make-update-firewall-policy-change-protection-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-firewall-policy-change-protection-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-firewall-policy-change-protection-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-token))
      (common-lisp:list
       (common-lisp:cons "UpdateToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-arn))
      (common-lisp:list
       (common-lisp:cons "FirewallArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-name))
      (common-lisp:list
       (common-lisp:cons "FirewallName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'firewall-policy-change-protection))
      (common-lisp:list
       (common-lisp:cons "FirewallPolicyChangeProtection"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-firewall-policy-change-protection-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-firewall-policy-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-firewall-policy-request-"))
   (update-token (common-lisp:error ":update-token is required") :type
    (common-lisp:or update-token common-lisp:null))
   (firewall-policy-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (firewall-policy-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (firewall-policy (common-lisp:error ":firewall-policy is required") :type
    (common-lisp:or firewall-policy common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (encryption-configuration common-lisp:nil :type
    (common-lisp:or encryption-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-firewall-policy-request
                    'make-update-firewall-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-firewall-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-firewall-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-token))
      (common-lisp:list
       (common-lisp:cons "UpdateToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-policy-arn))
      (common-lisp:list
       (common-lisp:cons "FirewallPolicyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'firewall-policy-name))
      (common-lisp:list
       (common-lisp:cons "FirewallPolicyName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-policy))
      (common-lisp:list
       (common-lisp:cons "FirewallPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dry-run))
      (common-lisp:list
       (common-lisp:cons "DryRun"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'encryption-configuration))
      (common-lisp:list
       (common-lisp:cons "EncryptionConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-firewall-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-firewall-policy-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-firewall-policy-response-"))
   (update-token (common-lisp:error ":update-token is required") :type
    (common-lisp:or update-token common-lisp:null))
   (firewall-policy-response
    (common-lisp:error ":firewall-policy-response is required") :type
    (common-lisp:or firewall-policy-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-firewall-policy-response
                    'make-update-firewall-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-firewall-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-firewall-policy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-token))
      (common-lisp:list
       (common-lisp:cons "UpdateToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'firewall-policy-response))
      (common-lisp:list
       (common-lisp:cons "FirewallPolicyResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-firewall-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-logging-configuration-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-logging-configuration-request-"))
   (firewall-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (firewall-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (logging-configuration common-lisp:nil :type
    (common-lisp:or logging-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-logging-configuration-request
                    'make-update-logging-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-logging-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-logging-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-arn))
      (common-lisp:list
       (common-lisp:cons "FirewallArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-name))
      (common-lisp:list
       (common-lisp:cons "FirewallName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'logging-configuration))
      (common-lisp:list
       (common-lisp:cons "LoggingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-logging-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-logging-configuration-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-logging-configuration-response-"))
   (firewall-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (firewall-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (logging-configuration common-lisp:nil :type
    (common-lisp:or logging-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-logging-configuration-response
                    'make-update-logging-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-logging-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-logging-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-arn))
      (common-lisp:list
       (common-lisp:cons "FirewallArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-name))
      (common-lisp:list
       (common-lisp:cons "FirewallName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'logging-configuration))
      (common-lisp:list
       (common-lisp:cons "LoggingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-logging-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-rule-group-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-rule-group-request-"))
   (update-token (common-lisp:error ":update-token is required") :type
    (common-lisp:or update-token common-lisp:null))
   (rule-group-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (rule-group-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (rule-group common-lisp:nil :type
    (common-lisp:or rule-group common-lisp:null))
   (rules common-lisp:nil :type (common-lisp:or rules-string common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or rule-group-type common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (dry-run common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (encryption-configuration common-lisp:nil :type
    (common-lisp:or encryption-configuration common-lisp:null))
   (source-metadata common-lisp:nil :type
    (common-lisp:or source-metadata common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-rule-group-request
                    'make-update-rule-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-rule-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-rule-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-token))
      (common-lisp:list
       (common-lisp:cons "UpdateToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-group-arn))
      (common-lisp:list
       (common-lisp:cons "RuleGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-group-name))
      (common-lisp:list
       (common-lisp:cons "RuleGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-group))
      (common-lisp:list
       (common-lisp:cons "RuleGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rules))
      (common-lisp:list
       (common-lisp:cons "Rules"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dry-run))
      (common-lisp:list
       (common-lisp:cons "DryRun"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'encryption-configuration))
      (common-lisp:list
       (common-lisp:cons "EncryptionConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-metadata))
      (common-lisp:list
       (common-lisp:cons "SourceMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-rule-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-rule-group-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-rule-group-response-"))
   (update-token (common-lisp:error ":update-token is required") :type
    (common-lisp:or update-token common-lisp:null))
   (rule-group-response (common-lisp:error ":rule-group-response is required")
    :type (common-lisp:or rule-group-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-rule-group-response
                    'make-update-rule-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-rule-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-rule-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-token))
      (common-lisp:list
       (common-lisp:cons "UpdateToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-group-response))
      (common-lisp:list
       (common-lisp:cons "RuleGroupResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-rule-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-subnet-change-protection-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-subnet-change-protection-request-"))
   (update-token common-lisp:nil :type
    (common-lisp:or update-token common-lisp:null))
   (firewall-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (firewall-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (subnet-change-protection
    (common-lisp:error ":subnet-change-protection is required") :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-subnet-change-protection-request
                    'make-update-subnet-change-protection-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-subnet-change-protection-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-subnet-change-protection-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-token))
      (common-lisp:list
       (common-lisp:cons "UpdateToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-arn))
      (common-lisp:list
       (common-lisp:cons "FirewallArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-name))
      (common-lisp:list
       (common-lisp:cons "FirewallName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'subnet-change-protection))
      (common-lisp:list
       (common-lisp:cons "SubnetChangeProtection"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-subnet-change-protection-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-subnet-change-protection-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-subnet-change-protection-response-"))
   (update-token common-lisp:nil :type
    (common-lisp:or update-token common-lisp:null))
   (firewall-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (firewall-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (subnet-change-protection common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-subnet-change-protection-response
                    'make-update-subnet-change-protection-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-subnet-change-protection-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-subnet-change-protection-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-token))
      (common-lisp:list
       (common-lisp:cons "UpdateToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-arn))
      (common-lisp:list
       (common-lisp:cons "FirewallArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firewall-name))
      (common-lisp:list
       (common-lisp:cons "FirewallName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'subnet-change-protection))
      (common-lisp:list
       (common-lisp:cons "SubnetChangeProtection"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-subnet-change-protection-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-tlsinspection-configuration-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-tlsinspection-configuration-request-"))
   (tlsinspection-configuration-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (tlsinspection-configuration-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (tlsinspection-configuration
    (common-lisp:error ":tlsinspection-configuration is required") :type
    (common-lisp:or tlsinspection-configuration common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (encryption-configuration common-lisp:nil :type
    (common-lisp:or encryption-configuration common-lisp:null))
   (update-token (common-lisp:error ":update-token is required") :type
    (common-lisp:or update-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-tlsinspection-configuration-request
                    'make-update-tlsinspection-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-tlsinspection-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-tlsinspection-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'tlsinspection-configuration-arn))
      (common-lisp:list
       (common-lisp:cons "TLSInspectionConfigurationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'tlsinspection-configuration-name))
      (common-lisp:list
       (common-lisp:cons "TLSInspectionConfigurationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'tlsinspection-configuration))
      (common-lisp:list
       (common-lisp:cons "TLSInspectionConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'encryption-configuration))
      (common-lisp:list
       (common-lisp:cons "EncryptionConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-token))
      (common-lisp:list
       (common-lisp:cons "UpdateToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-tlsinspection-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-tlsinspection-configuration-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-tlsinspection-configuration-response-"))
   (update-token (common-lisp:error ":update-token is required") :type
    (common-lisp:or update-token common-lisp:null))
   (tlsinspection-configuration-response
    (common-lisp:error ":tlsinspection-configuration-response is required")
    :type
    (common-lisp:or tlsinspection-configuration-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-tlsinspection-configuration-response
                    'make-update-tlsinspection-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-tlsinspection-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-tlsinspection-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-token))
      (common-lisp:list
       (common-lisp:cons "UpdateToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'tlsinspection-configuration-response))
      (common-lisp:list
       (common-lisp:cons "TLSInspectionConfigurationResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-tlsinspection-configuration-response))
   common-lisp:nil))
(common-lisp:deftype update-token () 'common-lisp:string)
(common-lisp:deftype variable-definition () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype variable-definition-list ()
   '(trivial-types:proper-list variable-definition))
 (common-lisp:defun |make-variable-definition-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list variable-definition))
   aws-sdk/generator/shape::members))
(common-lisp:deftype vpc-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype vpc-ids () '(trivial-types:proper-list vpc-id))
 (common-lisp:defun |make-vpc-ids|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list vpc-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defun associate-firewall-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key update-token firewall-arn firewall-name
                     firewall-policy-arn)
   (common-lisp:declare
    (common-lisp:ignorable update-token firewall-arn firewall-name
     firewall-policy-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-associate-firewall-policy-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'network-firewall-request aws-sdk/generator/operation::input "POST" "/"
        "AssociateFirewallPolicy" "2020-11-12"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'associate-firewall-policy))
(common-lisp:progn
 (common-lisp:defun associate-subnets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key update-token firewall-arn firewall-name
                     subnet-mappings)
   (common-lisp:declare
    (common-lisp:ignorable update-token firewall-arn firewall-name
     subnet-mappings))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-associate-subnets-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'network-firewall-request aws-sdk/generator/operation::input "POST" "/"
        "AssociateSubnets" "2020-11-12"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'associate-subnets))
(common-lisp:progn
 (common-lisp:defun create-firewall
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key firewall-name firewall-policy-arn vpc-id
                     subnet-mappings delete-protection subnet-change-protection
                     firewall-policy-change-protection description tags
                     encryption-configuration)
   (common-lisp:declare
    (common-lisp:ignorable firewall-name firewall-policy-arn vpc-id
     subnet-mappings delete-protection subnet-change-protection
     firewall-policy-change-protection description tags
     encryption-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-firewall-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'network-firewall-request aws-sdk/generator/operation::input "POST" "/"
        "CreateFirewall" "2020-11-12"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-firewall))
(common-lisp:progn
 (common-lisp:defun create-firewall-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key firewall-policy-name firewall-policy
                     description tags dry-run encryption-configuration)
   (common-lisp:declare
    (common-lisp:ignorable firewall-policy-name firewall-policy description
     tags dry-run encryption-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-firewall-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'network-firewall-request aws-sdk/generator/operation::input "POST" "/"
        "CreateFirewallPolicy" "2020-11-12"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-firewall-policy))
(common-lisp:progn
 (common-lisp:defun create-rule-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rule-group-name rule-group rules type
                     description capacity tags dry-run encryption-configuration
                     source-metadata)
   (common-lisp:declare
    (common-lisp:ignorable rule-group-name rule-group rules type description
     capacity tags dry-run encryption-configuration source-metadata))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-rule-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'network-firewall-request aws-sdk/generator/operation::input "POST" "/"
        "CreateRuleGroup" "2020-11-12"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-rule-group))
(common-lisp:progn
 (common-lisp:defun create-tlsinspection-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key tlsinspection-configuration-name
                     tlsinspection-configuration description tags
                     encryption-configuration)
   (common-lisp:declare
    (common-lisp:ignorable tlsinspection-configuration-name
     tlsinspection-configuration description tags encryption-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-tlsinspection-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'network-firewall-request aws-sdk/generator/operation::input "POST" "/"
        "CreateTLSInspectionConfiguration" "2020-11-12"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-tlsinspection-configuration))
(common-lisp:progn
 (common-lisp:defun delete-firewall
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key firewall-name firewall-arn)
   (common-lisp:declare (common-lisp:ignorable firewall-name firewall-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-firewall-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'network-firewall-request aws-sdk/generator/operation::input "POST" "/"
        "DeleteFirewall" "2020-11-12"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-firewall))
(common-lisp:progn
 (common-lisp:defun delete-firewall-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key firewall-policy-name firewall-policy-arn)
   (common-lisp:declare
    (common-lisp:ignorable firewall-policy-name firewall-policy-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-firewall-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'network-firewall-request aws-sdk/generator/operation::input "POST" "/"
        "DeleteFirewallPolicy" "2020-11-12"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-firewall-policy))
(common-lisp:progn
 (common-lisp:defun delete-resource-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-resource-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'network-firewall-request aws-sdk/generator/operation::input "POST" "/"
        "DeleteResourcePolicy" "2020-11-12"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-resource-policy))
(common-lisp:progn
 (common-lisp:defun delete-rule-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rule-group-name rule-group-arn type)
   (common-lisp:declare
    (common-lisp:ignorable rule-group-name rule-group-arn type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-rule-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'network-firewall-request aws-sdk/generator/operation::input "POST" "/"
        "DeleteRuleGroup" "2020-11-12"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-rule-group))
(common-lisp:progn
 (common-lisp:defun delete-tlsinspection-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key tlsinspection-configuration-arn
                     tlsinspection-configuration-name)
   (common-lisp:declare
    (common-lisp:ignorable tlsinspection-configuration-arn
     tlsinspection-configuration-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-tlsinspection-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'network-firewall-request aws-sdk/generator/operation::input "POST" "/"
        "DeleteTLSInspectionConfiguration" "2020-11-12"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-tlsinspection-configuration))
(common-lisp:progn
 (common-lisp:defun describe-firewall
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key firewall-name firewall-arn)
   (common-lisp:declare (common-lisp:ignorable firewall-name firewall-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-firewall-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'network-firewall-request aws-sdk/generator/operation::input "POST" "/"
        "DescribeFirewall" "2020-11-12"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-firewall))
(common-lisp:progn
 (common-lisp:defun describe-firewall-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key firewall-policy-name firewall-policy-arn)
   (common-lisp:declare
    (common-lisp:ignorable firewall-policy-name firewall-policy-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-firewall-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'network-firewall-request aws-sdk/generator/operation::input "POST" "/"
        "DescribeFirewallPolicy" "2020-11-12"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-firewall-policy))
(common-lisp:progn
 (common-lisp:defun describe-logging-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key firewall-arn firewall-name)
   (common-lisp:declare (common-lisp:ignorable firewall-arn firewall-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-logging-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'network-firewall-request aws-sdk/generator/operation::input "POST" "/"
        "DescribeLoggingConfiguration" "2020-11-12"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-logging-configuration))
(common-lisp:progn
 (common-lisp:defun describe-resource-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-resource-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'network-firewall-request aws-sdk/generator/operation::input "POST" "/"
        "DescribeResourcePolicy" "2020-11-12"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-resource-policy))
(common-lisp:progn
 (common-lisp:defun describe-rule-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rule-group-name rule-group-arn type)
   (common-lisp:declare
    (common-lisp:ignorable rule-group-name rule-group-arn type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-rule-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'network-firewall-request aws-sdk/generator/operation::input "POST" "/"
        "DescribeRuleGroup" "2020-11-12"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-rule-group))
(common-lisp:progn
 (common-lisp:defun describe-rule-group-metadata
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rule-group-name rule-group-arn type)
   (common-lisp:declare
    (common-lisp:ignorable rule-group-name rule-group-arn type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-rule-group-metadata-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'network-firewall-request aws-sdk/generator/operation::input "POST" "/"
        "DescribeRuleGroupMetadata" "2020-11-12"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-rule-group-metadata))
(common-lisp:progn
 (common-lisp:defun describe-tlsinspection-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key tlsinspection-configuration-arn
                     tlsinspection-configuration-name)
   (common-lisp:declare
    (common-lisp:ignorable tlsinspection-configuration-arn
     tlsinspection-configuration-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-tlsinspection-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'network-firewall-request aws-sdk/generator/operation::input "POST" "/"
        "DescribeTLSInspectionConfiguration" "2020-11-12"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-tlsinspection-configuration))
(common-lisp:progn
 (common-lisp:defun disassociate-subnets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key update-token firewall-arn firewall-name
                     subnet-ids)
   (common-lisp:declare
    (common-lisp:ignorable update-token firewall-arn firewall-name subnet-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-disassociate-subnets-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'network-firewall-request aws-sdk/generator/operation::input "POST" "/"
        "DisassociateSubnets" "2020-11-12"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'disassociate-subnets))
(common-lisp:progn
 (common-lisp:defun list-firewall-policies
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-firewall-policies-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'network-firewall-request aws-sdk/generator/operation::input "POST" "/"
        "ListFirewallPolicies" "2020-11-12"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-firewall-policies))
(common-lisp:progn
 (common-lisp:defun list-firewalls
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token vpc-ids max-results)
   (common-lisp:declare (common-lisp:ignorable next-token vpc-ids max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-firewalls-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'network-firewall-request aws-sdk/generator/operation::input "POST" "/"
        "ListFirewalls" "2020-11-12"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-firewalls))
(common-lisp:progn
 (common-lisp:defun list-rule-groups
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results scope managed-type
                     type)
   (common-lisp:declare
    (common-lisp:ignorable next-token max-results scope managed-type type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-rule-groups-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'network-firewall-request aws-sdk/generator/operation::input "POST" "/"
        "ListRuleGroups" "2020-11-12"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-rule-groups))
(common-lisp:progn
 (common-lisp:defun list-tlsinspection-configurations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-tlsinspection-configurations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'network-firewall-request aws-sdk/generator/operation::input "POST" "/"
        "ListTLSInspectionConfigurations" "2020-11-12"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tlsinspection-configurations))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results resource-arn)
   (common-lisp:declare
    (common-lisp:ignorable next-token max-results resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'network-firewall-request aws-sdk/generator/operation::input "POST" "/"
        "ListTagsForResource" "2020-11-12"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun put-resource-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn policy)
   (common-lisp:declare (common-lisp:ignorable resource-arn policy))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-resource-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'network-firewall-request aws-sdk/generator/operation::input "POST" "/"
        "PutResourcePolicy" "2020-11-12"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-resource-policy))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'network-firewall-request aws-sdk/generator/operation::input "POST" "/"
        "TagResource" "2020-11-12"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'network-firewall-request aws-sdk/generator/operation::input "POST" "/"
        "UntagResource" "2020-11-12"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-firewall-delete-protection
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key update-token firewall-arn firewall-name
                     delete-protection)
   (common-lisp:declare
    (common-lisp:ignorable update-token firewall-arn firewall-name
     delete-protection))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-firewall-delete-protection-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'network-firewall-request aws-sdk/generator/operation::input "POST" "/"
        "UpdateFirewallDeleteProtection" "2020-11-12"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-firewall-delete-protection))
(common-lisp:progn
 (common-lisp:defun update-firewall-description
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key update-token firewall-arn firewall-name
                     description)
   (common-lisp:declare
    (common-lisp:ignorable update-token firewall-arn firewall-name
     description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-firewall-description-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'network-firewall-request aws-sdk/generator/operation::input "POST" "/"
        "UpdateFirewallDescription" "2020-11-12"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-firewall-description))
(common-lisp:progn
 (common-lisp:defun update-firewall-encryption-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key update-token firewall-arn firewall-name
                     encryption-configuration)
   (common-lisp:declare
    (common-lisp:ignorable update-token firewall-arn firewall-name
     encryption-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-firewall-encryption-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'network-firewall-request aws-sdk/generator/operation::input "POST" "/"
        "UpdateFirewallEncryptionConfiguration" "2020-11-12"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-firewall-encryption-configuration))
(common-lisp:progn
 (common-lisp:defun update-firewall-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key update-token firewall-policy-arn
                     firewall-policy-name firewall-policy description dry-run
                     encryption-configuration)
   (common-lisp:declare
    (common-lisp:ignorable update-token firewall-policy-arn
     firewall-policy-name firewall-policy description dry-run
     encryption-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-firewall-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'network-firewall-request aws-sdk/generator/operation::input "POST" "/"
        "UpdateFirewallPolicy" "2020-11-12"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-firewall-policy))
(common-lisp:progn
 (common-lisp:defun update-firewall-policy-change-protection
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key update-token firewall-arn firewall-name
                     firewall-policy-change-protection)
   (common-lisp:declare
    (common-lisp:ignorable update-token firewall-arn firewall-name
     firewall-policy-change-protection))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-firewall-policy-change-protection-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'network-firewall-request aws-sdk/generator/operation::input "POST" "/"
        "UpdateFirewallPolicyChangeProtection" "2020-11-12"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-firewall-policy-change-protection))
(common-lisp:progn
 (common-lisp:defun update-logging-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key firewall-arn firewall-name
                     logging-configuration)
   (common-lisp:declare
    (common-lisp:ignorable firewall-arn firewall-name logging-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-logging-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'network-firewall-request aws-sdk/generator/operation::input "POST" "/"
        "UpdateLoggingConfiguration" "2020-11-12"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-logging-configuration))
(common-lisp:progn
 (common-lisp:defun update-rule-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key update-token rule-group-arn
                     rule-group-name rule-group rules type description dry-run
                     encryption-configuration source-metadata)
   (common-lisp:declare
    (common-lisp:ignorable update-token rule-group-arn rule-group-name
     rule-group rules type description dry-run encryption-configuration
     source-metadata))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-rule-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'network-firewall-request aws-sdk/generator/operation::input "POST" "/"
        "UpdateRuleGroup" "2020-11-12"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-rule-group))
(common-lisp:progn
 (common-lisp:defun update-subnet-change-protection
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key update-token firewall-arn firewall-name
                     subnet-change-protection)
   (common-lisp:declare
    (common-lisp:ignorable update-token firewall-arn firewall-name
     subnet-change-protection))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-subnet-change-protection-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'network-firewall-request aws-sdk/generator/operation::input "POST" "/"
        "UpdateSubnetChangeProtection" "2020-11-12"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-subnet-change-protection))
(common-lisp:progn
 (common-lisp:defun update-tlsinspection-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key tlsinspection-configuration-arn
                     tlsinspection-configuration-name
                     tlsinspection-configuration description
                     encryption-configuration update-token)
   (common-lisp:declare
    (common-lisp:ignorable tlsinspection-configuration-arn
     tlsinspection-configuration-name tlsinspection-configuration description
     encryption-configuration update-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-tlsinspection-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'network-firewall-request aws-sdk/generator/operation::input "POST" "/"
        "UpdateTLSInspectionConfiguration" "2020-11-12"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-tlsinspection-configuration))
