;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/backupstorage/api
  (:use)
  (:nicknames #:aws/backupstorage)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/backupstorage/api)
(common-lisp:progn
 (common-lisp:defclass backupstorage-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "backupstorage" :protocol
                        :rest-json))
 (common-lisp:export 'backupstorage-request))
(common-lisp:progn
 (common-lisp:define-condition backupstorage-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'backupstorage-error))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("DataAlreadyExistsException" . data-already-exists-exception)
    ("IllegalArgumentException" . illegal-argument-exception)
    ("KMSInvalidKeyUsageException" . kmsinvalid-key-usage-exception)
    ("NotReadableInputStreamException" . not-readable-input-stream-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("RetryableException" . retryable-exception)
    ("ServiceInternalException" . service-internal-exception)
    ("ServiceUnavailableException" . service-unavailable-exception)
    ("ThrottlingException" . throttling-exception)))
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (backupstorage-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       access-denied-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-message)))
(common-lisp:progn
 (common-lisp:defclass backup-object common-lisp:nil
                       ((object-token :initarg :object-token :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %backup-object-object-token :initform
                         (common-lisp:error ":object-token is required"))
                        (object-checksum-algorithm :initarg
                         :object-checksum-algorithm :type
                         (common-lisp:or summary-checksum-algorithm
                                         common-lisp:null)
                         :accessor %backup-object-object-checksum-algorithm
                         :initform
                         (common-lisp:error
                          ":object-checksum-algorithm is required"))
                        (object-checksum :initarg :object-checksum :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %backup-object-object-checksum :initform
                         (common-lisp:error ":object-checksum is required"))
                        (metadata-string :initarg :metadata-string :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %backup-object-metadata-string :initform
                         common-lisp:nil)
                        (chunks-count :initarg :chunks-count :type
                         (common-lisp:or optional-long common-lisp:null)
                         :accessor %backup-object-chunks-count :initform
                         common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %backup-object-name :initform
                         (common-lisp:error ":name is required"))))
 (common-lisp:export (common-lisp:list 'backup-object 'make-backup-object))
 (common-lisp:defun make-backup-object
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key object-token object-checksum-algorithm
                     object-checksum metadata-string chunks-count name)
   (common-lisp:apply #'common-lisp:make-instance 'backup-object
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input backup-object))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input backup-object))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chunks-count))
      (common-lisp:list
       (common-lisp:cons "ChunksCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata-string))
      (common-lisp:list
       (common-lisp:cons "MetadataString"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'object-checksum))
      (common-lisp:list
       (common-lisp:cons "ObjectChecksum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'object-checksum-algorithm))
      (common-lisp:list
       (common-lisp:cons "ObjectChecksumAlgorithm"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'object-token))
      (common-lisp:list
       (common-lisp:cons "ObjectToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input backup-object))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass chunk common-lisp:nil
                       ((chunk-token :initarg :chunk-token :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %chunk-chunk-token :initform
                         (common-lisp:error ":chunk-token is required"))
                        (checksum-algorithm :initarg :checksum-algorithm :type
                         (common-lisp:or data-checksum-algorithm
                                         common-lisp:null)
                         :accessor %chunk-checksum-algorithm :initform
                         (common-lisp:error ":checksum-algorithm is required"))
                        (checksum :initarg :checksum :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %chunk-checksum :initform
                         (common-lisp:error ":checksum is required"))
                        (length :initarg :length :type
                         (common-lisp:or common-lisp:integer common-lisp:null)
                         :accessor %chunk-length :initform
                         (common-lisp:error ":length is required"))
                        (index :initarg :index :type
                         (common-lisp:or common-lisp:integer common-lisp:null)
                         :accessor %chunk-index :initform
                         (common-lisp:error ":index is required"))))
 (common-lisp:export (common-lisp:list 'chunk 'make-chunk))
 (common-lisp:defun make-chunk
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key chunk-token checksum-algorithm checksum
                     length index)
   (common-lisp:apply #'common-lisp:make-instance 'chunk
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input chunk))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input chunk))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'index))
      (common-lisp:list
       (common-lisp:cons "Index"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'length))
      (common-lisp:list
       (common-lisp:cons "Length"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'checksum))
      (common-lisp:list
       (common-lisp:cons "Checksum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'checksum-algorithm))
      (common-lisp:list
       (common-lisp:cons "ChecksumAlgorithm"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chunk-token))
      (common-lisp:list
       (common-lisp:cons "ChunkToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input chunk))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype chunk-list () '(trivial-types:proper-list chunk))
 (common-lisp:defun |make-chunk-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list chunk))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition data-already-exists-exception
     (backupstorage-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       data-already-exists-exception-message)
      (checksum :initarg :checksum :initform common-lisp:nil :reader
       data-already-exists-exception-checksum)
      (checksum-algorithm :initarg :checksum-algorithm :initform
       common-lisp:nil :reader
       data-already-exists-exception-checksum-algorithm)))
 (common-lisp:export
  (common-lisp:list 'data-already-exists-exception
                    'data-already-exists-exception-message
                    'data-already-exists-exception-checksum
                    'data-already-exists-exception-checksum-algorithm)))
(common-lisp:deftype data-checksum-algorithm () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass delete-object-input common-lisp:nil
                       ((object-name :initarg :object-name :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %delete-object-input-object-name :initform
                         (common-lisp:error ":object-name is required"))
                        (backup-job-id :initarg :backup-job-id :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %delete-object-input-backup-job-id :initform
                         (common-lisp:error ":backup-job-id is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-object-input 'make-delete-object-input))
 (common-lisp:defun make-delete-object-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key object-name backup-job-id)
   (common-lisp:apply #'common-lisp:make-instance 'delete-object-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-object-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-object-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-object-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-chunk-input common-lisp:nil
                       ((chunk-token :initarg :chunk-token :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %get-chunk-input-chunk-token :initform
                         (common-lisp:error ":chunk-token is required"))
                        (storage-job-id :initarg :storage-job-id :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %get-chunk-input-storage-job-id :initform
                         (common-lisp:error ":storage-job-id is required"))))
 (common-lisp:export (common-lisp:list 'get-chunk-input 'make-get-chunk-input))
 (common-lisp:defun make-get-chunk-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key chunk-token storage-job-id)
   (common-lisp:apply #'common-lisp:make-instance 'get-chunk-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-chunk-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-chunk-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-chunk-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-chunk-output common-lisp:nil
                       ((checksum-algorithm :initarg :checksum-algorithm :type
                         (common-lisp:or data-checksum-algorithm
                                         common-lisp:null)
                         :accessor %get-chunk-output-checksum-algorithm
                         :initform
                         (common-lisp:error ":checksum-algorithm is required"))
                        (checksum :initarg :checksum :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %get-chunk-output-checksum :initform
                         (common-lisp:error ":checksum is required"))
                        (length :initarg :length :type
                         (common-lisp:or common-lisp:integer common-lisp:null)
                         :accessor %get-chunk-output-length :initform
                         (common-lisp:error ":length is required"))
                        (data :initarg :data :type
                         (common-lisp:or payload-blob common-lisp:null)
                         :accessor %get-chunk-output-data :initform
                         (common-lisp:error ":data is required"))))
 (common-lisp:export
  (common-lisp:list 'get-chunk-output 'make-get-chunk-output))
 (common-lisp:defun make-get-chunk-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key checksum-algorithm checksum length data)
   (common-lisp:apply #'common-lisp:make-instance 'get-chunk-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-chunk-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'length))
      (common-lisp:cons "x-amz-data-length" aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'checksum))
      (common-lisp:cons "x-amz-checksum" aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'checksum-algorithm))
      (common-lisp:cons "x-amz-checksum-algorithm"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-chunk-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data))
      (common-lisp:list
       (common-lisp:cons "Data"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-chunk-output))
   (com.inuoe.jzon:stringify
    (common-lisp:slot-value aws-sdk/generator/shape::input 'data))))
(common-lisp:progn
 (common-lisp:defclass get-object-metadata-input common-lisp:nil
                       ((object-token :initarg :object-token :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %get-object-metadata-input-object-token
                         :initform
                         (common-lisp:error ":object-token is required"))
                        (storage-job-id :initarg :storage-job-id :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %get-object-metadata-input-storage-job-id
                         :initform
                         (common-lisp:error ":storage-job-id is required"))))
 (common-lisp:export
  (common-lisp:list 'get-object-metadata-input
                    'make-get-object-metadata-input))
 (common-lisp:defun make-get-object-metadata-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key object-token storage-job-id)
   (common-lisp:apply #'common-lisp:make-instance 'get-object-metadata-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-object-metadata-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-object-metadata-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-object-metadata-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-object-metadata-output common-lisp:nil
                       ((metadata-blob-checksum-algorithm :initarg
                         :metadata-blob-checksum-algorithm :type
                         (common-lisp:or data-checksum-algorithm
                                         common-lisp:null)
                         :accessor
                         %get-object-metadata-output-metadata-blob-checksum-algorithm
                         :initform common-lisp:nil)
                        (metadata-blob-checksum :initarg
                         :metadata-blob-checksum :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor
                         %get-object-metadata-output-metadata-blob-checksum
                         :initform common-lisp:nil)
                        (metadata-blob-length :initarg :metadata-blob-length
                         :type
                         (common-lisp:or common-lisp:integer common-lisp:null)
                         :accessor
                         %get-object-metadata-output-metadata-blob-length
                         :initform common-lisp:nil)
                        (metadata-blob :initarg :metadata-blob :type
                         (common-lisp:or payload-blob common-lisp:null)
                         :accessor %get-object-metadata-output-metadata-blob
                         :initform common-lisp:nil)
                        (metadata-string :initarg :metadata-string :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %get-object-metadata-output-metadata-string
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-object-metadata-output
                    'make-get-object-metadata-output))
 (common-lisp:defun make-get-object-metadata-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key metadata-blob-checksum-algorithm
                     metadata-blob-checksum metadata-blob-length metadata-blob
                     metadata-string)
   (common-lisp:apply #'common-lisp:make-instance 'get-object-metadata-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-object-metadata-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata-string))
      (common-lisp:cons "x-amz-metadata-string"
                        aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'metadata-blob-length))
      (common-lisp:cons "x-amz-data-length" aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'metadata-blob-checksum))
      (common-lisp:cons "x-amz-checksum" aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'metadata-blob-checksum-algorithm))
      (common-lisp:cons "x-amz-checksum-algorithm"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-object-metadata-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata-blob))
      (common-lisp:list
       (common-lisp:cons "MetadataBlob"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-object-metadata-output))
   (com.inuoe.jzon:stringify
    (common-lisp:slot-value aws-sdk/generator/shape::input 'metadata-blob))))
(common-lisp:progn
 (common-lisp:define-condition illegal-argument-exception
     (backupstorage-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       illegal-argument-exception-message)))
 (common-lisp:export
  (common-lisp:list 'illegal-argument-exception
                    'illegal-argument-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition kmsinvalid-key-usage-exception
     (backupstorage-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       kmsinvalid-key-usage-exception-message)))
 (common-lisp:export
  (common-lisp:list 'kmsinvalid-key-usage-exception
                    'kmsinvalid-key-usage-exception-message)))
(common-lisp:progn
 (common-lisp:defclass list-chunks-input common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %list-chunks-input-next-token :initform
                         common-lisp:nil)
                        (max-results :initarg :max-results :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor %list-chunks-input-max-results :initform
                         common-lisp:nil)
                        (object-token :initarg :object-token :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %list-chunks-input-object-token :initform
                         (common-lisp:error ":object-token is required"))
                        (storage-job-id :initarg :storage-job-id :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %list-chunks-input-storage-job-id :initform
                         (common-lisp:error ":storage-job-id is required"))))
 (common-lisp:export
  (common-lisp:list 'list-chunks-input 'make-list-chunks-input))
 (common-lisp:defun make-list-chunks-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token max-results object-token
                     storage-job-id)
   (common-lisp:apply #'common-lisp:make-instance 'list-chunks-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-chunks-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-chunks-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-chunks-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-chunks-output common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %list-chunks-output-next-token :initform
                         common-lisp:nil)
                        (chunk-list :initarg :chunk-list :type
                         (common-lisp:or chunk-list common-lisp:null) :accessor
                         %list-chunks-output-chunk-list :initform
                         (common-lisp:error ":chunk-list is required"))))
 (common-lisp:export
  (common-lisp:list 'list-chunks-output 'make-list-chunks-output))
 (common-lisp:defun make-list-chunks-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token chunk-list)
   (common-lisp:apply #'common-lisp:make-instance 'list-chunks-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-chunks-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-chunks-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chunk-list))
      (common-lisp:list
       (common-lisp:cons "ChunkList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-chunks-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-objects-input common-lisp:nil
                       ((created-after :initarg :created-after :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %list-objects-input-created-after :initform
                         common-lisp:nil)
                        (created-before :initarg :created-before :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %list-objects-input-created-before :initform
                         common-lisp:nil)
                        (next-token :initarg :next-token :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %list-objects-input-next-token :initform
                         common-lisp:nil)
                        (max-results :initarg :max-results :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor %list-objects-input-max-results :initform
                         common-lisp:nil)
                        (starting-object-prefix :initarg
                         :starting-object-prefix :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %list-objects-input-starting-object-prefix
                         :initform common-lisp:nil)
                        (starting-object-name :initarg :starting-object-name
                         :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %list-objects-input-starting-object-name
                         :initform common-lisp:nil)
                        (storage-job-id :initarg :storage-job-id :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %list-objects-input-storage-job-id :initform
                         (common-lisp:error ":storage-job-id is required"))))
 (common-lisp:export
  (common-lisp:list 'list-objects-input 'make-list-objects-input))
 (common-lisp:defun make-list-objects-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key created-after created-before next-token
                     max-results starting-object-prefix starting-object-name
                     storage-job-id)
   (common-lisp:apply #'common-lisp:make-instance 'list-objects-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-objects-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-objects-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-objects-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-objects-output common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %list-objects-output-next-token :initform
                         common-lisp:nil)
                        (object-list :initarg :object-list :type
                         (common-lisp:or object-list common-lisp:null)
                         :accessor %list-objects-output-object-list :initform
                         (common-lisp:error ":object-list is required"))))
 (common-lisp:export
  (common-lisp:list 'list-objects-output 'make-list-objects-output))
 (common-lisp:defun make-list-objects-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token object-list)
   (common-lisp:apply #'common-lisp:make-instance 'list-objects-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-objects-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-objects-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'object-list))
      (common-lisp:list
       (common-lisp:cons "ObjectList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-objects-output))
   common-lisp:nil))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype metadata-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition not-readable-input-stream-exception
     (backupstorage-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       not-readable-input-stream-exception-message)))
 (common-lisp:export
  (common-lisp:list 'not-readable-input-stream-exception
                    'not-readable-input-stream-exception-message)))
(common-lisp:progn
 (common-lisp:defclass notify-object-complete-input common-lisp:nil
                       ((metadata-blob-checksum-algorithm :initarg
                         :metadata-blob-checksum-algorithm :type
                         (common-lisp:or data-checksum-algorithm
                                         common-lisp:null)
                         :accessor
                         %notify-object-complete-input-metadata-blob-checksum-algorithm
                         :initform common-lisp:nil)
                        (metadata-blob-checksum :initarg
                         :metadata-blob-checksum :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor
                         %notify-object-complete-input-metadata-blob-checksum
                         :initform common-lisp:nil)
                        (metadata-blob-length :initarg :metadata-blob-length
                         :type
                         (common-lisp:or common-lisp:integer common-lisp:null)
                         :accessor
                         %notify-object-complete-input-metadata-blob-length
                         :initform common-lisp:nil)
                        (metadata-blob :initarg :metadata-blob :type
                         (common-lisp:or payload-blob common-lisp:null)
                         :accessor %notify-object-complete-input-metadata-blob
                         :initform common-lisp:nil)
                        (metadata-string :initarg :metadata-string :type
                         (common-lisp:or metadata-string common-lisp:null)
                         :accessor
                         %notify-object-complete-input-metadata-string
                         :initform common-lisp:nil)
                        (object-checksum-algorithm :initarg
                         :object-checksum-algorithm :type
                         (common-lisp:or summary-checksum-algorithm
                                         common-lisp:null)
                         :accessor
                         %notify-object-complete-input-object-checksum-algorithm
                         :initform
                         (common-lisp:error
                          ":object-checksum-algorithm is required"))
                        (object-checksum :initarg :object-checksum :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor
                         %notify-object-complete-input-object-checksum
                         :initform
                         (common-lisp:error ":object-checksum is required"))
                        (upload-id :initarg :upload-id :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %notify-object-complete-input-upload-id
                         :initform
                         (common-lisp:error ":upload-id is required"))
                        (backup-job-id :initarg :backup-job-id :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %notify-object-complete-input-backup-job-id
                         :initform
                         (common-lisp:error ":backup-job-id is required"))))
 (common-lisp:export
  (common-lisp:list 'notify-object-complete-input
                    'make-notify-object-complete-input))
 (common-lisp:defun make-notify-object-complete-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key metadata-blob-checksum-algorithm
                     metadata-blob-checksum metadata-blob-length metadata-blob
                     metadata-string object-checksum-algorithm object-checksum
                     upload-id backup-job-id)
   (common-lisp:apply #'common-lisp:make-instance 'notify-object-complete-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          notify-object-complete-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          notify-object-complete-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata-blob))
      (common-lisp:list
       (common-lisp:cons "MetadataBlob"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          notify-object-complete-input))
   (com.inuoe.jzon:stringify
    (common-lisp:slot-value aws-sdk/generator/shape::input 'metadata-blob))))
(common-lisp:progn
 (common-lisp:defclass notify-object-complete-output common-lisp:nil
                       ((object-checksum-algorithm :initarg
                         :object-checksum-algorithm :type
                         (common-lisp:or summary-checksum-algorithm
                                         common-lisp:null)
                         :accessor
                         %notify-object-complete-output-object-checksum-algorithm
                         :initform
                         (common-lisp:error
                          ":object-checksum-algorithm is required"))
                        (object-checksum :initarg :object-checksum :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor
                         %notify-object-complete-output-object-checksum
                         :initform
                         (common-lisp:error ":object-checksum is required"))))
 (common-lisp:export
  (common-lisp:list 'notify-object-complete-output
                    'make-notify-object-complete-output))
 (common-lisp:defun make-notify-object-complete-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key object-checksum-algorithm
                     object-checksum)
   (common-lisp:apply #'common-lisp:make-instance
                      'notify-object-complete-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          notify-object-complete-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          notify-object-complete-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'object-checksum))
      (common-lisp:list
       (common-lisp:cons "ObjectChecksum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'object-checksum-algorithm))
      (common-lisp:list
       (common-lisp:cons "ObjectChecksumAlgorithm"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          notify-object-complete-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype object-list ()
   '(trivial-types:proper-list backup-object))
 (common-lisp:defun |make-object-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list backup-object))
   aws-sdk/generator/shape::members))
(common-lisp:deftype optional-long () 'common-lisp:integer)
(common-lisp:deftype payload-blob ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:progn
 (common-lisp:defclass put-chunk-input common-lisp:nil
                       ((checksum-algorithm :initarg :checksum-algorithm :type
                         (common-lisp:or data-checksum-algorithm
                                         common-lisp:null)
                         :accessor %put-chunk-input-checksum-algorithm
                         :initform
                         (common-lisp:error ":checksum-algorithm is required"))
                        (checksum :initarg :checksum :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %put-chunk-input-checksum :initform
                         (common-lisp:error ":checksum is required"))
                        (length :initarg :length :type
                         (common-lisp:or common-lisp:integer common-lisp:null)
                         :accessor %put-chunk-input-length :initform
                         (common-lisp:error ":length is required"))
                        (data :initarg :data :type
                         (common-lisp:or payload-blob common-lisp:null)
                         :accessor %put-chunk-input-data :initform
                         (common-lisp:error ":data is required"))
                        (chunk-index :initarg :chunk-index :type
                         (common-lisp:or common-lisp:integer common-lisp:null)
                         :accessor %put-chunk-input-chunk-index :initform
                         (common-lisp:error ":chunk-index is required"))
                        (upload-id :initarg :upload-id :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %put-chunk-input-upload-id :initform
                         (common-lisp:error ":upload-id is required"))
                        (backup-job-id :initarg :backup-job-id :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %put-chunk-input-backup-job-id :initform
                         (common-lisp:error ":backup-job-id is required"))))
 (common-lisp:export (common-lisp:list 'put-chunk-input 'make-put-chunk-input))
 (common-lisp:defun make-put-chunk-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key checksum-algorithm checksum length data
                     chunk-index upload-id backup-job-id)
   (common-lisp:apply #'common-lisp:make-instance 'put-chunk-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input put-chunk-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input put-chunk-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data))
      (common-lisp:list
       (common-lisp:cons "Data"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input put-chunk-input))
   (com.inuoe.jzon:stringify
    (common-lisp:slot-value aws-sdk/generator/shape::input 'data))))
(common-lisp:progn
 (common-lisp:defclass put-chunk-output common-lisp:nil
                       ((chunk-checksum-algorithm :initarg
                         :chunk-checksum-algorithm :type
                         (common-lisp:or data-checksum-algorithm
                                         common-lisp:null)
                         :accessor %put-chunk-output-chunk-checksum-algorithm
                         :initform
                         (common-lisp:error
                          ":chunk-checksum-algorithm is required"))
                        (chunk-checksum :initarg :chunk-checksum :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %put-chunk-output-chunk-checksum :initform
                         (common-lisp:error ":chunk-checksum is required"))))
 (common-lisp:export
  (common-lisp:list 'put-chunk-output 'make-put-chunk-output))
 (common-lisp:defun make-put-chunk-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key chunk-checksum-algorithm chunk-checksum)
   (common-lisp:apply #'common-lisp:make-instance 'put-chunk-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input put-chunk-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input put-chunk-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chunk-checksum))
      (common-lisp:list
       (common-lisp:cons "ChunkChecksum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'chunk-checksum-algorithm))
      (common-lisp:list
       (common-lisp:cons "ChunkChecksumAlgorithm"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input put-chunk-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-object-input common-lisp:nil
                       ((throw-on-duplicate :initarg :throw-on-duplicate :type
                         (common-lisp:or common-lisp:boolean common-lisp:null)
                         :accessor %put-object-input-throw-on-duplicate
                         :initform common-lisp:nil)
                        (object-checksum-algorithm :initarg
                         :object-checksum-algorithm :type
                         (common-lisp:or summary-checksum-algorithm
                                         common-lisp:null)
                         :accessor %put-object-input-object-checksum-algorithm
                         :initform common-lisp:nil)
                        (object-checksum :initarg :object-checksum :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %put-object-input-object-checksum :initform
                         common-lisp:nil)
                        (inline-chunk-checksum-algorithm :initarg
                         :inline-chunk-checksum-algorithm :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor
                         %put-object-input-inline-chunk-checksum-algorithm
                         :initform common-lisp:nil)
                        (inline-chunk-checksum :initarg :inline-chunk-checksum
                         :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %put-object-input-inline-chunk-checksum
                         :initform common-lisp:nil)
                        (inline-chunk-length :initarg :inline-chunk-length
                         :type
                         (common-lisp:or common-lisp:integer common-lisp:null)
                         :accessor %put-object-input-inline-chunk-length
                         :initform common-lisp:nil)
                        (inline-chunk :initarg :inline-chunk :type
                         (common-lisp:or payload-blob common-lisp:null)
                         :accessor %put-object-input-inline-chunk :initform
                         common-lisp:nil)
                        (metadata-string :initarg :metadata-string :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %put-object-input-metadata-string :initform
                         common-lisp:nil)
                        (object-name :initarg :object-name :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %put-object-input-object-name :initform
                         (common-lisp:error ":object-name is required"))
                        (backup-job-id :initarg :backup-job-id :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %put-object-input-backup-job-id :initform
                         (common-lisp:error ":backup-job-id is required"))))
 (common-lisp:export
  (common-lisp:list 'put-object-input 'make-put-object-input))
 (common-lisp:defun make-put-object-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key throw-on-duplicate
                     object-checksum-algorithm object-checksum
                     inline-chunk-checksum-algorithm inline-chunk-checksum
                     inline-chunk-length inline-chunk metadata-string
                     object-name backup-job-id)
   (common-lisp:apply #'common-lisp:make-instance 'put-object-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input put-object-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input put-object-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'inline-chunk))
      (common-lisp:list
       (common-lisp:cons "InlineChunk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input put-object-input))
   (com.inuoe.jzon:stringify
    (common-lisp:slot-value aws-sdk/generator/shape::input 'inline-chunk))))
(common-lisp:progn
 (common-lisp:defclass put-object-output common-lisp:nil
                       ((object-checksum-algorithm :initarg
                         :object-checksum-algorithm :type
                         (common-lisp:or summary-checksum-algorithm
                                         common-lisp:null)
                         :accessor %put-object-output-object-checksum-algorithm
                         :initform
                         (common-lisp:error
                          ":object-checksum-algorithm is required"))
                        (object-checksum :initarg :object-checksum :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %put-object-output-object-checksum :initform
                         (common-lisp:error ":object-checksum is required"))
                        (inline-chunk-checksum-algorithm :initarg
                         :inline-chunk-checksum-algorithm :type
                         (common-lisp:or data-checksum-algorithm
                                         common-lisp:null)
                         :accessor
                         %put-object-output-inline-chunk-checksum-algorithm
                         :initform
                         (common-lisp:error
                          ":inline-chunk-checksum-algorithm is required"))
                        (inline-chunk-checksum :initarg :inline-chunk-checksum
                         :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %put-object-output-inline-chunk-checksum
                         :initform
                         (common-lisp:error
                          ":inline-chunk-checksum is required"))))
 (common-lisp:export
  (common-lisp:list 'put-object-output 'make-put-object-output))
 (common-lisp:defun make-put-object-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key object-checksum-algorithm object-checksum
                     inline-chunk-checksum-algorithm inline-chunk-checksum)
   (common-lisp:apply #'common-lisp:make-instance 'put-object-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input put-object-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input put-object-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'inline-chunk-checksum))
      (common-lisp:list
       (common-lisp:cons "InlineChunkChecksum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'inline-chunk-checksum-algorithm))
      (common-lisp:list
       (common-lisp:cons "InlineChunkChecksumAlgorithm"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'object-checksum))
      (common-lisp:list
       (common-lisp:cons "ObjectChecksum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'object-checksum-algorithm))
      (common-lisp:list
       (common-lisp:cons "ObjectChecksumAlgorithm"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input put-object-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (backupstorage-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition retryable-exception
     (backupstorage-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       retryable-exception-message)))
 (common-lisp:export
  (common-lisp:list 'retryable-exception 'retryable-exception-message)))
(common-lisp:deftype service-error-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition service-internal-exception
     (backupstorage-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-internal-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-internal-exception
                    'service-internal-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition service-unavailable-exception
     (backupstorage-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-unavailable-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-unavailable-exception
                    'service-unavailable-exception-message)))
(common-lisp:progn
 (common-lisp:defclass start-object-input common-lisp:nil
                       ((throw-on-duplicate :initarg :throw-on-duplicate :type
                         (common-lisp:or common-lisp:boolean common-lisp:null)
                         :accessor %start-object-input-throw-on-duplicate
                         :initform common-lisp:nil)
                        (object-name :initarg :object-name :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %start-object-input-object-name :initform
                         (common-lisp:error ":object-name is required"))
                        (backup-job-id :initarg :backup-job-id :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %start-object-input-backup-job-id :initform
                         (common-lisp:error ":backup-job-id is required"))))
 (common-lisp:export
  (common-lisp:list 'start-object-input 'make-start-object-input))
 (common-lisp:defun make-start-object-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key throw-on-duplicate object-name
                     backup-job-id)
   (common-lisp:apply #'common-lisp:make-instance 'start-object-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input start-object-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input start-object-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'throw-on-duplicate))
      (common-lisp:list
       (common-lisp:cons "ThrowOnDuplicate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input start-object-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-object-output common-lisp:nil
                       ((upload-id :initarg :upload-id :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %start-object-output-upload-id :initform
                         (common-lisp:error ":upload-id is required"))))
 (common-lisp:export
  (common-lisp:list 'start-object-output 'make-start-object-output))
 (common-lisp:defun make-start-object-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key upload-id)
   (common-lisp:apply #'common-lisp:make-instance 'start-object-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input start-object-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input start-object-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'upload-id))
      (common-lisp:list
       (common-lisp:cons "UploadId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input start-object-output))
   common-lisp:nil))
(common-lisp:deftype summary-checksum-algorithm () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (backupstorage-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       throttling-exception-message)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message)))
common-lisp:nil
common-lisp:nil
common-lisp:nil
common-lisp:nil
(common-lisp:progn
 (common-lisp:defun delete-object
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key backup-job-id object-name)
   (common-lisp:declare (common-lisp:ignorable backup-job-id object-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-object-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backupstorage-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backup-jobs/~A/object/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'job-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'object-name))))
                                                        "DeleteObject"
                                                        "2018-04-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-object))
(common-lisp:progn
 (common-lisp:defun get-chunk
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key storage-job-id chunk-token)
   (common-lisp:declare (common-lisp:ignorable storage-job-id chunk-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-chunk-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backupstorage-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restore-jobs/~A/chunk/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'job-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'chunk-token))))
                                                        "GetChunk"
                                                        "2018-04-10")
       :want-stream common-lisp:t)
      "blob" common-lisp:nil *error-map*)))
 (common-lisp:export 'get-chunk))
(common-lisp:progn
 (common-lisp:defun get-object-metadata
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key storage-job-id object-token)
   (common-lisp:declare (common-lisp:ignorable storage-job-id object-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-object-metadata-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backupstorage-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restore-jobs/~A/object/~A/metadata"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'job-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'object-token))))
                                                        "GetObjectMetadata"
                                                        "2018-04-10")
       :want-stream common-lisp:t)
      "blob" common-lisp:nil *error-map*)))
 (common-lisp:export 'get-object-metadata))
(common-lisp:progn
 (common-lisp:defun list-chunks
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key storage-job-id object-token max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable storage-job-id object-token max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-chunks-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backupstorage-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restore-jobs/~A/chunks/~A/list"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'job-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'object-token))))
                                                        "ListChunks"
                                                        "2018-04-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-chunks))
(common-lisp:progn
 (common-lisp:defun list-objects
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key storage-job-id starting-object-name
                     starting-object-prefix max-results next-token
                     created-before created-after)
   (common-lisp:declare
    (common-lisp:ignorable storage-job-id starting-object-name
     starting-object-prefix max-results next-token created-before
     created-after))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-objects-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backupstorage-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restore-jobs/~A/objects/list"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'job-id))))
                                                        "ListObjects"
                                                        "2018-04-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-objects))
(common-lisp:progn
 (common-lisp:defun notify-object-complete
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key backup-job-id upload-id object-checksum
                     object-checksum-algorithm metadata-string metadata-blob
                     metadata-blob-length metadata-blob-checksum
                     metadata-blob-checksum-algorithm)
   (common-lisp:declare
    (common-lisp:ignorable backup-job-id upload-id object-checksum
     object-checksum-algorithm metadata-string metadata-blob
     metadata-blob-length metadata-blob-checksum
     metadata-blob-checksum-algorithm))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-notify-object-complete-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backupstorage-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backup-jobs/~A/object/~A/complete"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'job-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'upload-id))))
                                                        "NotifyObjectComplete"
                                                        "2018-04-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'notify-object-complete))
(common-lisp:progn
 (common-lisp:defun put-chunk
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key backup-job-id upload-id chunk-index data
                     length checksum checksum-algorithm)
   (common-lisp:declare
    (common-lisp:ignorable backup-job-id upload-id chunk-index data length
     checksum checksum-algorithm))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-chunk-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backupstorage-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backup-jobs/~A/chunk/~A/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'job-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'upload-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'chunk-index))))
                                                        "PutChunk"
                                                        "2018-04-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-chunk))
(common-lisp:progn
 (common-lisp:defun put-object
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key backup-job-id object-name metadata-string
                     inline-chunk inline-chunk-length inline-chunk-checksum
                     inline-chunk-checksum-algorithm object-checksum
                     object-checksum-algorithm throw-on-duplicate)
   (common-lisp:declare
    (common-lisp:ignorable backup-job-id object-name metadata-string
     inline-chunk inline-chunk-length inline-chunk-checksum
     inline-chunk-checksum-algorithm object-checksum object-checksum-algorithm
     throw-on-duplicate))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-object-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backupstorage-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backup-jobs/~A/object/~A/put-object"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'job-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'object-name))))
                                                        "PutObject"
                                                        "2018-04-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-object))
(common-lisp:progn
 (common-lisp:defun start-object
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key backup-job-id object-name
                     throw-on-duplicate)
   (common-lisp:declare
    (common-lisp:ignorable backup-job-id object-name throw-on-duplicate))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-object-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'backupstorage-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/backup-jobs/~A/object/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'job-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'object-name))))
                                                        "StartObject"
                                                        "2018-04-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-object))
