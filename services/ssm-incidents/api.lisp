;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/ssm-incidents/api
  (:use)
  (:nicknames #:aws/ssm-incidents)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/ssm-incidents/api)
(common-lisp:progn
 (common-lisp:defclass ssm-incidents-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "ssm-incidents" :protocol
                        :rest-json))
 (common-lisp:export 'ssm-incidents-request))
(common-lisp:progn
 (common-lisp:define-condition ssm-incidents-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'ssm-incidents-error))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("ConflictException" . conflict-exception)
    ("InternalServerException" . internal-server-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceQuotaExceededException" . service-quota-exceeded-exception)
    ("ThrottlingException" . throttling-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (ssm-incidents-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       access-denied-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-message)))
(common-lisp:progn
 (common-lisp:defclass action common-lisp:nil
                       ((ssm-automation :initarg :|ssmAutomation| :type
                         (common-lisp:or ssm-automation common-lisp:null)
                         :accessor %action-ssm-automation :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'action 'make-action))
 (common-lisp:defun make-action
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key ssm-automation)
   (common-lisp:apply #'common-lisp:make-instance 'action
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input action))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ssm-automation))
      (common-lisp:list
       (common-lisp:cons "ssmAutomation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input action))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype actions-list () '(trivial-types:proper-list action))
 (common-lisp:defun |make-actions-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list action))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass add-region-action common-lisp:nil
                       ((sse-kms-key-id :initarg :|sseKmsKeyId| :type
                         (common-lisp:or sse-kms-key common-lisp:null)
                         :accessor %add-region-action-sse-kms-key-id :initform
                         common-lisp:nil)
                        (region-name :initarg :|regionName| :type
                         (common-lisp:or region-name common-lisp:null)
                         :accessor %add-region-action-region-name :initform
                         (common-lisp:error ":regionname is required"))))
 (common-lisp:export
  (common-lisp:list 'add-region-action 'make-add-region-action))
 (common-lisp:defun make-add-region-action
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key sse-kms-key-id region-name)
   (common-lisp:apply #'common-lisp:make-instance 'add-region-action
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input add-region-action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input add-region-action))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'region-name))
      (common-lisp:list
       (common-lisp:cons "regionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sse-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "sseKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input add-region-action))
   common-lisp:nil))
(common-lisp:deftype arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass attribute-value-list common-lisp:nil
                       ((string-values :initarg :|stringValues| :type
                         (common-lisp:or string-list common-lisp:null)
                         :accessor %attribute-value-list-string-values
                         :initform common-lisp:nil)
                        (integer-values :initarg :|integerValues| :type
                         (common-lisp:or integer-list common-lisp:null)
                         :accessor %attribute-value-list-integer-values
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'attribute-value-list 'make-attribute-value-list))
 (common-lisp:defun make-attribute-value-list
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key string-values integer-values)
   (common-lisp:apply #'common-lisp:make-instance 'attribute-value-list
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input attribute-value-list))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input attribute-value-list))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integer-values))
      (common-lisp:list
       (common-lisp:cons "integerValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'string-values))
      (common-lisp:list
       (common-lisp:cons "stringValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input attribute-value-list))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass automation-execution common-lisp:nil
                       ((ssm-execution-arn :initarg :|ssmExecutionArn| :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %automation-execution-ssm-execution-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'automation-execution 'make-automation-execution))
 (common-lisp:defun make-automation-execution
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key ssm-execution-arn)
   (common-lisp:apply #'common-lisp:make-instance 'automation-execution
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input automation-execution))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input automation-execution))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ssm-execution-arn))
      (common-lisp:list
       (common-lisp:cons "ssmExecutionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input automation-execution))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype automation-execution-set ()
   '(trivial-types:proper-list automation-execution))
 (common-lisp:defun |make-automation-execution-set|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list automation-execution))
   aws-sdk/generator/shape::members))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defclass chat-channel common-lisp:nil
                       ((empty :initarg :|empty| :type
                         (common-lisp:or empty-chat-channel common-lisp:null)
                         :accessor %chat-channel-empty :initform
                         common-lisp:nil)
                        (chatbot-sns :initarg :|chatbotSns| :type
                         (common-lisp:or chatbot-sns-configuration-set
                                         common-lisp:null)
                         :accessor %chat-channel-chatbot-sns :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'chat-channel 'make-chat-channel))
 (common-lisp:defun make-chat-channel
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key empty chatbot-sns)
   (common-lisp:apply #'common-lisp:make-instance 'chat-channel
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input chat-channel))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input chat-channel))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chatbot-sns))
      (common-lisp:list
       (common-lisp:cons "chatbotSns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'empty))
      (common-lisp:list
       (common-lisp:cons "empty"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input chat-channel))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype chatbot-sns-configuration-set ()
   '(trivial-types:proper-list sns-arn))
 (common-lisp:defun |make-chatbot-sns-configuration-set|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list sns-arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype client-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass condition common-lisp:nil
                       ((equals :initarg :|equals| :type
                         (common-lisp:or attribute-value-list common-lisp:null)
                         :accessor %condition-equals :initform common-lisp:nil)
                        (before :initarg :|before| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %condition-before :initform common-lisp:nil)
                        (after :initarg :|after| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %condition-after :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'condition 'make-condition))
 (common-lisp:defun make-condition
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key equals before after)
   (common-lisp:apply #'common-lisp:make-instance 'condition
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input condition))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input condition))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'after))
      (common-lisp:list
       (common-lisp:cons "after"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'before))
      (common-lisp:list
       (common-lisp:cons "before"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'equals))
      (common-lisp:list
       (common-lisp:cons "equals"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input condition))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (ssm-incidents-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       conflict-exception-message)
      (resource-identifier :initarg :|resourceIdentifier| :initform
       common-lisp:nil :reader conflict-exception-resource-identifier)
      (resource-type :initarg :|resourceType| :initform common-lisp:nil :reader
       conflict-exception-resource-type)
      (retry-after :initarg :|retryAfter| :initform common-lisp:nil :reader
       conflict-exception-retry-after)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message
                    'conflict-exception-resource-identifier
                    'conflict-exception-resource-type
                    'conflict-exception-retry-after)))
(common-lisp:progn
 (common-lisp:defclass create-replication-set-input common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %create-replication-set-input-tags :initform
                         common-lisp:nil)
                        (regions :initarg :|regions| :type
                         (common-lisp:or region-map-input common-lisp:null)
                         :accessor %create-replication-set-input-regions
                         :initform (common-lisp:error ":regions is required"))
                        (client-token :initarg :|clientToken| :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor %create-replication-set-input-client-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-replication-set-input
                    'make-create-replication-set-input))
 (common-lisp:defun make-create-replication-set-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags regions client-token)
   (common-lisp:apply #'common-lisp:make-instance 'create-replication-set-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-replication-set-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-replication-set-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'regions))
      (common-lisp:list
       (common-lisp:cons "regions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-replication-set-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-replication-set-output common-lisp:nil
                       ((arn :initarg :|arn| :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %create-replication-set-output-arn :initform
                         (common-lisp:error ":arn is required"))))
 (common-lisp:export
  (common-lisp:list 'create-replication-set-output
                    'make-create-replication-set-output))
 (common-lisp:defun make-create-replication-set-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-replication-set-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-replication-set-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-replication-set-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-replication-set-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-response-plan-input common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %create-response-plan-input-tags :initform
                         common-lisp:nil)
                        (name :initarg :|name| :type
                         (common-lisp:or response-plan-name common-lisp:null)
                         :accessor %create-response-plan-input-name :initform
                         (common-lisp:error ":name is required"))
                        (integrations :initarg :|integrations| :type
                         (common-lisp:or integrations common-lisp:null)
                         :accessor %create-response-plan-input-integrations
                         :initform common-lisp:nil)
                        (incident-template :initarg :|incidentTemplate| :type
                         (common-lisp:or incident-template common-lisp:null)
                         :accessor
                         %create-response-plan-input-incident-template
                         :initform
                         (common-lisp:error ":incidenttemplate is required"))
                        (engagements :initarg :|engagements| :type
                         (common-lisp:or engagement-set common-lisp:null)
                         :accessor %create-response-plan-input-engagements
                         :initform common-lisp:nil)
                        (display-name :initarg :|displayName| :type
                         (common-lisp:or response-plan-display-name
                                         common-lisp:null)
                         :accessor %create-response-plan-input-display-name
                         :initform common-lisp:nil)
                        (client-token :initarg :|clientToken| :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor %create-response-plan-input-client-token
                         :initform common-lisp:nil)
                        (chat-channel :initarg :|chatChannel| :type
                         (common-lisp:or chat-channel common-lisp:null)
                         :accessor %create-response-plan-input-chat-channel
                         :initform common-lisp:nil)
                        (actions :initarg :|actions| :type
                         (common-lisp:or actions-list common-lisp:null)
                         :accessor %create-response-plan-input-actions
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-response-plan-input
                    'make-create-response-plan-input))
 (common-lisp:defun make-create-response-plan-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags name integrations incident-template
                     engagements display-name client-token chat-channel
                     actions)
   (common-lisp:apply #'common-lisp:make-instance 'create-response-plan-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-response-plan-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-response-plan-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'actions))
      (common-lisp:list
       (common-lisp:cons "actions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chat-channel))
      (common-lisp:list
       (common-lisp:cons "chatChannel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'display-name))
      (common-lisp:list
       (common-lisp:cons "displayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engagements))
      (common-lisp:list
       (common-lisp:cons "engagements"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'incident-template))
      (common-lisp:list
       (common-lisp:cons "incidentTemplate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integrations))
      (common-lisp:list
       (common-lisp:cons "integrations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-response-plan-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-response-plan-output common-lisp:nil
                       ((arn :initarg :|arn| :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %create-response-plan-output-arn :initform
                         (common-lisp:error ":arn is required"))))
 (common-lisp:export
  (common-lisp:list 'create-response-plan-output
                    'make-create-response-plan-output))
 (common-lisp:defun make-create-response-plan-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key arn)
   (common-lisp:apply #'common-lisp:make-instance 'create-response-plan-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-response-plan-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-response-plan-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-response-plan-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-timeline-event-input common-lisp:nil
                       ((incident-record-arn :initarg :|incidentRecordArn|
                         :type (common-lisp:or arn common-lisp:null) :accessor
                         %create-timeline-event-input-incident-record-arn
                         :initform
                         (common-lisp:error ":incidentrecordarn is required"))
                        (event-type :initarg :|eventType| :type
                         (common-lisp:or timeline-event-type common-lisp:null)
                         :accessor %create-timeline-event-input-event-type
                         :initform
                         (common-lisp:error ":eventtype is required"))
                        (event-time :initarg :|eventTime| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %create-timeline-event-input-event-time :initform
                         (common-lisp:error ":eventtime is required"))
                        (event-references :initarg :|eventReferences| :type
                         (common-lisp:or event-reference-list common-lisp:null)
                         :accessor
                         %create-timeline-event-input-event-references
                         :initform common-lisp:nil)
                        (event-data :initarg :|eventData| :type
                         (common-lisp:or event-data common-lisp:null) :accessor
                         %create-timeline-event-input-event-data :initform
                         (common-lisp:error ":eventdata is required"))
                        (client-token :initarg :|clientToken| :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor %create-timeline-event-input-client-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-timeline-event-input
                    'make-create-timeline-event-input))
 (common-lisp:defun make-create-timeline-event-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key incident-record-arn event-type event-time
                     event-references event-data client-token)
   (common-lisp:apply #'common-lisp:make-instance 'create-timeline-event-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-timeline-event-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-timeline-event-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-data))
      (common-lisp:list
       (common-lisp:cons "eventData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-references))
      (common-lisp:list
       (common-lisp:cons "eventReferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-time))
      (common-lisp:list
       (common-lisp:cons "eventTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-type))
      (common-lisp:list
       (common-lisp:cons "eventType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'incident-record-arn))
      (common-lisp:list
       (common-lisp:cons "incidentRecordArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-timeline-event-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-timeline-event-output common-lisp:nil
                       ((incident-record-arn :initarg :|incidentRecordArn|
                         :type (common-lisp:or arn common-lisp:null) :accessor
                         %create-timeline-event-output-incident-record-arn
                         :initform
                         (common-lisp:error ":incidentrecordarn is required"))
                        (event-id :initarg :|eventId| :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         %create-timeline-event-output-event-id :initform
                         (common-lisp:error ":eventid is required"))))
 (common-lisp:export
  (common-lisp:list 'create-timeline-event-output
                    'make-create-timeline-event-output))
 (common-lisp:defun make-create-timeline-event-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key incident-record-arn event-id)
   (common-lisp:apply #'common-lisp:make-instance 'create-timeline-event-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-timeline-event-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-timeline-event-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-id))
      (common-lisp:list
       (common-lisp:cons "eventId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'incident-record-arn))
      (common-lisp:list
       (common-lisp:cons "incidentRecordArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-timeline-event-output))
   common-lisp:nil))
(common-lisp:deftype dedupe-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass delete-incident-record-input common-lisp:nil
                       ((arn :initarg :|arn| :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %delete-incident-record-input-arn :initform
                         (common-lisp:error ":arn is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-incident-record-input
                    'make-delete-incident-record-input))
 (common-lisp:defun make-delete-incident-record-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key arn)
   (common-lisp:apply #'common-lisp:make-instance 'delete-incident-record-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-incident-record-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-incident-record-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-incident-record-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-incident-record-output common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'delete-incident-record-output
                    'make-delete-incident-record-output))
 (common-lisp:defun make-delete-incident-record-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-incident-record-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-incident-record-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-incident-record-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-incident-record-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-region-action common-lisp:nil
                       ((region-name :initarg :|regionName| :type
                         (common-lisp:or region-name common-lisp:null)
                         :accessor %delete-region-action-region-name :initform
                         (common-lisp:error ":regionname is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-region-action 'make-delete-region-action))
 (common-lisp:defun make-delete-region-action
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key region-name)
   (common-lisp:apply #'common-lisp:make-instance 'delete-region-action
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-region-action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-region-action))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'region-name))
      (common-lisp:list
       (common-lisp:cons "regionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-region-action))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-replication-set-input common-lisp:nil
                       ((arn :initarg :|arn| :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %delete-replication-set-input-arn :initform
                         (common-lisp:error ":arn is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-replication-set-input
                    'make-delete-replication-set-input))
 (common-lisp:defun make-delete-replication-set-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key arn)
   (common-lisp:apply #'common-lisp:make-instance 'delete-replication-set-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-replication-set-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-replication-set-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-replication-set-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-replication-set-output common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'delete-replication-set-output
                    'make-delete-replication-set-output))
 (common-lisp:defun make-delete-replication-set-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-replication-set-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-replication-set-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-replication-set-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-replication-set-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-resource-policy-input common-lisp:nil
                       ((resource-arn :initarg :|resourceArn| :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %delete-resource-policy-input-resource-arn :initform
                         (common-lisp:error ":resourcearn is required"))
                        (policy-id :initarg :|policyId| :type
                         (common-lisp:or policy-id common-lisp:null) :accessor
                         %delete-resource-policy-input-policy-id :initform
                         (common-lisp:error ":policyid is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-resource-policy-input
                    'make-delete-resource-policy-input))
 (common-lisp:defun make-delete-resource-policy-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-arn policy-id)
   (common-lisp:apply #'common-lisp:make-instance 'delete-resource-policy-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-policy-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-policy-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy-id))
      (common-lisp:list
       (common-lisp:cons "policyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "resourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-policy-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-resource-policy-output common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'delete-resource-policy-output
                    'make-delete-resource-policy-output))
 (common-lisp:defun make-delete-resource-policy-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-resource-policy-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-policy-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-policy-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-policy-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-response-plan-input common-lisp:nil
                       ((arn :initarg :|arn| :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %delete-response-plan-input-arn :initform
                         (common-lisp:error ":arn is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-response-plan-input
                    'make-delete-response-plan-input))
 (common-lisp:defun make-delete-response-plan-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key arn)
   (common-lisp:apply #'common-lisp:make-instance 'delete-response-plan-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-response-plan-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-response-plan-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-response-plan-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-response-plan-output common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'delete-response-plan-output
                    'make-delete-response-plan-output))
 (common-lisp:defun make-delete-response-plan-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'delete-response-plan-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-response-plan-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-response-plan-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-response-plan-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-timeline-event-input common-lisp:nil
                       ((incident-record-arn :initarg :|incidentRecordArn|
                         :type (common-lisp:or arn common-lisp:null) :accessor
                         %delete-timeline-event-input-incident-record-arn
                         :initform
                         (common-lisp:error ":incidentrecordarn is required"))
                        (event-id :initarg :|eventId| :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         %delete-timeline-event-input-event-id :initform
                         (common-lisp:error ":eventid is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-timeline-event-input
                    'make-delete-timeline-event-input))
 (common-lisp:defun make-delete-timeline-event-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key incident-record-arn event-id)
   (common-lisp:apply #'common-lisp:make-instance 'delete-timeline-event-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-timeline-event-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-timeline-event-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-id))
      (common-lisp:list
       (common-lisp:cons "eventId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'incident-record-arn))
      (common-lisp:list
       (common-lisp:cons "incidentRecordArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-timeline-event-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-timeline-event-output common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'delete-timeline-event-output
                    'make-delete-timeline-event-output))
 (common-lisp:defun make-delete-timeline-event-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'delete-timeline-event-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-timeline-event-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-timeline-event-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-timeline-event-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass dynamic-ssm-parameter-value common-lisp:nil
                       ((variable :initarg :|variable| :type
                         (common-lisp:or variable-type common-lisp:null)
                         :accessor %dynamic-ssm-parameter-value-variable
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'dynamic-ssm-parameter-value
                    'make-dynamic-ssm-parameter-value))
 (common-lisp:defun make-dynamic-ssm-parameter-value
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key variable)
   (common-lisp:apply #'common-lisp:make-instance 'dynamic-ssm-parameter-value
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          dynamic-ssm-parameter-value))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          dynamic-ssm-parameter-value))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'variable))
      (common-lisp:list
       (common-lisp:cons "variable"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          dynamic-ssm-parameter-value))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype dynamic-ssm-parameters () 'common-lisp:hash-table)
 (common-lisp:defun |make-dynamic-ssm-parameters|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype dynamic-ssm-parameters-key-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass empty-chat-channel common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'empty-chat-channel 'make-empty-chat-channel))
 (common-lisp:defun make-empty-chat-channel
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'empty-chat-channel
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input empty-chat-channel))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input empty-chat-channel))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input empty-chat-channel))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype engagement-set ()
   '(trivial-types:proper-list ssm-contacts-arn))
 (common-lisp:defun |make-engagement-set|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ssm-contacts-arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype event-data () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass event-reference common-lisp:nil
                       ((resource :initarg :|resource| :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %event-reference-resource :initform common-lisp:nil)
                        (related-item-id :initarg :|relatedItemId| :type
                         (common-lisp:or generated-id common-lisp:null)
                         :accessor %event-reference-related-item-id :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'event-reference 'make-event-reference))
 (common-lisp:defun make-event-reference
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource related-item-id)
   (common-lisp:apply #'common-lisp:make-instance 'event-reference
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input event-reference))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input event-reference))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'related-item-id))
      (common-lisp:list
       (common-lisp:cons "relatedItemId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource))
      (common-lisp:list
       (common-lisp:cons "resource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input event-reference))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype event-reference-list ()
   '(trivial-types:proper-list event-reference))
 (common-lisp:defun |make-event-reference-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list event-reference))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass event-summary common-lisp:nil
                       ((incident-record-arn :initarg :|incidentRecordArn|
                         :type (common-lisp:or arn common-lisp:null) :accessor
                         %event-summary-incident-record-arn :initform
                         (common-lisp:error ":incidentrecordarn is required"))
                        (event-updated-time :initarg :|eventUpdatedTime| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %event-summary-event-updated-time :initform
                         (common-lisp:error ":eventupdatedtime is required"))
                        (event-type :initarg :|eventType| :type
                         (common-lisp:or timeline-event-type common-lisp:null)
                         :accessor %event-summary-event-type :initform
                         (common-lisp:error ":eventtype is required"))
                        (event-time :initarg :|eventTime| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %event-summary-event-time :initform
                         (common-lisp:error ":eventtime is required"))
                        (event-references :initarg :|eventReferences| :type
                         (common-lisp:or event-reference-list common-lisp:null)
                         :accessor %event-summary-event-references :initform
                         common-lisp:nil)
                        (event-id :initarg :|eventId| :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         %event-summary-event-id :initform
                         (common-lisp:error ":eventid is required"))))
 (common-lisp:export (common-lisp:list 'event-summary 'make-event-summary))
 (common-lisp:defun make-event-summary
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key incident-record-arn event-updated-time
                     event-type event-time event-references event-id)
   (common-lisp:apply #'common-lisp:make-instance 'event-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input event-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input event-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-id))
      (common-lisp:list
       (common-lisp:cons "eventId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-references))
      (common-lisp:list
       (common-lisp:cons "eventReferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-time))
      (common-lisp:list
       (common-lisp:cons "eventTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-type))
      (common-lisp:list
       (common-lisp:cons "eventType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-updated-time))
      (common-lisp:list
       (common-lisp:cons "eventUpdatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'incident-record-arn))
      (common-lisp:list
       (common-lisp:cons "incidentRecordArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input event-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype event-summary-list ()
   '(trivial-types:proper-list event-summary))
 (common-lisp:defun |make-event-summary-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list event-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype exception-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass filter common-lisp:nil
                       ((key :initarg :|key| :type
                         (common-lisp:or filter-key-string common-lisp:null)
                         :accessor %filter-key :initform
                         (common-lisp:error ":key is required"))
                        (condition :initarg :|condition| :type
                         (common-lisp:or condition common-lisp:null) :accessor
                         %filter-condition :initform
                         (common-lisp:error ":condition is required"))))
 (common-lisp:export (common-lisp:list 'filter 'make-filter))
 (common-lisp:defun make-filter
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key key condition)
   (common-lisp:apply #'common-lisp:make-instance 'filter
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'condition))
      (common-lisp:list
       (common-lisp:cons "condition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input filter))
   common-lisp:nil))
(common-lisp:deftype filter-key-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype filter-list () '(trivial-types:proper-list filter))
 (common-lisp:defun |make-filter-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list filter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype generated-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass get-incident-record-input common-lisp:nil
                       ((arn :initarg :|arn| :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %get-incident-record-input-arn :initform
                         (common-lisp:error ":arn is required"))))
 (common-lisp:export
  (common-lisp:list 'get-incident-record-input
                    'make-get-incident-record-input))
 (common-lisp:defun make-get-incident-record-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key arn)
   (common-lisp:apply #'common-lisp:make-instance 'get-incident-record-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-incident-record-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-incident-record-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-incident-record-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-incident-record-output common-lisp:nil
                       ((incident-record :initarg :|incidentRecord| :type
                         (common-lisp:or incident-record common-lisp:null)
                         :accessor %get-incident-record-output-incident-record
                         :initform
                         (common-lisp:error ":incidentrecord is required"))))
 (common-lisp:export
  (common-lisp:list 'get-incident-record-output
                    'make-get-incident-record-output))
 (common-lisp:defun make-get-incident-record-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key incident-record)
   (common-lisp:apply #'common-lisp:make-instance 'get-incident-record-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-incident-record-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-incident-record-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'incident-record))
      (common-lisp:list
       (common-lisp:cons "incidentRecord"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-incident-record-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-replication-set-input common-lisp:nil
                       ((arn :initarg :|arn| :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %get-replication-set-input-arn :initform
                         (common-lisp:error ":arn is required"))))
 (common-lisp:export
  (common-lisp:list 'get-replication-set-input
                    'make-get-replication-set-input))
 (common-lisp:defun make-get-replication-set-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key arn)
   (common-lisp:apply #'common-lisp:make-instance 'get-replication-set-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-replication-set-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-replication-set-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-replication-set-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-replication-set-output common-lisp:nil
                       ((replication-set :initarg :|replicationSet| :type
                         (common-lisp:or replication-set common-lisp:null)
                         :accessor %get-replication-set-output-replication-set
                         :initform
                         (common-lisp:error ":replicationset is required"))))
 (common-lisp:export
  (common-lisp:list 'get-replication-set-output
                    'make-get-replication-set-output))
 (common-lisp:defun make-get-replication-set-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key replication-set)
   (common-lisp:apply #'common-lisp:make-instance 'get-replication-set-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-replication-set-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-replication-set-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replication-set))
      (common-lisp:list
       (common-lisp:cons "replicationSet"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-replication-set-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-resource-policies-input common-lisp:nil
                       ((resource-arn :initarg :|resourceArn| :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %get-resource-policies-input-resource-arn :initform
                         (common-lisp:error ":resourcearn is required"))
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %get-resource-policies-input-next-token :initform
                         common-lisp:nil)
                        (max-results :initarg :|maxResults| :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor %get-resource-policies-input-max-results
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-resource-policies-input
                    'make-get-resource-policies-input))
 (common-lisp:defun make-get-resource-policies-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-arn next-token max-results)
   (common-lisp:apply #'common-lisp:make-instance 'get-resource-policies-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-policies-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-policies-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-policies-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-resource-policies-output common-lisp:nil
                       ((resource-policies :initarg :|resourcePolicies| :type
                         (common-lisp:or resource-policy-list common-lisp:null)
                         :accessor
                         %get-resource-policies-output-resource-policies
                         :initform
                         (common-lisp:error ":resourcepolicies is required"))
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %get-resource-policies-output-next-token :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-resource-policies-output
                    'make-get-resource-policies-output))
 (common-lisp:defun make-get-resource-policies-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-policies next-token)
   (common-lisp:apply #'common-lisp:make-instance 'get-resource-policies-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-policies-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-policies-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-policies))
      (common-lisp:list
       (common-lisp:cons "resourcePolicies"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-policies-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-response-plan-input common-lisp:nil
                       ((arn :initarg :|arn| :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %get-response-plan-input-arn :initform
                         (common-lisp:error ":arn is required"))))
 (common-lisp:export
  (common-lisp:list 'get-response-plan-input 'make-get-response-plan-input))
 (common-lisp:defun make-get-response-plan-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key arn)
   (common-lisp:apply #'common-lisp:make-instance 'get-response-plan-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-response-plan-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-response-plan-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-response-plan-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-response-plan-output common-lisp:nil
                       ((name :initarg :|name| :type
                         (common-lisp:or response-plan-name common-lisp:null)
                         :accessor %get-response-plan-output-name :initform
                         (common-lisp:error ":name is required"))
                        (integrations :initarg :|integrations| :type
                         (common-lisp:or integrations common-lisp:null)
                         :accessor %get-response-plan-output-integrations
                         :initform common-lisp:nil)
                        (incident-template :initarg :|incidentTemplate| :type
                         (common-lisp:or incident-template common-lisp:null)
                         :accessor %get-response-plan-output-incident-template
                         :initform
                         (common-lisp:error ":incidenttemplate is required"))
                        (engagements :initarg :|engagements| :type
                         (common-lisp:or engagement-set common-lisp:null)
                         :accessor %get-response-plan-output-engagements
                         :initform common-lisp:nil)
                        (display-name :initarg :|displayName| :type
                         (common-lisp:or response-plan-display-name
                                         common-lisp:null)
                         :accessor %get-response-plan-output-display-name
                         :initform common-lisp:nil)
                        (chat-channel :initarg :|chatChannel| :type
                         (common-lisp:or chat-channel common-lisp:null)
                         :accessor %get-response-plan-output-chat-channel
                         :initform common-lisp:nil)
                        (arn :initarg :|arn| :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %get-response-plan-output-arn :initform
                         (common-lisp:error ":arn is required"))
                        (actions :initarg :|actions| :type
                         (common-lisp:or actions-list common-lisp:null)
                         :accessor %get-response-plan-output-actions :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-response-plan-output 'make-get-response-plan-output))
 (common-lisp:defun make-get-response-plan-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key name integrations incident-template
                     engagements display-name chat-channel arn actions)
   (common-lisp:apply #'common-lisp:make-instance 'get-response-plan-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-response-plan-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-response-plan-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'actions))
      (common-lisp:list
       (common-lisp:cons "actions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chat-channel))
      (common-lisp:list
       (common-lisp:cons "chatChannel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'display-name))
      (common-lisp:list
       (common-lisp:cons "displayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engagements))
      (common-lisp:list
       (common-lisp:cons "engagements"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'incident-template))
      (common-lisp:list
       (common-lisp:cons "incidentTemplate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integrations))
      (common-lisp:list
       (common-lisp:cons "integrations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-response-plan-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-timeline-event-input common-lisp:nil
                       ((incident-record-arn :initarg :|incidentRecordArn|
                         :type (common-lisp:or arn common-lisp:null) :accessor
                         %get-timeline-event-input-incident-record-arn
                         :initform
                         (common-lisp:error ":incidentrecordarn is required"))
                        (event-id :initarg :|eventId| :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         %get-timeline-event-input-event-id :initform
                         (common-lisp:error ":eventid is required"))))
 (common-lisp:export
  (common-lisp:list 'get-timeline-event-input 'make-get-timeline-event-input))
 (common-lisp:defun make-get-timeline-event-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key incident-record-arn event-id)
   (common-lisp:apply #'common-lisp:make-instance 'get-timeline-event-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-timeline-event-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-timeline-event-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-timeline-event-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-timeline-event-output common-lisp:nil
                       ((event :initarg :|event| :type
                         (common-lisp:or timeline-event common-lisp:null)
                         :accessor %get-timeline-event-output-event :initform
                         (common-lisp:error ":event is required"))))
 (common-lisp:export
  (common-lisp:list 'get-timeline-event-output
                    'make-get-timeline-event-output))
 (common-lisp:defun make-get-timeline-event-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key event)
   (common-lisp:apply #'common-lisp:make-instance 'get-timeline-event-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-timeline-event-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-timeline-event-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event))
      (common-lisp:list
       (common-lisp:cons "event"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-timeline-event-output))
   common-lisp:nil))
(common-lisp:deftype impact () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass incident-record common-lisp:nil
                       ((title :initarg :|title| :type
                         (common-lisp:or incident-title common-lisp:null)
                         :accessor %incident-record-title :initform
                         (common-lisp:error ":title is required"))
                        (summary :initarg :|summary| :type
                         (common-lisp:or incident-summary common-lisp:null)
                         :accessor %incident-record-summary :initform
                         common-lisp:nil)
                        (status :initarg :|status| :type
                         (common-lisp:or incident-record-status
                                         common-lisp:null)
                         :accessor %incident-record-status :initform
                         (common-lisp:error ":status is required"))
                        (resolved-time :initarg :|resolvedTime| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %incident-record-resolved-time :initform
                         common-lisp:nil)
                        (notification-targets :initarg :|notificationTargets|
                         :type
                         (common-lisp:or notification-target-set
                                         common-lisp:null)
                         :accessor %incident-record-notification-targets
                         :initform common-lisp:nil)
                        (last-modified-time :initarg :|lastModifiedTime| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %incident-record-last-modified-time :initform
                         (common-lisp:error ":lastmodifiedtime is required"))
                        (last-modified-by :initarg :|lastModifiedBy| :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %incident-record-last-modified-by :initform
                         (common-lisp:error ":lastmodifiedby is required"))
                        (incident-record-source :initarg
                         :|incidentRecordSource| :type
                         (common-lisp:or incident-record-source
                                         common-lisp:null)
                         :accessor %incident-record-incident-record-source
                         :initform
                         (common-lisp:error
                          ":incidentrecordsource is required"))
                        (impact :initarg :|impact| :type
                         (common-lisp:or impact common-lisp:null) :accessor
                         %incident-record-impact :initform
                         (common-lisp:error ":impact is required"))
                        (dedupe-string :initarg :|dedupeString| :type
                         (common-lisp:or dedupe-string common-lisp:null)
                         :accessor %incident-record-dedupe-string :initform
                         (common-lisp:error ":dedupestring is required"))
                        (creation-time :initarg :|creationTime| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %incident-record-creation-time :initform
                         (common-lisp:error ":creationtime is required"))
                        (chat-channel :initarg :|chatChannel| :type
                         (common-lisp:or chat-channel common-lisp:null)
                         :accessor %incident-record-chat-channel :initform
                         common-lisp:nil)
                        (automation-executions :initarg :|automationExecutions|
                         :type
                         (common-lisp:or automation-execution-set
                                         common-lisp:null)
                         :accessor %incident-record-automation-executions
                         :initform common-lisp:nil)
                        (arn :initarg :|arn| :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %incident-record-arn :initform
                         (common-lisp:error ":arn is required"))))
 (common-lisp:export (common-lisp:list 'incident-record 'make-incident-record))
 (common-lisp:defun make-incident-record
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key title summary status resolved-time
                     notification-targets last-modified-time last-modified-by
                     incident-record-source impact dedupe-string creation-time
                     chat-channel automation-executions arn)
   (common-lisp:apply #'common-lisp:make-instance 'incident-record
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input incident-record))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input incident-record))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'automation-executions))
      (common-lisp:list
       (common-lisp:cons "automationExecutions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chat-channel))
      (common-lisp:list
       (common-lisp:cons "chatChannel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "creationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dedupe-string))
      (common-lisp:list
       (common-lisp:cons "dedupeString"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'impact))
      (common-lisp:list
       (common-lisp:cons "impact"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'incident-record-source))
      (common-lisp:list
       (common-lisp:cons "incidentRecordSource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-by))
      (common-lisp:list
       (common-lisp:cons "lastModifiedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "lastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'notification-targets))
      (common-lisp:list
       (common-lisp:cons "notificationTargets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resolved-time))
      (common-lisp:list
       (common-lisp:cons "resolvedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'summary))
      (common-lisp:list
       (common-lisp:cons "summary"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'title))
      (common-lisp:list
       (common-lisp:cons "title"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input incident-record))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass incident-record-source common-lisp:nil
                       ((source :initarg :|source| :type
                         (common-lisp:or incident-source common-lisp:null)
                         :accessor %incident-record-source-source :initform
                         (common-lisp:error ":source is required"))
                        (resource-arn :initarg :|resourceArn| :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %incident-record-source-resource-arn :initform
                         common-lisp:nil)
                        (invoked-by :initarg :|invokedBy| :type
                         (common-lisp:or service-principal common-lisp:null)
                         :accessor %incident-record-source-invoked-by :initform
                         common-lisp:nil)
                        (created-by :initarg :|createdBy| :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %incident-record-source-created-by :initform
                         (common-lisp:error ":createdby is required"))))
 (common-lisp:export
  (common-lisp:list 'incident-record-source 'make-incident-record-source))
 (common-lisp:defun make-incident-record-source
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key source resource-arn invoked-by
                     created-by)
   (common-lisp:apply #'common-lisp:make-instance 'incident-record-source
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          incident-record-source))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          incident-record-source))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-by))
      (common-lisp:list
       (common-lisp:cons "createdBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'invoked-by))
      (common-lisp:list
       (common-lisp:cons "invokedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "resourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source))
      (common-lisp:list
       (common-lisp:cons "source"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          incident-record-source))
   common-lisp:nil))
(common-lisp:deftype incident-record-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass incident-record-summary common-lisp:nil
                       ((title :initarg :|title| :type
                         (common-lisp:or incident-title common-lisp:null)
                         :accessor %incident-record-summary-title :initform
                         (common-lisp:error ":title is required"))
                        (status :initarg :|status| :type
                         (common-lisp:or incident-record-status
                                         common-lisp:null)
                         :accessor %incident-record-summary-status :initform
                         (common-lisp:error ":status is required"))
                        (resolved-time :initarg :|resolvedTime| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %incident-record-summary-resolved-time :initform
                         common-lisp:nil)
                        (incident-record-source :initarg
                         :|incidentRecordSource| :type
                         (common-lisp:or incident-record-source
                                         common-lisp:null)
                         :accessor
                         %incident-record-summary-incident-record-source
                         :initform
                         (common-lisp:error
                          ":incidentrecordsource is required"))
                        (impact :initarg :|impact| :type
                         (common-lisp:or impact common-lisp:null) :accessor
                         %incident-record-summary-impact :initform
                         (common-lisp:error ":impact is required"))
                        (creation-time :initarg :|creationTime| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %incident-record-summary-creation-time :initform
                         (common-lisp:error ":creationtime is required"))
                        (arn :initarg :|arn| :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %incident-record-summary-arn :initform
                         (common-lisp:error ":arn is required"))))
 (common-lisp:export
  (common-lisp:list 'incident-record-summary 'make-incident-record-summary))
 (common-lisp:defun make-incident-record-summary
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key title status resolved-time
                     incident-record-source impact creation-time arn)
   (common-lisp:apply #'common-lisp:make-instance 'incident-record-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          incident-record-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          incident-record-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "creationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'impact))
      (common-lisp:list
       (common-lisp:cons "impact"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'incident-record-source))
      (common-lisp:list
       (common-lisp:cons "incidentRecordSource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resolved-time))
      (common-lisp:list
       (common-lisp:cons "resolvedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'title))
      (common-lisp:list
       (common-lisp:cons "title"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          incident-record-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype incident-record-summary-list ()
   '(trivial-types:proper-list incident-record-summary))
 (common-lisp:defun |make-incident-record-summary-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list incident-record-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype incident-source () 'common-lisp:string)
(common-lisp:deftype incident-summary () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass incident-template common-lisp:nil
                       ((title :initarg :|title| :type
                         (common-lisp:or incident-title common-lisp:null)
                         :accessor %incident-template-title :initform
                         (common-lisp:error ":title is required"))
                        (summary :initarg :|summary| :type
                         (common-lisp:or incident-summary common-lisp:null)
                         :accessor %incident-template-summary :initform
                         common-lisp:nil)
                        (notification-targets :initarg :|notificationTargets|
                         :type
                         (common-lisp:or notification-target-set
                                         common-lisp:null)
                         :accessor %incident-template-notification-targets
                         :initform common-lisp:nil)
                        (incident-tags :initarg :|incidentTags| :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %incident-template-incident-tags :initform
                         common-lisp:nil)
                        (impact :initarg :|impact| :type
                         (common-lisp:or impact common-lisp:null) :accessor
                         %incident-template-impact :initform
                         (common-lisp:error ":impact is required"))
                        (dedupe-string :initarg :|dedupeString| :type
                         (common-lisp:or dedupe-string common-lisp:null)
                         :accessor %incident-template-dedupe-string :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'incident-template 'make-incident-template))
 (common-lisp:defun make-incident-template
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key title summary notification-targets
                     incident-tags impact dedupe-string)
   (common-lisp:apply #'common-lisp:make-instance 'incident-template
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input incident-template))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input incident-template))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dedupe-string))
      (common-lisp:list
       (common-lisp:cons "dedupeString"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'impact))
      (common-lisp:list
       (common-lisp:cons "impact"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'incident-tags))
      (common-lisp:list
       (common-lisp:cons "incidentTags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'notification-targets))
      (common-lisp:list
       (common-lisp:cons "notificationTargets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'summary))
      (common-lisp:list
       (common-lisp:cons "summary"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'title))
      (common-lisp:list
       (common-lisp:cons "title"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input incident-template))
   common-lisp:nil))
(common-lisp:deftype incident-title () 'common-lisp:string)
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype integer-list () '(trivial-types:proper-list integer))
 (common-lisp:defun |make-integer-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list integer))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass integration common-lisp:nil
                       ((pager-duty-configuration :initarg
                         :|pagerDutyConfiguration| :type
                         (common-lisp:or pager-duty-configuration
                                         common-lisp:null)
                         :accessor %integration-pager-duty-configuration
                         :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'integration 'make-integration))
 (common-lisp:defun make-integration
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key pager-duty-configuration)
   (common-lisp:apply #'common-lisp:make-instance 'integration
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input integration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input integration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pager-duty-configuration))
      (common-lisp:list
       (common-lisp:cons "pagerDutyConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input integration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype integrations () '(trivial-types:proper-list integration))
 (common-lisp:defun |make-integrations|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list integration))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (ssm-incidents-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       internal-server-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-message)))
(common-lisp:progn
 (common-lisp:defclass item-identifier common-lisp:nil
                       ((value :initarg :|value| :type
                         (common-lisp:or item-value common-lisp:null) :accessor
                         %item-identifier-value :initform
                         (common-lisp:error ":value is required"))
                        (type :initarg :|type| :type
                         (common-lisp:or item-type common-lisp:null) :accessor
                         %item-identifier-type :initform
                         (common-lisp:error ":type is required"))))
 (common-lisp:export (common-lisp:list 'item-identifier 'make-item-identifier))
 (common-lisp:defun make-item-identifier
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key value type)
   (common-lisp:apply #'common-lisp:make-instance 'item-identifier
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input item-identifier))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input item-identifier))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input item-identifier))
   common-lisp:nil))
(common-lisp:deftype item-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass item-value common-lisp:nil
                       ((url :initarg :|url| :type
                         (common-lisp:or url common-lisp:null) :accessor
                         %item-value-url :initform common-lisp:nil)
                        (pager-duty-incident-detail :initarg
                         :|pagerDutyIncidentDetail| :type
                         (common-lisp:or pager-duty-incident-detail
                                         common-lisp:null)
                         :accessor %item-value-pager-duty-incident-detail
                         :initform common-lisp:nil)
                        (metric-definition :initarg :|metricDefinition| :type
                         (common-lisp:or metric-definition common-lisp:null)
                         :accessor %item-value-metric-definition :initform
                         common-lisp:nil)
                        (arn :initarg :|arn| :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %item-value-arn :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'item-value 'make-item-value))
 (common-lisp:defun make-item-value
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key url pager-duty-incident-detail
                     metric-definition arn)
   (common-lisp:apply #'common-lisp:make-instance 'item-value
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input item-value))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input item-value))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-definition))
      (common-lisp:list
       (common-lisp:cons "metricDefinition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pager-duty-incident-detail))
      (common-lisp:list
       (common-lisp:cons "pagerDutyIncidentDetail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'url))
      (common-lisp:list
       (common-lisp:cons "url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input item-value))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-incident-records-input common-lisp:nil
                       ((next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-incident-records-input-next-token :initform
                         common-lisp:nil)
                        (max-results :initarg :|maxResults| :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor %list-incident-records-input-max-results
                         :initform common-lisp:nil)
                        (filters :initarg :|filters| :type
                         (common-lisp:or filter-list common-lisp:null)
                         :accessor %list-incident-records-input-filters
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-incident-records-input
                    'make-list-incident-records-input))
 (common-lisp:defun make-list-incident-records-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token max-results filters)
   (common-lisp:apply #'common-lisp:make-instance 'list-incident-records-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-incident-records-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-incident-records-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-incident-records-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-incident-records-output common-lisp:nil
                       ((next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-incident-records-output-next-token :initform
                         common-lisp:nil)
                        (incident-record-summaries :initarg
                         :|incidentRecordSummaries| :type
                         (common-lisp:or incident-record-summary-list
                                         common-lisp:null)
                         :accessor
                         %list-incident-records-output-incident-record-summaries
                         :initform
                         (common-lisp:error
                          ":incidentrecordsummaries is required"))))
 (common-lisp:export
  (common-lisp:list 'list-incident-records-output
                    'make-list-incident-records-output))
 (common-lisp:defun make-list-incident-records-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token incident-record-summaries)
   (common-lisp:apply #'common-lisp:make-instance 'list-incident-records-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-incident-records-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-incident-records-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'incident-record-summaries))
      (common-lisp:list
       (common-lisp:cons "incidentRecordSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-incident-records-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-related-items-input common-lisp:nil
                       ((next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-related-items-input-next-token :initform
                         common-lisp:nil)
                        (max-results :initarg :|maxResults| :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor %list-related-items-input-max-results
                         :initform common-lisp:nil)
                        (incident-record-arn :initarg :|incidentRecordArn|
                         :type (common-lisp:or arn common-lisp:null) :accessor
                         %list-related-items-input-incident-record-arn
                         :initform
                         (common-lisp:error
                          ":incidentrecordarn is required"))))
 (common-lisp:export
  (common-lisp:list 'list-related-items-input 'make-list-related-items-input))
 (common-lisp:defun make-list-related-items-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token max-results
                     incident-record-arn)
   (common-lisp:apply #'common-lisp:make-instance 'list-related-items-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-related-items-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-related-items-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'incident-record-arn))
      (common-lisp:list
       (common-lisp:cons "incidentRecordArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-related-items-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-related-items-output common-lisp:nil
                       ((related-items :initarg :|relatedItems| :type
                         (common-lisp:or related-item-list common-lisp:null)
                         :accessor %list-related-items-output-related-items
                         :initform
                         (common-lisp:error ":relateditems is required"))
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-related-items-output-next-token :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-related-items-output
                    'make-list-related-items-output))
 (common-lisp:defun make-list-related-items-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key related-items next-token)
   (common-lisp:apply #'common-lisp:make-instance 'list-related-items-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-related-items-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-related-items-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'related-items))
      (common-lisp:list
       (common-lisp:cons "relatedItems"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-related-items-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-replication-sets-input common-lisp:nil
                       ((next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-replication-sets-input-next-token :initform
                         common-lisp:nil)
                        (max-results :initarg :|maxResults| :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor %list-replication-sets-input-max-results
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-replication-sets-input
                    'make-list-replication-sets-input))
 (common-lisp:defun make-list-replication-sets-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token max-results)
   (common-lisp:apply #'common-lisp:make-instance 'list-replication-sets-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-replication-sets-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-replication-sets-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-replication-sets-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-replication-sets-output common-lisp:nil
                       ((replication-set-arns :initarg :|replicationSetArns|
                         :type
                         (common-lisp:or replication-set-arn-list
                                         common-lisp:null)
                         :accessor
                         %list-replication-sets-output-replication-set-arns
                         :initform
                         (common-lisp:error ":replicationsetarns is required"))
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-replication-sets-output-next-token :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-replication-sets-output
                    'make-list-replication-sets-output))
 (common-lisp:defun make-list-replication-sets-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key replication-set-arns next-token)
   (common-lisp:apply #'common-lisp:make-instance 'list-replication-sets-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-replication-sets-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-replication-sets-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'replication-set-arns))
      (common-lisp:list
       (common-lisp:cons "replicationSetArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-replication-sets-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-response-plans-input common-lisp:nil
                       ((next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-response-plans-input-next-token :initform
                         common-lisp:nil)
                        (max-results :initarg :|maxResults| :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor %list-response-plans-input-max-results
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-response-plans-input
                    'make-list-response-plans-input))
 (common-lisp:defun make-list-response-plans-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token max-results)
   (common-lisp:apply #'common-lisp:make-instance 'list-response-plans-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-response-plans-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-response-plans-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-response-plans-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-response-plans-output common-lisp:nil
                       ((response-plan-summaries :initarg
                         :|responsePlanSummaries| :type
                         (common-lisp:or response-plan-summary-list
                                         common-lisp:null)
                         :accessor
                         %list-response-plans-output-response-plan-summaries
                         :initform
                         (common-lisp:error
                          ":responseplansummaries is required"))
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-response-plans-output-next-token :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-response-plans-output
                    'make-list-response-plans-output))
 (common-lisp:defun make-list-response-plans-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key response-plan-summaries next-token)
   (common-lisp:apply #'common-lisp:make-instance 'list-response-plans-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-response-plans-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-response-plans-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'response-plan-summaries))
      (common-lisp:list
       (common-lisp:cons "responsePlanSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-response-plans-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-request common-lisp:nil
                       ((resource-arn :initarg :|resourceArn| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %list-tags-for-resource-request-resource-arn :initform
                         (common-lisp:error ":resourcearn is required"))))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defun make-list-tags-for-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-response common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %list-tags-for-resource-response-tags :initform
                         (common-lisp:error ":tags is required"))))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defun make-list-tags-for-resource-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-timeline-events-input common-lisp:nil
                       ((sort-order :initarg :|sortOrder| :type
                         (common-lisp:or sort-order common-lisp:null) :accessor
                         %list-timeline-events-input-sort-order :initform
                         common-lisp:nil)
                        (sort-by :initarg :|sortBy| :type
                         (common-lisp:or timeline-event-sort common-lisp:null)
                         :accessor %list-timeline-events-input-sort-by
                         :initform common-lisp:nil)
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-timeline-events-input-next-token :initform
                         common-lisp:nil)
                        (max-results :initarg :|maxResults| :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor %list-timeline-events-input-max-results
                         :initform common-lisp:nil)
                        (incident-record-arn :initarg :|incidentRecordArn|
                         :type (common-lisp:or arn common-lisp:null) :accessor
                         %list-timeline-events-input-incident-record-arn
                         :initform
                         (common-lisp:error ":incidentrecordarn is required"))
                        (filters :initarg :|filters| :type
                         (common-lisp:or filter-list common-lisp:null)
                         :accessor %list-timeline-events-input-filters
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-timeline-events-input
                    'make-list-timeline-events-input))
 (common-lisp:defun make-list-timeline-events-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key sort-order sort-by next-token max-results
                     incident-record-arn filters)
   (common-lisp:apply #'common-lisp:make-instance 'list-timeline-events-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-timeline-events-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-timeline-events-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'incident-record-arn))
      (common-lisp:list
       (common-lisp:cons "incidentRecordArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sort-by))
      (common-lisp:list
       (common-lisp:cons "sortBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sort-order))
      (common-lisp:list
       (common-lisp:cons "sortOrder"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-timeline-events-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-timeline-events-output common-lisp:nil
                       ((next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-timeline-events-output-next-token :initform
                         common-lisp:nil)
                        (event-summaries :initarg :|eventSummaries| :type
                         (common-lisp:or event-summary-list common-lisp:null)
                         :accessor %list-timeline-events-output-event-summaries
                         :initform
                         (common-lisp:error ":eventsummaries is required"))))
 (common-lisp:export
  (common-lisp:list 'list-timeline-events-output
                    'make-list-timeline-events-output))
 (common-lisp:defun make-list-timeline-events-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token event-summaries)
   (common-lisp:apply #'common-lisp:make-instance 'list-timeline-events-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-timeline-events-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-timeline-events-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-summaries))
      (common-lisp:list
       (common-lisp:cons "eventSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-timeline-events-output))
   common-lisp:nil))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype metric-definition () 'common-lisp:string)
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass notification-target-item common-lisp:nil
                       ((sns-topic-arn :initarg :|snsTopicArn| :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %notification-target-item-sns-topic-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'notification-target-item 'make-notification-target-item))
 (common-lisp:defun make-notification-target-item
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key sns-topic-arn)
   (common-lisp:apply #'common-lisp:make-instance 'notification-target-item
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          notification-target-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          notification-target-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sns-topic-arn))
      (common-lisp:list
       (common-lisp:cons "snsTopicArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          notification-target-item))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype notification-target-set ()
   '(trivial-types:proper-list notification-target-item))
 (common-lisp:defun |make-notification-target-set|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            notification-target-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass pager-duty-configuration common-lisp:nil
                       ((secret-id :initarg :|secretId| :type
                         (common-lisp:or
                          pager-duty-configuration-secret-id-string
                          common-lisp:null)
                         :accessor %pager-duty-configuration-secret-id
                         :initform (common-lisp:error ":secretid is required"))
                        (pager-duty-incident-configuration :initarg
                         :|pagerDutyIncidentConfiguration| :type
                         (common-lisp:or pager-duty-incident-configuration
                                         common-lisp:null)
                         :accessor
                         %pager-duty-configuration-pager-duty-incident-configuration
                         :initform
                         (common-lisp:error
                          ":pagerdutyincidentconfiguration is required"))
                        (name :initarg :|name| :type
                         (common-lisp:or pager-duty-configuration-name-string
                                         common-lisp:null)
                         :accessor %pager-duty-configuration-name :initform
                         (common-lisp:error ":name is required"))))
 (common-lisp:export
  (common-lisp:list 'pager-duty-configuration 'make-pager-duty-configuration))
 (common-lisp:defun make-pager-duty-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key secret-id
                     pager-duty-incident-configuration name)
   (common-lisp:apply #'common-lisp:make-instance 'pager-duty-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          pager-duty-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          pager-duty-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pager-duty-incident-configuration))
      (common-lisp:list
       (common-lisp:cons "pagerDutyIncidentConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'secret-id))
      (common-lisp:list
       (common-lisp:cons "secretId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          pager-duty-configuration))
   common-lisp:nil))
(common-lisp:deftype pager-duty-configuration-name-string ()
  'common-lisp:string)
(common-lisp:deftype pager-duty-configuration-secret-id-string ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass pager-duty-incident-configuration common-lisp:nil
                       ((service-id :initarg :|serviceId| :type
                         (common-lisp:or
                          pager-duty-incident-configuration-service-id-string
                          common-lisp:null)
                         :accessor
                         %pager-duty-incident-configuration-service-id
                         :initform
                         (common-lisp:error ":serviceid is required"))))
 (common-lisp:export
  (common-lisp:list 'pager-duty-incident-configuration
                    'make-pager-duty-incident-configuration))
 (common-lisp:defun make-pager-duty-incident-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key service-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'pager-duty-incident-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          pager-duty-incident-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          pager-duty-incident-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-id))
      (common-lisp:list
       (common-lisp:cons "serviceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          pager-duty-incident-configuration))
   common-lisp:nil))
(common-lisp:deftype pager-duty-incident-configuration-service-id-string ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass pager-duty-incident-detail common-lisp:nil
                       ((secret-id :initarg :|secretId| :type
                         (common-lisp:or
                          pager-duty-incident-detail-secret-id-string
                          common-lisp:null)
                         :accessor %pager-duty-incident-detail-secret-id
                         :initform common-lisp:nil)
                        (id :initarg :|id| :type
                         (common-lisp:or pager-duty-incident-detail-id-string
                                         common-lisp:null)
                         :accessor %pager-duty-incident-detail-id :initform
                         (common-lisp:error ":id is required"))
                        (auto-resolve :initarg :|autoResolve| :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         %pager-duty-incident-detail-auto-resolve :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'pager-duty-incident-detail
                    'make-pager-duty-incident-detail))
 (common-lisp:defun make-pager-duty-incident-detail
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key secret-id id auto-resolve)
   (common-lisp:apply #'common-lisp:make-instance 'pager-duty-incident-detail
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          pager-duty-incident-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          pager-duty-incident-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-resolve))
      (common-lisp:list
       (common-lisp:cons "autoResolve"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'secret-id))
      (common-lisp:list
       (common-lisp:cons "secretId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          pager-duty-incident-detail))
   common-lisp:nil))
(common-lisp:deftype pager-duty-incident-detail-id-string ()
  'common-lisp:string)
(common-lisp:deftype pager-duty-incident-detail-secret-id-string ()
  'common-lisp:string)
(common-lisp:deftype policy () 'common-lisp:string)
(common-lisp:deftype policy-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass put-resource-policy-input common-lisp:nil
                       ((resource-arn :initarg :|resourceArn| :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %put-resource-policy-input-resource-arn :initform
                         (common-lisp:error ":resourcearn is required"))
                        (policy :initarg :|policy| :type
                         (common-lisp:or policy common-lisp:null) :accessor
                         %put-resource-policy-input-policy :initform
                         (common-lisp:error ":policy is required"))))
 (common-lisp:export
  (common-lisp:list 'put-resource-policy-input
                    'make-put-resource-policy-input))
 (common-lisp:defun make-put-resource-policy-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-arn policy)
   (common-lisp:apply #'common-lisp:make-instance 'put-resource-policy-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-resource-policy-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-resource-policy-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "resourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-resource-policy-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-resource-policy-output common-lisp:nil
                       ((policy-id :initarg :|policyId| :type
                         (common-lisp:or policy-id common-lisp:null) :accessor
                         %put-resource-policy-output-policy-id :initform
                         (common-lisp:error ":policyid is required"))))
 (common-lisp:export
  (common-lisp:list 'put-resource-policy-output
                    'make-put-resource-policy-output))
 (common-lisp:defun make-put-resource-policy-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key policy-id)
   (common-lisp:apply #'common-lisp:make-instance 'put-resource-policy-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-resource-policy-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-resource-policy-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy-id))
      (common-lisp:list
       (common-lisp:cons "policyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-resource-policy-output))
   common-lisp:nil))
(common-lisp:deftype raw-data () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass region-info common-lisp:nil
                       ((status-update-date-time :initarg
                         :|statusUpdateDateTime| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %region-info-status-update-date-time :initform
                         (common-lisp:error
                          ":statusupdatedatetime is required"))
                        (status-message :initarg :|statusMessage| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %region-info-status-message :initform common-lisp:nil)
                        (status :initarg :|status| :type
                         (common-lisp:or region-status common-lisp:null)
                         :accessor %region-info-status :initform
                         (common-lisp:error ":status is required"))
                        (sse-kms-key-id :initarg :|sseKmsKeyId| :type
                         (common-lisp:or sse-kms-key common-lisp:null)
                         :accessor %region-info-sse-kms-key-id :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'region-info 'make-region-info))
 (common-lisp:defun make-region-info
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key status-update-date-time status-message
                     status sse-kms-key-id)
   (common-lisp:apply #'common-lisp:make-instance 'region-info
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input region-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input region-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sse-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "sseKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-message))
      (common-lisp:list
       (common-lisp:cons "statusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'status-update-date-time))
      (common-lisp:list
       (common-lisp:cons "statusUpdateDateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input region-info))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype region-info-map () 'common-lisp:hash-table)
 (common-lisp:defun |make-region-info-map|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype region-map-input () 'common-lisp:hash-table)
 (common-lisp:defun |make-region-map-input|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass region-map-input-value common-lisp:nil
                       ((sse-kms-key-id :initarg :|sseKmsKeyId| :type
                         (common-lisp:or sse-kms-key common-lisp:null)
                         :accessor %region-map-input-value-sse-kms-key-id
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'region-map-input-value 'make-region-map-input-value))
 (common-lisp:defun make-region-map-input-value
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key sse-kms-key-id)
   (common-lisp:apply #'common-lisp:make-instance 'region-map-input-value
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          region-map-input-value))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          region-map-input-value))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sse-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "sseKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          region-map-input-value))
   common-lisp:nil))
(common-lisp:deftype region-name () 'common-lisp:string)
(common-lisp:deftype region-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass related-item common-lisp:nil
                       ((title :initarg :|title| :type
                         (common-lisp:or related-item-title-string
                                         common-lisp:null)
                         :accessor %related-item-title :initform
                         common-lisp:nil)
                        (identifier :initarg :|identifier| :type
                         (common-lisp:or item-identifier common-lisp:null)
                         :accessor %related-item-identifier :initform
                         (common-lisp:error ":identifier is required"))
                        (generated-id :initarg :|generatedId| :type
                         (common-lisp:or generated-id common-lisp:null)
                         :accessor %related-item-generated-id :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'related-item 'make-related-item))
 (common-lisp:defun make-related-item
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key title identifier generated-id)
   (common-lisp:apply #'common-lisp:make-instance 'related-item
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input related-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input related-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'generated-id))
      (common-lisp:list
       (common-lisp:cons "generatedId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identifier))
      (common-lisp:list
       (common-lisp:cons "identifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'title))
      (common-lisp:list
       (common-lisp:cons "title"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input related-item))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype related-item-list ()
   '(trivial-types:proper-list related-item))
 (common-lisp:defun |make-related-item-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list related-item))
   aws-sdk/generator/shape::members))
(common-lisp:deftype related-item-title-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass related-items-update common-lisp:nil
                       ((item-to-remove :initarg :|itemToRemove| :type
                         (common-lisp:or item-identifier common-lisp:null)
                         :accessor %related-items-update-item-to-remove
                         :initform common-lisp:nil)
                        (item-to-add :initarg :|itemToAdd| :type
                         (common-lisp:or related-item common-lisp:null)
                         :accessor %related-items-update-item-to-add :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'related-items-update 'make-related-items-update))
 (common-lisp:defun make-related-items-update
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key item-to-remove item-to-add)
   (common-lisp:apply #'common-lisp:make-instance 'related-items-update
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input related-items-update))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input related-items-update))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'item-to-add))
      (common-lisp:list
       (common-lisp:cons "itemToAdd"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'item-to-remove))
      (common-lisp:list
       (common-lisp:cons "itemToRemove"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input related-items-update))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass replication-set common-lisp:nil
                       ((status :initarg :|status| :type
                         (common-lisp:or replication-set-status
                                         common-lisp:null)
                         :accessor %replication-set-status :initform
                         (common-lisp:error ":status is required"))
                        (region-map :initarg :|regionMap| :type
                         (common-lisp:or region-info-map common-lisp:null)
                         :accessor %replication-set-region-map :initform
                         (common-lisp:error ":regionmap is required"))
                        (last-modified-time :initarg :|lastModifiedTime| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %replication-set-last-modified-time :initform
                         (common-lisp:error ":lastmodifiedtime is required"))
                        (last-modified-by :initarg :|lastModifiedBy| :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %replication-set-last-modified-by :initform
                         (common-lisp:error ":lastmodifiedby is required"))
                        (deletion-protected :initarg :|deletionProtected| :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         %replication-set-deletion-protected :initform
                         (common-lisp:error ":deletionprotected is required"))
                        (created-time :initarg :|createdTime| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %replication-set-created-time :initform
                         (common-lisp:error ":createdtime is required"))
                        (created-by :initarg :|createdBy| :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %replication-set-created-by :initform
                         (common-lisp:error ":createdby is required"))
                        (arn :initarg :|arn| :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %replication-set-arn :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'replication-set 'make-replication-set))
 (common-lisp:defun make-replication-set
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key status region-map last-modified-time
                     last-modified-by deletion-protected created-time
                     created-by arn)
   (common-lisp:apply #'common-lisp:make-instance 'replication-set
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input replication-set))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input replication-set))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-by))
      (common-lisp:list
       (common-lisp:cons "createdBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-time))
      (common-lisp:list
       (common-lisp:cons "createdTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deletion-protected))
      (common-lisp:list
       (common-lisp:cons "deletionProtected"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-by))
      (common-lisp:list
       (common-lisp:cons "lastModifiedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "lastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'region-map))
      (common-lisp:list
       (common-lisp:cons "regionMap"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input replication-set))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype replication-set-arn-list ()
   '(trivial-types:proper-list arn))
 (common-lisp:defun |make-replication-set-arn-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype replication-set-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (ssm-incidents-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       resource-not-found-exception-message)
      (resource-identifier :initarg :|resourceIdentifier| :initform
       common-lisp:nil :reader
       resource-not-found-exception-resource-identifier)
      (resource-type :initarg :|resourceType| :initform common-lisp:nil :reader
       resource-not-found-exception-resource-type)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message
                    'resource-not-found-exception-resource-identifier
                    'resource-not-found-exception-resource-type)))
(common-lisp:progn
 (common-lisp:defclass resource-policy common-lisp:nil
                       ((ram-resource-share-region :initarg
                         :|ramResourceShareRegion| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %resource-policy-ram-resource-share-region :initform
                         (common-lisp:error
                          ":ramresourceshareregion is required"))
                        (policy-id :initarg :|policyId| :type
                         (common-lisp:or policy-id common-lisp:null) :accessor
                         %resource-policy-policy-id :initform
                         (common-lisp:error ":policyid is required"))
                        (policy-document :initarg :|policyDocument| :type
                         (common-lisp:or policy common-lisp:null) :accessor
                         %resource-policy-policy-document :initform
                         (common-lisp:error ":policydocument is required"))))
 (common-lisp:export (common-lisp:list 'resource-policy 'make-resource-policy))
 (common-lisp:defun make-resource-policy
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key ram-resource-share-region policy-id
                     policy-document)
   (common-lisp:apply #'common-lisp:make-instance 'resource-policy
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input resource-policy))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input resource-policy))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy-document))
      (common-lisp:list
       (common-lisp:cons "policyDocument"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy-id))
      (common-lisp:list
       (common-lisp:cons "policyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ram-resource-share-region))
      (common-lisp:list
       (common-lisp:cons "ramResourceShareRegion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input resource-policy))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype resource-policy-list ()
   '(trivial-types:proper-list resource-policy))
 (common-lisp:defun |make-resource-policy-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource-policy))
   aws-sdk/generator/shape::members))
(common-lisp:deftype resource-type () 'common-lisp:string)
(common-lisp:deftype response-plan-display-name () 'common-lisp:string)
(common-lisp:deftype response-plan-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass response-plan-summary common-lisp:nil
                       ((name :initarg :|name| :type
                         (common-lisp:or response-plan-name common-lisp:null)
                         :accessor %response-plan-summary-name :initform
                         (common-lisp:error ":name is required"))
                        (display-name :initarg :|displayName| :type
                         (common-lisp:or response-plan-display-name
                                         common-lisp:null)
                         :accessor %response-plan-summary-display-name
                         :initform common-lisp:nil)
                        (arn :initarg :|arn| :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %response-plan-summary-arn :initform
                         (common-lisp:error ":arn is required"))))
 (common-lisp:export
  (common-lisp:list 'response-plan-summary 'make-response-plan-summary))
 (common-lisp:defun make-response-plan-summary
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key name display-name arn)
   (common-lisp:apply #'common-lisp:make-instance 'response-plan-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          response-plan-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          response-plan-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'display-name))
      (common-lisp:list
       (common-lisp:cons "displayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          response-plan-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype response-plan-summary-list ()
   '(trivial-types:proper-list response-plan-summary))
 (common-lisp:defun |make-response-plan-summary-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list response-plan-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype role-arn () 'common-lisp:string)
(common-lisp:deftype service-code () 'common-lisp:string)
(common-lisp:deftype service-principal () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition service-quota-exceeded-exception
     (ssm-incidents-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       service-quota-exceeded-exception-message)
      (quota-code :initarg :|quotaCode| :initform common-lisp:nil :reader
       service-quota-exceeded-exception-quota-code)
      (resource-identifier :initarg :|resourceIdentifier| :initform
       common-lisp:nil :reader
       service-quota-exceeded-exception-resource-identifier)
      (resource-type :initarg :|resourceType| :initform common-lisp:nil :reader
       service-quota-exceeded-exception-resource-type)
      (service-code :initarg :|serviceCode| :initform common-lisp:nil :reader
       service-quota-exceeded-exception-service-code)))
 (common-lisp:export
  (common-lisp:list 'service-quota-exceeded-exception
                    'service-quota-exceeded-exception-message
                    'service-quota-exceeded-exception-quota-code
                    'service-quota-exceeded-exception-resource-identifier
                    'service-quota-exceeded-exception-resource-type
                    'service-quota-exceeded-exception-service-code)))
(common-lisp:deftype sns-arn () 'common-lisp:string)
(common-lisp:deftype sort-order () 'common-lisp:string)
(common-lisp:deftype sse-kms-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass ssm-automation common-lisp:nil
                       ((target-account :initarg :|targetAccount| :type
                         (common-lisp:or ssm-target-account common-lisp:null)
                         :accessor %ssm-automation-target-account :initform
                         common-lisp:nil)
                        (role-arn :initarg :|roleArn| :type
                         (common-lisp:or role-arn common-lisp:null) :accessor
                         %ssm-automation-role-arn :initform
                         (common-lisp:error ":rolearn is required"))
                        (parameters :initarg :|parameters| :type
                         (common-lisp:or ssm-parameters common-lisp:null)
                         :accessor %ssm-automation-parameters :initform
                         common-lisp:nil)
                        (dynamic-parameters :initarg :|dynamicParameters| :type
                         (common-lisp:or dynamic-ssm-parameters
                                         common-lisp:null)
                         :accessor %ssm-automation-dynamic-parameters :initform
                         common-lisp:nil)
                        (document-version :initarg :|documentVersion| :type
                         (common-lisp:or ssm-automation-document-version-string
                                         common-lisp:null)
                         :accessor %ssm-automation-document-version :initform
                         common-lisp:nil)
                        (document-name :initarg :|documentName| :type
                         (common-lisp:or ssm-automation-document-name-string
                                         common-lisp:null)
                         :accessor %ssm-automation-document-name :initform
                         (common-lisp:error ":documentname is required"))))
 (common-lisp:export (common-lisp:list 'ssm-automation 'make-ssm-automation))
 (common-lisp:defun make-ssm-automation
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key target-account role-arn parameters
                     dynamic-parameters document-version document-name)
   (common-lisp:apply #'common-lisp:make-instance 'ssm-automation
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input ssm-automation))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input ssm-automation))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'document-name))
      (common-lisp:list
       (common-lisp:cons "documentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'document-version))
      (common-lisp:list
       (common-lisp:cons "documentVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dynamic-parameters))
      (common-lisp:list
       (common-lisp:cons "dynamicParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'parameters))
      (common-lisp:list
       (common-lisp:cons "parameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "roleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-account))
      (common-lisp:list
       (common-lisp:cons "targetAccount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input ssm-automation))
   common-lisp:nil))
(common-lisp:deftype ssm-automation-document-name-string () 'common-lisp:string)
(common-lisp:deftype ssm-automation-document-version-string ()
  'common-lisp:string)
(common-lisp:deftype ssm-contacts-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype ssm-parameter-values ()
   '(trivial-types:proper-list ssm-parameter-values-member-string))
 (common-lisp:defun |make-ssm-parameter-values|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            ssm-parameter-values-member-string))
   aws-sdk/generator/shape::members))
(common-lisp:deftype ssm-parameter-values-member-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype ssm-parameters () 'common-lisp:hash-table)
 (common-lisp:defun |make-ssm-parameters| (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype ssm-parameters-key-string () 'common-lisp:string)
(common-lisp:deftype ssm-target-account () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass start-incident-input common-lisp:nil
                       ((trigger-details :initarg :|triggerDetails| :type
                         (common-lisp:or trigger-details common-lisp:null)
                         :accessor %start-incident-input-trigger-details
                         :initform common-lisp:nil)
                        (title :initarg :|title| :type
                         (common-lisp:or incident-title common-lisp:null)
                         :accessor %start-incident-input-title :initform
                         common-lisp:nil)
                        (response-plan-arn :initarg :|responsePlanArn| :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %start-incident-input-response-plan-arn :initform
                         (common-lisp:error ":responseplanarn is required"))
                        (related-items :initarg :|relatedItems| :type
                         (common-lisp:or related-item-list common-lisp:null)
                         :accessor %start-incident-input-related-items
                         :initform common-lisp:nil)
                        (impact :initarg :|impact| :type
                         (common-lisp:or impact common-lisp:null) :accessor
                         %start-incident-input-impact :initform
                         common-lisp:nil)
                        (client-token :initarg :|clientToken| :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor %start-incident-input-client-token :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'start-incident-input 'make-start-incident-input))
 (common-lisp:defun make-start-incident-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key trigger-details title response-plan-arn
                     related-items impact client-token)
   (common-lisp:apply #'common-lisp:make-instance 'start-incident-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input start-incident-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input start-incident-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'impact))
      (common-lisp:list
       (common-lisp:cons "impact"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'related-items))
      (common-lisp:list
       (common-lisp:cons "relatedItems"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-plan-arn))
      (common-lisp:list
       (common-lisp:cons "responsePlanArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'title))
      (common-lisp:list
       (common-lisp:cons "title"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'trigger-details))
      (common-lisp:list
       (common-lisp:cons "triggerDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input start-incident-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-incident-output common-lisp:nil
                       ((incident-record-arn :initarg :|incidentRecordArn|
                         :type (common-lisp:or arn common-lisp:null) :accessor
                         %start-incident-output-incident-record-arn :initform
                         (common-lisp:error
                          ":incidentrecordarn is required"))))
 (common-lisp:export
  (common-lisp:list 'start-incident-output 'make-start-incident-output))
 (common-lisp:defun make-start-incident-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key incident-record-arn)
   (common-lisp:apply #'common-lisp:make-instance 'start-incident-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-incident-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-incident-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'incident-record-arn))
      (common-lisp:list
       (common-lisp:cons "incidentRecordArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-incident-output))
   common-lisp:nil))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype string-list ()
   '(trivial-types:proper-list string-list-member-string))
 (common-lisp:defun |make-string-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            string-list-member-string))
   aws-sdk/generator/shape::members))
(common-lisp:deftype string-list-member-string () 'common-lisp:string)
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun |make-tag-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-map () 'common-lisp:hash-table)
 (common-lisp:defun |make-tag-map| (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype tag-map-update () 'common-lisp:hash-table)
 (common-lisp:defun |make-tag-map-update| (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass tag-resource-request common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %tag-resource-request-tags :initform
                         (common-lisp:error ":tags is required"))
                        (resource-arn :initarg :|resourceArn| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %tag-resource-request-resource-arn :initform
                         (common-lisp:error ":resourcearn is required"))))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defun make-tag-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags resource-arn)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-resource-response common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defun make-tag-resource-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (ssm-incidents-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       throttling-exception-message)
      (quota-code :initarg :|quotaCode| :initform common-lisp:nil :reader
       throttling-exception-quota-code)
      (service-code :initarg :|serviceCode| :initform common-lisp:nil :reader
       throttling-exception-service-code)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message
                    'throttling-exception-quota-code
                    'throttling-exception-service-code)))
(common-lisp:progn
 (common-lisp:defclass timeline-event common-lisp:nil
                       ((incident-record-arn :initarg :|incidentRecordArn|
                         :type (common-lisp:or arn common-lisp:null) :accessor
                         %timeline-event-incident-record-arn :initform
                         (common-lisp:error ":incidentrecordarn is required"))
                        (event-updated-time :initarg :|eventUpdatedTime| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %timeline-event-event-updated-time :initform
                         (common-lisp:error ":eventupdatedtime is required"))
                        (event-type :initarg :|eventType| :type
                         (common-lisp:or timeline-event-type common-lisp:null)
                         :accessor %timeline-event-event-type :initform
                         (common-lisp:error ":eventtype is required"))
                        (event-time :initarg :|eventTime| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %timeline-event-event-time :initform
                         (common-lisp:error ":eventtime is required"))
                        (event-references :initarg :|eventReferences| :type
                         (common-lisp:or event-reference-list common-lisp:null)
                         :accessor %timeline-event-event-references :initform
                         common-lisp:nil)
                        (event-id :initarg :|eventId| :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         %timeline-event-event-id :initform
                         (common-lisp:error ":eventid is required"))
                        (event-data :initarg :|eventData| :type
                         (common-lisp:or event-data common-lisp:null) :accessor
                         %timeline-event-event-data :initform
                         (common-lisp:error ":eventdata is required"))))
 (common-lisp:export (common-lisp:list 'timeline-event 'make-timeline-event))
 (common-lisp:defun make-timeline-event
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key incident-record-arn event-updated-time
                     event-type event-time event-references event-id
                     event-data)
   (common-lisp:apply #'common-lisp:make-instance 'timeline-event
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input timeline-event))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input timeline-event))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-data))
      (common-lisp:list
       (common-lisp:cons "eventData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-id))
      (common-lisp:list
       (common-lisp:cons "eventId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-references))
      (common-lisp:list
       (common-lisp:cons "eventReferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-time))
      (common-lisp:list
       (common-lisp:cons "eventTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-type))
      (common-lisp:list
       (common-lisp:cons "eventType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-updated-time))
      (common-lisp:list
       (common-lisp:cons "eventUpdatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'incident-record-arn))
      (common-lisp:list
       (common-lisp:cons "incidentRecordArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input timeline-event))
   common-lisp:nil))
(common-lisp:deftype timeline-event-sort () 'common-lisp:string)
(common-lisp:deftype timeline-event-type () 'common-lisp:string)
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass trigger-details common-lisp:nil
                       ((trigger-arn :initarg :|triggerArn| :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %trigger-details-trigger-arn :initform
                         common-lisp:nil)
                        (timestamp :initarg common-lisp:string :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %trigger-details-timestamp :initform
                         (common-lisp:error ":string is required"))
                        (source :initarg :|source| :type
                         (common-lisp:or incident-source common-lisp:null)
                         :accessor %trigger-details-source :initform
                         (common-lisp:error ":source is required"))
                        (raw-data :initarg :|rawData| :type
                         (common-lisp:or raw-data common-lisp:null) :accessor
                         %trigger-details-raw-data :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'trigger-details 'make-trigger-details))
 (common-lisp:defun make-trigger-details
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key trigger-arn timestamp source raw-data)
   (common-lisp:apply #'common-lisp:make-instance 'trigger-details
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input trigger-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input trigger-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'raw-data))
      (common-lisp:list
       (common-lisp:cons "rawData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source))
      (common-lisp:list
       (common-lisp:cons "source"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timestamp))
      (common-lisp:list
       (common-lisp:cons "timestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'trigger-arn))
      (common-lisp:list
       (common-lisp:cons "triggerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input trigger-details))
   common-lisp:nil))
(common-lisp:deftype uuid () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass untag-resource-request common-lisp:nil
                       ((tag-keys :initarg :|tagKeys| :type
                         (common-lisp:or tag-key-list common-lisp:null)
                         :accessor %untag-resource-request-tag-keys :initform
                         (common-lisp:error ":tagkeys is required"))
                        (resource-arn :initarg :|resourceArn| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %untag-resource-request-resource-arn :initform
                         (common-lisp:error ":resourcearn is required"))))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defun make-untag-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tag-keys resource-arn)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass untag-resource-response common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defun make-untag-resource-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-deletion-protection-input common-lisp:nil
                       ((deletion-protected :initarg :|deletionProtected| :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         %update-deletion-protection-input-deletion-protected
                         :initform
                         (common-lisp:error ":deletionprotected is required"))
                        (client-token :initarg :|clientToken| :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor
                         %update-deletion-protection-input-client-token
                         :initform common-lisp:nil)
                        (arn :initarg :|arn| :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %update-deletion-protection-input-arn :initform
                         (common-lisp:error ":arn is required"))))
 (common-lisp:export
  (common-lisp:list 'update-deletion-protection-input
                    'make-update-deletion-protection-input))
 (common-lisp:defun make-update-deletion-protection-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key deletion-protected client-token arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-deletion-protection-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-deletion-protection-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-deletion-protection-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deletion-protected))
      (common-lisp:list
       (common-lisp:cons "deletionProtected"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-deletion-protection-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-deletion-protection-output common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'update-deletion-protection-output
                    'make-update-deletion-protection-output))
 (common-lisp:defun make-update-deletion-protection-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-deletion-protection-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-deletion-protection-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-deletion-protection-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-deletion-protection-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-incident-record-input common-lisp:nil
                       ((title :initarg :|title| :type
                         (common-lisp:or incident-title common-lisp:null)
                         :accessor %update-incident-record-input-title
                         :initform common-lisp:nil)
                        (summary :initarg :|summary| :type
                         (common-lisp:or incident-summary common-lisp:null)
                         :accessor %update-incident-record-input-summary
                         :initform common-lisp:nil)
                        (status :initarg :|status| :type
                         (common-lisp:or incident-record-status
                                         common-lisp:null)
                         :accessor %update-incident-record-input-status
                         :initform common-lisp:nil)
                        (notification-targets :initarg :|notificationTargets|
                         :type
                         (common-lisp:or notification-target-set
                                         common-lisp:null)
                         :accessor
                         %update-incident-record-input-notification-targets
                         :initform common-lisp:nil)
                        (impact :initarg :|impact| :type
                         (common-lisp:or impact common-lisp:null) :accessor
                         %update-incident-record-input-impact :initform
                         common-lisp:nil)
                        (client-token :initarg :|clientToken| :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor %update-incident-record-input-client-token
                         :initform common-lisp:nil)
                        (chat-channel :initarg :|chatChannel| :type
                         (common-lisp:or chat-channel common-lisp:null)
                         :accessor %update-incident-record-input-chat-channel
                         :initform common-lisp:nil)
                        (arn :initarg :|arn| :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %update-incident-record-input-arn :initform
                         (common-lisp:error ":arn is required"))))
 (common-lisp:export
  (common-lisp:list 'update-incident-record-input
                    'make-update-incident-record-input))
 (common-lisp:defun make-update-incident-record-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key title summary status notification-targets
                     impact client-token chat-channel arn)
   (common-lisp:apply #'common-lisp:make-instance 'update-incident-record-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-incident-record-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-incident-record-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chat-channel))
      (common-lisp:list
       (common-lisp:cons "chatChannel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'impact))
      (common-lisp:list
       (common-lisp:cons "impact"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'notification-targets))
      (common-lisp:list
       (common-lisp:cons "notificationTargets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'summary))
      (common-lisp:list
       (common-lisp:cons "summary"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'title))
      (common-lisp:list
       (common-lisp:cons "title"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-incident-record-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-incident-record-output common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'update-incident-record-output
                    'make-update-incident-record-output))
 (common-lisp:defun make-update-incident-record-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-incident-record-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-incident-record-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-incident-record-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-incident-record-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-related-items-input common-lisp:nil
                       ((related-items-update :initarg :|relatedItemsUpdate|
                         :type
                         (common-lisp:or related-items-update common-lisp:null)
                         :accessor
                         %update-related-items-input-related-items-update
                         :initform
                         (common-lisp:error ":relateditemsupdate is required"))
                        (incident-record-arn :initarg :|incidentRecordArn|
                         :type (common-lisp:or arn common-lisp:null) :accessor
                         %update-related-items-input-incident-record-arn
                         :initform
                         (common-lisp:error ":incidentrecordarn is required"))
                        (client-token :initarg :|clientToken| :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor %update-related-items-input-client-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-related-items-input
                    'make-update-related-items-input))
 (common-lisp:defun make-update-related-items-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key related-items-update incident-record-arn
                     client-token)
   (common-lisp:apply #'common-lisp:make-instance 'update-related-items-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-related-items-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-related-items-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'incident-record-arn))
      (common-lisp:list
       (common-lisp:cons "incidentRecordArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'related-items-update))
      (common-lisp:list
       (common-lisp:cons "relatedItemsUpdate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-related-items-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-related-items-output common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'update-related-items-output
                    'make-update-related-items-output))
 (common-lisp:defun make-update-related-items-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'update-related-items-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-related-items-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-related-items-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-related-items-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-replication-set-action common-lisp:nil
                       ((delete-region-action :initarg :|deleteRegionAction|
                         :type
                         (common-lisp:or delete-region-action common-lisp:null)
                         :accessor
                         %update-replication-set-action-delete-region-action
                         :initform common-lisp:nil)
                        (add-region-action :initarg :|addRegionAction| :type
                         (common-lisp:or add-region-action common-lisp:null)
                         :accessor
                         %update-replication-set-action-add-region-action
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-replication-set-action
                    'make-update-replication-set-action))
 (common-lisp:defun make-update-replication-set-action
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key delete-region-action add-region-action)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-replication-set-action
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-replication-set-action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-replication-set-action))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'add-region-action))
      (common-lisp:list
       (common-lisp:cons "addRegionAction"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'delete-region-action))
      (common-lisp:list
       (common-lisp:cons "deleteRegionAction"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-replication-set-action))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-replication-set-input common-lisp:nil
                       ((client-token :initarg :|clientToken| :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor %update-replication-set-input-client-token
                         :initform common-lisp:nil)
                        (arn :initarg :|arn| :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %update-replication-set-input-arn :initform
                         (common-lisp:error ":arn is required"))
                        (actions :initarg :|actions| :type
                         (common-lisp:or
                          update-replication-set-input-actions-list
                          common-lisp:null)
                         :accessor %update-replication-set-input-actions
                         :initform
                         (common-lisp:error ":actions is required"))))
 (common-lisp:export
  (common-lisp:list 'update-replication-set-input
                    'make-update-replication-set-input))
 (common-lisp:defun make-update-replication-set-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key client-token arn actions)
   (common-lisp:apply #'common-lisp:make-instance 'update-replication-set-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-replication-set-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-replication-set-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'actions))
      (common-lisp:list
       (common-lisp:cons "actions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-replication-set-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype update-replication-set-input-actions-list ()
   '(trivial-types:proper-list update-replication-set-action))
 (common-lisp:defun |make-update-replication-set-input-actions-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            update-replication-set-action))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass update-replication-set-output common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'update-replication-set-output
                    'make-update-replication-set-output))
 (common-lisp:defun make-update-replication-set-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-replication-set-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-replication-set-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-replication-set-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-replication-set-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-response-plan-input common-lisp:nil
                       ((integrations :initarg :|integrations| :type
                         (common-lisp:or integrations common-lisp:null)
                         :accessor %update-response-plan-input-integrations
                         :initform common-lisp:nil)
                        (incident-template-title :initarg
                         :|incidentTemplateTitle| :type
                         (common-lisp:or incident-title common-lisp:null)
                         :accessor
                         %update-response-plan-input-incident-template-title
                         :initform common-lisp:nil)
                        (incident-template-tags :initarg
                         :|incidentTemplateTags| :type
                         (common-lisp:or tag-map-update common-lisp:null)
                         :accessor
                         %update-response-plan-input-incident-template-tags
                         :initform common-lisp:nil)
                        (incident-template-summary :initarg
                         :|incidentTemplateSummary| :type
                         (common-lisp:or incident-summary common-lisp:null)
                         :accessor
                         %update-response-plan-input-incident-template-summary
                         :initform common-lisp:nil)
                        (incident-template-notification-targets :initarg
                         :|incidentTemplateNotificationTargets| :type
                         (common-lisp:or notification-target-set
                                         common-lisp:null)
                         :accessor
                         %update-response-plan-input-incident-template-notification-targets
                         :initform common-lisp:nil)
                        (incident-template-impact :initarg
                         :|incidentTemplateImpact| :type
                         (common-lisp:or impact common-lisp:null) :accessor
                         %update-response-plan-input-incident-template-impact
                         :initform common-lisp:nil)
                        (incident-template-dedupe-string :initarg
                         :|incidentTemplateDedupeString| :type
                         (common-lisp:or dedupe-string common-lisp:null)
                         :accessor
                         %update-response-plan-input-incident-template-dedupe-string
                         :initform common-lisp:nil)
                        (engagements :initarg :|engagements| :type
                         (common-lisp:or engagement-set common-lisp:null)
                         :accessor %update-response-plan-input-engagements
                         :initform common-lisp:nil)
                        (display-name :initarg :|displayName| :type
                         (common-lisp:or response-plan-display-name
                                         common-lisp:null)
                         :accessor %update-response-plan-input-display-name
                         :initform common-lisp:nil)
                        (client-token :initarg :|clientToken| :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor %update-response-plan-input-client-token
                         :initform common-lisp:nil)
                        (chat-channel :initarg :|chatChannel| :type
                         (common-lisp:or chat-channel common-lisp:null)
                         :accessor %update-response-plan-input-chat-channel
                         :initform common-lisp:nil)
                        (arn :initarg :|arn| :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         %update-response-plan-input-arn :initform
                         (common-lisp:error ":arn is required"))
                        (actions :initarg :|actions| :type
                         (common-lisp:or actions-list common-lisp:null)
                         :accessor %update-response-plan-input-actions
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-response-plan-input
                    'make-update-response-plan-input))
 (common-lisp:defun make-update-response-plan-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key integrations incident-template-title
                     incident-template-tags incident-template-summary
                     incident-template-notification-targets
                     incident-template-impact incident-template-dedupe-string
                     engagements display-name client-token chat-channel arn
                     actions)
   (common-lisp:apply #'common-lisp:make-instance 'update-response-plan-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-response-plan-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-response-plan-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'actions))
      (common-lisp:list
       (common-lisp:cons "actions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chat-channel))
      (common-lisp:list
       (common-lisp:cons "chatChannel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'display-name))
      (common-lisp:list
       (common-lisp:cons "displayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engagements))
      (common-lisp:list
       (common-lisp:cons "engagements"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'incident-template-dedupe-string))
      (common-lisp:list
       (common-lisp:cons "incidentTemplateDedupeString"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'incident-template-impact))
      (common-lisp:list
       (common-lisp:cons "incidentTemplateImpact"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'incident-template-notification-targets))
      (common-lisp:list
       (common-lisp:cons "incidentTemplateNotificationTargets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'incident-template-summary))
      (common-lisp:list
       (common-lisp:cons "incidentTemplateSummary"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'incident-template-tags))
      (common-lisp:list
       (common-lisp:cons "incidentTemplateTags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'incident-template-title))
      (common-lisp:list
       (common-lisp:cons "incidentTemplateTitle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integrations))
      (common-lisp:list
       (common-lisp:cons "integrations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-response-plan-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-response-plan-output common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'update-response-plan-output
                    'make-update-response-plan-output))
 (common-lisp:defun make-update-response-plan-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'update-response-plan-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-response-plan-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-response-plan-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-response-plan-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-timeline-event-input common-lisp:nil
                       ((incident-record-arn :initarg :|incidentRecordArn|
                         :type (common-lisp:or arn common-lisp:null) :accessor
                         %update-timeline-event-input-incident-record-arn
                         :initform
                         (common-lisp:error ":incidentrecordarn is required"))
                        (event-type :initarg :|eventType| :type
                         (common-lisp:or timeline-event-type common-lisp:null)
                         :accessor %update-timeline-event-input-event-type
                         :initform common-lisp:nil)
                        (event-time :initarg :|eventTime| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %update-timeline-event-input-event-time :initform
                         common-lisp:nil)
                        (event-references :initarg :|eventReferences| :type
                         (common-lisp:or event-reference-list common-lisp:null)
                         :accessor
                         %update-timeline-event-input-event-references
                         :initform common-lisp:nil)
                        (event-id :initarg :|eventId| :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         %update-timeline-event-input-event-id :initform
                         (common-lisp:error ":eventid is required"))
                        (event-data :initarg :|eventData| :type
                         (common-lisp:or event-data common-lisp:null) :accessor
                         %update-timeline-event-input-event-data :initform
                         common-lisp:nil)
                        (client-token :initarg :|clientToken| :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor %update-timeline-event-input-client-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-timeline-event-input
                    'make-update-timeline-event-input))
 (common-lisp:defun make-update-timeline-event-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key incident-record-arn event-type event-time
                     event-references event-id event-data client-token)
   (common-lisp:apply #'common-lisp:make-instance 'update-timeline-event-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-timeline-event-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-timeline-event-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-data))
      (common-lisp:list
       (common-lisp:cons "eventData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-id))
      (common-lisp:list
       (common-lisp:cons "eventId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-references))
      (common-lisp:list
       (common-lisp:cons "eventReferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-time))
      (common-lisp:list
       (common-lisp:cons "eventTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-type))
      (common-lisp:list
       (common-lisp:cons "eventType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'incident-record-arn))
      (common-lisp:list
       (common-lisp:cons "incidentRecordArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-timeline-event-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-timeline-event-output common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'update-timeline-event-output
                    'make-update-timeline-event-output))
 (common-lisp:defun make-update-timeline-event-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'update-timeline-event-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-timeline-event-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-timeline-event-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-timeline-event-output))
   common-lisp:nil))
(common-lisp:deftype url () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (ssm-incidents-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       validation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-message)))
(common-lisp:deftype variable-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun create-replication-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token regions tags)
   (common-lisp:declare (common-lisp:ignorable client-token regions tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-replication-set-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ssm-incidents-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/createReplicationSet"
                                                        "CreateReplicationSet"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-replication-set))
(common-lisp:progn
 (common-lisp:defun create-response-plan
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key actions chat-channel client-token
                     display-name engagements incident-template integrations
                     name tags)
   (common-lisp:declare
    (common-lisp:ignorable actions chat-channel client-token display-name
     engagements incident-template integrations name tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-response-plan-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ssm-incidents-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/createResponsePlan"
                                                        "CreateResponsePlan"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-response-plan))
(common-lisp:progn
 (common-lisp:defun create-timeline-event
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token event-data event-references
                     event-time event-type incident-record-arn)
   (common-lisp:declare
    (common-lisp:ignorable client-token event-data event-references event-time
     event-type incident-record-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-timeline-event-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ssm-incidents-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/createTimelineEvent"
                                                        "CreateTimelineEvent"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-timeline-event))
(common-lisp:progn
 (common-lisp:defun delete-incident-record
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-incident-record-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ssm-incidents-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/deleteIncidentRecord"
                                                        "DeleteIncidentRecord"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-incident-record))
(common-lisp:progn
 (common-lisp:defun delete-replication-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-replication-set-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ssm-incidents-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/deleteReplicationSet"
                                                        "DeleteReplicationSet"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-replication-set))
(common-lisp:progn
 (common-lisp:defun delete-resource-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key policy-id resource-arn)
   (common-lisp:declare (common-lisp:ignorable policy-id resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-resource-policy-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ssm-incidents-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/deleteResourcePolicy"
                                                        "DeleteResourcePolicy"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-resource-policy))
(common-lisp:progn
 (common-lisp:defun delete-response-plan
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-response-plan-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ssm-incidents-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/deleteResponsePlan"
                                                        "DeleteResponsePlan"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-response-plan))
(common-lisp:progn
 (common-lisp:defun delete-timeline-event
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key event-id incident-record-arn)
   (common-lisp:declare (common-lisp:ignorable event-id incident-record-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-timeline-event-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ssm-incidents-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/deleteTimelineEvent"
                                                        "DeleteTimelineEvent"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-timeline-event))
(common-lisp:progn
 (common-lisp:defun get-incident-record
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-incident-record-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ssm-incidents-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/getIncidentRecord"
                                                        "GetIncidentRecord"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-incident-record))
(common-lisp:progn
 (common-lisp:defun get-replication-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-replication-set-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ssm-incidents-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/getReplicationSet"
                                                        "GetReplicationSet"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-replication-set))
(common-lisp:progn
 (common-lisp:defun get-resource-policies
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token resource-arn)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-resource-policies-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ssm-incidents-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/getResourcePolicies"
                                                        "GetResourcePolicies"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-resource-policies))
(common-lisp:progn
 (common-lisp:defun get-response-plan
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-response-plan-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ssm-incidents-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/getResponsePlan"
                                                        "GetResponsePlan"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-response-plan))
(common-lisp:progn
 (common-lisp:defun get-timeline-event
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key event-id incident-record-arn)
   (common-lisp:declare (common-lisp:ignorable event-id incident-record-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-timeline-event-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ssm-incidents-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/getTimelineEvent"
                                                        "GetTimelineEvent"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-timeline-event))
(common-lisp:progn
 (common-lisp:defun list-incident-records
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filters max-results next-token)
   (common-lisp:declare (common-lisp:ignorable filters max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-incident-records-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ssm-incidents-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/listIncidentRecords"
                                                        "ListIncidentRecords"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-incident-records))
(common-lisp:progn
 (common-lisp:defun list-related-items
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key incident-record-arn max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable incident-record-arn max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-related-items-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ssm-incidents-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/listRelatedItems"
                                                        "ListRelatedItems"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-related-items))
(common-lisp:progn
 (common-lisp:defun list-replication-sets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-replication-sets-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ssm-incidents-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/listReplicationSets"
                                                        "ListReplicationSets"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-replication-sets))
(common-lisp:progn
 (common-lisp:defun list-response-plans
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-response-plans-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ssm-incidents-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/listResponsePlans"
                                                        "ListResponsePlans"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-response-plans))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ssm-incidents-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "ListTagsForResource"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun list-timeline-events
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filters incident-record-arn max-results
                     next-token sort-by sort-order)
   (common-lisp:declare
    (common-lisp:ignorable filters incident-record-arn max-results next-token
     sort-by sort-order))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-timeline-events-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ssm-incidents-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/listTimelineEvents"
                                                        "ListTimelineEvents"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-timeline-events))
(common-lisp:progn
 (common-lisp:defun put-resource-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key policy resource-arn)
   (common-lisp:declare (common-lisp:ignorable policy resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-resource-policy-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ssm-incidents-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/putResourcePolicy"
                                                        "PutResourcePolicy"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-resource-policy))
(common-lisp:progn
 (common-lisp:defun start-incident
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token impact related-items
                     response-plan-arn title trigger-details)
   (common-lisp:declare
    (common-lisp:ignorable client-token impact related-items response-plan-arn
     title trigger-details))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-incident-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ssm-incidents-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/startIncident"
                                                        "StartIncident"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-incident))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ssm-incidents-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "TagResource"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ssm-incidents-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "UntagResource"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-deletion-protection
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn client-token deletion-protected)
   (common-lisp:declare
    (common-lisp:ignorable arn client-token deletion-protected))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-deletion-protection-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ssm-incidents-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/updateDeletionProtection"
                                                        "UpdateDeletionProtection"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-deletion-protection))
(common-lisp:progn
 (common-lisp:defun update-incident-record
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn chat-channel client-token impact
                     notification-targets status summary title)
   (common-lisp:declare
    (common-lisp:ignorable arn chat-channel client-token impact
     notification-targets status summary title))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-incident-record-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ssm-incidents-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/updateIncidentRecord"
                                                        "UpdateIncidentRecord"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-incident-record))
(common-lisp:progn
 (common-lisp:defun update-related-items
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token incident-record-arn
                     related-items-update)
   (common-lisp:declare
    (common-lisp:ignorable client-token incident-record-arn
     related-items-update))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-related-items-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ssm-incidents-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/updateRelatedItems"
                                                        "UpdateRelatedItems"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-related-items))
(common-lisp:progn
 (common-lisp:defun update-replication-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key actions arn client-token)
   (common-lisp:declare (common-lisp:ignorable actions arn client-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-replication-set-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ssm-incidents-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/updateReplicationSet"
                                                        "UpdateReplicationSet"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-replication-set))
(common-lisp:progn
 (common-lisp:defun update-response-plan
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key actions arn chat-channel client-token
                     display-name engagements incident-template-dedupe-string
                     incident-template-impact
                     incident-template-notification-targets
                     incident-template-summary incident-template-tags
                     incident-template-title integrations)
   (common-lisp:declare
    (common-lisp:ignorable actions arn chat-channel client-token display-name
     engagements incident-template-dedupe-string incident-template-impact
     incident-template-notification-targets incident-template-summary
     incident-template-tags incident-template-title integrations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-response-plan-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ssm-incidents-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/updateResponsePlan"
                                                        "UpdateResponsePlan"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-response-plan))
(common-lisp:progn
 (common-lisp:defun update-timeline-event
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token event-data event-id
                     event-references event-time event-type
                     incident-record-arn)
   (common-lisp:declare
    (common-lisp:ignorable client-token event-data event-id event-references
     event-time event-type incident-record-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-timeline-event-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ssm-incidents-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/updateTimelineEvent"
                                                        "UpdateTimelineEvent"
                                                        "2018-05-10"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-timeline-event))
