;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/iot-jobs-data/api
  (:use)
  (:nicknames #:aws/iot-jobs-data)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/iot-jobs-data/api)
(common-lisp:progn
 (common-lisp:defclass iot-jobs-data-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "iot-jobs-data" :protocol
                        :rest-json))
 (common-lisp:export 'iot-jobs-data-request))
(common-lisp:progn
 (common-lisp:define-condition iot-jobs-data-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'iot-jobs-data-error))
(common-lisp:defvar *error-map*
  '(("CertificateValidationException" . certificate-validation-exception)
    ("InvalidRequestException" . invalid-request-exception)
    ("InvalidStateTransitionException" . invalid-state-transition-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceUnavailableException" . service-unavailable-exception)
    ("TerminalStateException" . terminal-state-exception)
    ("ThrottlingException" . throttling-exception)))
(common-lisp:deftype approximate-seconds-before-timed-out ()
  'common-lisp:integer)
(common-lisp:deftype binary-blob ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:progn
 (common-lisp:define-condition certificate-validation-exception
     (iot-jobs-data-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       certificate-validation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'certificate-validation-exception
                    'certificate-validation-exception-message)))
(common-lisp:deftype describe-job-execution-job-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass describe-job-execution-request common-lisp:nil
                       ((execution-number :initarg :|executionNumber| :type
                         (common-lisp:or execution-number common-lisp:null)
                         :accessor
                         %describe-job-execution-request-execution-number
                         :initform common-lisp:nil)
                        (include-job-document :initarg :|includeJobDocument|
                         :type
                         (common-lisp:or include-job-document common-lisp:null)
                         :accessor
                         %describe-job-execution-request-include-job-document
                         :initform common-lisp:nil)
                        (thing-name :initarg :|thingName| :type
                         (common-lisp:or thing-name common-lisp:null) :accessor
                         %describe-job-execution-request-thing-name :initform
                         (common-lisp:error ":thingname is required"))
                        (job-id :initarg :|jobId| :type
                         (common-lisp:or describe-job-execution-job-id
                                         common-lisp:null)
                         :accessor %describe-job-execution-request-job-id
                         :initform (common-lisp:error ":jobid is required"))))
 (common-lisp:export
  (common-lisp:list 'describe-job-execution-request
                    'make-describe-job-execution-request))
 (common-lisp:defun make-describe-job-execution-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key execution-number include-job-document
                     thing-name job-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-job-execution-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-job-execution-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-job-execution-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-job-execution-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-job-execution-response common-lisp:nil
                       ((execution :initarg :|execution| :type
                         (common-lisp:or job-execution common-lisp:null)
                         :accessor %describe-job-execution-response-execution
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'describe-job-execution-response
                    'make-describe-job-execution-response))
 (common-lisp:defun make-describe-job-execution-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key execution)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-job-execution-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-job-execution-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-job-execution-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'execution))
      (common-lisp:list
       (common-lisp:cons "execution"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-job-execution-response))
   common-lisp:nil))
(common-lisp:deftype details-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype details-map () 'common-lisp:hash-table)
 (common-lisp:defun |make-details-map| (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype details-value () 'common-lisp:string)
(common-lisp:deftype execution-number () 'common-lisp:integer)
(common-lisp:deftype expected-version () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass get-pending-job-executions-request common-lisp:nil
                       ((thing-name :initarg :|thingName| :type
                         (common-lisp:or thing-name common-lisp:null) :accessor
                         %get-pending-job-executions-request-thing-name
                         :initform
                         (common-lisp:error ":thingname is required"))))
 (common-lisp:export
  (common-lisp:list 'get-pending-job-executions-request
                    'make-get-pending-job-executions-request))
 (common-lisp:defun make-get-pending-job-executions-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key thing-name)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-pending-job-executions-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-pending-job-executions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-pending-job-executions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-pending-job-executions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-pending-job-executions-response common-lisp:nil
                       ((queued-jobs :initarg :|queuedJobs| :type
                         (common-lisp:or job-execution-summary-list
                                         common-lisp:null)
                         :accessor
                         %get-pending-job-executions-response-queued-jobs
                         :initform common-lisp:nil)
                        (in-progress-jobs :initarg :|inProgressJobs| :type
                         (common-lisp:or job-execution-summary-list
                                         common-lisp:null)
                         :accessor
                         %get-pending-job-executions-response-in-progress-jobs
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-pending-job-executions-response
                    'make-get-pending-job-executions-response))
 (common-lisp:defun make-get-pending-job-executions-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key queued-jobs in-progress-jobs)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-pending-job-executions-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-pending-job-executions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-pending-job-executions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'in-progress-jobs))
      (common-lisp:list
       (common-lisp:cons "inProgressJobs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'queued-jobs))
      (common-lisp:list
       (common-lisp:cons "queuedJobs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-pending-job-executions-response))
   common-lisp:nil))
(common-lisp:deftype include-execution-state () 'common-lisp:boolean)
(common-lisp:deftype include-job-document () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:define-condition invalid-request-exception
     (iot-jobs-data-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       invalid-request-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-request-exception
                    'invalid-request-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-state-transition-exception
     (iot-jobs-data-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       invalid-state-transition-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-state-transition-exception
                    'invalid-state-transition-exception-message)))
(common-lisp:deftype job-document () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass job-execution common-lisp:nil
                       ((job-document :initarg :|jobDocument| :type
                         (common-lisp:or job-document common-lisp:null)
                         :accessor %job-execution-job-document :initform
                         common-lisp:nil)
                        (execution-number :initarg :|executionNumber| :type
                         (common-lisp:or execution-number common-lisp:null)
                         :accessor %job-execution-execution-number :initform
                         common-lisp:nil)
                        (version-number :initarg :|versionNumber| :type
                         (common-lisp:or version-number common-lisp:null)
                         :accessor %job-execution-version-number :initform
                         common-lisp:nil)
                        (approximate-seconds-before-timed-out :initarg
                         :|approximateSecondsBeforeTimedOut| :type
                         (common-lisp:or approximate-seconds-before-timed-out
                                         common-lisp:null)
                         :accessor
                         %job-execution-approximate-seconds-before-timed-out
                         :initform common-lisp:nil)
                        (last-updated-at :initarg :|lastUpdatedAt| :type
                         (common-lisp:or last-updated-at common-lisp:null)
                         :accessor %job-execution-last-updated-at :initform
                         common-lisp:nil)
                        (started-at :initarg :|startedAt| :type
                         (common-lisp:or started-at common-lisp:null) :accessor
                         %job-execution-started-at :initform common-lisp:nil)
                        (queued-at :initarg :|queuedAt| :type
                         (common-lisp:or queued-at common-lisp:null) :accessor
                         %job-execution-queued-at :initform common-lisp:nil)
                        (status-details :initarg :|statusDetails| :type
                         (common-lisp:or details-map common-lisp:null)
                         :accessor %job-execution-status-details :initform
                         common-lisp:nil)
                        (status :initarg :|status| :type
                         (common-lisp:or job-execution-status common-lisp:null)
                         :accessor %job-execution-status :initform
                         common-lisp:nil)
                        (thing-name :initarg :|thingName| :type
                         (common-lisp:or thing-name common-lisp:null) :accessor
                         %job-execution-thing-name :initform common-lisp:nil)
                        (job-id :initarg :|jobId| :type
                         (common-lisp:or job-id common-lisp:null) :accessor
                         %job-execution-job-id :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'job-execution 'make-job-execution))
 (common-lisp:defun make-job-execution
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key job-document execution-number
                     version-number approximate-seconds-before-timed-out
                     last-updated-at started-at queued-at status-details status
                     thing-name job-id)
   (common-lisp:apply #'common-lisp:make-instance 'job-execution
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input job-execution))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input job-execution))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "jobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'thing-name))
      (common-lisp:list
       (common-lisp:cons "thingName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-details))
      (common-lisp:list
       (common-lisp:cons "statusDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'queued-at))
      (common-lisp:list
       (common-lisp:cons "queuedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'started-at))
      (common-lisp:list
       (common-lisp:cons "startedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-at))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'approximate-seconds-before-timed-out))
      (common-lisp:list
       (common-lisp:cons "approximateSecondsBeforeTimedOut"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version-number))
      (common-lisp:list
       (common-lisp:cons "versionNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'execution-number))
      (common-lisp:list
       (common-lisp:cons "executionNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-document))
      (common-lisp:list
       (common-lisp:cons "jobDocument"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input job-execution))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass job-execution-state common-lisp:nil
                       ((version-number :initarg :|versionNumber| :type
                         (common-lisp:or version-number common-lisp:null)
                         :accessor %job-execution-state-version-number
                         :initform common-lisp:nil)
                        (status-details :initarg :|statusDetails| :type
                         (common-lisp:or details-map common-lisp:null)
                         :accessor %job-execution-state-status-details
                         :initform common-lisp:nil)
                        (status :initarg :|status| :type
                         (common-lisp:or job-execution-status common-lisp:null)
                         :accessor %job-execution-state-status :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'job-execution-state 'make-job-execution-state))
 (common-lisp:defun make-job-execution-state
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key version-number status-details status)
   (common-lisp:apply #'common-lisp:make-instance 'job-execution-state
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input job-execution-state))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input job-execution-state))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-details))
      (common-lisp:list
       (common-lisp:cons "statusDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version-number))
      (common-lisp:list
       (common-lisp:cons "versionNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input job-execution-state))
   common-lisp:nil))
(common-lisp:deftype job-execution-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass job-execution-summary common-lisp:nil
                       ((execution-number :initarg :|executionNumber| :type
                         (common-lisp:or execution-number common-lisp:null)
                         :accessor %job-execution-summary-execution-number
                         :initform common-lisp:nil)
                        (version-number :initarg :|versionNumber| :type
                         (common-lisp:or version-number common-lisp:null)
                         :accessor %job-execution-summary-version-number
                         :initform common-lisp:nil)
                        (last-updated-at :initarg :|lastUpdatedAt| :type
                         (common-lisp:or last-updated-at common-lisp:null)
                         :accessor %job-execution-summary-last-updated-at
                         :initform common-lisp:nil)
                        (started-at :initarg :|startedAt| :type
                         (common-lisp:or started-at common-lisp:null) :accessor
                         %job-execution-summary-started-at :initform
                         common-lisp:nil)
                        (queued-at :initarg :|queuedAt| :type
                         (common-lisp:or queued-at common-lisp:null) :accessor
                         %job-execution-summary-queued-at :initform
                         common-lisp:nil)
                        (job-id :initarg :|jobId| :type
                         (common-lisp:or job-id common-lisp:null) :accessor
                         %job-execution-summary-job-id :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'job-execution-summary 'make-job-execution-summary))
 (common-lisp:defun make-job-execution-summary
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key execution-number version-number
                     last-updated-at started-at queued-at job-id)
   (common-lisp:apply #'common-lisp:make-instance 'job-execution-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          job-execution-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          job-execution-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "jobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'queued-at))
      (common-lisp:list
       (common-lisp:cons "queuedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'started-at))
      (common-lisp:list
       (common-lisp:cons "startedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-at))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version-number))
      (common-lisp:list
       (common-lisp:cons "versionNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'execution-number))
      (common-lisp:list
       (common-lisp:cons "executionNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          job-execution-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype job-execution-summary-list ()
   '(trivial-types:proper-list job-execution-summary))
 (common-lisp:defun |make-job-execution-summary-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list job-execution-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype job-id () 'common-lisp:string)
(common-lisp:deftype last-updated-at () 'common-lisp:integer)
(common-lisp:deftype queued-at () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (iot-jobs-data-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition service-unavailable-exception
     (iot-jobs-data-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       service-unavailable-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-unavailable-exception
                    'service-unavailable-exception-message)))
(common-lisp:progn
 (common-lisp:defclass start-next-pending-job-execution-request common-lisp:nil
                       ((step-timeout-in-minutes :initarg
                         :|stepTimeoutInMinutes| :type
                         (common-lisp:or step-timeout-in-minutes
                                         common-lisp:null)
                         :accessor
                         %start-next-pending-job-execution-request-step-timeout-in-minutes
                         :initform common-lisp:nil)
                        (status-details :initarg :|statusDetails| :type
                         (common-lisp:or details-map common-lisp:null)
                         :accessor
                         %start-next-pending-job-execution-request-status-details
                         :initform common-lisp:nil)
                        (thing-name :initarg :|thingName| :type
                         (common-lisp:or thing-name common-lisp:null) :accessor
                         %start-next-pending-job-execution-request-thing-name
                         :initform
                         (common-lisp:error ":thingname is required"))))
 (common-lisp:export
  (common-lisp:list 'start-next-pending-job-execution-request
                    'make-start-next-pending-job-execution-request))
 (common-lisp:defun make-start-next-pending-job-execution-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key step-timeout-in-minutes status-details
                     thing-name)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-next-pending-job-execution-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-next-pending-job-execution-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-next-pending-job-execution-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-details))
      (common-lisp:list
       (common-lisp:cons "statusDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'step-timeout-in-minutes))
      (common-lisp:list
       (common-lisp:cons "stepTimeoutInMinutes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-next-pending-job-execution-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-next-pending-job-execution-response
                       common-lisp:nil
                       ((execution :initarg :|execution| :type
                         (common-lisp:or job-execution common-lisp:null)
                         :accessor
                         %start-next-pending-job-execution-response-execution
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'start-next-pending-job-execution-response
                    'make-start-next-pending-job-execution-response))
 (common-lisp:defun make-start-next-pending-job-execution-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key execution)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-next-pending-job-execution-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-next-pending-job-execution-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-next-pending-job-execution-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'execution))
      (common-lisp:list
       (common-lisp:cons "execution"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-next-pending-job-execution-response))
   common-lisp:nil))
(common-lisp:deftype started-at () 'common-lisp:integer)
(common-lisp:deftype step-timeout-in-minutes () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition terminal-state-exception
     (iot-jobs-data-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       terminal-state-exception-message)))
 (common-lisp:export
  (common-lisp:list 'terminal-state-exception
                    'terminal-state-exception-message)))
(common-lisp:deftype thing-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (iot-jobs-data-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       throttling-exception-message)
      (payload :initarg :|payload| :initform common-lisp:nil :reader
       throttling-exception-payload)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message
                    'throttling-exception-payload)))
(common-lisp:progn
 (common-lisp:defclass update-job-execution-request common-lisp:nil
                       ((execution-number :initarg :|executionNumber| :type
                         (common-lisp:or execution-number common-lisp:null)
                         :accessor
                         %update-job-execution-request-execution-number
                         :initform common-lisp:nil)
                        (include-job-document :initarg :|includeJobDocument|
                         :type
                         (common-lisp:or include-job-document common-lisp:null)
                         :accessor
                         %update-job-execution-request-include-job-document
                         :initform common-lisp:nil)
                        (include-job-execution-state :initarg
                         :|includeJobExecutionState| :type
                         (common-lisp:or include-execution-state
                                         common-lisp:null)
                         :accessor
                         %update-job-execution-request-include-job-execution-state
                         :initform common-lisp:nil)
                        (expected-version :initarg :|expectedVersion| :type
                         (common-lisp:or expected-version common-lisp:null)
                         :accessor
                         %update-job-execution-request-expected-version
                         :initform common-lisp:nil)
                        (step-timeout-in-minutes :initarg
                         :|stepTimeoutInMinutes| :type
                         (common-lisp:or step-timeout-in-minutes
                                         common-lisp:null)
                         :accessor
                         %update-job-execution-request-step-timeout-in-minutes
                         :initform common-lisp:nil)
                        (status-details :initarg :|statusDetails| :type
                         (common-lisp:or details-map common-lisp:null)
                         :accessor %update-job-execution-request-status-details
                         :initform common-lisp:nil)
                        (status :initarg :|status| :type
                         (common-lisp:or job-execution-status common-lisp:null)
                         :accessor %update-job-execution-request-status
                         :initform (common-lisp:error ":status is required"))
                        (thing-name :initarg :|thingName| :type
                         (common-lisp:or thing-name common-lisp:null) :accessor
                         %update-job-execution-request-thing-name :initform
                         (common-lisp:error ":thingname is required"))
                        (job-id :initarg :|jobId| :type
                         (common-lisp:or job-id common-lisp:null) :accessor
                         %update-job-execution-request-job-id :initform
                         (common-lisp:error ":jobid is required"))))
 (common-lisp:export
  (common-lisp:list 'update-job-execution-request
                    'make-update-job-execution-request))
 (common-lisp:defun make-update-job-execution-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key execution-number include-job-document
                     include-job-execution-state expected-version
                     step-timeout-in-minutes status-details status thing-name
                     job-id)
   (common-lisp:apply #'common-lisp:make-instance 'update-job-execution-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-job-execution-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-job-execution-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-details))
      (common-lisp:list
       (common-lisp:cons "statusDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'step-timeout-in-minutes))
      (common-lisp:list
       (common-lisp:cons "stepTimeoutInMinutes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expected-version))
      (common-lisp:list
       (common-lisp:cons "expectedVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'include-job-execution-state))
      (common-lisp:list
       (common-lisp:cons "includeJobExecutionState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'include-job-document))
      (common-lisp:list
       (common-lisp:cons "includeJobDocument"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'execution-number))
      (common-lisp:list
       (common-lisp:cons "executionNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-job-execution-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-job-execution-response common-lisp:nil
                       ((job-document :initarg :|jobDocument| :type
                         (common-lisp:or job-document common-lisp:null)
                         :accessor %update-job-execution-response-job-document
                         :initform common-lisp:nil)
                        (execution-state :initarg :|executionState| :type
                         (common-lisp:or job-execution-state common-lisp:null)
                         :accessor
                         %update-job-execution-response-execution-state
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-job-execution-response
                    'make-update-job-execution-response))
 (common-lisp:defun make-update-job-execution-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key job-document execution-state)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-job-execution-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-job-execution-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-job-execution-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'execution-state))
      (common-lisp:list
       (common-lisp:cons "executionState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-document))
      (common-lisp:list
       (common-lisp:cons "jobDocument"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-job-execution-response))
   common-lisp:nil))
(common-lisp:deftype version-number () 'common-lisp:integer)
(common-lisp:deftype |errorMessage| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun describe-job-execution
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id thing-name include-job-document
                     execution-number)
   (common-lisp:declare
    (common-lisp:ignorable job-id thing-name include-job-document
     execution-number))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-job-execution-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-jobs-data-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/things/~A/jobs/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'thing-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'job-id))))
                                                        "DescribeJobExecution"
                                                        "2017-09-29"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-job-execution))
(common-lisp:progn
 (common-lisp:defun get-pending-job-executions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key thing-name)
   (common-lisp:declare (common-lisp:ignorable thing-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-pending-job-executions-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-jobs-data-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/things/~A/jobs"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'thing-name))))
                                                        "GetPendingJobExecutions"
                                                        "2017-09-29"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-pending-job-executions))
(common-lisp:progn
 (common-lisp:defun start-next-pending-job-execution
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key thing-name status-details
                     step-timeout-in-minutes)
   (common-lisp:declare
    (common-lisp:ignorable thing-name status-details step-timeout-in-minutes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-next-pending-job-execution-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-jobs-data-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/things/~A/jobs/$next"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'thing-name))))
                                                        "StartNextPendingJobExecution"
                                                        "2017-09-29"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-next-pending-job-execution))
(common-lisp:progn
 (common-lisp:defun update-job-execution
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id thing-name status status-details
                     step-timeout-in-minutes expected-version
                     include-job-execution-state include-job-document
                     execution-number)
   (common-lisp:declare
    (common-lisp:ignorable job-id thing-name status status-details
     step-timeout-in-minutes expected-version include-job-execution-state
     include-job-document execution-number))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-job-execution-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-jobs-data-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/things/~A/jobs/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'thing-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'job-id))))
                                                        "UpdateJobExecution"
                                                        "2017-09-29"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-job-execution))
