;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/lookoutmetrics/api
  (:use)
  (:nicknames #:aws/lookoutmetrics)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/lookoutmetrics/api)
(common-lisp:progn
 (common-lisp:defclass lookoutmetrics-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "lookoutmetrics"))
 (common-lisp:export 'lookoutmetrics-request))
(common-lisp:progn
 (common-lisp:define-condition lookoutmetrics-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'lookoutmetrics-error))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("ConflictException" . conflict-exception)
    ("InternalServerException" . internal-server-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceQuotaExceededException" . service-quota-exceeded-exception)
    ("TooManyRequestsException" . too-many-requests-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (lookoutmetrics-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       access-denied-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (action (:copier common-lisp:nil) (:conc-name "struct-shape-action-"))
   (snsconfiguration common-lisp:nil :type
    (common-lisp:or snsconfiguration common-lisp:null))
   (lambda-configuration common-lisp:nil :type
    (common-lisp:or lambda-configuration common-lisp:null)))
 (common-lisp:export (common-lisp:list 'action 'make-action))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input action))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snsconfiguration))
      (common-lisp:list
       (common-lisp:cons "SNSConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'lambda-configuration))
      (common-lisp:list
       (common-lisp:cons "LambdaConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input action))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (activate-anomaly-detector-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-activate-anomaly-detector-request-"))
   (anomaly-detector-arn
    (common-lisp:error ":anomaly-detector-arn is required") :type
    (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'activate-anomaly-detector-request
                    'make-activate-anomaly-detector-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          activate-anomaly-detector-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          activate-anomaly-detector-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-detector-arn))
      (common-lisp:list
       (common-lisp:cons "AnomalyDetectorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          activate-anomaly-detector-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (activate-anomaly-detector-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-activate-anomaly-detector-response-")))
 (common-lisp:export
  (common-lisp:list 'activate-anomaly-detector-response
                    'make-activate-anomaly-detector-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          activate-anomaly-detector-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          activate-anomaly-detector-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          activate-anomaly-detector-response))
   common-lisp:nil))
(common-lisp:deftype aggregation-function () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (alert (:copier common-lisp:nil) (:conc-name "struct-shape-alert-"))
   (action common-lisp:nil :type (common-lisp:or action common-lisp:null))
   (alert-description common-lisp:nil :type
    (common-lisp:or alert-description common-lisp:null))
   (alert-arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (anomaly-detector-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (alert-name common-lisp:nil :type
    (common-lisp:or alert-name common-lisp:null))
   (alert-sensitivity-threshold common-lisp:nil :type
    (common-lisp:or sensitivity-threshold common-lisp:null))
   (alert-type common-lisp:nil :type
    (common-lisp:or alert-type common-lisp:null))
   (alert-status common-lisp:nil :type
    (common-lisp:or alert-status common-lisp:null))
   (last-modification-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (alert-filters common-lisp:nil :type
    (common-lisp:or alert-filters common-lisp:null)))
 (common-lisp:export (common-lisp:list 'alert 'make-alert))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input alert))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input alert))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action))
      (common-lisp:list
       (common-lisp:cons "Action"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alert-description))
      (common-lisp:list
       (common-lisp:cons "AlertDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alert-arn))
      (common-lisp:list
       (common-lisp:cons "AlertArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-detector-arn))
      (common-lisp:list
       (common-lisp:cons "AnomalyDetectorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alert-name))
      (common-lisp:list
       (common-lisp:cons "AlertName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'alert-sensitivity-threshold))
      (common-lisp:list
       (common-lisp:cons "AlertSensitivityThreshold"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alert-type))
      (common-lisp:list
       (common-lisp:cons "AlertType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alert-status))
      (common-lisp:list
       (common-lisp:cons "AlertStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-modification-time))
      (common-lisp:list
       (common-lisp:cons "LastModificationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alert-filters))
      (common-lisp:list
       (common-lisp:cons "AlertFilters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input alert))
   common-lisp:nil))
(common-lisp:deftype alert-description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (alert-filters (:copier common-lisp:nil)
      (:conc-name "struct-shape-alert-filters-"))
   (metric-list common-lisp:nil :type
    (common-lisp:or metric-name-list common-lisp:null))
   (dimension-filter-list common-lisp:nil :type
    (common-lisp:or dimension-filter-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'alert-filters 'make-alert-filters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input alert-filters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input alert-filters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-list))
      (common-lisp:list
       (common-lisp:cons "MetricList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dimension-filter-list))
      (common-lisp:list
       (common-lisp:cons "DimensionFilterList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input alert-filters))
   common-lisp:nil))
(common-lisp:deftype alert-name () 'common-lisp:string)
(common-lisp:deftype alert-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (alert-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-alert-summary-"))
   (alert-arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (anomaly-detector-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (alert-name common-lisp:nil :type
    (common-lisp:or alert-name common-lisp:null))
   (alert-sensitivity-threshold common-lisp:nil :type
    (common-lisp:or sensitivity-threshold common-lisp:null))
   (alert-type common-lisp:nil :type
    (common-lisp:or alert-type common-lisp:null))
   (alert-status common-lisp:nil :type
    (common-lisp:or alert-status common-lisp:null))
   (last-modification-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-map common-lisp:null)))
 (common-lisp:export (common-lisp:list 'alert-summary 'make-alert-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input alert-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input alert-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alert-arn))
      (common-lisp:list
       (common-lisp:cons "AlertArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-detector-arn))
      (common-lisp:list
       (common-lisp:cons "AnomalyDetectorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alert-name))
      (common-lisp:list
       (common-lisp:cons "AlertName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'alert-sensitivity-threshold))
      (common-lisp:list
       (common-lisp:cons "AlertSensitivityThreshold"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alert-type))
      (common-lisp:list
       (common-lisp:cons "AlertType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alert-status))
      (common-lisp:list
       (common-lisp:cons "AlertStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-modification-time))
      (common-lisp:list
       (common-lisp:cons "LastModificationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input alert-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype alert-summary-list ()
   '(trivial-types:proper-list alert-summary))
 (common-lisp:defun |make-alert-summary-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list alert-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype alert-type () 'common-lisp:string)
(common-lisp:deftype anomaly-detection-task-status () 'common-lisp:string)
(common-lisp:deftype anomaly-detection-task-status-message ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (anomaly-detector-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-anomaly-detector-config-"))
   (anomaly-detector-frequency common-lisp:nil :type
    (common-lisp:or frequency common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'anomaly-detector-config 'make-anomaly-detector-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          anomaly-detector-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          anomaly-detector-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-detector-frequency))
      (common-lisp:list
       (common-lisp:cons "AnomalyDetectorFrequency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          anomaly-detector-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (anomaly-detector-config-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-anomaly-detector-config-summary-"))
   (anomaly-detector-frequency common-lisp:nil :type
    (common-lisp:or frequency common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'anomaly-detector-config-summary
                    'make-anomaly-detector-config-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          anomaly-detector-config-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          anomaly-detector-config-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-detector-frequency))
      (common-lisp:list
       (common-lisp:cons "AnomalyDetectorFrequency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          anomaly-detector-config-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (anomaly-detector-data-quality-metric (:copier common-lisp:nil)
      (:conc-name "struct-shape-anomaly-detector-data-quality-metric-"))
   (start-timestamp common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (metric-set-data-quality-metric-list common-lisp:nil :type
    (common-lisp:or metric-set-data-quality-metric-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'anomaly-detector-data-quality-metric
                    'make-anomaly-detector-data-quality-metric))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          anomaly-detector-data-quality-metric))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          anomaly-detector-data-quality-metric))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-timestamp))
      (common-lisp:list
       (common-lisp:cons "StartTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'metric-set-data-quality-metric-list))
      (common-lisp:list
       (common-lisp:cons "MetricSetDataQualityMetricList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          anomaly-detector-data-quality-metric))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype anomaly-detector-data-quality-metric-list ()
   '(trivial-types:proper-list anomaly-detector-data-quality-metric))
 (common-lisp:defun |make-anomaly-detector-data-quality-metric-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            anomaly-detector-data-quality-metric))
   aws-sdk/generator/shape::members))
(common-lisp:deftype anomaly-detector-description () 'common-lisp:string)
(common-lisp:deftype anomaly-detector-failure-type () 'common-lisp:string)
(common-lisp:deftype anomaly-detector-name () 'common-lisp:string)
(common-lisp:deftype anomaly-detector-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (anomaly-detector-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-anomaly-detector-summary-"))
   (anomaly-detector-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (anomaly-detector-name common-lisp:nil :type
    (common-lisp:or anomaly-detector-name common-lisp:null))
   (anomaly-detector-description common-lisp:nil :type
    (common-lisp:or anomaly-detector-description common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (last-modification-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or anomaly-detector-status common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'anomaly-detector-summary 'make-anomaly-detector-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          anomaly-detector-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          anomaly-detector-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-detector-arn))
      (common-lisp:list
       (common-lisp:cons "AnomalyDetectorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-detector-name))
      (common-lisp:list
       (common-lisp:cons "AnomalyDetectorName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-detector-description))
      (common-lisp:list
       (common-lisp:cons "AnomalyDetectorDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-modification-time))
      (common-lisp:list
       (common-lisp:cons "LastModificationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          anomaly-detector-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype anomaly-detector-summary-list ()
   '(trivial-types:proper-list anomaly-detector-summary))
 (common-lisp:defun |make-anomaly-detector-summary-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            anomaly-detector-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (anomaly-group (:copier common-lisp:nil)
      (:conc-name "struct-shape-anomaly-group-"))
   (start-time common-lisp:nil :type
    (common-lisp:or timestamp-string common-lisp:null))
   (end-time common-lisp:nil :type
    (common-lisp:or timestamp-string common-lisp:null))
   (anomaly-group-id common-lisp:nil :type
    (common-lisp:or uuid common-lisp:null))
   (anomaly-group-score common-lisp:nil :type
    (common-lisp:or score common-lisp:null))
   (primary-metric-name common-lisp:nil :type
    (common-lisp:or metric-name common-lisp:null))
   (metric-level-impact-list common-lisp:nil :type
    (common-lisp:or metric-level-impact-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'anomaly-group 'make-anomaly-group))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input anomaly-group))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input anomaly-group))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'anomaly-group-id))
      (common-lisp:list
       (common-lisp:cons "AnomalyGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'anomaly-group-score))
      (common-lisp:list
       (common-lisp:cons "AnomalyGroupScore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'primary-metric-name))
      (common-lisp:list
       (common-lisp:cons "PrimaryMetricName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'metric-level-impact-list))
      (common-lisp:list
       (common-lisp:cons "MetricLevelImpactList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input anomaly-group))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (anomaly-group-statistics (:copier common-lisp:nil)
      (:conc-name "struct-shape-anomaly-group-statistics-"))
   (evaluation-start-date common-lisp:nil :type
    (common-lisp:or timestamp-string common-lisp:null))
   (total-count common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (itemized-metric-stats-list common-lisp:nil :type
    (common-lisp:or itemized-metric-stats-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'anomaly-group-statistics 'make-anomaly-group-statistics))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          anomaly-group-statistics))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          anomaly-group-statistics))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'evaluation-start-date))
      (common-lisp:list
       (common-lisp:cons "EvaluationStartDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'total-count))
      (common-lisp:list
       (common-lisp:cons "TotalCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'itemized-metric-stats-list))
      (common-lisp:list
       (common-lisp:cons "ItemizedMetricStatsList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          anomaly-group-statistics))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (anomaly-group-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-anomaly-group-summary-"))
   (start-time common-lisp:nil :type
    (common-lisp:or timestamp-string common-lisp:null))
   (end-time common-lisp:nil :type
    (common-lisp:or timestamp-string common-lisp:null))
   (anomaly-group-id common-lisp:nil :type
    (common-lisp:or uuid common-lisp:null))
   (anomaly-group-score common-lisp:nil :type
    (common-lisp:or score common-lisp:null))
   (primary-metric-name common-lisp:nil :type
    (common-lisp:or metric-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'anomaly-group-summary 'make-anomaly-group-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          anomaly-group-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          anomaly-group-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'anomaly-group-id))
      (common-lisp:list
       (common-lisp:cons "AnomalyGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'anomaly-group-score))
      (common-lisp:list
       (common-lisp:cons "AnomalyGroupScore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'primary-metric-name))
      (common-lisp:list
       (common-lisp:cons "PrimaryMetricName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          anomaly-group-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype anomaly-group-summary-list ()
   '(trivial-types:proper-list anomaly-group-summary))
 (common-lisp:defun |make-anomaly-group-summary-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list anomaly-group-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (anomaly-group-time-series (:copier common-lisp:nil)
      (:conc-name "struct-shape-anomaly-group-time-series-"))
   (anomaly-group-id (common-lisp:error ":anomaly-group-id is required") :type
    (common-lisp:or uuid common-lisp:null))
   (time-series-id common-lisp:nil :type
    (common-lisp:or time-series-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'anomaly-group-time-series
                    'make-anomaly-group-time-series))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          anomaly-group-time-series))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          anomaly-group-time-series))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'anomaly-group-id))
      (common-lisp:list
       (common-lisp:cons "AnomalyGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'time-series-id))
      (common-lisp:list
       (common-lisp:cons "TimeSeriesId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          anomaly-group-time-series))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (anomaly-group-time-series-feedback (:copier common-lisp:nil)
      (:conc-name "struct-shape-anomaly-group-time-series-feedback-"))
   (anomaly-group-id (common-lisp:error ":anomaly-group-id is required") :type
    (common-lisp:or uuid common-lisp:null))
   (time-series-id (common-lisp:error ":time-series-id is required") :type
    (common-lisp:or time-series-id common-lisp:null))
   (is-anomaly (common-lisp:error ":is-anomaly is required") :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'anomaly-group-time-series-feedback
                    'make-anomaly-group-time-series-feedback))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          anomaly-group-time-series-feedback))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          anomaly-group-time-series-feedback))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'anomaly-group-id))
      (common-lisp:list
       (common-lisp:cons "AnomalyGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'time-series-id))
      (common-lisp:list
       (common-lisp:cons "TimeSeriesId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-anomaly))
      (common-lisp:list
       (common-lisp:cons "IsAnomaly"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          anomaly-group-time-series-feedback))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (app-flow-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-app-flow-config-"))
   (role-arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (flow-name common-lisp:nil :type
    (common-lisp:or flow-name common-lisp:null)))
 (common-lisp:export (common-lisp:list 'app-flow-config 'make-app-flow-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input app-flow-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input app-flow-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flow-name))
      (common-lisp:list
       (common-lisp:cons "FlowName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input app-flow-config))
   common-lisp:nil))
(common-lisp:deftype arn () 'common-lisp:string)
(common-lisp:deftype athena-data-catalog () 'common-lisp:string)
(common-lisp:deftype athena-database-name () 'common-lisp:string)
(common-lisp:deftype athena-s3results-path () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (athena-source-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-athena-source-config-"))
   (role-arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (database-name common-lisp:nil :type
    (common-lisp:or athena-database-name common-lisp:null))
   (data-catalog common-lisp:nil :type
    (common-lisp:or athena-data-catalog common-lisp:null))
   (table-name common-lisp:nil :type
    (common-lisp:or athena-table-name common-lisp:null))
   (work-group-name common-lisp:nil :type
    (common-lisp:or athena-work-group-name common-lisp:null))
   (s3results-path common-lisp:nil :type
    (common-lisp:or athena-s3results-path common-lisp:null))
   (back-test-configuration common-lisp:nil :type
    (common-lisp:or back-test-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'athena-source-config 'make-athena-source-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input athena-source-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input athena-source-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'database-name))
      (common-lisp:list
       (common-lisp:cons "DatabaseName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-catalog))
      (common-lisp:list
       (common-lisp:cons "DataCatalog"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'table-name))
      (common-lisp:list
       (common-lisp:cons "TableName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'work-group-name))
      (common-lisp:list
       (common-lisp:cons "WorkGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3results-path))
      (common-lisp:list
       (common-lisp:cons "S3ResultsPath"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'back-test-configuration))
      (common-lisp:list
       (common-lisp:cons "BackTestConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input athena-source-config))
   common-lisp:nil))
(common-lisp:deftype athena-table-name () 'common-lisp:string)
(common-lisp:deftype athena-work-group-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (attribute-value (:copier common-lisp:nil)
      (:conc-name "struct-shape-attribute-value-"))
   (s common-lisp:nil :type
    (common-lisp:or string-attribute-value common-lisp:null))
   (n common-lisp:nil :type
    (common-lisp:or number-attribute-value common-lisp:null))
   (b common-lisp:nil :type
    (common-lisp:or binary-attribute-value common-lisp:null))
   (ss common-lisp:nil :type
    (common-lisp:or string-list-attribute-value common-lisp:null))
   (ns common-lisp:nil :type
    (common-lisp:or number-list-attribute-value common-lisp:null))
   (bs common-lisp:nil :type
    (common-lisp:or binary-list-attribute-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'attribute-value 'make-attribute-value))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input attribute-value))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input attribute-value))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's))
      (common-lisp:list
       (common-lisp:cons "S"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'n))
      (common-lisp:list
       (common-lisp:cons "N"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'b))
      (common-lisp:list
       (common-lisp:cons "B"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ss))
      (common-lisp:list
       (common-lisp:cons "SS"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ns))
      (common-lisp:list
       (common-lisp:cons "NS"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bs))
      (common-lisp:list
       (common-lisp:cons "BS"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input attribute-value))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (auto-detection-metric-source (:copier common-lisp:nil)
      (:conc-name "struct-shape-auto-detection-metric-source-"))
   (s3source-config common-lisp:nil :type
    (common-lisp:or auto-detection-s3source-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'auto-detection-metric-source
                    'make-auto-detection-metric-source))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          auto-detection-metric-source))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          auto-detection-metric-source))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3source-config))
      (common-lisp:list
       (common-lisp:cons "S3SourceConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          auto-detection-metric-source))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (auto-detection-s3source-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-auto-detection-s3source-config-"))
   (templated-path-list common-lisp:nil :type
    (common-lisp:or templated-path-list common-lisp:null))
   (historical-data-path-list common-lisp:nil :type
    (common-lisp:or historical-data-path-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'auto-detection-s3source-config
                    'make-auto-detection-s3source-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          auto-detection-s3source-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          auto-detection-s3source-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'templated-path-list))
      (common-lisp:list
       (common-lisp:cons "TemplatedPathList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'historical-data-path-list))
      (common-lisp:list
       (common-lisp:cons "HistoricalDataPathList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          auto-detection-s3source-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (back-test-anomaly-detector-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-back-test-anomaly-detector-request-"))
   (anomaly-detector-arn
    (common-lisp:error ":anomaly-detector-arn is required") :type
    (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'back-test-anomaly-detector-request
                    'make-back-test-anomaly-detector-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          back-test-anomaly-detector-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          back-test-anomaly-detector-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-detector-arn))
      (common-lisp:list
       (common-lisp:cons "AnomalyDetectorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          back-test-anomaly-detector-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (back-test-anomaly-detector-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-back-test-anomaly-detector-response-")))
 (common-lisp:export
  (common-lisp:list 'back-test-anomaly-detector-response
                    'make-back-test-anomaly-detector-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          back-test-anomaly-detector-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          back-test-anomaly-detector-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          back-test-anomaly-detector-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (back-test-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-back-test-configuration-"))
   (run-back-test-mode (common-lisp:error ":run-back-test-mode is required")
    :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'back-test-configuration 'make-back-test-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          back-test-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          back-test-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'run-back-test-mode))
      (common-lisp:list
       (common-lisp:cons "RunBackTestMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          back-test-configuration))
   common-lisp:nil))
(common-lisp:deftype binary-attribute-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype binary-list-attribute-value ()
   '(trivial-types:proper-list binary-attribute-value))
 (common-lisp:defun |make-binary-list-attribute-value|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list binary-attribute-value))
   aws-sdk/generator/shape::members))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:deftype csvfile-compression () 'common-lisp:string)
(common-lisp:deftype charset () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (cloud-watch-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-cloud-watch-config-"))
   (role-arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (back-test-configuration common-lisp:nil :type
    (common-lisp:or back-test-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cloud-watch-config 'make-cloud-watch-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input cloud-watch-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input cloud-watch-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'back-test-configuration))
      (common-lisp:list
       (common-lisp:cons "BackTestConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input cloud-watch-config))
   common-lisp:nil))
(common-lisp:deftype column-name () 'common-lisp:string)
(common-lisp:deftype confidence () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (lookoutmetrics-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)
      (resource-id :initarg :resource-id :initform common-lisp:nil :reader
       conflict-exception-resource-id)
      (resource-type :initarg :resource-type :initform common-lisp:nil :reader
       conflict-exception-resource-type)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message
                    'conflict-exception-resource-id
                    'conflict-exception-resource-type)))
(common-lisp:progn
 (common-lisp:defstruct
     (contribution-matrix (:copier common-lisp:nil)
      (:conc-name "struct-shape-contribution-matrix-"))
   (dimension-contribution-list common-lisp:nil :type
    (common-lisp:or dimension-contribution-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'contribution-matrix 'make-contribution-matrix))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input contribution-matrix))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input contribution-matrix))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dimension-contribution-list))
      (common-lisp:list
       (common-lisp:cons "DimensionContributionList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input contribution-matrix))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-alert-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-alert-request-"))
   (alert-name (common-lisp:error ":alert-name is required") :type
    (common-lisp:or alert-name common-lisp:null))
   (alert-sensitivity-threshold common-lisp:nil :type
    (common-lisp:or sensitivity-threshold common-lisp:null))
   (alert-description common-lisp:nil :type
    (common-lisp:or alert-description common-lisp:null))
   (anomaly-detector-arn
    (common-lisp:error ":anomaly-detector-arn is required") :type
    (common-lisp:or arn common-lisp:null))
   (action (common-lisp:error ":action is required") :type
    (common-lisp:or action common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-map common-lisp:null))
   (alert-filters common-lisp:nil :type
    (common-lisp:or alert-filters common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-alert-request 'make-create-alert-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-alert-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-alert-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alert-name))
      (common-lisp:list
       (common-lisp:cons "AlertName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'alert-sensitivity-threshold))
      (common-lisp:list
       (common-lisp:cons "AlertSensitivityThreshold"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alert-description))
      (common-lisp:list
       (common-lisp:cons "AlertDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-detector-arn))
      (common-lisp:list
       (common-lisp:cons "AnomalyDetectorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action))
      (common-lisp:list
       (common-lisp:cons "Action"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alert-filters))
      (common-lisp:list
       (common-lisp:cons "AlertFilters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-alert-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-alert-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-alert-response-"))
   (alert-arn common-lisp:nil :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-alert-response 'make-create-alert-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-alert-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-alert-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alert-arn))
      (common-lisp:list
       (common-lisp:cons "AlertArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-alert-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-anomaly-detector-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-anomaly-detector-request-"))
   (anomaly-detector-name
    (common-lisp:error ":anomaly-detector-name is required") :type
    (common-lisp:or anomaly-detector-name common-lisp:null))
   (anomaly-detector-description common-lisp:nil :type
    (common-lisp:or anomaly-detector-description common-lisp:null))
   (anomaly-detector-config
    (common-lisp:error ":anomaly-detector-config is required") :type
    (common-lisp:or anomaly-detector-config common-lisp:null))
   (kms-key-arn common-lisp:nil :type
    (common-lisp:or kms-key-arn common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-anomaly-detector-request
                    'make-create-anomaly-detector-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-anomaly-detector-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-anomaly-detector-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-detector-name))
      (common-lisp:list
       (common-lisp:cons "AnomalyDetectorName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-detector-description))
      (common-lisp:list
       (common-lisp:cons "AnomalyDetectorDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-detector-config))
      (common-lisp:list
       (common-lisp:cons "AnomalyDetectorConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key-arn))
      (common-lisp:list
       (common-lisp:cons "KmsKeyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-anomaly-detector-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-anomaly-detector-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-anomaly-detector-response-"))
   (anomaly-detector-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-anomaly-detector-response
                    'make-create-anomaly-detector-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-anomaly-detector-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-anomaly-detector-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-detector-arn))
      (common-lisp:list
       (common-lisp:cons "AnomalyDetectorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-anomaly-detector-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-metric-set-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-metric-set-request-"))
   (anomaly-detector-arn
    (common-lisp:error ":anomaly-detector-arn is required") :type
    (common-lisp:or arn common-lisp:null))
   (metric-set-name (common-lisp:error ":metric-set-name is required") :type
    (common-lisp:or metric-set-name common-lisp:null))
   (metric-set-description common-lisp:nil :type
    (common-lisp:or metric-set-description common-lisp:null))
   (metric-list (common-lisp:error ":metric-list is required") :type
    (common-lisp:or metric-list common-lisp:null))
   (offset common-lisp:nil :type (common-lisp:or offset common-lisp:null))
   (timestamp-column common-lisp:nil :type
    (common-lisp:or timestamp-column common-lisp:null))
   (dimension-list common-lisp:nil :type
    (common-lisp:or dimension-list common-lisp:null))
   (metric-set-frequency common-lisp:nil :type
    (common-lisp:or frequency common-lisp:null))
   (metric-source (common-lisp:error ":metric-source is required") :type
    (common-lisp:or metric-source common-lisp:null))
   (timezone common-lisp:nil :type (common-lisp:or timezone common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-map common-lisp:null))
   (dimension-filter-list common-lisp:nil :type
    (common-lisp:or metric-set-dimension-filter-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-metric-set-request
                    'make-create-metric-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-metric-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-metric-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-detector-arn))
      (common-lisp:list
       (common-lisp:cons "AnomalyDetectorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-set-name))
      (common-lisp:list
       (common-lisp:cons "MetricSetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'metric-set-description))
      (common-lisp:list
       (common-lisp:cons "MetricSetDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-list))
      (common-lisp:list
       (common-lisp:cons "MetricList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'offset))
      (common-lisp:list
       (common-lisp:cons "Offset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timestamp-column))
      (common-lisp:list
       (common-lisp:cons "TimestampColumn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dimension-list))
      (common-lisp:list
       (common-lisp:cons "DimensionList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'metric-set-frequency))
      (common-lisp:list
       (common-lisp:cons "MetricSetFrequency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-source))
      (common-lisp:list
       (common-lisp:cons "MetricSource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timezone))
      (common-lisp:list
       (common-lisp:cons "Timezone"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dimension-filter-list))
      (common-lisp:list
       (common-lisp:cons "DimensionFilterList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-metric-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-metric-set-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-metric-set-response-"))
   (metric-set-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-metric-set-response
                    'make-create-metric-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-metric-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-metric-set-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-set-arn))
      (common-lisp:list
       (common-lisp:cons "MetricSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-metric-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (csv-format-descriptor (:copier common-lisp:nil)
      (:conc-name "struct-shape-csv-format-descriptor-"))
   (file-compression common-lisp:nil :type
    (common-lisp:or csvfile-compression common-lisp:null))
   (charset common-lisp:nil :type (common-lisp:or charset common-lisp:null))
   (contains-header common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (delimiter common-lisp:nil :type
    (common-lisp:or delimiter common-lisp:null))
   (header-list common-lisp:nil :type
    (common-lisp:or header-list common-lisp:null))
   (quote-symbol common-lisp:nil :type
    (common-lisp:or quote-symbol common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'csv-format-descriptor 'make-csv-format-descriptor))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          csv-format-descriptor))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          csv-format-descriptor))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-compression))
      (common-lisp:list
       (common-lisp:cons "FileCompression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'charset))
      (common-lisp:list
       (common-lisp:cons "Charset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'contains-header))
      (common-lisp:list
       (common-lisp:cons "ContainsHeader"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'delimiter))
      (common-lisp:list
       (common-lisp:cons "Delimiter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'header-list))
      (common-lisp:list
       (common-lisp:cons "HeaderList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'quote-symbol))
      (common-lisp:list
       (common-lisp:cons "QuoteSymbol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          csv-format-descriptor))
   common-lisp:nil))
(common-lisp:deftype data-item () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (data-quality-metric (:copier common-lisp:nil)
      (:conc-name "struct-shape-data-quality-metric-"))
   (metric-type common-lisp:nil :type
    (common-lisp:or data-quality-metric-type common-lisp:null))
   (metric-description common-lisp:nil :type
    (common-lisp:or data-quality-metric-description common-lisp:null))
   (related-column-name common-lisp:nil :type
    (common-lisp:or related-column-name common-lisp:null))
   (metric-value common-lisp:nil :type
    (common-lisp:or double common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'data-quality-metric 'make-data-quality-metric))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input data-quality-metric))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input data-quality-metric))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-type))
      (common-lisp:list
       (common-lisp:cons "MetricType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-description))
      (common-lisp:list
       (common-lisp:cons "MetricDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'related-column-name))
      (common-lisp:list
       (common-lisp:cons "RelatedColumnName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-value))
      (common-lisp:list
       (common-lisp:cons "MetricValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input data-quality-metric))
   common-lisp:nil))
(common-lisp:deftype data-quality-metric-description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype data-quality-metric-list ()
   '(trivial-types:proper-list data-quality-metric))
 (common-lisp:defun |make-data-quality-metric-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list data-quality-metric))
   aws-sdk/generator/shape::members))
(common-lisp:deftype data-quality-metric-type () 'common-lisp:string)
(common-lisp:deftype database-host () 'common-lisp:string)
(common-lisp:deftype database-port () 'common-lisp:integer)
(common-lisp:deftype date-time-format () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (deactivate-anomaly-detector-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-deactivate-anomaly-detector-request-"))
   (anomaly-detector-arn
    (common-lisp:error ":anomaly-detector-arn is required") :type
    (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'deactivate-anomaly-detector-request
                    'make-deactivate-anomaly-detector-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          deactivate-anomaly-detector-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          deactivate-anomaly-detector-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-detector-arn))
      (common-lisp:list
       (common-lisp:cons "AnomalyDetectorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          deactivate-anomaly-detector-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (deactivate-anomaly-detector-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-deactivate-anomaly-detector-response-")))
 (common-lisp:export
  (common-lisp:list 'deactivate-anomaly-detector-response
                    'make-deactivate-anomaly-detector-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          deactivate-anomaly-detector-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          deactivate-anomaly-detector-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          deactivate-anomaly-detector-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-alert-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-alert-request-"))
   (alert-arn (common-lisp:error ":alert-arn is required") :type
    (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-alert-request 'make-delete-alert-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-alert-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-alert-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alert-arn))
      (common-lisp:list
       (common-lisp:cons "AlertArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-alert-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-alert-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-alert-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-alert-response 'make-delete-alert-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-alert-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-alert-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-alert-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-anomaly-detector-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-anomaly-detector-request-"))
   (anomaly-detector-arn
    (common-lisp:error ":anomaly-detector-arn is required") :type
    (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-anomaly-detector-request
                    'make-delete-anomaly-detector-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-anomaly-detector-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-anomaly-detector-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-detector-arn))
      (common-lisp:list
       (common-lisp:cons "AnomalyDetectorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-anomaly-detector-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-anomaly-detector-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-anomaly-detector-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-anomaly-detector-response
                    'make-delete-anomaly-detector-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-anomaly-detector-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-anomaly-detector-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-anomaly-detector-response))
   common-lisp:nil))
(common-lisp:deftype delimiter () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (describe-alert-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-alert-request-"))
   (alert-arn (common-lisp:error ":alert-arn is required") :type
    (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-alert-request 'make-describe-alert-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-alert-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-alert-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alert-arn))
      (common-lisp:list
       (common-lisp:cons "AlertArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-alert-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-alert-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-alert-response-"))
   (alert common-lisp:nil :type (common-lisp:or alert common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-alert-response 'make-describe-alert-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-alert-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-alert-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alert))
      (common-lisp:list
       (common-lisp:cons "Alert"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-alert-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-anomaly-detection-executions-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-describe-anomaly-detection-executions-request-"))
   (anomaly-detector-arn
    (common-lisp:error ":anomaly-detector-arn is required") :type
    (common-lisp:or arn common-lisp:null))
   (timestamp common-lisp:nil :type
    (common-lisp:or timestamp-string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-anomaly-detection-executions-request
                    'make-describe-anomaly-detection-executions-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-anomaly-detection-executions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-anomaly-detection-executions-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-detector-arn))
      (common-lisp:list
       (common-lisp:cons "AnomalyDetectorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timestamp))
      (common-lisp:list
       (common-lisp:cons "Timestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-anomaly-detection-executions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-anomaly-detection-executions-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-describe-anomaly-detection-executions-response-"))
   (execution-list common-lisp:nil :type
    (common-lisp:or execution-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-anomaly-detection-executions-response
                    'make-describe-anomaly-detection-executions-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-anomaly-detection-executions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-anomaly-detection-executions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'execution-list))
      (common-lisp:list
       (common-lisp:cons "ExecutionList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-anomaly-detection-executions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-anomaly-detector-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-anomaly-detector-request-"))
   (anomaly-detector-arn
    (common-lisp:error ":anomaly-detector-arn is required") :type
    (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-anomaly-detector-request
                    'make-describe-anomaly-detector-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-anomaly-detector-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-anomaly-detector-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-detector-arn))
      (common-lisp:list
       (common-lisp:cons "AnomalyDetectorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-anomaly-detector-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-anomaly-detector-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-anomaly-detector-response-"))
   (anomaly-detector-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (anomaly-detector-name common-lisp:nil :type
    (common-lisp:or anomaly-detector-name common-lisp:null))
   (anomaly-detector-description common-lisp:nil :type
    (common-lisp:or anomaly-detector-description common-lisp:null))
   (anomaly-detector-config common-lisp:nil :type
    (common-lisp:or anomaly-detector-config-summary common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (last-modification-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or anomaly-detector-status common-lisp:null))
   (failure-reason common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null))
   (kms-key-arn common-lisp:nil :type
    (common-lisp:or kms-key-arn common-lisp:null))
   (failure-type common-lisp:nil :type
    (common-lisp:or anomaly-detector-failure-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-anomaly-detector-response
                    'make-describe-anomaly-detector-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-anomaly-detector-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-anomaly-detector-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-detector-arn))
      (common-lisp:list
       (common-lisp:cons "AnomalyDetectorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-detector-name))
      (common-lisp:list
       (common-lisp:cons "AnomalyDetectorName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-detector-description))
      (common-lisp:list
       (common-lisp:cons "AnomalyDetectorDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-detector-config))
      (common-lisp:list
       (common-lisp:cons "AnomalyDetectorConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-modification-time))
      (common-lisp:list
       (common-lisp:cons "LastModificationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failure-reason))
      (common-lisp:list
       (common-lisp:cons "FailureReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key-arn))
      (common-lisp:list
       (common-lisp:cons "KmsKeyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failure-type))
      (common-lisp:list
       (common-lisp:cons "FailureType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-anomaly-detector-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-metric-set-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-metric-set-request-"))
   (metric-set-arn (common-lisp:error ":metric-set-arn is required") :type
    (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-metric-set-request
                    'make-describe-metric-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-metric-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-metric-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-set-arn))
      (common-lisp:list
       (common-lisp:cons "MetricSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-metric-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-metric-set-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-metric-set-response-"))
   (metric-set-arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (anomaly-detector-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (metric-set-name common-lisp:nil :type
    (common-lisp:or metric-set-name common-lisp:null))
   (metric-set-description common-lisp:nil :type
    (common-lisp:or metric-set-description common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (last-modification-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (offset common-lisp:nil :type (common-lisp:or offset common-lisp:null))
   (metric-list common-lisp:nil :type
    (common-lisp:or metric-list common-lisp:null))
   (timestamp-column common-lisp:nil :type
    (common-lisp:or timestamp-column common-lisp:null))
   (dimension-list common-lisp:nil :type
    (common-lisp:or dimension-list common-lisp:null))
   (metric-set-frequency common-lisp:nil :type
    (common-lisp:or frequency common-lisp:null))
   (timezone common-lisp:nil :type (common-lisp:or timezone common-lisp:null))
   (metric-source common-lisp:nil :type
    (common-lisp:or metric-source common-lisp:null))
   (dimension-filter-list common-lisp:nil :type
    (common-lisp:or metric-set-dimension-filter-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-metric-set-response
                    'make-describe-metric-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-metric-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-metric-set-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-set-arn))
      (common-lisp:list
       (common-lisp:cons "MetricSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-detector-arn))
      (common-lisp:list
       (common-lisp:cons "AnomalyDetectorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-set-name))
      (common-lisp:list
       (common-lisp:cons "MetricSetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'metric-set-description))
      (common-lisp:list
       (common-lisp:cons "MetricSetDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-modification-time))
      (common-lisp:list
       (common-lisp:cons "LastModificationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'offset))
      (common-lisp:list
       (common-lisp:cons "Offset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-list))
      (common-lisp:list
       (common-lisp:cons "MetricList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timestamp-column))
      (common-lisp:list
       (common-lisp:cons "TimestampColumn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dimension-list))
      (common-lisp:list
       (common-lisp:cons "DimensionList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'metric-set-frequency))
      (common-lisp:list
       (common-lisp:cons "MetricSetFrequency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timezone))
      (common-lisp:list
       (common-lisp:cons "Timezone"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-source))
      (common-lisp:list
       (common-lisp:cons "MetricSource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dimension-filter-list))
      (common-lisp:list
       (common-lisp:cons "DimensionFilterList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-metric-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (detect-metric-set-config-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-detect-metric-set-config-request-"))
   (anomaly-detector-arn
    (common-lisp:error ":anomaly-detector-arn is required") :type
    (common-lisp:or arn common-lisp:null))
   (auto-detection-metric-source
    (common-lisp:error ":auto-detection-metric-source is required") :type
    (common-lisp:or auto-detection-metric-source common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detect-metric-set-config-request
                    'make-detect-metric-set-config-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detect-metric-set-config-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detect-metric-set-config-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-detector-arn))
      (common-lisp:list
       (common-lisp:cons "AnomalyDetectorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'auto-detection-metric-source))
      (common-lisp:list
       (common-lisp:cons "AutoDetectionMetricSource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detect-metric-set-config-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (detect-metric-set-config-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-detect-metric-set-config-response-"))
   (detected-metric-set-config common-lisp:nil :type
    (common-lisp:or detected-metric-set-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detect-metric-set-config-response
                    'make-detect-metric-set-config-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detect-metric-set-config-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detect-metric-set-config-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'detected-metric-set-config))
      (common-lisp:list
       (common-lisp:cons "DetectedMetricSetConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detect-metric-set-config-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (detected-csv-format-descriptor (:copier common-lisp:nil)
      (:conc-name "struct-shape-detected-csv-format-descriptor-"))
   (file-compression common-lisp:nil :type
    (common-lisp:or detected-field common-lisp:null))
   (charset common-lisp:nil :type
    (common-lisp:or detected-field common-lisp:null))
   (contains-header common-lisp:nil :type
    (common-lisp:or detected-field common-lisp:null))
   (delimiter common-lisp:nil :type
    (common-lisp:or detected-field common-lisp:null))
   (header-list common-lisp:nil :type
    (common-lisp:or detected-field common-lisp:null))
   (quote-symbol common-lisp:nil :type
    (common-lisp:or detected-field common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detected-csv-format-descriptor
                    'make-detected-csv-format-descriptor))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detected-csv-format-descriptor))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detected-csv-format-descriptor))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-compression))
      (common-lisp:list
       (common-lisp:cons "FileCompression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'charset))
      (common-lisp:list
       (common-lisp:cons "Charset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'contains-header))
      (common-lisp:list
       (common-lisp:cons "ContainsHeader"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'delimiter))
      (common-lisp:list
       (common-lisp:cons "Delimiter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'header-list))
      (common-lisp:list
       (common-lisp:cons "HeaderList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'quote-symbol))
      (common-lisp:list
       (common-lisp:cons "QuoteSymbol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detected-csv-format-descriptor))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (detected-field (:copier common-lisp:nil)
      (:conc-name "struct-shape-detected-field-"))
   (value common-lisp:nil :type
    (common-lisp:or attribute-value common-lisp:null))
   (confidence common-lisp:nil :type
    (common-lisp:or confidence common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or message common-lisp:null)))
 (common-lisp:export (common-lisp:list 'detected-field 'make-detected-field))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input detected-field))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input detected-field))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'confidence))
      (common-lisp:list
       (common-lisp:cons "Confidence"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input detected-field))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (detected-file-format-descriptor (:copier common-lisp:nil)
      (:conc-name "struct-shape-detected-file-format-descriptor-"))
   (csv-format-descriptor common-lisp:nil :type
    (common-lisp:or detected-csv-format-descriptor common-lisp:null))
   (json-format-descriptor common-lisp:nil :type
    (common-lisp:or detected-json-format-descriptor common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detected-file-format-descriptor
                    'make-detected-file-format-descriptor))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detected-file-format-descriptor))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detected-file-format-descriptor))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'csv-format-descriptor))
      (common-lisp:list
       (common-lisp:cons "CsvFormatDescriptor"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'json-format-descriptor))
      (common-lisp:list
       (common-lisp:cons "JsonFormatDescriptor"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detected-file-format-descriptor))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (detected-json-format-descriptor (:copier common-lisp:nil)
      (:conc-name "struct-shape-detected-json-format-descriptor-"))
   (file-compression common-lisp:nil :type
    (common-lisp:or detected-field common-lisp:null))
   (charset common-lisp:nil :type
    (common-lisp:or detected-field common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detected-json-format-descriptor
                    'make-detected-json-format-descriptor))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detected-json-format-descriptor))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detected-json-format-descriptor))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-compression))
      (common-lisp:list
       (common-lisp:cons "FileCompression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'charset))
      (common-lisp:list
       (common-lisp:cons "Charset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detected-json-format-descriptor))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (detected-metric-set-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-detected-metric-set-config-"))
   (offset common-lisp:nil :type
    (common-lisp:or detected-field common-lisp:null))
   (metric-set-frequency common-lisp:nil :type
    (common-lisp:or detected-field common-lisp:null))
   (metric-source common-lisp:nil :type
    (common-lisp:or detected-metric-source common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detected-metric-set-config
                    'make-detected-metric-set-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detected-metric-set-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detected-metric-set-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'offset))
      (common-lisp:list
       (common-lisp:cons "Offset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'metric-set-frequency))
      (common-lisp:list
       (common-lisp:cons "MetricSetFrequency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-source))
      (common-lisp:list
       (common-lisp:cons "MetricSource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detected-metric-set-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (detected-metric-source (:copier common-lisp:nil)
      (:conc-name "struct-shape-detected-metric-source-"))
   (s3source-config common-lisp:nil :type
    (common-lisp:or detected-s3source-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detected-metric-source 'make-detected-metric-source))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detected-metric-source))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detected-metric-source))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3source-config))
      (common-lisp:list
       (common-lisp:cons "S3SourceConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detected-metric-source))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (detected-s3source-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-detected-s3source-config-"))
   (file-format-descriptor common-lisp:nil :type
    (common-lisp:or detected-file-format-descriptor common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detected-s3source-config 'make-detected-s3source-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detected-s3source-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detected-s3source-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'file-format-descriptor))
      (common-lisp:list
       (common-lisp:cons "FileFormatDescriptor"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detected-s3source-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (dimension-contribution (:copier common-lisp:nil)
      (:conc-name "struct-shape-dimension-contribution-"))
   (dimension-name common-lisp:nil :type
    (common-lisp:or column-name common-lisp:null))
   (dimension-value-contribution-list common-lisp:nil :type
    (common-lisp:or dimension-value-contribution-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'dimension-contribution 'make-dimension-contribution))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          dimension-contribution))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          dimension-contribution))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dimension-name))
      (common-lisp:list
       (common-lisp:cons "DimensionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dimension-value-contribution-list))
      (common-lisp:list
       (common-lisp:cons "DimensionValueContributionList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          dimension-contribution))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype dimension-contribution-list ()
   '(trivial-types:proper-list dimension-contribution))
 (common-lisp:defun |make-dimension-contribution-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list dimension-contribution))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (dimension-filter (:copier common-lisp:nil)
      (:conc-name "struct-shape-dimension-filter-"))
   (dimension-name common-lisp:nil :type
    (common-lisp:or column-name common-lisp:null))
   (dimension-value-list common-lisp:nil :type
    (common-lisp:or dimension-value-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'dimension-filter 'make-dimension-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dimension-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dimension-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dimension-name))
      (common-lisp:list
       (common-lisp:cons "DimensionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dimension-value-list))
      (common-lisp:list
       (common-lisp:cons "DimensionValueList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dimension-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype dimension-filter-list ()
   '(trivial-types:proper-list dimension-filter))
 (common-lisp:defun |make-dimension-filter-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list dimension-filter))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype dimension-list ()
   '(trivial-types:proper-list column-name))
 (common-lisp:defun |make-dimension-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list column-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (dimension-name-value (:copier common-lisp:nil)
      (:conc-name "struct-shape-dimension-name-value-"))
   (dimension-name (common-lisp:error ":dimension-name is required") :type
    (common-lisp:or column-name common-lisp:null))
   (dimension-value (common-lisp:error ":dimension-value is required") :type
    (common-lisp:or dimension-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'dimension-name-value 'make-dimension-name-value))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dimension-name-value))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dimension-name-value))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dimension-name))
      (common-lisp:list
       (common-lisp:cons "DimensionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dimension-value))
      (common-lisp:list
       (common-lisp:cons "DimensionValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dimension-name-value))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype dimension-name-value-list ()
   '(trivial-types:proper-list dimension-name-value))
 (common-lisp:defun |make-dimension-name-value-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list dimension-name-value))
   aws-sdk/generator/shape::members))
(common-lisp:deftype dimension-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (dimension-value-contribution (:copier common-lisp:nil)
      (:conc-name "struct-shape-dimension-value-contribution-"))
   (dimension-value common-lisp:nil :type
    (common-lisp:or dimension-value common-lisp:null))
   (contribution-score common-lisp:nil :type
    (common-lisp:or score common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'dimension-value-contribution
                    'make-dimension-value-contribution))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          dimension-value-contribution))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          dimension-value-contribution))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dimension-value))
      (common-lisp:list
       (common-lisp:cons "DimensionValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'contribution-score))
      (common-lisp:list
       (common-lisp:cons "ContributionScore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          dimension-value-contribution))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype dimension-value-contribution-list ()
   '(trivial-types:proper-list dimension-value-contribution))
 (common-lisp:defun |make-dimension-value-contribution-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            dimension-value-contribution))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype dimension-value-list ()
   '(trivial-types:proper-list dimension-value))
 (common-lisp:defun |make-dimension-value-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list dimension-value))
   aws-sdk/generator/shape::members))
(common-lisp:deftype double () 'common-lisp:double-float)
(common-lisp:deftype error-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype execution-list ()
   '(trivial-types:proper-list execution-status))
 (common-lisp:defun |make-execution-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list execution-status))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (execution-status (:copier common-lisp:nil)
      (:conc-name "struct-shape-execution-status-"))
   (timestamp common-lisp:nil :type
    (common-lisp:or timestamp-string common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or anomaly-detection-task-status common-lisp:null))
   (failure-reason common-lisp:nil :type
    (common-lisp:or anomaly-detection-task-status-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'execution-status 'make-execution-status))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input execution-status))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input execution-status))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timestamp))
      (common-lisp:list
       (common-lisp:cons "Timestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failure-reason))
      (common-lisp:list
       (common-lisp:cons "FailureReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input execution-status))
   common-lisp:nil))
(common-lisp:deftype field-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (file-format-descriptor (:copier common-lisp:nil)
      (:conc-name "struct-shape-file-format-descriptor-"))
   (csv-format-descriptor common-lisp:nil :type
    (common-lisp:or csv-format-descriptor common-lisp:null))
   (json-format-descriptor common-lisp:nil :type
    (common-lisp:or json-format-descriptor common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'file-format-descriptor 'make-file-format-descriptor))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          file-format-descriptor))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          file-format-descriptor))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'csv-format-descriptor))
      (common-lisp:list
       (common-lisp:cons "CsvFormatDescriptor"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'json-format-descriptor))
      (common-lisp:list
       (common-lisp:cons "JsonFormatDescriptor"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          file-format-descriptor))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (filter (:copier common-lisp:nil) (:conc-name "struct-shape-filter-"))
   (dimension-value common-lisp:nil :type
    (common-lisp:or dimension-value common-lisp:null))
   (filter-operation common-lisp:nil :type
    (common-lisp:or filter-operation common-lisp:null)))
 (common-lisp:export (common-lisp:list 'filter 'make-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dimension-value))
      (common-lisp:list
       (common-lisp:cons "DimensionValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter-operation))
      (common-lisp:list
       (common-lisp:cons "FilterOperation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype filter-list () '(trivial-types:proper-list filter))
 (common-lisp:defun |make-filter-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list filter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype filter-operation () 'common-lisp:string)
(common-lisp:deftype flow-name () 'common-lisp:string)
(common-lisp:deftype frequency () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (get-anomaly-group-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-anomaly-group-request-"))
   (anomaly-group-id (common-lisp:error ":anomaly-group-id is required") :type
    (common-lisp:or uuid common-lisp:null))
   (anomaly-detector-arn
    (common-lisp:error ":anomaly-detector-arn is required") :type
    (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-anomaly-group-request
                    'make-get-anomaly-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-anomaly-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-anomaly-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'anomaly-group-id))
      (common-lisp:list
       (common-lisp:cons "AnomalyGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-detector-arn))
      (common-lisp:list
       (common-lisp:cons "AnomalyDetectorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-anomaly-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-anomaly-group-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-anomaly-group-response-"))
   (anomaly-group common-lisp:nil :type
    (common-lisp:or anomaly-group common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-anomaly-group-response
                    'make-get-anomaly-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-anomaly-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-anomaly-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'anomaly-group))
      (common-lisp:list
       (common-lisp:cons "AnomalyGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-anomaly-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-data-quality-metrics-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-data-quality-metrics-request-"))
   (anomaly-detector-arn
    (common-lisp:error ":anomaly-detector-arn is required") :type
    (common-lisp:or arn common-lisp:null))
   (metric-set-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-data-quality-metrics-request
                    'make-get-data-quality-metrics-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-data-quality-metrics-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-data-quality-metrics-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-detector-arn))
      (common-lisp:list
       (common-lisp:cons "AnomalyDetectorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-set-arn))
      (common-lisp:list
       (common-lisp:cons "MetricSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-data-quality-metrics-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-data-quality-metrics-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-data-quality-metrics-response-"))
   (anomaly-detector-data-quality-metric-list common-lisp:nil :type
    (common-lisp:or anomaly-detector-data-quality-metric-list
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-data-quality-metrics-response
                    'make-get-data-quality-metrics-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-data-quality-metrics-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-data-quality-metrics-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-detector-data-quality-metric-list))
      (common-lisp:list
       (common-lisp:cons "AnomalyDetectorDataQualityMetricList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-data-quality-metrics-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-feedback-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-feedback-request-"))
   (anomaly-detector-arn
    (common-lisp:error ":anomaly-detector-arn is required") :type
    (common-lisp:or arn common-lisp:null))
   (anomaly-group-time-series-feedback
    (common-lisp:error ":anomaly-group-time-series-feedback is required") :type
    (common-lisp:or anomaly-group-time-series common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-feedback-request 'make-get-feedback-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-feedback-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-feedback-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-detector-arn))
      (common-lisp:list
       (common-lisp:cons "AnomalyDetectorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-group-time-series-feedback))
      (common-lisp:list
       (common-lisp:cons "AnomalyGroupTimeSeriesFeedback"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-feedback-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-feedback-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-feedback-response-"))
   (anomaly-group-time-series-feedback common-lisp:nil :type
    (common-lisp:or time-series-feedback-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-feedback-response 'make-get-feedback-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-feedback-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-feedback-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-group-time-series-feedback))
      (common-lisp:list
       (common-lisp:cons "AnomalyGroupTimeSeriesFeedback"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-feedback-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-sample-data-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-sample-data-request-"))
   (s3source-config common-lisp:nil :type
    (common-lisp:or sample-data-s3source-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-sample-data-request 'make-get-sample-data-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-sample-data-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-sample-data-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3source-config))
      (common-lisp:list
       (common-lisp:cons "S3SourceConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-sample-data-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-sample-data-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-sample-data-response-"))
   (header-values common-lisp:nil :type
    (common-lisp:or header-value-list common-lisp:null))
   (sample-rows common-lisp:nil :type
    (common-lisp:or sample-rows common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-sample-data-response 'make-get-sample-data-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-sample-data-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-sample-data-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'header-values))
      (common-lisp:list
       (common-lisp:cons "HeaderValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sample-rows))
      (common-lisp:list
       (common-lisp:cons "SampleRows"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-sample-data-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype header-list () '(trivial-types:proper-list column-name))
 (common-lisp:defun |make-header-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list column-name))
   aws-sdk/generator/shape::members))
(common-lisp:deftype header-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype header-value-list ()
   '(trivial-types:proper-list header-value))
 (common-lisp:defun |make-header-value-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list header-value))
   aws-sdk/generator/shape::members))
(common-lisp:deftype historical-data-path () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype historical-data-path-list ()
   '(trivial-types:proper-list historical-data-path))
 (common-lisp:defun |make-historical-data-path-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list historical-data-path))
   aws-sdk/generator/shape::members))
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (inter-metric-impact-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-inter-metric-impact-details-"))
   (metric-name common-lisp:nil :type
    (common-lisp:or metric-name common-lisp:null))
   (anomaly-group-id common-lisp:nil :type
    (common-lisp:or uuid common-lisp:null))
   (relationship-type common-lisp:nil :type
    (common-lisp:or relationship-type common-lisp:null))
   (contribution-percentage common-lisp:nil :type
    (common-lisp:or metric-change-percentage common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'inter-metric-impact-details
                    'make-inter-metric-impact-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          inter-metric-impact-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          inter-metric-impact-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-name))
      (common-lisp:list
       (common-lisp:cons "MetricName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'anomaly-group-id))
      (common-lisp:list
       (common-lisp:cons "AnomalyGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'relationship-type))
      (common-lisp:list
       (common-lisp:cons "RelationshipType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'contribution-percentage))
      (common-lisp:list
       (common-lisp:cons "ContributionPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          inter-metric-impact-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype inter-metric-impact-list ()
   '(trivial-types:proper-list inter-metric-impact-details))
 (common-lisp:defun |make-inter-metric-impact-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            inter-metric-impact-details))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (lookoutmetrics-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (itemized-metric-stats (:copier common-lisp:nil)
      (:conc-name "struct-shape-itemized-metric-stats-"))
   (metric-name common-lisp:nil :type
    (common-lisp:or column-name common-lisp:null))
   (occurrence-count common-lisp:nil :type
    (common-lisp:or integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'itemized-metric-stats 'make-itemized-metric-stats))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          itemized-metric-stats))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          itemized-metric-stats))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-name))
      (common-lisp:list
       (common-lisp:cons "MetricName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'occurrence-count))
      (common-lisp:list
       (common-lisp:cons "OccurrenceCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          itemized-metric-stats))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype itemized-metric-stats-list ()
   '(trivial-types:proper-list itemized-metric-stats))
 (common-lisp:defun |make-itemized-metric-stats-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list itemized-metric-stats))
   aws-sdk/generator/shape::members))
(common-lisp:deftype json-file-compression () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (json-format-descriptor (:copier common-lisp:nil)
      (:conc-name "struct-shape-json-format-descriptor-"))
   (file-compression common-lisp:nil :type
    (common-lisp:or json-file-compression common-lisp:null))
   (charset common-lisp:nil :type (common-lisp:or charset common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'json-format-descriptor 'make-json-format-descriptor))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          json-format-descriptor))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          json-format-descriptor))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-compression))
      (common-lisp:list
       (common-lisp:cons "FileCompression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'charset))
      (common-lisp:list
       (common-lisp:cons "Charset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          json-format-descriptor))
   common-lisp:nil))
(common-lisp:deftype kms-key-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (lambda-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-lambda-configuration-"))
   (role-arn (common-lisp:error ":role-arn is required") :type
    (common-lisp:or arn common-lisp:null))
   (lambda-arn (common-lisp:error ":lambda-arn is required") :type
    (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lambda-configuration 'make-lambda-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input lambda-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input lambda-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lambda-arn))
      (common-lisp:list
       (common-lisp:cons "LambdaArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input lambda-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-alerts-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-alerts-request-"))
   (anomaly-detector-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-alerts-request 'make-list-alerts-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-alerts-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-alerts-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-detector-arn))
      (common-lisp:list
       (common-lisp:cons "AnomalyDetectorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-alerts-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-alerts-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-alerts-response-"))
   (alert-summary-list common-lisp:nil :type
    (common-lisp:or alert-summary-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-alerts-response 'make-list-alerts-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-alerts-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-alerts-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alert-summary-list))
      (common-lisp:list
       (common-lisp:cons "AlertSummaryList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-alerts-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-anomaly-detectors-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-anomaly-detectors-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-anomaly-detectors-request
                    'make-list-anomaly-detectors-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-anomaly-detectors-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-anomaly-detectors-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-anomaly-detectors-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-anomaly-detectors-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-anomaly-detectors-response-"))
   (anomaly-detector-summary-list common-lisp:nil :type
    (common-lisp:or anomaly-detector-summary-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-anomaly-detectors-response
                    'make-list-anomaly-detectors-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-anomaly-detectors-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-anomaly-detectors-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-detector-summary-list))
      (common-lisp:list
       (common-lisp:cons "AnomalyDetectorSummaryList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-anomaly-detectors-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-anomaly-group-related-metrics-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-anomaly-group-related-metrics-request-"))
   (anomaly-detector-arn
    (common-lisp:error ":anomaly-detector-arn is required") :type
    (common-lisp:or arn common-lisp:null))
   (anomaly-group-id (common-lisp:error ":anomaly-group-id is required") :type
    (common-lisp:or uuid common-lisp:null))
   (relationship-type-filter common-lisp:nil :type
    (common-lisp:or relationship-type common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-anomaly-group-related-metrics-request
                    'make-list-anomaly-group-related-metrics-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-anomaly-group-related-metrics-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-anomaly-group-related-metrics-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-detector-arn))
      (common-lisp:list
       (common-lisp:cons "AnomalyDetectorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'anomaly-group-id))
      (common-lisp:list
       (common-lisp:cons "AnomalyGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'relationship-type-filter))
      (common-lisp:list
       (common-lisp:cons "RelationshipTypeFilter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-anomaly-group-related-metrics-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-anomaly-group-related-metrics-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-anomaly-group-related-metrics-response-"))
   (inter-metric-impact-list common-lisp:nil :type
    (common-lisp:or inter-metric-impact-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-anomaly-group-related-metrics-response
                    'make-list-anomaly-group-related-metrics-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-anomaly-group-related-metrics-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-anomaly-group-related-metrics-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'inter-metric-impact-list))
      (common-lisp:list
       (common-lisp:cons "InterMetricImpactList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-anomaly-group-related-metrics-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-anomaly-group-summaries-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-anomaly-group-summaries-request-"))
   (anomaly-detector-arn
    (common-lisp:error ":anomaly-detector-arn is required") :type
    (common-lisp:or arn common-lisp:null))
   (sensitivity-threshold
    (common-lisp:error ":sensitivity-threshold is required") :type
    (common-lisp:or sensitivity-threshold common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-anomaly-group-summaries-request
                    'make-list-anomaly-group-summaries-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-anomaly-group-summaries-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-anomaly-group-summaries-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-detector-arn))
      (common-lisp:list
       (common-lisp:cons "AnomalyDetectorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sensitivity-threshold))
      (common-lisp:list
       (common-lisp:cons "SensitivityThreshold"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-anomaly-group-summaries-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-anomaly-group-summaries-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-anomaly-group-summaries-response-"))
   (anomaly-group-summary-list common-lisp:nil :type
    (common-lisp:or anomaly-group-summary-list common-lisp:null))
   (anomaly-group-statistics common-lisp:nil :type
    (common-lisp:or anomaly-group-statistics common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-anomaly-group-summaries-response
                    'make-list-anomaly-group-summaries-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-anomaly-group-summaries-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-anomaly-group-summaries-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-group-summary-list))
      (common-lisp:list
       (common-lisp:cons "AnomalyGroupSummaryList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-group-statistics))
      (common-lisp:list
       (common-lisp:cons "AnomalyGroupStatistics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-anomaly-group-summaries-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-anomaly-group-time-series-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-anomaly-group-time-series-request-"))
   (anomaly-detector-arn
    (common-lisp:error ":anomaly-detector-arn is required") :type
    (common-lisp:or arn common-lisp:null))
   (anomaly-group-id (common-lisp:error ":anomaly-group-id is required") :type
    (common-lisp:or uuid common-lisp:null))
   (metric-name (common-lisp:error ":metric-name is required") :type
    (common-lisp:or metric-name common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-anomaly-group-time-series-request
                    'make-list-anomaly-group-time-series-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-anomaly-group-time-series-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-anomaly-group-time-series-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-detector-arn))
      (common-lisp:list
       (common-lisp:cons "AnomalyDetectorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'anomaly-group-id))
      (common-lisp:list
       (common-lisp:cons "AnomalyGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-name))
      (common-lisp:list
       (common-lisp:cons "MetricName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-anomaly-group-time-series-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-anomaly-group-time-series-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-anomaly-group-time-series-response-"))
   (anomaly-group-id common-lisp:nil :type
    (common-lisp:or uuid common-lisp:null))
   (metric-name common-lisp:nil :type
    (common-lisp:or metric-name common-lisp:null))
   (timestamp-list common-lisp:nil :type
    (common-lisp:or timestamp-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (time-series-list common-lisp:nil :type
    (common-lisp:or time-series-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-anomaly-group-time-series-response
                    'make-list-anomaly-group-time-series-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-anomaly-group-time-series-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-anomaly-group-time-series-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'anomaly-group-id))
      (common-lisp:list
       (common-lisp:cons "AnomalyGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-name))
      (common-lisp:list
       (common-lisp:cons "MetricName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timestamp-list))
      (common-lisp:list
       (common-lisp:cons "TimestampList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'time-series-list))
      (common-lisp:list
       (common-lisp:cons "TimeSeriesList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-anomaly-group-time-series-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-metric-sets-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-metric-sets-request-"))
   (anomaly-detector-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-metric-sets-request 'make-list-metric-sets-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-metric-sets-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-metric-sets-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-detector-arn))
      (common-lisp:list
       (common-lisp:cons "AnomalyDetectorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-metric-sets-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-metric-sets-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-metric-sets-response-"))
   (metric-set-summary-list common-lisp:nil :type
    (common-lisp:or metric-set-summary-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-metric-sets-response
                    'make-list-metric-sets-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-metric-sets-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-metric-sets-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'metric-set-summary-list))
      (common-lisp:list
       (common-lisp:cons "MetricSetSummaryList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-metric-sets-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-response-"))
   (tags common-lisp:nil :type (common-lisp:or tag-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (metric (:copier common-lisp:nil) (:conc-name "struct-shape-metric-"))
   (metric-name (common-lisp:error ":metric-name is required") :type
    (common-lisp:or column-name common-lisp:null))
   (aggregation-function
    (common-lisp:error ":aggregation-function is required") :type
    (common-lisp:or aggregation-function common-lisp:null))
   (namespace common-lisp:nil :type
    (common-lisp:or namespace common-lisp:null)))
 (common-lisp:export (common-lisp:list 'metric 'make-metric))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input metric))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input metric))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-name))
      (common-lisp:list
       (common-lisp:cons "MetricName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'aggregation-function))
      (common-lisp:list
       (common-lisp:cons "AggregationFunction"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'namespace))
      (common-lisp:list
       (common-lisp:cons "Namespace"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input metric))
   common-lisp:nil))
(common-lisp:deftype metric-change-percentage () 'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:defstruct
     (metric-level-impact (:copier common-lisp:nil)
      (:conc-name "struct-shape-metric-level-impact-"))
   (metric-name common-lisp:nil :type
    (common-lisp:or metric-name common-lisp:null))
   (num-time-series common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (contribution-matrix common-lisp:nil :type
    (common-lisp:or contribution-matrix common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'metric-level-impact 'make-metric-level-impact))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input metric-level-impact))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input metric-level-impact))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-name))
      (common-lisp:list
       (common-lisp:cons "MetricName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'num-time-series))
      (common-lisp:list
       (common-lisp:cons "NumTimeSeries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'contribution-matrix))
      (common-lisp:list
       (common-lisp:cons "ContributionMatrix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input metric-level-impact))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype metric-level-impact-list ()
   '(trivial-types:proper-list metric-level-impact))
 (common-lisp:defun |make-metric-level-impact-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list metric-level-impact))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype metric-list () '(trivial-types:proper-list metric))
 (common-lisp:defun |make-metric-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list metric))
   aws-sdk/generator/shape::members))
(common-lisp:deftype metric-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype metric-name-list ()
   '(trivial-types:proper-list metric-name))
 (common-lisp:defun |make-metric-name-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list metric-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (metric-set-data-quality-metric (:copier common-lisp:nil)
      (:conc-name "struct-shape-metric-set-data-quality-metric-"))
   (metric-set-arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (data-quality-metric-list common-lisp:nil :type
    (common-lisp:or data-quality-metric-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'metric-set-data-quality-metric
                    'make-metric-set-data-quality-metric))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          metric-set-data-quality-metric))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          metric-set-data-quality-metric))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-set-arn))
      (common-lisp:list
       (common-lisp:cons "MetricSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-quality-metric-list))
      (common-lisp:list
       (common-lisp:cons "DataQualityMetricList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          metric-set-data-quality-metric))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype metric-set-data-quality-metric-list ()
   '(trivial-types:proper-list metric-set-data-quality-metric))
 (common-lisp:defun |make-metric-set-data-quality-metric-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            metric-set-data-quality-metric))
   aws-sdk/generator/shape::members))
(common-lisp:deftype metric-set-description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (metric-set-dimension-filter (:copier common-lisp:nil)
      (:conc-name "struct-shape-metric-set-dimension-filter-"))
   (name common-lisp:nil :type (common-lisp:or column-name common-lisp:null))
   (filter-list common-lisp:nil :type
    (common-lisp:or filter-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'metric-set-dimension-filter
                    'make-metric-set-dimension-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          metric-set-dimension-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          metric-set-dimension-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter-list))
      (common-lisp:list
       (common-lisp:cons "FilterList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          metric-set-dimension-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype metric-set-dimension-filter-list ()
   '(trivial-types:proper-list metric-set-dimension-filter))
 (common-lisp:defun |make-metric-set-dimension-filter-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            metric-set-dimension-filter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype metric-set-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (metric-set-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-metric-set-summary-"))
   (metric-set-arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (anomaly-detector-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (metric-set-description common-lisp:nil :type
    (common-lisp:or metric-set-description common-lisp:null))
   (metric-set-name common-lisp:nil :type
    (common-lisp:or metric-set-name common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (last-modification-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'metric-set-summary 'make-metric-set-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input metric-set-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input metric-set-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-set-arn))
      (common-lisp:list
       (common-lisp:cons "MetricSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-detector-arn))
      (common-lisp:list
       (common-lisp:cons "AnomalyDetectorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'metric-set-description))
      (common-lisp:list
       (common-lisp:cons "MetricSetDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-set-name))
      (common-lisp:list
       (common-lisp:cons "MetricSetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-modification-time))
      (common-lisp:list
       (common-lisp:cons "LastModificationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input metric-set-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype metric-set-summary-list ()
   '(trivial-types:proper-list metric-set-summary))
 (common-lisp:defun |make-metric-set-summary-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list metric-set-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (metric-source (:copier common-lisp:nil)
      (:conc-name "struct-shape-metric-source-"))
   (s3source-config common-lisp:nil :type
    (common-lisp:or s3source-config common-lisp:null))
   (app-flow-config common-lisp:nil :type
    (common-lisp:or app-flow-config common-lisp:null))
   (cloud-watch-config common-lisp:nil :type
    (common-lisp:or cloud-watch-config common-lisp:null))
   (rdssource-config common-lisp:nil :type
    (common-lisp:or rdssource-config common-lisp:null))
   (redshift-source-config common-lisp:nil :type
    (common-lisp:or redshift-source-config common-lisp:null))
   (athena-source-config common-lisp:nil :type
    (common-lisp:or athena-source-config common-lisp:null)))
 (common-lisp:export (common-lisp:list 'metric-source 'make-metric-source))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input metric-source))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input metric-source))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3source-config))
      (common-lisp:list
       (common-lisp:cons "S3SourceConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-flow-config))
      (common-lisp:list
       (common-lisp:cons "AppFlowConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cloud-watch-config))
      (common-lisp:list
       (common-lisp:cons "CloudWatchConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rdssource-config))
      (common-lisp:list
       (common-lisp:cons "RDSSourceConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'redshift-source-config))
      (common-lisp:list
       (common-lisp:cons "RedshiftSourceConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'athena-source-config))
      (common-lisp:list
       (common-lisp:cons "AthenaSourceConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input metric-source))
   common-lisp:nil))
(common-lisp:deftype metric-value () 'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:deftype metric-value-list ()
   '(trivial-types:proper-list metric-value))
 (common-lisp:defun |make-metric-value-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list metric-value))
   aws-sdk/generator/shape::members))
(common-lisp:deftype namespace () 'common-lisp:string)
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:deftype number-attribute-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype number-list-attribute-value ()
   '(trivial-types:proper-list number-attribute-value))
 (common-lisp:defun |make-number-list-attribute-value|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list number-attribute-value))
   aws-sdk/generator/shape::members))
(common-lisp:deftype offset () 'common-lisp:integer)
(common-lisp:deftype poirot-secret-manager-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (put-feedback-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-feedback-request-"))
   (anomaly-detector-arn
    (common-lisp:error ":anomaly-detector-arn is required") :type
    (common-lisp:or arn common-lisp:null))
   (anomaly-group-time-series-feedback
    (common-lisp:error ":anomaly-group-time-series-feedback is required") :type
    (common-lisp:or anomaly-group-time-series-feedback common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-feedback-request 'make-put-feedback-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input put-feedback-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input put-feedback-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-detector-arn))
      (common-lisp:list
       (common-lisp:cons "AnomalyDetectorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-group-time-series-feedback))
      (common-lisp:list
       (common-lisp:cons "AnomalyGroupTimeSeriesFeedback"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input put-feedback-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-feedback-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-feedback-response-")))
 (common-lisp:export
  (common-lisp:list 'put-feedback-response 'make-put-feedback-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-feedback-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-feedback-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-feedback-response))
   common-lisp:nil))
(common-lisp:deftype quota-code () 'common-lisp:string)
(common-lisp:deftype quote-symbol () 'common-lisp:string)
(common-lisp:deftype rdsdatabase-identifier () 'common-lisp:string)
(common-lisp:deftype rdsdatabase-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (rdssource-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-rdssource-config-"))
   (dbinstance-identifier common-lisp:nil :type
    (common-lisp:or rdsdatabase-identifier common-lisp:null))
   (database-host common-lisp:nil :type
    (common-lisp:or database-host common-lisp:null))
   (database-port common-lisp:nil :type
    (common-lisp:or database-port common-lisp:null))
   (secret-manager-arn common-lisp:nil :type
    (common-lisp:or poirot-secret-manager-arn common-lisp:null))
   (database-name common-lisp:nil :type
    (common-lisp:or rdsdatabase-name common-lisp:null))
   (table-name common-lisp:nil :type
    (common-lisp:or table-name common-lisp:null))
   (role-arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (vpc-configuration common-lisp:nil :type
    (common-lisp:or vpc-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'rdssource-config 'make-rdssource-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input rdssource-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input rdssource-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dbinstance-identifier))
      (common-lisp:list
       (common-lisp:cons "DBInstanceIdentifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'database-host))
      (common-lisp:list
       (common-lisp:cons "DatabaseHost"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'database-port))
      (common-lisp:list
       (common-lisp:cons "DatabasePort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'secret-manager-arn))
      (common-lisp:list
       (common-lisp:cons "SecretManagerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'database-name))
      (common-lisp:list
       (common-lisp:cons "DatabaseName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'table-name))
      (common-lisp:list
       (common-lisp:cons "TableName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-configuration))
      (common-lisp:list
       (common-lisp:cons "VpcConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input rdssource-config))
   common-lisp:nil))
(common-lisp:deftype redshift-cluster-identifier () 'common-lisp:string)
(common-lisp:deftype redshift-database-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (redshift-source-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-redshift-source-config-"))
   (cluster-identifier common-lisp:nil :type
    (common-lisp:or redshift-cluster-identifier common-lisp:null))
   (database-host common-lisp:nil :type
    (common-lisp:or database-host common-lisp:null))
   (database-port common-lisp:nil :type
    (common-lisp:or database-port common-lisp:null))
   (secret-manager-arn common-lisp:nil :type
    (common-lisp:or poirot-secret-manager-arn common-lisp:null))
   (database-name common-lisp:nil :type
    (common-lisp:or redshift-database-name common-lisp:null))
   (table-name common-lisp:nil :type
    (common-lisp:or table-name common-lisp:null))
   (role-arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (vpc-configuration common-lisp:nil :type
    (common-lisp:or vpc-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'redshift-source-config 'make-redshift-source-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          redshift-source-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          redshift-source-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cluster-identifier))
      (common-lisp:list
       (common-lisp:cons "ClusterIdentifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'database-host))
      (common-lisp:list
       (common-lisp:cons "DatabaseHost"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'database-port))
      (common-lisp:list
       (common-lisp:cons "DatabasePort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'secret-manager-arn))
      (common-lisp:list
       (common-lisp:cons "SecretManagerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'database-name))
      (common-lisp:list
       (common-lisp:cons "DatabaseName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'table-name))
      (common-lisp:list
       (common-lisp:cons "TableName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-configuration))
      (common-lisp:list
       (common-lisp:cons "VpcConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          redshift-source-config))
   common-lisp:nil))
(common-lisp:deftype related-column-name () 'common-lisp:string)
(common-lisp:deftype relationship-type () 'common-lisp:string)
(common-lisp:deftype resource-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (lookoutmetrics-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)
      (resource-id :initarg :resource-id :initform common-lisp:nil :reader
       resource-not-found-exception-resource-id)
      (resource-type :initarg :resource-type :initform common-lisp:nil :reader
       resource-not-found-exception-resource-type)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message
                    'resource-not-found-exception-resource-id
                    'resource-not-found-exception-resource-type)))
(common-lisp:deftype resource-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (s3source-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-s3source-config-"))
   (role-arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (templated-path-list common-lisp:nil :type
    (common-lisp:or templated-path-list common-lisp:null))
   (historical-data-path-list common-lisp:nil :type
    (common-lisp:or historical-data-path-list common-lisp:null))
   (file-format-descriptor common-lisp:nil :type
    (common-lisp:or file-format-descriptor common-lisp:null)))
 (common-lisp:export (common-lisp:list 's3source-config 'make-s3source-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input s3source-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input s3source-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'templated-path-list))
      (common-lisp:list
       (common-lisp:cons "TemplatedPathList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'historical-data-path-list))
      (common-lisp:list
       (common-lisp:cons "HistoricalDataPathList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'file-format-descriptor))
      (common-lisp:list
       (common-lisp:cons "FileFormatDescriptor"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input s3source-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (snsconfiguration (:copier common-lisp:nil)
      (:conc-name "struct-shape-snsconfiguration-"))
   (role-arn (common-lisp:error ":role-arn is required") :type
    (common-lisp:or arn common-lisp:null))
   (sns-topic-arn (common-lisp:error ":sns-topic-arn is required") :type
    (common-lisp:or arn common-lisp:null))
   (sns-format common-lisp:nil :type
    (common-lisp:or sns-format common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'snsconfiguration 'make-snsconfiguration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input snsconfiguration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input snsconfiguration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sns-topic-arn))
      (common-lisp:list
       (common-lisp:cons "SnsTopicArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sns-format))
      (common-lisp:list
       (common-lisp:cons "SnsFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input snsconfiguration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (sample-data-s3source-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-sample-data-s3source-config-"))
   (role-arn (common-lisp:error ":role-arn is required") :type
    (common-lisp:or arn common-lisp:null))
   (templated-path-list common-lisp:nil :type
    (common-lisp:or templated-path-list common-lisp:null))
   (historical-data-path-list common-lisp:nil :type
    (common-lisp:or historical-data-path-list common-lisp:null))
   (file-format-descriptor
    (common-lisp:error ":file-format-descriptor is required") :type
    (common-lisp:or file-format-descriptor common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'sample-data-s3source-config
                    'make-sample-data-s3source-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sample-data-s3source-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sample-data-s3source-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'templated-path-list))
      (common-lisp:list
       (common-lisp:cons "TemplatedPathList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'historical-data-path-list))
      (common-lisp:list
       (common-lisp:cons "HistoricalDataPathList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'file-format-descriptor))
      (common-lisp:list
       (common-lisp:cons "FileFormatDescriptor"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sample-data-s3source-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype sample-row () '(trivial-types:proper-list data-item))
 (common-lisp:defun |make-sample-row|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list data-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype sample-rows () '(trivial-types:proper-list sample-row))
 (common-lisp:defun |make-sample-rows|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list sample-row))
   aws-sdk/generator/shape::members))
(common-lisp:deftype score () 'common-lisp:double-float)
(common-lisp:deftype security-group-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype security-group-id-list ()
   '(trivial-types:proper-list security-group-id))
 (common-lisp:defun |make-security-group-id-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list security-group-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype sensitivity-threshold () 'common-lisp:integer)
(common-lisp:deftype service-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition service-quota-exceeded-exception
     (lookoutmetrics-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-quota-exceeded-exception-message)
      (resource-id :initarg :resource-id :initform common-lisp:nil :reader
       service-quota-exceeded-exception-resource-id)
      (resource-type :initarg :resource-type :initform common-lisp:nil :reader
       service-quota-exceeded-exception-resource-type)
      (quota-code :initarg :quota-code :initform common-lisp:nil :reader
       service-quota-exceeded-exception-quota-code)
      (service-code :initarg :service-code :initform common-lisp:nil :reader
       service-quota-exceeded-exception-service-code)))
 (common-lisp:export
  (common-lisp:list 'service-quota-exceeded-exception
                    'service-quota-exceeded-exception-message
                    'service-quota-exceeded-exception-resource-id
                    'service-quota-exceeded-exception-resource-type
                    'service-quota-exceeded-exception-quota-code
                    'service-quota-exceeded-exception-service-code)))
(common-lisp:deftype sns-format () 'common-lisp:string)
(common-lisp:deftype string-attribute-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype string-list-attribute-value ()
   '(trivial-types:proper-list string-attribute-value))
 (common-lisp:defun |make-string-list-attribute-value|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string-attribute-value))
   aws-sdk/generator/shape::members))
(common-lisp:deftype subnet-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype subnet-id-list () '(trivial-types:proper-list subnet-id))
 (common-lisp:defun |make-subnet-id-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list subnet-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype table-name () 'common-lisp:string)
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun |make-tag-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-map () 'common-lisp:hash-table)
 (common-lisp:defun |make-tag-map| (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or arn common-lisp:null))
   (tags (common-lisp:error ":tags is required") :type
    (common-lisp:or tag-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:deftype templated-path () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype templated-path-list ()
   '(trivial-types:proper-list templated-path))
 (common-lisp:defun |make-templated-path-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list templated-path))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (time-series (:copier common-lisp:nil)
      (:conc-name "struct-shape-time-series-"))
   (time-series-id (common-lisp:error ":time-series-id is required") :type
    (common-lisp:or time-series-id common-lisp:null))
   (dimension-list (common-lisp:error ":dimension-list is required") :type
    (common-lisp:or dimension-name-value-list common-lisp:null))
   (metric-value-list (common-lisp:error ":metric-value-list is required")
    :type (common-lisp:or metric-value-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'time-series 'make-time-series))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input time-series))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input time-series))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'time-series-id))
      (common-lisp:list
       (common-lisp:cons "TimeSeriesId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dimension-list))
      (common-lisp:list
       (common-lisp:cons "DimensionList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-value-list))
      (common-lisp:list
       (common-lisp:cons "MetricValueList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input time-series))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (time-series-feedback (:copier common-lisp:nil)
      (:conc-name "struct-shape-time-series-feedback-"))
   (time-series-id common-lisp:nil :type
    (common-lisp:or time-series-id common-lisp:null))
   (is-anomaly common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'time-series-feedback 'make-time-series-feedback))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input time-series-feedback))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input time-series-feedback))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'time-series-id))
      (common-lisp:list
       (common-lisp:cons "TimeSeriesId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-anomaly))
      (common-lisp:list
       (common-lisp:cons "IsAnomaly"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input time-series-feedback))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype time-series-feedback-list ()
   '(trivial-types:proper-list time-series-feedback))
 (common-lisp:defun |make-time-series-feedback-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list time-series-feedback))
   aws-sdk/generator/shape::members))
(common-lisp:deftype time-series-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype time-series-list ()
   '(trivial-types:proper-list time-series))
 (common-lisp:defun |make-time-series-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list time-series))
   aws-sdk/generator/shape::members))
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (timestamp-column (:copier common-lisp:nil)
      (:conc-name "struct-shape-timestamp-column-"))
   (column-name common-lisp:nil :type
    (common-lisp:or column-name common-lisp:null))
   (column-format common-lisp:nil :type
    (common-lisp:or date-time-format common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'timestamp-column 'make-timestamp-column))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input timestamp-column))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input timestamp-column))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'column-name))
      (common-lisp:list
       (common-lisp:cons "ColumnName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'column-format))
      (common-lisp:list
       (common-lisp:cons "ColumnFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input timestamp-column))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype timestamp-list ()
   '(trivial-types:proper-list timestamp-string))
 (common-lisp:defun |make-timestamp-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list timestamp-string))
   aws-sdk/generator/shape::members))
(common-lisp:deftype timestamp-string () 'common-lisp:string)
(common-lisp:deftype timezone () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition too-many-requests-exception
     (lookoutmetrics-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       too-many-requests-exception-message)))
 (common-lisp:export
  (common-lisp:list 'too-many-requests-exception
                    'too-many-requests-exception-message)))
(common-lisp:deftype uuid () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or arn common-lisp:null))
   (tag-keys (common-lisp:error ":tag-keys is required") :type
    (common-lisp:or tag-key-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-alert-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-alert-request-"))
   (alert-arn (common-lisp:error ":alert-arn is required") :type
    (common-lisp:or arn common-lisp:null))
   (alert-description common-lisp:nil :type
    (common-lisp:or alert-description common-lisp:null))
   (alert-sensitivity-threshold common-lisp:nil :type
    (common-lisp:or sensitivity-threshold common-lisp:null))
   (action common-lisp:nil :type (common-lisp:or action common-lisp:null))
   (alert-filters common-lisp:nil :type
    (common-lisp:or alert-filters common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-alert-request 'make-update-alert-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-alert-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-alert-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alert-arn))
      (common-lisp:list
       (common-lisp:cons "AlertArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alert-description))
      (common-lisp:list
       (common-lisp:cons "AlertDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'alert-sensitivity-threshold))
      (common-lisp:list
       (common-lisp:cons "AlertSensitivityThreshold"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action))
      (common-lisp:list
       (common-lisp:cons "Action"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alert-filters))
      (common-lisp:list
       (common-lisp:cons "AlertFilters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-alert-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-alert-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-alert-response-"))
   (alert-arn common-lisp:nil :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-alert-response 'make-update-alert-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-alert-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-alert-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alert-arn))
      (common-lisp:list
       (common-lisp:cons "AlertArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-alert-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-anomaly-detector-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-anomaly-detector-request-"))
   (anomaly-detector-arn
    (common-lisp:error ":anomaly-detector-arn is required") :type
    (common-lisp:or arn common-lisp:null))
   (kms-key-arn common-lisp:nil :type
    (common-lisp:or kms-key-arn common-lisp:null))
   (anomaly-detector-description common-lisp:nil :type
    (common-lisp:or anomaly-detector-description common-lisp:null))
   (anomaly-detector-config common-lisp:nil :type
    (common-lisp:or anomaly-detector-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-anomaly-detector-request
                    'make-update-anomaly-detector-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-anomaly-detector-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-anomaly-detector-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-detector-arn))
      (common-lisp:list
       (common-lisp:cons "AnomalyDetectorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key-arn))
      (common-lisp:list
       (common-lisp:cons "KmsKeyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-detector-description))
      (common-lisp:list
       (common-lisp:cons "AnomalyDetectorDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-detector-config))
      (common-lisp:list
       (common-lisp:cons "AnomalyDetectorConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-anomaly-detector-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-anomaly-detector-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-anomaly-detector-response-"))
   (anomaly-detector-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-anomaly-detector-response
                    'make-update-anomaly-detector-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-anomaly-detector-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-anomaly-detector-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'anomaly-detector-arn))
      (common-lisp:list
       (common-lisp:cons "AnomalyDetectorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-anomaly-detector-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-metric-set-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-metric-set-request-"))
   (metric-set-arn (common-lisp:error ":metric-set-arn is required") :type
    (common-lisp:or arn common-lisp:null))
   (metric-set-description common-lisp:nil :type
    (common-lisp:or metric-set-description common-lisp:null))
   (metric-list common-lisp:nil :type
    (common-lisp:or metric-list common-lisp:null))
   (offset common-lisp:nil :type (common-lisp:or offset common-lisp:null))
   (timestamp-column common-lisp:nil :type
    (common-lisp:or timestamp-column common-lisp:null))
   (dimension-list common-lisp:nil :type
    (common-lisp:or dimension-list common-lisp:null))
   (metric-set-frequency common-lisp:nil :type
    (common-lisp:or frequency common-lisp:null))
   (metric-source common-lisp:nil :type
    (common-lisp:or metric-source common-lisp:null))
   (dimension-filter-list common-lisp:nil :type
    (common-lisp:or metric-set-dimension-filter-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-metric-set-request
                    'make-update-metric-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-metric-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-metric-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-set-arn))
      (common-lisp:list
       (common-lisp:cons "MetricSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'metric-set-description))
      (common-lisp:list
       (common-lisp:cons "MetricSetDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-list))
      (common-lisp:list
       (common-lisp:cons "MetricList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'offset))
      (common-lisp:list
       (common-lisp:cons "Offset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timestamp-column))
      (common-lisp:list
       (common-lisp:cons "TimestampColumn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dimension-list))
      (common-lisp:list
       (common-lisp:cons "DimensionList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'metric-set-frequency))
      (common-lisp:list
       (common-lisp:cons "MetricSetFrequency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-source))
      (common-lisp:list
       (common-lisp:cons "MetricSource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dimension-filter-list))
      (common-lisp:list
       (common-lisp:cons "DimensionFilterList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-metric-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-metric-set-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-metric-set-response-"))
   (metric-set-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-metric-set-response
                    'make-update-metric-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-metric-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-metric-set-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-set-arn))
      (common-lisp:list
       (common-lisp:cons "MetricSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-metric-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (lookoutmetrics-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       validation-exception-message)
      (reason :initarg :reason :initform common-lisp:nil :reader
       validation-exception-reason)
      (fields :initarg :fields :initform common-lisp:nil :reader
       validation-exception-fields)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-message
                    'validation-exception-reason 'validation-exception-fields)))
(common-lisp:progn
 (common-lisp:defstruct
     (validation-exception-field (:copier common-lisp:nil)
      (:conc-name "struct-shape-validation-exception-field-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or field-name common-lisp:null))
   (message (common-lisp:error ":message is required") :type
    (common-lisp:or message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'validation-exception-field
                    'make-validation-exception-field))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          validation-exception-field))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          validation-exception-field))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          validation-exception-field))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype validation-exception-field-list ()
   '(trivial-types:proper-list validation-exception-field))
 (common-lisp:defun |make-validation-exception-field-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            validation-exception-field))
   aws-sdk/generator/shape::members))
(common-lisp:deftype validation-exception-reason () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (vpc-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-vpc-configuration-"))
   (subnet-id-list (common-lisp:error ":subnet-id-list is required") :type
    (common-lisp:or subnet-id-list common-lisp:null))
   (security-group-id-list
    (common-lisp:error ":security-group-id-list is required") :type
    (common-lisp:or security-group-id-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'vpc-configuration 'make-vpc-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input vpc-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input vpc-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-id-list))
      (common-lisp:list
       (common-lisp:cons "SubnetIdList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'security-group-id-list))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupIdList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input vpc-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defun activate-anomaly-detector
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key anomaly-detector-arn)
   (common-lisp:declare (common-lisp:ignorable anomaly-detector-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-activate-anomaly-detector-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutmetrics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/ActivateAnomalyDetector"
                                                        "ActivateAnomalyDetector"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'activate-anomaly-detector))
(common-lisp:progn
 (common-lisp:defun back-test-anomaly-detector
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key anomaly-detector-arn)
   (common-lisp:declare (common-lisp:ignorable anomaly-detector-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-back-test-anomaly-detector-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutmetrics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/BackTestAnomalyDetector"
                                                        "BackTestAnomalyDetector"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'back-test-anomaly-detector))
(common-lisp:progn
 (common-lisp:defun create-alert
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key alert-name alert-sensitivity-threshold
                     alert-description anomaly-detector-arn action tags
                     alert-filters)
   (common-lisp:declare
    (common-lisp:ignorable alert-name alert-sensitivity-threshold
     alert-description anomaly-detector-arn action tags alert-filters))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-alert-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutmetrics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/CreateAlert"
                                                        "CreateAlert"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-alert))
(common-lisp:progn
 (common-lisp:defun create-anomaly-detector
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key anomaly-detector-name
                     anomaly-detector-description anomaly-detector-config
                     kms-key-arn tags)
   (common-lisp:declare
    (common-lisp:ignorable anomaly-detector-name anomaly-detector-description
     anomaly-detector-config kms-key-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-anomaly-detector-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutmetrics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/CreateAnomalyDetector"
                                                        "CreateAnomalyDetector"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-anomaly-detector))
(common-lisp:progn
 (common-lisp:defun create-metric-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key anomaly-detector-arn metric-set-name
                     metric-set-description metric-list offset timestamp-column
                     dimension-list metric-set-frequency metric-source timezone
                     tags dimension-filter-list)
   (common-lisp:declare
    (common-lisp:ignorable anomaly-detector-arn metric-set-name
     metric-set-description metric-list offset timestamp-column dimension-list
     metric-set-frequency metric-source timezone tags dimension-filter-list))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-metric-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutmetrics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/CreateMetricSet"
                                                        "CreateMetricSet"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-metric-set))
(common-lisp:progn
 (common-lisp:defun deactivate-anomaly-detector
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key anomaly-detector-arn)
   (common-lisp:declare (common-lisp:ignorable anomaly-detector-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-deactivate-anomaly-detector-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutmetrics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/DeactivateAnomalyDetector"
                                                        "DeactivateAnomalyDetector"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'deactivate-anomaly-detector))
(common-lisp:progn
 (common-lisp:defun delete-alert
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key alert-arn)
   (common-lisp:declare (common-lisp:ignorable alert-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-alert-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutmetrics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/DeleteAlert"
                                                        "DeleteAlert"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-alert))
(common-lisp:progn
 (common-lisp:defun delete-anomaly-detector
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key anomaly-detector-arn)
   (common-lisp:declare (common-lisp:ignorable anomaly-detector-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-anomaly-detector-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutmetrics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/DeleteAnomalyDetector"
                                                        "DeleteAnomalyDetector"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-anomaly-detector))
(common-lisp:progn
 (common-lisp:defun describe-alert
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key alert-arn)
   (common-lisp:declare (common-lisp:ignorable alert-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-alert-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutmetrics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/DescribeAlert"
                                                        "DescribeAlert"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-alert))
(common-lisp:progn
 (common-lisp:defun describe-anomaly-detection-executions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key anomaly-detector-arn timestamp
                     max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable anomaly-detector-arn timestamp max-results
     next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-anomaly-detection-executions-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutmetrics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/DescribeAnomalyDetectionExecutions"
                                                        "DescribeAnomalyDetectionExecutions"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-anomaly-detection-executions))
(common-lisp:progn
 (common-lisp:defun describe-anomaly-detector
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key anomaly-detector-arn)
   (common-lisp:declare (common-lisp:ignorable anomaly-detector-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-anomaly-detector-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutmetrics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/DescribeAnomalyDetector"
                                                        "DescribeAnomalyDetector"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-anomaly-detector))
(common-lisp:progn
 (common-lisp:defun describe-metric-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key metric-set-arn)
   (common-lisp:declare (common-lisp:ignorable metric-set-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-metric-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutmetrics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/DescribeMetricSet"
                                                        "DescribeMetricSet"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-metric-set))
(common-lisp:progn
 (common-lisp:defun detect-metric-set-config
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key anomaly-detector-arn
                     auto-detection-metric-source)
   (common-lisp:declare
    (common-lisp:ignorable anomaly-detector-arn auto-detection-metric-source))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-detect-metric-set-config-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutmetrics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/DetectMetricSetConfig"
                                                        "DetectMetricSetConfig"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'detect-metric-set-config))
(common-lisp:progn
 (common-lisp:defun get-anomaly-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key anomaly-group-id anomaly-detector-arn)
   (common-lisp:declare
    (common-lisp:ignorable anomaly-group-id anomaly-detector-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-anomaly-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutmetrics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/GetAnomalyGroup"
                                                        "GetAnomalyGroup"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-anomaly-group))
(common-lisp:progn
 (common-lisp:defun get-data-quality-metrics
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key anomaly-detector-arn metric-set-arn)
   (common-lisp:declare
    (common-lisp:ignorable anomaly-detector-arn metric-set-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-data-quality-metrics-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutmetrics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/GetDataQualityMetrics"
                                                        "GetDataQualityMetrics"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-data-quality-metrics))
(common-lisp:progn
 (common-lisp:defun get-feedback
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key anomaly-detector-arn
                     anomaly-group-time-series-feedback max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable anomaly-detector-arn
     anomaly-group-time-series-feedback max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-feedback-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutmetrics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/GetFeedback"
                                                        "GetFeedback"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-feedback))
(common-lisp:progn
 (common-lisp:defun get-sample-data
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key s3source-config)
   (common-lisp:declare (common-lisp:ignorable s3source-config))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-sample-data-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutmetrics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/GetSampleData"
                                                        "GetSampleData"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-sample-data))
(common-lisp:progn
 (common-lisp:defun list-alerts
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key anomaly-detector-arn next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable anomaly-detector-arn next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-alerts-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutmetrics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/ListAlerts"
                                                        "ListAlerts"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-alerts))
(common-lisp:progn
 (common-lisp:defun list-anomaly-detectors
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-anomaly-detectors-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutmetrics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/ListAnomalyDetectors"
                                                        "ListAnomalyDetectors"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-anomaly-detectors))
(common-lisp:progn
 (common-lisp:defun list-anomaly-group-related-metrics
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key anomaly-detector-arn anomaly-group-id
                     relationship-type-filter max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable anomaly-detector-arn anomaly-group-id
     relationship-type-filter max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-anomaly-group-related-metrics-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutmetrics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/ListAnomalyGroupRelatedMetrics"
                                                        "ListAnomalyGroupRelatedMetrics"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-anomaly-group-related-metrics))
(common-lisp:progn
 (common-lisp:defun list-anomaly-group-summaries
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key anomaly-detector-arn
                     sensitivity-threshold max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable anomaly-detector-arn sensitivity-threshold
     max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-anomaly-group-summaries-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutmetrics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/ListAnomalyGroupSummaries"
                                                        "ListAnomalyGroupSummaries"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-anomaly-group-summaries))
(common-lisp:progn
 (common-lisp:defun list-anomaly-group-time-series
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key anomaly-detector-arn anomaly-group-id
                     metric-name max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable anomaly-detector-arn anomaly-group-id metric-name
     max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-anomaly-group-time-series-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutmetrics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/ListAnomalyGroupTimeSeries"
                                                        "ListAnomalyGroupTimeSeries"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-anomaly-group-time-series))
(common-lisp:progn
 (common-lisp:defun list-metric-sets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key anomaly-detector-arn max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable anomaly-detector-arn max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-metric-sets-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutmetrics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/ListMetricSets"
                                                        "ListMetricSets"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-metric-sets))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutmetrics-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "ListTagsForResource"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun put-feedback
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key anomaly-detector-arn
                     anomaly-group-time-series-feedback)
   (common-lisp:declare
    (common-lisp:ignorable anomaly-detector-arn
     anomaly-group-time-series-feedback))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-feedback-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutmetrics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/PutFeedback"
                                                        "PutFeedback"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-feedback))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutmetrics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "TagResource"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutmetrics-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "UntagResource"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-alert
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key alert-arn alert-description
                     alert-sensitivity-threshold action alert-filters)
   (common-lisp:declare
    (common-lisp:ignorable alert-arn alert-description
     alert-sensitivity-threshold action alert-filters))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-alert-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutmetrics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/UpdateAlert"
                                                        "UpdateAlert"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-alert))
(common-lisp:progn
 (common-lisp:defun update-anomaly-detector
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key anomaly-detector-arn kms-key-arn
                     anomaly-detector-description anomaly-detector-config)
   (common-lisp:declare
    (common-lisp:ignorable anomaly-detector-arn kms-key-arn
     anomaly-detector-description anomaly-detector-config))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-anomaly-detector-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutmetrics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/UpdateAnomalyDetector"
                                                        "UpdateAnomalyDetector"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-anomaly-detector))
(common-lisp:progn
 (common-lisp:defun update-metric-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key metric-set-arn metric-set-description
                     metric-list offset timestamp-column dimension-list
                     metric-set-frequency metric-source dimension-filter-list)
   (common-lisp:declare
    (common-lisp:ignorable metric-set-arn metric-set-description metric-list
     offset timestamp-column dimension-list metric-set-frequency metric-source
     dimension-filter-list))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-metric-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lookoutmetrics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/UpdateMetricSet"
                                                        "UpdateMetricSet"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-metric-set))
