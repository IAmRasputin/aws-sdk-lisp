;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/synthetics/api
  (:use)
  (:nicknames #:aws/synthetics)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/json-request)
  (:import-from #:aws-sdk/rest-json-request)
  (:import-from #:aws-sdk/rest-xml-request)
  (:import-from #:aws-sdk/query-request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/synthetics/api)
(common-lisp:progn
 (common-lisp:define-condition synthetics-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'synthetics-error))
(common-lisp:progn
 (common-lisp:defclass synthetics-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "synthetics" :api-version
                        "2017-10-11" :host-prefix "synthetics" :signing-name
                        "synthetics" :global-host common-lisp:nil))
 (common-lisp:export 'synthetics-request))
(common-lisp:defvar *error-map*
  '(("BadRequestException" . bad-request-exception)
    ("ConflictException" . conflict-exception)
    ("InternalFailureException" . internal-failure-exception)
    ("InternalServerException" . internal-server-exception)
    ("NotFoundException" . not-found-exception)
    ("RequestEntityTooLargeException" . request-entity-too-large-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceQuotaExceededException" . service-quota-exceeded-exception)
    ("TooManyRequestsException" . too-many-requests-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:progn
 (common-lisp:defstruct
     (artifact-config-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-artifact-config-input-"))
   (s3encryption common-lisp:nil :type
    (common-lisp:or s3encryption-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'artifact-config-input 'make-artifact-config-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          artifact-config-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          artifact-config-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3encryption))
      (common-lisp:list
       (common-lisp:cons "S3Encryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          artifact-config-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (artifact-config-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-artifact-config-output-"))
   (s3encryption common-lisp:nil :type
    (common-lisp:or s3encryption-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'artifact-config-output 'make-artifact-config-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          artifact-config-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          artifact-config-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3encryption))
      (common-lisp:list
       (common-lisp:cons "S3Encryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          artifact-config-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-associate-resource-request-"))
   (group-identifier (common-lisp:error ":group-identifier is required") :type
    (common-lisp:or group-identifier common-lisp:null))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or canary-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'associate-resource-request
                    'make-associate-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-associate-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'associate-resource-response
                    'make-associate-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition bad-request-exception
     (synthetics-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       bad-request-exception-message)))
 (common-lisp:export
  (common-lisp:list 'bad-request-exception 'bad-request-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (base-screenshot (:copier common-lisp:nil)
      (:conc-name "struct-shape-base-screenshot-"))
   (screenshot-name (common-lisp:error ":screenshot-name is required") :type
    (common-lisp:or string common-lisp:null))
   (ignore-coordinates common-lisp:nil :type
    (common-lisp:or base-screenshot-ignore-coordinates common-lisp:null)))
 (common-lisp:export (common-lisp:list 'base-screenshot 'make-base-screenshot))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input base-screenshot))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input base-screenshot))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'screenshot-name))
      (common-lisp:list
       (common-lisp:cons "ScreenshotName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ignore-coordinates))
      (common-lisp:list
       (common-lisp:cons "IgnoreCoordinates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input base-screenshot))
   common-lisp:nil))
(common-lisp:deftype base-screenshot-config-ignore-coordinate ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype base-screenshot-ignore-coordinates ()
   '(trivial-types:proper-list base-screenshot-config-ignore-coordinate))
 (common-lisp:defun make-base-screenshot-ignore-coordinates
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            base-screenshot-config-ignore-coordinate))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype base-screenshots ()
   '(trivial-types:proper-list base-screenshot))
 (common-lisp:defun make-base-screenshots
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list base-screenshot))
   aws-sdk/generator/shape::members))
(common-lisp:deftype blob ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:progn
 (common-lisp:deftype canaries () '(trivial-types:proper-list canary))
 (common-lisp:defun make-canaries
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list canary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype canaries-last-run ()
   '(trivial-types:proper-list canary-last-run))
 (common-lisp:defun make-canaries-last-run
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list canary-last-run))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (canary (:copier common-lisp:nil) (:conc-name "struct-shape-canary-"))
   (id common-lisp:nil :type (common-lisp:or uuid common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or canary-name common-lisp:null))
   (code common-lisp:nil :type
    (common-lisp:or canary-code-output common-lisp:null))
   (execution-role-arn common-lisp:nil :type
    (common-lisp:or role-arn common-lisp:null))
   (schedule common-lisp:nil :type
    (common-lisp:or canary-schedule-output common-lisp:null))
   (run-config common-lisp:nil :type
    (common-lisp:or canary-run-config-output common-lisp:null))
   (success-retention-period-in-days common-lisp:nil :type
    (common-lisp:or max-size1024 common-lisp:null))
   (failure-retention-period-in-days common-lisp:nil :type
    (common-lisp:or max-size1024 common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or canary-status common-lisp:null))
   (timeline common-lisp:nil :type
    (common-lisp:or canary-timeline common-lisp:null))
   (artifact-s3location common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (engine-arn common-lisp:nil :type
    (common-lisp:or function-arn common-lisp:null))
   (runtime-version common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (vpc-config common-lisp:nil :type
    (common-lisp:or vpc-config-output common-lisp:null))
   (visual-reference common-lisp:nil :type
    (common-lisp:or visual-reference-output common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-map common-lisp:null))
   (artifact-config common-lisp:nil :type
    (common-lisp:or artifact-config-output common-lisp:null)))
 (common-lisp:export (common-lisp:list 'canary 'make-canary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input canary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input canary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'code))
      (common-lisp:list
       (common-lisp:cons "Code"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'execution-role-arn))
      (common-lisp:list
       (common-lisp:cons "ExecutionRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schedule))
      (common-lisp:list
       (common-lisp:cons "Schedule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'run-config))
      (common-lisp:list
       (common-lisp:cons "RunConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'success-retention-period-in-days))
      (common-lisp:list
       (common-lisp:cons "SuccessRetentionPeriodInDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'failure-retention-period-in-days))
      (common-lisp:list
       (common-lisp:cons "FailureRetentionPeriodInDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timeline))
      (common-lisp:list
       (common-lisp:cons "Timeline"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'artifact-s3location))
      (common-lisp:list
       (common-lisp:cons "ArtifactS3Location"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-arn))
      (common-lisp:list
       (common-lisp:cons "EngineArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'runtime-version))
      (common-lisp:list
       (common-lisp:cons "RuntimeVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'visual-reference))
      (common-lisp:list
       (common-lisp:cons "VisualReference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'artifact-config))
      (common-lisp:list
       (common-lisp:cons "ArtifactConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input canary))
   common-lisp:nil))
(common-lisp:deftype canary-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (canary-code-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-canary-code-input-"))
   (s3bucket common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (s3key common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (s3version common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (zip-file common-lisp:nil :type (common-lisp:or blob common-lisp:null))
   (handler (common-lisp:error ":handler is required") :type
    (common-lisp:or code-handler common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'canary-code-input 'make-canary-code-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input canary-code-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input canary-code-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3bucket))
      (common-lisp:list
       (common-lisp:cons "S3Bucket"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3key))
      (common-lisp:list
       (common-lisp:cons "S3Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3version))
      (common-lisp:list
       (common-lisp:cons "S3Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'zip-file))
      (common-lisp:list
       (common-lisp:cons "ZipFile"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'handler))
      (common-lisp:list
       (common-lisp:cons "Handler"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input canary-code-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (canary-code-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-canary-code-output-"))
   (source-location-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (handler common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'canary-code-output 'make-canary-code-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input canary-code-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input canary-code-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-location-arn))
      (common-lisp:list
       (common-lisp:cons "SourceLocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'handler))
      (common-lisp:list
       (common-lisp:cons "Handler"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input canary-code-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (canary-last-run (:copier common-lisp:nil)
      (:conc-name "struct-shape-canary-last-run-"))
   (canary-name common-lisp:nil :type
    (common-lisp:or canary-name common-lisp:null))
   (last-run common-lisp:nil :type
    (common-lisp:or canary-run common-lisp:null)))
 (common-lisp:export (common-lisp:list 'canary-last-run 'make-canary-last-run))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input canary-last-run))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input canary-last-run))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'canary-name))
      (common-lisp:list
       (common-lisp:cons "CanaryName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-run))
      (common-lisp:list
       (common-lisp:cons "LastRun"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input canary-last-run))
   common-lisp:nil))
(common-lisp:deftype canary-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (canary-run (:copier common-lisp:nil)
      (:conc-name "struct-shape-canary-run-"))
   (id common-lisp:nil :type (common-lisp:or uuid common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or canary-name common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or canary-run-status common-lisp:null))
   (timeline common-lisp:nil :type
    (common-lisp:or canary-run-timeline common-lisp:null))
   (artifact-s3location common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'canary-run 'make-canary-run))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input canary-run))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input canary-run))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timeline))
      (common-lisp:list
       (common-lisp:cons "Timeline"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'artifact-s3location))
      (common-lisp:list
       (common-lisp:cons "ArtifactS3Location"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input canary-run))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (canary-run-config-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-canary-run-config-input-"))
   (timeout-in-seconds common-lisp:nil :type
    (common-lisp:or max-fifteen-minutes-in-seconds common-lisp:null))
   (memory-in-mb common-lisp:nil :type
    (common-lisp:or max-size3008 common-lisp:null))
   (active-tracing common-lisp:nil :type
    (common-lisp:or nullable-boolean common-lisp:null))
   (environment-variables common-lisp:nil :type
    (common-lisp:or environment-variables-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'canary-run-config-input 'make-canary-run-config-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          canary-run-config-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          canary-run-config-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timeout-in-seconds))
      (common-lisp:list
       (common-lisp:cons "TimeoutInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'memory-in-mb))
      (common-lisp:list
       (common-lisp:cons "MemoryInMB"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'active-tracing))
      (common-lisp:list
       (common-lisp:cons "ActiveTracing"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'environment-variables))
      (common-lisp:list
       (common-lisp:cons "EnvironmentVariables"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          canary-run-config-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (canary-run-config-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-canary-run-config-output-"))
   (timeout-in-seconds common-lisp:nil :type
    (common-lisp:or max-fifteen-minutes-in-seconds common-lisp:null))
   (memory-in-mb common-lisp:nil :type
    (common-lisp:or max-size3008 common-lisp:null))
   (active-tracing common-lisp:nil :type
    (common-lisp:or nullable-boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'canary-run-config-output 'make-canary-run-config-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          canary-run-config-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          canary-run-config-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timeout-in-seconds))
      (common-lisp:list
       (common-lisp:cons "TimeoutInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'memory-in-mb))
      (common-lisp:list
       (common-lisp:cons "MemoryInMB"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'active-tracing))
      (common-lisp:list
       (common-lisp:cons "ActiveTracing"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          canary-run-config-output))
   common-lisp:nil))
(common-lisp:deftype canary-run-state () 'common-lisp:string)
(common-lisp:deftype canary-run-state-reason-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (canary-run-status (:copier common-lisp:nil)
      (:conc-name "struct-shape-canary-run-status-"))
   (state common-lisp:nil :type
    (common-lisp:or canary-run-state common-lisp:null))
   (state-reason common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (state-reason-code common-lisp:nil :type
    (common-lisp:or canary-run-state-reason-code common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'canary-run-status 'make-canary-run-status))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input canary-run-status))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input canary-run-status))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state-reason))
      (common-lisp:list
       (common-lisp:cons "StateReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state-reason-code))
      (common-lisp:list
       (common-lisp:cons "StateReasonCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input canary-run-status))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (canary-run-timeline (:copier common-lisp:nil)
      (:conc-name "struct-shape-canary-run-timeline-"))
   (started common-lisp:nil :type (common-lisp:or timestamp common-lisp:null))
   (completed common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'canary-run-timeline 'make-canary-run-timeline))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input canary-run-timeline))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input canary-run-timeline))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'started))
      (common-lisp:list
       (common-lisp:cons "Started"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'completed))
      (common-lisp:list
       (common-lisp:cons "Completed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input canary-run-timeline))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype canary-runs () '(trivial-types:proper-list canary-run))
 (common-lisp:defun make-canary-runs
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list canary-run))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (canary-schedule-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-canary-schedule-input-"))
   (expression (common-lisp:error ":expression is required") :type
    (common-lisp:or string common-lisp:null))
   (duration-in-seconds common-lisp:nil :type
    (common-lisp:or max-one-year-in-seconds common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'canary-schedule-input 'make-canary-schedule-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          canary-schedule-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          canary-schedule-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expression))
      (common-lisp:list
       (common-lisp:cons "Expression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'duration-in-seconds))
      (common-lisp:list
       (common-lisp:cons "DurationInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          canary-schedule-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (canary-schedule-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-canary-schedule-output-"))
   (expression common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (duration-in-seconds common-lisp:nil :type
    (common-lisp:or max-one-year-in-seconds common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'canary-schedule-output 'make-canary-schedule-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          canary-schedule-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          canary-schedule-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expression))
      (common-lisp:list
       (common-lisp:cons "Expression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'duration-in-seconds))
      (common-lisp:list
       (common-lisp:cons "DurationInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          canary-schedule-output))
   common-lisp:nil))
(common-lisp:deftype canary-state () 'common-lisp:string)
(common-lisp:deftype canary-state-reason-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (canary-status (:copier common-lisp:nil)
      (:conc-name "struct-shape-canary-status-"))
   (state common-lisp:nil :type (common-lisp:or canary-state common-lisp:null))
   (state-reason common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (state-reason-code common-lisp:nil :type
    (common-lisp:or canary-state-reason-code common-lisp:null)))
 (common-lisp:export (common-lisp:list 'canary-status 'make-canary-status))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input canary-status))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input canary-status))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state-reason))
      (common-lisp:list
       (common-lisp:cons "StateReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state-reason-code))
      (common-lisp:list
       (common-lisp:cons "StateReasonCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input canary-status))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (canary-timeline (:copier common-lisp:nil)
      (:conc-name "struct-shape-canary-timeline-"))
   (created common-lisp:nil :type (common-lisp:or timestamp common-lisp:null))
   (last-modified common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (last-started common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (last-stopped common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'canary-timeline 'make-canary-timeline))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input canary-timeline))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input canary-timeline))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created))
      (common-lisp:list
       (common-lisp:cons "Created"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified))
      (common-lisp:list
       (common-lisp:cons "LastModified"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-started))
      (common-lisp:list
       (common-lisp:cons "LastStarted"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-stopped))
      (common-lisp:list
       (common-lisp:cons "LastStopped"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input canary-timeline))
   common-lisp:nil))
(common-lisp:deftype code-handler () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (synthetics-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (create-canary-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-canary-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or canary-name common-lisp:null))
   (code (common-lisp:error ":code is required") :type
    (common-lisp:or canary-code-input common-lisp:null))
   (artifact-s3location (common-lisp:error ":artifact-s3location is required")
    :type (common-lisp:or string common-lisp:null))
   (execution-role-arn (common-lisp:error ":execution-role-arn is required")
    :type (common-lisp:or role-arn common-lisp:null))
   (schedule (common-lisp:error ":schedule is required") :type
    (common-lisp:or canary-schedule-input common-lisp:null))
   (run-config common-lisp:nil :type
    (common-lisp:or canary-run-config-input common-lisp:null))
   (success-retention-period-in-days common-lisp:nil :type
    (common-lisp:or max-size1024 common-lisp:null))
   (failure-retention-period-in-days common-lisp:nil :type
    (common-lisp:or max-size1024 common-lisp:null))
   (runtime-version (common-lisp:error ":runtime-version is required") :type
    (common-lisp:or string common-lisp:null))
   (vpc-config common-lisp:nil :type
    (common-lisp:or vpc-config-input common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-map common-lisp:null))
   (artifact-config common-lisp:nil :type
    (common-lisp:or artifact-config-input common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-canary-request 'make-create-canary-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-canary-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-canary-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'code))
      (common-lisp:list
       (common-lisp:cons "Code"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'artifact-s3location))
      (common-lisp:list
       (common-lisp:cons "ArtifactS3Location"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'execution-role-arn))
      (common-lisp:list
       (common-lisp:cons "ExecutionRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schedule))
      (common-lisp:list
       (common-lisp:cons "Schedule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'run-config))
      (common-lisp:list
       (common-lisp:cons "RunConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'success-retention-period-in-days))
      (common-lisp:list
       (common-lisp:cons "SuccessRetentionPeriodInDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'failure-retention-period-in-days))
      (common-lisp:list
       (common-lisp:cons "FailureRetentionPeriodInDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'runtime-version))
      (common-lisp:list
       (common-lisp:cons "RuntimeVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'artifact-config))
      (common-lisp:list
       (common-lisp:cons "ArtifactConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-canary-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-canary-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-canary-response-"))
   (canary common-lisp:nil :type (common-lisp:or canary common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-canary-response 'make-create-canary-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-canary-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-canary-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'canary))
      (common-lisp:list
       (common-lisp:cons "Canary"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-canary-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-group-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-group-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or group-name common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-group-request 'make-create-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-group-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-group-response-"))
   (group common-lisp:nil :type (common-lisp:or group common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-group-response 'make-create-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group))
      (common-lisp:list
       (common-lisp:cons "Group"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-canary-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-canary-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or canary-name common-lisp:null))
   (delete-lambda common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-canary-request 'make-delete-canary-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-canary-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-canary-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-canary-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-canary-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-canary-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-canary-response 'make-delete-canary-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-canary-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-canary-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-canary-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-group-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-group-request-"))
   (group-identifier (common-lisp:error ":group-identifier is required") :type
    (common-lisp:or group-identifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-group-request 'make-delete-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-group-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-group-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-group-response 'make-delete-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype describe-canaries-last-run-name-filter ()
   '(trivial-types:proper-list canary-name))
 (common-lisp:defun make-describe-canaries-last-run-name-filter
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list canary-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-canaries-last-run-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-canaries-last-run-request-"))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-size100 common-lisp:null))
   (names common-lisp:nil :type
    (common-lisp:or describe-canaries-last-run-name-filter common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-canaries-last-run-request
                    'make-describe-canaries-last-run-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-canaries-last-run-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-canaries-last-run-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'names))
      (common-lisp:list
       (common-lisp:cons "Names"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-canaries-last-run-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-canaries-last-run-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-canaries-last-run-response-"))
   (canaries-last-run common-lisp:nil :type
    (common-lisp:or canaries-last-run common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-canaries-last-run-response
                    'make-describe-canaries-last-run-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-canaries-last-run-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-canaries-last-run-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'canaries-last-run))
      (common-lisp:list
       (common-lisp:cons "CanariesLastRun"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-canaries-last-run-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype describe-canaries-name-filter ()
   '(trivial-types:proper-list canary-name))
 (common-lisp:defun make-describe-canaries-name-filter
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list canary-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-canaries-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-canaries-request-"))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-canary-results common-lisp:null))
   (names common-lisp:nil :type
    (common-lisp:or describe-canaries-name-filter common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-canaries-request
                    'make-describe-canaries-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-canaries-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-canaries-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'names))
      (common-lisp:list
       (common-lisp:cons "Names"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-canaries-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-canaries-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-canaries-response-"))
   (canaries common-lisp:nil :type (common-lisp:or canaries common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-canaries-response
                    'make-describe-canaries-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-canaries-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-canaries-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'canaries))
      (common-lisp:list
       (common-lisp:cons "Canaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-canaries-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-runtime-versions-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-runtime-versions-request-"))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-size100 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-runtime-versions-request
                    'make-describe-runtime-versions-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-runtime-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-runtime-versions-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-runtime-versions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-runtime-versions-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-runtime-versions-response-"))
   (runtime-versions common-lisp:nil :type
    (common-lisp:or runtime-version-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-runtime-versions-response
                    'make-describe-runtime-versions-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-runtime-versions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-runtime-versions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'runtime-versions))
      (common-lisp:list
       (common-lisp:cons "RuntimeVersions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-runtime-versions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-disassociate-resource-request-"))
   (group-identifier (common-lisp:error ":group-identifier is required") :type
    (common-lisp:or group-identifier common-lisp:null))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or canary-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disassociate-resource-request
                    'make-disassociate-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-disassociate-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'disassociate-resource-response
                    'make-disassociate-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-resource-response))
   common-lisp:nil))
(common-lisp:deftype encryption-mode () 'common-lisp:string)
(common-lisp:deftype environment-variable-name () 'common-lisp:string)
(common-lisp:deftype environment-variable-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype environment-variables-map () 'common-lisp:hash-table)
 (common-lisp:defun make-environment-variables-map
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype error-message () 'common-lisp:string)
(common-lisp:deftype function-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (get-canary-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-canary-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or canary-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-canary-request 'make-get-canary-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-canary-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-canary-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-canary-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-canary-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-canary-response-"))
   (canary common-lisp:nil :type (common-lisp:or canary common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-canary-response 'make-get-canary-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-canary-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-canary-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'canary))
      (common-lisp:list
       (common-lisp:cons "Canary"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-canary-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-canary-runs-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-canary-runs-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or canary-name common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-size100 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-canary-runs-request 'make-get-canary-runs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-canary-runs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-canary-runs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-canary-runs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-canary-runs-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-canary-runs-response-"))
   (canary-runs common-lisp:nil :type
    (common-lisp:or canary-runs common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-canary-runs-response 'make-get-canary-runs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-canary-runs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-canary-runs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'canary-runs))
      (common-lisp:list
       (common-lisp:cons "CanaryRuns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-canary-runs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-group-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-group-request-"))
   (group-identifier (common-lisp:error ":group-identifier is required") :type
    (common-lisp:or group-identifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-group-request 'make-get-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-group-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-group-response-"))
   (group common-lisp:nil :type (common-lisp:or group common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-group-response 'make-get-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group))
      (common-lisp:list
       (common-lisp:cons "Group"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (group (:copier common-lisp:nil) (:conc-name "struct-shape-group-"))
   (id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or group-name common-lisp:null))
   (arn common-lisp:nil :type (common-lisp:or group-arn common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-map common-lisp:null))
   (created-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (last-modified-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'group 'make-group))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input group))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input group))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-time))
      (common-lisp:list
       (common-lisp:cons "CreatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input group))
   common-lisp:nil))
(common-lisp:deftype group-arn () 'common-lisp:string)
(common-lisp:deftype group-identifier () 'common-lisp:string)
(common-lisp:deftype group-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (group-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-group-summary-"))
   (id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or group-name common-lisp:null))
   (arn common-lisp:nil :type (common-lisp:or group-arn common-lisp:null)))
 (common-lisp:export (common-lisp:list 'group-summary 'make-group-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input group-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input group-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input group-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype group-summary-list ()
   '(trivial-types:proper-list group-summary))
 (common-lisp:defun make-group-summary-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list group-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition internal-failure-exception
     (synthetics-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-failure-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-failure-exception
                    'internal-failure-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (synthetics-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-message)))
(common-lisp:deftype kms-key-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (list-associated-groups-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-associated-groups-request-"))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-group-results common-lisp:null))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or canary-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-associated-groups-request
                    'make-list-associated-groups-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-associated-groups-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-associated-groups-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-associated-groups-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-associated-groups-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-associated-groups-response-"))
   (groups common-lisp:nil :type
    (common-lisp:or group-summary-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-associated-groups-response
                    'make-list-associated-groups-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-associated-groups-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-associated-groups-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'groups))
      (common-lisp:list
       (common-lisp:cons "Groups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-associated-groups-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-group-resources-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-group-resources-request-"))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-group-results common-lisp:null))
   (group-identifier (common-lisp:error ":group-identifier is required") :type
    (common-lisp:or group-identifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-group-resources-request
                    'make-list-group-resources-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-group-resources-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-group-resources-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-group-resources-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-group-resources-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-group-resources-response-"))
   (resources common-lisp:nil :type
    (common-lisp:or string-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-group-resources-response
                    'make-list-group-resources-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-group-resources-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-group-resources-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resources))
      (common-lisp:list
       (common-lisp:cons "Resources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-group-resources-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-groups-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-groups-request-"))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-group-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-groups-request 'make-list-groups-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-groups-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-groups-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-groups-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-groups-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-groups-response-"))
   (groups common-lisp:nil :type
    (common-lisp:or group-summary-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-groups-response 'make-list-groups-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-groups-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-groups-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'groups))
      (common-lisp:list
       (common-lisp:cons "Groups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-groups-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or resource-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-response-"))
   (tags common-lisp:nil :type (common-lisp:or tag-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:deftype max-canary-results () 'common-lisp:integer)
(common-lisp:deftype max-fifteen-minutes-in-seconds () 'common-lisp:integer)
(common-lisp:deftype max-group-results () 'common-lisp:integer)
(common-lisp:deftype max-one-year-in-seconds () 'common-lisp:integer)
(common-lisp:deftype max-size100 () 'common-lisp:integer)
(common-lisp:deftype max-size1024 () 'common-lisp:integer)
(common-lisp:deftype max-size3008 () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition not-found-exception
     (synthetics-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'not-found-exception 'not-found-exception-message)))
(common-lisp:deftype nullable-boolean () 'common-lisp:boolean)
(common-lisp:deftype pagination-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition request-entity-too-large-exception
     (synthetics-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       request-entity-too-large-exception-message)))
 (common-lisp:export
  (common-lisp:list 'request-entity-too-large-exception
                    'request-entity-too-large-exception-message)))
(common-lisp:deftype resource-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (synthetics-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:deftype role-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (runtime-version (:copier common-lisp:nil)
      (:conc-name "struct-shape-runtime-version-"))
   (version-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (release-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (deprecation-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'runtime-version 'make-runtime-version))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input runtime-version))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input runtime-version))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version-name))
      (common-lisp:list
       (common-lisp:cons "VersionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'release-date))
      (common-lisp:list
       (common-lisp:cons "ReleaseDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deprecation-date))
      (common-lisp:list
       (common-lisp:cons "DeprecationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input runtime-version))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype runtime-version-list ()
   '(trivial-types:proper-list runtime-version))
 (common-lisp:defun make-runtime-version-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list runtime-version))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (s3encryption-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-s3encryption-config-"))
   (encryption-mode common-lisp:nil :type
    (common-lisp:or encryption-mode common-lisp:null))
   (kms-key-arn common-lisp:nil :type
    (common-lisp:or kms-key-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 's3encryption-config 'make-s3encryption-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input s3encryption-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input s3encryption-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption-mode))
      (common-lisp:list
       (common-lisp:cons "EncryptionMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key-arn))
      (common-lisp:list
       (common-lisp:cons "KmsKeyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input s3encryption-config))
   common-lisp:nil))
(common-lisp:deftype security-group-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype security-group-ids ()
   '(trivial-types:proper-list security-group-id))
 (common-lisp:defun make-security-group-ids
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list security-group-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition service-quota-exceeded-exception
     (synthetics-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-quota-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-quota-exceeded-exception
                    'service-quota-exceeded-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (start-canary-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-canary-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or canary-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-canary-request 'make-start-canary-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input start-canary-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input start-canary-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input start-canary-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-canary-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-canary-response-")))
 (common-lisp:export
  (common-lisp:list 'start-canary-response 'make-start-canary-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-canary-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-canary-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-canary-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-canary-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-stop-canary-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or canary-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-canary-request 'make-stop-canary-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stop-canary-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stop-canary-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stop-canary-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-canary-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-stop-canary-response-")))
 (common-lisp:export
  (common-lisp:list 'stop-canary-response 'make-stop-canary-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stop-canary-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stop-canary-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stop-canary-response))
   common-lisp:nil))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype string-list () '(trivial-types:proper-list string))
 (common-lisp:defun make-string-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:deftype subnet-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype subnet-ids () '(trivial-types:proper-list subnet-id))
 (common-lisp:defun make-subnet-ids
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list subnet-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun make-tag-key-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-map () 'common-lisp:hash-table)
 (common-lisp:defun make-tag-map (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or resource-arn common-lisp:null))
   (tags (common-lisp:error ":tags is required") :type
    (common-lisp:or tag-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:deftype token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition too-many-requests-exception
     (synthetics-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       too-many-requests-exception-message)))
 (common-lisp:export
  (common-lisp:list 'too-many-requests-exception
                    'too-many-requests-exception-message)))
(common-lisp:deftype uuid () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or resource-arn common-lisp:null))
   (tag-keys (common-lisp:error ":tag-keys is required") :type
    (common-lisp:or tag-key-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-canary-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-canary-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or canary-name common-lisp:null))
   (code common-lisp:nil :type
    (common-lisp:or canary-code-input common-lisp:null))
   (execution-role-arn common-lisp:nil :type
    (common-lisp:or role-arn common-lisp:null))
   (runtime-version common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (schedule common-lisp:nil :type
    (common-lisp:or canary-schedule-input common-lisp:null))
   (run-config common-lisp:nil :type
    (common-lisp:or canary-run-config-input common-lisp:null))
   (success-retention-period-in-days common-lisp:nil :type
    (common-lisp:or max-size1024 common-lisp:null))
   (failure-retention-period-in-days common-lisp:nil :type
    (common-lisp:or max-size1024 common-lisp:null))
   (vpc-config common-lisp:nil :type
    (common-lisp:or vpc-config-input common-lisp:null))
   (visual-reference common-lisp:nil :type
    (common-lisp:or visual-reference-input common-lisp:null))
   (artifact-s3location common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (artifact-config common-lisp:nil :type
    (common-lisp:or artifact-config-input common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-canary-request 'make-update-canary-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-canary-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-canary-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'code))
      (common-lisp:list
       (common-lisp:cons "Code"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'execution-role-arn))
      (common-lisp:list
       (common-lisp:cons "ExecutionRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'runtime-version))
      (common-lisp:list
       (common-lisp:cons "RuntimeVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schedule))
      (common-lisp:list
       (common-lisp:cons "Schedule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'run-config))
      (common-lisp:list
       (common-lisp:cons "RunConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'success-retention-period-in-days))
      (common-lisp:list
       (common-lisp:cons "SuccessRetentionPeriodInDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'failure-retention-period-in-days))
      (common-lisp:list
       (common-lisp:cons "FailureRetentionPeriodInDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'visual-reference))
      (common-lisp:list
       (common-lisp:cons "VisualReference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'artifact-s3location))
      (common-lisp:list
       (common-lisp:cons "ArtifactS3Location"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'artifact-config))
      (common-lisp:list
       (common-lisp:cons "ArtifactConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-canary-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-canary-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-canary-response-")))
 (common-lisp:export
  (common-lisp:list 'update-canary-response 'make-update-canary-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-canary-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-canary-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-canary-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (synthetics-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       validation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (visual-reference-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-visual-reference-input-"))
   (base-screenshots common-lisp:nil :type
    (common-lisp:or base-screenshots common-lisp:null))
   (base-canary-run-id (common-lisp:error ":base-canary-run-id is required")
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'visual-reference-input 'make-visual-reference-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          visual-reference-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          visual-reference-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'base-screenshots))
      (common-lisp:list
       (common-lisp:cons "BaseScreenshots"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'base-canary-run-id))
      (common-lisp:list
       (common-lisp:cons "BaseCanaryRunId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          visual-reference-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (visual-reference-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-visual-reference-output-"))
   (base-screenshots common-lisp:nil :type
    (common-lisp:or base-screenshots common-lisp:null))
   (base-canary-run-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'visual-reference-output 'make-visual-reference-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          visual-reference-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          visual-reference-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'base-screenshots))
      (common-lisp:list
       (common-lisp:cons "BaseScreenshots"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'base-canary-run-id))
      (common-lisp:list
       (common-lisp:cons "BaseCanaryRunId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          visual-reference-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (vpc-config-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-vpc-config-input-"))
   (subnet-ids common-lisp:nil :type
    (common-lisp:or subnet-ids common-lisp:null))
   (security-group-ids common-lisp:nil :type
    (common-lisp:or security-group-ids common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'vpc-config-input 'make-vpc-config-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input vpc-config-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input vpc-config-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-ids))
      (common-lisp:list
       (common-lisp:cons "SubnetIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-ids))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input vpc-config-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (vpc-config-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-vpc-config-output-"))
   (vpc-id common-lisp:nil :type (common-lisp:or vpc-id common-lisp:null))
   (subnet-ids common-lisp:nil :type
    (common-lisp:or subnet-ids common-lisp:null))
   (security-group-ids common-lisp:nil :type
    (common-lisp:or security-group-ids common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'vpc-config-output 'make-vpc-config-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input vpc-config-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input vpc-config-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-id))
      (common-lisp:list
       (common-lisp:cons "VpcId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-ids))
      (common-lisp:list
       (common-lisp:cons "SubnetIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-ids))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input vpc-config-output))
   common-lisp:nil))
(common-lisp:deftype vpc-id () 'common-lisp:string)
common-lisp:nil
(common-lisp:progn
 (common-lisp:defun associate-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key group-identifier resource-arn)
   (common-lisp:declare (common-lisp:ignorable group-identifier resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-associate-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'synthetics-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/group/~A/associate"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'group-identifier))))
                                                        "AssociateResource"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'associate-resource))
(common-lisp:progn
 (common-lisp:defun create-canary
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name code artifact-s3location
                     execution-role-arn schedule run-config
                     success-retention-period-in-days
                     failure-retention-period-in-days runtime-version
                     vpc-config tags artifact-config)
   (common-lisp:declare
    (common-lisp:ignorable name code artifact-s3location execution-role-arn
     schedule run-config success-retention-period-in-days
     failure-retention-period-in-days runtime-version vpc-config tags
     artifact-config))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-canary-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'synthetics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/canary"
                                                        "CreateCanary"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-canary))
(common-lisp:progn
 (common-lisp:defun create-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name tags)
   (common-lisp:declare (common-lisp:ignorable name tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'synthetics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/group"
                                                        "CreateGroup"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-group))
(common-lisp:progn
 (common-lisp:defun delete-canary
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name delete-lambda)
   (common-lisp:declare (common-lisp:ignorable name delete-lambda))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-canary-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'synthetics-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/canary/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "DeleteCanary"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-canary))
(common-lisp:progn
 (common-lisp:defun delete-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key group-identifier)
   (common-lisp:declare (common-lisp:ignorable group-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'synthetics-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/group/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'group-identifier))))
                                                        "DeleteGroup"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-group))
(common-lisp:progn
 (common-lisp:defun describe-canaries
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results names)
   (common-lisp:declare (common-lisp:ignorable next-token max-results names))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-canaries-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'synthetics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/canaries"
                                                        "DescribeCanaries"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-canaries))
(common-lisp:progn
 (common-lisp:defun describe-canaries-last-run
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results names)
   (common-lisp:declare (common-lisp:ignorable next-token max-results names))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-canaries-last-run-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'synthetics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/canaries/last-run"
                                                        "DescribeCanariesLastRun"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-canaries-last-run))
(common-lisp:progn
 (common-lisp:defun describe-runtime-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-runtime-versions-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'synthetics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/runtime-versions"
                                                        "DescribeRuntimeVersions"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-runtime-versions))
(common-lisp:progn
 (common-lisp:defun disassociate-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key group-identifier resource-arn)
   (common-lisp:declare (common-lisp:ignorable group-identifier resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-disassociate-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'synthetics-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/group/~A/disassociate"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'group-identifier))))
                                                        "DisassociateResource"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'disassociate-resource))
(common-lisp:progn
 (common-lisp:defun get-canary
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-canary-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'synthetics-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/canary/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "GetCanary"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-canary))
(common-lisp:progn
 (common-lisp:defun get-canary-runs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name next-token max-results)
   (common-lisp:declare (common-lisp:ignorable name next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-canary-runs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'synthetics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/canary/~A/runs"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "GetCanaryRuns"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-canary-runs))
(common-lisp:progn
 (common-lisp:defun get-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key group-identifier)
   (common-lisp:declare (common-lisp:ignorable group-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'synthetics-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/group/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'group-identifier))))
                                                        "GetGroup"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-group))
(common-lisp:progn
 (common-lisp:defun list-associated-groups
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results resource-arn)
   (common-lisp:declare
    (common-lisp:ignorable next-token max-results resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-associated-groups-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'synthetics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/resource/~A/groups"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "ListAssociatedGroups"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-associated-groups))
(common-lisp:progn
 (common-lisp:defun list-group-resources
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results group-identifier)
   (common-lisp:declare
    (common-lisp:ignorable next-token max-results group-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-group-resources-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'synthetics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/group/~A/resources"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'group-identifier))))
                                                        "ListGroupResources"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-group-resources))
(common-lisp:progn
 (common-lisp:defun list-groups
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-groups-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'synthetics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/groups"
                                                        "ListGroups"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-groups))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'synthetics-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "ListTagsForResource"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun start-canary
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-canary-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'synthetics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/canary/~A/start"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "StartCanary"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-canary))
(common-lisp:progn
 (common-lisp:defun stop-canary
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-stop-canary-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'synthetics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/canary/~A/stop"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "StopCanary"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'stop-canary))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'synthetics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "TagResource"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'synthetics-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "UntagResource"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-canary
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name code execution-role-arn
                     runtime-version schedule run-config
                     success-retention-period-in-days
                     failure-retention-period-in-days vpc-config
                     visual-reference artifact-s3location artifact-config)
   (common-lisp:declare
    (common-lisp:ignorable name code execution-role-arn runtime-version
     schedule run-config success-retention-period-in-days
     failure-retention-period-in-days vpc-config visual-reference
     artifact-s3location artifact-config))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-canary-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'synthetics-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/canary/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "UpdateCanary"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-canary))
