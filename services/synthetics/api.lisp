;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/synthetics/api
  (:use)
  (:nicknames #:aws/synthetics)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/synthetics/api)
(common-lisp:progn
 (common-lisp:defclass synthetics-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "synthetics" :protocol
                        :rest-json))
 (common-lisp:export 'synthetics-request))
(common-lisp:progn
 (common-lisp:define-condition synthetics-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'synthetics-error))
(common-lisp:defvar *error-map*
  '(("BadRequestException" . bad-request-exception)
    ("ConflictException" . conflict-exception)
    ("InternalFailureException" . internal-failure-exception)
    ("InternalServerException" . internal-server-exception)
    ("NotFoundException" . not-found-exception)
    ("RequestEntityTooLargeException" . request-entity-too-large-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceQuotaExceededException" . service-quota-exceeded-exception)
    ("TooManyRequestsException" . too-many-requests-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:progn
 (common-lisp:defclass artifact-config-input common-lisp:nil
                       ((s3encryption :initarg :s3encryption :type
                         (common-lisp:or s3encryption-config common-lisp:null)
                         :accessor %artifact-config-input-s3encryption
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'artifact-config-input 'make-artifact-config-input))
 (common-lisp:defun make-artifact-config-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key s3encryption)
   (common-lisp:apply #'common-lisp:make-instance 'artifact-config-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          artifact-config-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          artifact-config-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3encryption))
      (common-lisp:list
       (common-lisp:cons "S3Encryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          artifact-config-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass artifact-config-output common-lisp:nil
                       ((s3encryption :initarg :s3encryption :type
                         (common-lisp:or s3encryption-config common-lisp:null)
                         :accessor %artifact-config-output-s3encryption
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'artifact-config-output 'make-artifact-config-output))
 (common-lisp:defun make-artifact-config-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key s3encryption)
   (common-lisp:apply #'common-lisp:make-instance 'artifact-config-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          artifact-config-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          artifact-config-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3encryption))
      (common-lisp:list
       (common-lisp:cons "S3Encryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          artifact-config-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass associate-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :type
                         (common-lisp:or canary-arn common-lisp:null) :accessor
                         %associate-resource-request-resource-arn :initform
                         (common-lisp:error ":resource-arn is required"))
                        (group-identifier :initarg :group-identifier :type
                         (common-lisp:or group-identifier common-lisp:null)
                         :accessor %associate-resource-request-group-identifier
                         :initform
                         (common-lisp:error ":group-identifier is required"))))
 (common-lisp:export
  (common-lisp:list 'associate-resource-request
                    'make-associate-resource-request))
 (common-lisp:defun make-associate-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-arn group-identifier)
   (common-lisp:apply #'common-lisp:make-instance 'associate-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass associate-resource-response common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'associate-resource-response
                    'make-associate-resource-response))
 (common-lisp:defun make-associate-resource-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'associate-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition bad-request-exception
     (synthetics-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       bad-request-exception-message)))
 (common-lisp:export
  (common-lisp:list 'bad-request-exception 'bad-request-exception-message)))
(common-lisp:progn
 (common-lisp:defclass base-screenshot common-lisp:nil
                       ((ignore-coordinates :initarg :ignore-coordinates :type
                         (common-lisp:or base-screenshot-ignore-coordinates
                                         common-lisp:null)
                         :accessor %base-screenshot-ignore-coordinates
                         :initform common-lisp:nil)
                        (screenshot-name :initarg :screenshot-name :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %base-screenshot-screenshot-name :initform
                         (common-lisp:error ":screenshot-name is required"))))
 (common-lisp:export (common-lisp:list 'base-screenshot 'make-base-screenshot))
 (common-lisp:defun make-base-screenshot
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key ignore-coordinates screenshot-name)
   (common-lisp:apply #'common-lisp:make-instance 'base-screenshot
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input base-screenshot))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input base-screenshot))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'screenshot-name))
      (common-lisp:list
       (common-lisp:cons "ScreenshotName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ignore-coordinates))
      (common-lisp:list
       (common-lisp:cons "IgnoreCoordinates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input base-screenshot))
   common-lisp:nil))
(common-lisp:deftype base-screenshot-config-ignore-coordinate ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype base-screenshot-ignore-coordinates ()
   '(trivial-types:proper-list base-screenshot-config-ignore-coordinate))
 (common-lisp:defun |make-base-screenshot-ignore-coordinates|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            base-screenshot-config-ignore-coordinate))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype base-screenshots ()
   '(trivial-types:proper-list base-screenshot))
 (common-lisp:defun |make-base-screenshots|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list base-screenshot))
   aws-sdk/generator/shape::members))
(common-lisp:deftype blob ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:progn
 (common-lisp:deftype canaries () '(trivial-types:proper-list canary))
 (common-lisp:defun |make-canaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list canary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype canaries-last-run ()
   '(trivial-types:proper-list canary-last-run))
 (common-lisp:defun |make-canaries-last-run|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list canary-last-run))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass canary common-lisp:nil
                       ((artifact-config :initarg :artifact-config :type
                         (common-lisp:or artifact-config-output
                                         common-lisp:null)
                         :accessor %canary-artifact-config :initform
                         common-lisp:nil)
                        (tags :initarg :tags :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %canary-tags :initform common-lisp:nil)
                        (visual-reference :initarg :visual-reference :type
                         (common-lisp:or visual-reference-output
                                         common-lisp:null)
                         :accessor %canary-visual-reference :initform
                         common-lisp:nil)
                        (vpc-config :initarg :vpc-config :type
                         (common-lisp:or vpc-config-output common-lisp:null)
                         :accessor %canary-vpc-config :initform
                         common-lisp:nil)
                        (runtime-version :initarg :runtime-version :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %canary-runtime-version :initform common-lisp:nil)
                        (engine-arn :initarg :engine-arn :type
                         (common-lisp:or function-arn common-lisp:null)
                         :accessor %canary-engine-arn :initform
                         common-lisp:nil)
                        (artifact-s3location :initarg :artifact-s3location
                         :type (common-lisp:or string common-lisp:null)
                         :accessor %canary-artifact-s3location :initform
                         common-lisp:nil)
                        (timeline :initarg :timeline :type
                         (common-lisp:or canary-timeline common-lisp:null)
                         :accessor %canary-timeline :initform common-lisp:nil)
                        (status :initarg :status :type
                         (common-lisp:or canary-status common-lisp:null)
                         :accessor %canary-status :initform common-lisp:nil)
                        (failure-retention-period-in-days :initarg
                         :failure-retention-period-in-days :type
                         (common-lisp:or max-size1024 common-lisp:null)
                         :accessor %canary-failure-retention-period-in-days
                         :initform common-lisp:nil)
                        (success-retention-period-in-days :initarg
                         :success-retention-period-in-days :type
                         (common-lisp:or max-size1024 common-lisp:null)
                         :accessor %canary-success-retention-period-in-days
                         :initform common-lisp:nil)
                        (run-config :initarg :run-config :type
                         (common-lisp:or canary-run-config-output
                                         common-lisp:null)
                         :accessor %canary-run-config :initform
                         common-lisp:nil)
                        (schedule :initarg :schedule :type
                         (common-lisp:or canary-schedule-output
                                         common-lisp:null)
                         :accessor %canary-schedule :initform common-lisp:nil)
                        (execution-role-arn :initarg :execution-role-arn :type
                         (common-lisp:or role-arn common-lisp:null) :accessor
                         %canary-execution-role-arn :initform common-lisp:nil)
                        (code :initarg :code :type
                         (common-lisp:or canary-code-output common-lisp:null)
                         :accessor %canary-code :initform common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or canary-name common-lisp:null)
                         :accessor %canary-name :initform common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         %canary-id :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'canary 'make-canary))
 (common-lisp:defun make-canary
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key artifact-config tags visual-reference
                     vpc-config runtime-version engine-arn artifact-s3location
                     timeline status failure-retention-period-in-days
                     success-retention-period-in-days run-config schedule
                     execution-role-arn code name id)
   (common-lisp:apply #'common-lisp:make-instance 'canary
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input canary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input canary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'code))
      (common-lisp:list
       (common-lisp:cons "Code"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'execution-role-arn))
      (common-lisp:list
       (common-lisp:cons "ExecutionRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schedule))
      (common-lisp:list
       (common-lisp:cons "Schedule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'run-config))
      (common-lisp:list
       (common-lisp:cons "RunConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'success-retention-period-in-days))
      (common-lisp:list
       (common-lisp:cons "SuccessRetentionPeriodInDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'failure-retention-period-in-days))
      (common-lisp:list
       (common-lisp:cons "FailureRetentionPeriodInDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timeline))
      (common-lisp:list
       (common-lisp:cons "Timeline"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'artifact-s3location))
      (common-lisp:list
       (common-lisp:cons "ArtifactS3Location"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-arn))
      (common-lisp:list
       (common-lisp:cons "EngineArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'runtime-version))
      (common-lisp:list
       (common-lisp:cons "RuntimeVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'visual-reference))
      (common-lisp:list
       (common-lisp:cons "VisualReference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'artifact-config))
      (common-lisp:list
       (common-lisp:cons "ArtifactConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input canary))
   common-lisp:nil))
(common-lisp:deftype canary-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass canary-code-input common-lisp:nil
                       ((handler :initarg :handler :type
                         (common-lisp:or code-handler common-lisp:null)
                         :accessor %canary-code-input-handler :initform
                         (common-lisp:error ":handler is required"))
                        (zip-file :initarg :zip-file :type
                         (common-lisp:or blob common-lisp:null) :accessor
                         %canary-code-input-zip-file :initform common-lisp:nil)
                        (s3version :initarg :s3version :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %canary-code-input-s3version :initform
                         common-lisp:nil)
                        (s3key :initarg :s3key :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %canary-code-input-s3key :initform common-lisp:nil)
                        (s3bucket :initarg :s3bucket :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %canary-code-input-s3bucket :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'canary-code-input 'make-canary-code-input))
 (common-lisp:defun make-canary-code-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key handler zip-file s3version s3key
                     s3bucket)
   (common-lisp:apply #'common-lisp:make-instance 'canary-code-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input canary-code-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input canary-code-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3bucket))
      (common-lisp:list
       (common-lisp:cons "S3Bucket"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3key))
      (common-lisp:list
       (common-lisp:cons "S3Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3version))
      (common-lisp:list
       (common-lisp:cons "S3Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'zip-file))
      (common-lisp:list
       (common-lisp:cons "ZipFile"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'handler))
      (common-lisp:list
       (common-lisp:cons "Handler"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input canary-code-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass canary-code-output common-lisp:nil
                       ((handler :initarg :handler :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %canary-code-output-handler :initform common-lisp:nil)
                        (source-location-arn :initarg :source-location-arn
                         :type (common-lisp:or string common-lisp:null)
                         :accessor %canary-code-output-source-location-arn
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'canary-code-output 'make-canary-code-output))
 (common-lisp:defun make-canary-code-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key handler source-location-arn)
   (common-lisp:apply #'common-lisp:make-instance 'canary-code-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input canary-code-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input canary-code-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-location-arn))
      (common-lisp:list
       (common-lisp:cons "SourceLocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'handler))
      (common-lisp:list
       (common-lisp:cons "Handler"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input canary-code-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass canary-last-run common-lisp:nil
                       ((last-run :initarg :last-run :type
                         (common-lisp:or canary-run common-lisp:null) :accessor
                         %canary-last-run-last-run :initform common-lisp:nil)
                        (canary-name :initarg :canary-name :type
                         (common-lisp:or canary-name common-lisp:null)
                         :accessor %canary-last-run-canary-name :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'canary-last-run 'make-canary-last-run))
 (common-lisp:defun make-canary-last-run
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key last-run canary-name)
   (common-lisp:apply #'common-lisp:make-instance 'canary-last-run
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input canary-last-run))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input canary-last-run))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'canary-name))
      (common-lisp:list
       (common-lisp:cons "CanaryName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-run))
      (common-lisp:list
       (common-lisp:cons "LastRun"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input canary-last-run))
   common-lisp:nil))
(common-lisp:deftype canary-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass canary-run common-lisp:nil
                       ((artifact-s3location :initarg :artifact-s3location
                         :type (common-lisp:or string common-lisp:null)
                         :accessor %canary-run-artifact-s3location :initform
                         common-lisp:nil)
                        (timeline :initarg :timeline :type
                         (common-lisp:or canary-run-timeline common-lisp:null)
                         :accessor %canary-run-timeline :initform
                         common-lisp:nil)
                        (status :initarg :status :type
                         (common-lisp:or canary-run-status common-lisp:null)
                         :accessor %canary-run-status :initform
                         common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or canary-name common-lisp:null)
                         :accessor %canary-run-name :initform common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         %canary-run-id :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'canary-run 'make-canary-run))
 (common-lisp:defun make-canary-run
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key artifact-s3location timeline status name
                     id)
   (common-lisp:apply #'common-lisp:make-instance 'canary-run
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input canary-run))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input canary-run))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timeline))
      (common-lisp:list
       (common-lisp:cons "Timeline"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'artifact-s3location))
      (common-lisp:list
       (common-lisp:cons "ArtifactS3Location"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input canary-run))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass canary-run-config-input common-lisp:nil
                       ((environment-variables :initarg :environment-variables
                         :type
                         (common-lisp:or environment-variables-map
                                         common-lisp:null)
                         :accessor
                         %canary-run-config-input-environment-variables
                         :initform common-lisp:nil)
                        (active-tracing :initarg :active-tracing :type
                         (common-lisp:or nullable-boolean common-lisp:null)
                         :accessor %canary-run-config-input-active-tracing
                         :initform common-lisp:nil)
                        (memory-in-mb :initarg :memory-in-mb :type
                         (common-lisp:or max-size3008 common-lisp:null)
                         :accessor %canary-run-config-input-memory-in-mb
                         :initform common-lisp:nil)
                        (timeout-in-seconds :initarg :timeout-in-seconds :type
                         (common-lisp:or max-fifteen-minutes-in-seconds
                                         common-lisp:null)
                         :accessor %canary-run-config-input-timeout-in-seconds
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'canary-run-config-input 'make-canary-run-config-input))
 (common-lisp:defun make-canary-run-config-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key environment-variables active-tracing
                     memory-in-mb timeout-in-seconds)
   (common-lisp:apply #'common-lisp:make-instance 'canary-run-config-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          canary-run-config-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          canary-run-config-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timeout-in-seconds))
      (common-lisp:list
       (common-lisp:cons "TimeoutInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'memory-in-mb))
      (common-lisp:list
       (common-lisp:cons "MemoryInMB"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'active-tracing))
      (common-lisp:list
       (common-lisp:cons "ActiveTracing"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'environment-variables))
      (common-lisp:list
       (common-lisp:cons "EnvironmentVariables"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          canary-run-config-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass canary-run-config-output common-lisp:nil
                       ((active-tracing :initarg :active-tracing :type
                         (common-lisp:or nullable-boolean common-lisp:null)
                         :accessor %canary-run-config-output-active-tracing
                         :initform common-lisp:nil)
                        (memory-in-mb :initarg :memory-in-mb :type
                         (common-lisp:or max-size3008 common-lisp:null)
                         :accessor %canary-run-config-output-memory-in-mb
                         :initform common-lisp:nil)
                        (timeout-in-seconds :initarg :timeout-in-seconds :type
                         (common-lisp:or max-fifteen-minutes-in-seconds
                                         common-lisp:null)
                         :accessor %canary-run-config-output-timeout-in-seconds
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'canary-run-config-output 'make-canary-run-config-output))
 (common-lisp:defun make-canary-run-config-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key active-tracing memory-in-mb
                     timeout-in-seconds)
   (common-lisp:apply #'common-lisp:make-instance 'canary-run-config-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          canary-run-config-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          canary-run-config-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timeout-in-seconds))
      (common-lisp:list
       (common-lisp:cons "TimeoutInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'memory-in-mb))
      (common-lisp:list
       (common-lisp:cons "MemoryInMB"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'active-tracing))
      (common-lisp:list
       (common-lisp:cons "ActiveTracing"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          canary-run-config-output))
   common-lisp:nil))
(common-lisp:deftype canary-run-state () 'common-lisp:string)
(common-lisp:deftype canary-run-state-reason-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass canary-run-status common-lisp:nil
                       ((state-reason-code :initarg :state-reason-code :type
                         (common-lisp:or canary-run-state-reason-code
                                         common-lisp:null)
                         :accessor %canary-run-status-state-reason-code
                         :initform common-lisp:nil)
                        (state-reason :initarg :state-reason :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %canary-run-status-state-reason :initform
                         common-lisp:nil)
                        (state :initarg :state :type
                         (common-lisp:or canary-run-state common-lisp:null)
                         :accessor %canary-run-status-state :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'canary-run-status 'make-canary-run-status))
 (common-lisp:defun make-canary-run-status
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key state-reason-code state-reason state)
   (common-lisp:apply #'common-lisp:make-instance 'canary-run-status
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input canary-run-status))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input canary-run-status))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state-reason))
      (common-lisp:list
       (common-lisp:cons "StateReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state-reason-code))
      (common-lisp:list
       (common-lisp:cons "StateReasonCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input canary-run-status))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass canary-run-timeline common-lisp:nil
                       ((completed :initarg :completed :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %canary-run-timeline-completed :initform
                         common-lisp:nil)
                        (started :initarg :started :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %canary-run-timeline-started :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'canary-run-timeline 'make-canary-run-timeline))
 (common-lisp:defun make-canary-run-timeline
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key completed started)
   (common-lisp:apply #'common-lisp:make-instance 'canary-run-timeline
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input canary-run-timeline))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input canary-run-timeline))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'started))
      (common-lisp:list
       (common-lisp:cons "Started"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'completed))
      (common-lisp:list
       (common-lisp:cons "Completed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input canary-run-timeline))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype canary-runs () '(trivial-types:proper-list canary-run))
 (common-lisp:defun |make-canary-runs|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list canary-run))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass canary-schedule-input common-lisp:nil
                       ((duration-in-seconds :initarg :duration-in-seconds
                         :type
                         (common-lisp:or max-one-year-in-seconds
                                         common-lisp:null)
                         :accessor %canary-schedule-input-duration-in-seconds
                         :initform common-lisp:nil)
                        (expression :initarg :expression :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %canary-schedule-input-expression :initform
                         (common-lisp:error ":expression is required"))))
 (common-lisp:export
  (common-lisp:list 'canary-schedule-input 'make-canary-schedule-input))
 (common-lisp:defun make-canary-schedule-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key duration-in-seconds expression)
   (common-lisp:apply #'common-lisp:make-instance 'canary-schedule-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          canary-schedule-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          canary-schedule-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expression))
      (common-lisp:list
       (common-lisp:cons "Expression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'duration-in-seconds))
      (common-lisp:list
       (common-lisp:cons "DurationInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          canary-schedule-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass canary-schedule-output common-lisp:nil
                       ((duration-in-seconds :initarg :duration-in-seconds
                         :type
                         (common-lisp:or max-one-year-in-seconds
                                         common-lisp:null)
                         :accessor %canary-schedule-output-duration-in-seconds
                         :initform common-lisp:nil)
                        (expression :initarg :expression :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %canary-schedule-output-expression :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'canary-schedule-output 'make-canary-schedule-output))
 (common-lisp:defun make-canary-schedule-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key duration-in-seconds expression)
   (common-lisp:apply #'common-lisp:make-instance 'canary-schedule-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          canary-schedule-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          canary-schedule-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expression))
      (common-lisp:list
       (common-lisp:cons "Expression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'duration-in-seconds))
      (common-lisp:list
       (common-lisp:cons "DurationInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          canary-schedule-output))
   common-lisp:nil))
(common-lisp:deftype canary-state () 'common-lisp:string)
(common-lisp:deftype canary-state-reason-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass canary-status common-lisp:nil
                       ((state-reason-code :initarg :state-reason-code :type
                         (common-lisp:or canary-state-reason-code
                                         common-lisp:null)
                         :accessor %canary-status-state-reason-code :initform
                         common-lisp:nil)
                        (state-reason :initarg :state-reason :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %canary-status-state-reason :initform common-lisp:nil)
                        (state :initarg :state :type
                         (common-lisp:or canary-state common-lisp:null)
                         :accessor %canary-status-state :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'canary-status 'make-canary-status))
 (common-lisp:defun make-canary-status
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key state-reason-code state-reason state)
   (common-lisp:apply #'common-lisp:make-instance 'canary-status
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input canary-status))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input canary-status))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state-reason))
      (common-lisp:list
       (common-lisp:cons "StateReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state-reason-code))
      (common-lisp:list
       (common-lisp:cons "StateReasonCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input canary-status))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass canary-timeline common-lisp:nil
                       ((last-stopped :initarg :last-stopped :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %canary-timeline-last-stopped :initform
                         common-lisp:nil)
                        (last-started :initarg :last-started :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %canary-timeline-last-started :initform
                         common-lisp:nil)
                        (last-modified :initarg :last-modified :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %canary-timeline-last-modified :initform
                         common-lisp:nil)
                        (created :initarg :created :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %canary-timeline-created :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'canary-timeline 'make-canary-timeline))
 (common-lisp:defun make-canary-timeline
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key last-stopped last-started last-modified
                     created)
   (common-lisp:apply #'common-lisp:make-instance 'canary-timeline
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input canary-timeline))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input canary-timeline))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created))
      (common-lisp:list
       (common-lisp:cons "Created"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified))
      (common-lisp:list
       (common-lisp:cons "LastModified"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-started))
      (common-lisp:list
       (common-lisp:cons "LastStarted"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-stopped))
      (common-lisp:list
       (common-lisp:cons "LastStopped"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input canary-timeline))
   common-lisp:nil))
(common-lisp:deftype code-handler () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (synthetics-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message)))
(common-lisp:progn
 (common-lisp:defclass create-canary-request common-lisp:nil
                       ((artifact-config :initarg :artifact-config :type
                         (common-lisp:or artifact-config-input
                                         common-lisp:null)
                         :accessor %create-canary-request-artifact-config
                         :initform common-lisp:nil)
                        (tags :initarg :tags :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %create-canary-request-tags :initform common-lisp:nil)
                        (vpc-config :initarg :vpc-config :type
                         (common-lisp:or vpc-config-input common-lisp:null)
                         :accessor %create-canary-request-vpc-config :initform
                         common-lisp:nil)
                        (runtime-version :initarg :runtime-version :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-canary-request-runtime-version :initform
                         (common-lisp:error ":runtime-version is required"))
                        (failure-retention-period-in-days :initarg
                         :failure-retention-period-in-days :type
                         (common-lisp:or max-size1024 common-lisp:null)
                         :accessor
                         %create-canary-request-failure-retention-period-in-days
                         :initform common-lisp:nil)
                        (success-retention-period-in-days :initarg
                         :success-retention-period-in-days :type
                         (common-lisp:or max-size1024 common-lisp:null)
                         :accessor
                         %create-canary-request-success-retention-period-in-days
                         :initform common-lisp:nil)
                        (run-config :initarg :run-config :type
                         (common-lisp:or canary-run-config-input
                                         common-lisp:null)
                         :accessor %create-canary-request-run-config :initform
                         common-lisp:nil)
                        (schedule :initarg :schedule :type
                         (common-lisp:or canary-schedule-input
                                         common-lisp:null)
                         :accessor %create-canary-request-schedule :initform
                         (common-lisp:error ":schedule is required"))
                        (execution-role-arn :initarg :execution-role-arn :type
                         (common-lisp:or role-arn common-lisp:null) :accessor
                         %create-canary-request-execution-role-arn :initform
                         (common-lisp:error ":execution-role-arn is required"))
                        (artifact-s3location :initarg :artifact-s3location
                         :type (common-lisp:or string common-lisp:null)
                         :accessor %create-canary-request-artifact-s3location
                         :initform
                         (common-lisp:error
                          ":artifact-s3location is required"))
                        (code :initarg :code :type
                         (common-lisp:or canary-code-input common-lisp:null)
                         :accessor %create-canary-request-code :initform
                         (common-lisp:error ":code is required"))
                        (name :initarg :name :type
                         (common-lisp:or canary-name common-lisp:null)
                         :accessor %create-canary-request-name :initform
                         (common-lisp:error ":name is required"))))
 (common-lisp:export
  (common-lisp:list 'create-canary-request 'make-create-canary-request))
 (common-lisp:defun make-create-canary-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key artifact-config tags vpc-config
                     runtime-version failure-retention-period-in-days
                     success-retention-period-in-days run-config schedule
                     execution-role-arn artifact-s3location code name)
   (common-lisp:apply #'common-lisp:make-instance 'create-canary-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-canary-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-canary-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'code))
      (common-lisp:list
       (common-lisp:cons "Code"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'artifact-s3location))
      (common-lisp:list
       (common-lisp:cons "ArtifactS3Location"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'execution-role-arn))
      (common-lisp:list
       (common-lisp:cons "ExecutionRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schedule))
      (common-lisp:list
       (common-lisp:cons "Schedule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'run-config))
      (common-lisp:list
       (common-lisp:cons "RunConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'success-retention-period-in-days))
      (common-lisp:list
       (common-lisp:cons "SuccessRetentionPeriodInDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'failure-retention-period-in-days))
      (common-lisp:list
       (common-lisp:cons "FailureRetentionPeriodInDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'runtime-version))
      (common-lisp:list
       (common-lisp:cons "RuntimeVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'artifact-config))
      (common-lisp:list
       (common-lisp:cons "ArtifactConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-canary-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-canary-response common-lisp:nil
                       ((canary :initarg :canary :type
                         (common-lisp:or canary common-lisp:null) :accessor
                         %create-canary-response-canary :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-canary-response 'make-create-canary-response))
 (common-lisp:defun make-create-canary-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key canary)
   (common-lisp:apply #'common-lisp:make-instance 'create-canary-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-canary-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-canary-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'canary))
      (common-lisp:list
       (common-lisp:cons "Canary"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-canary-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-group-request common-lisp:nil
                       ((tags :initarg :tags :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %create-group-request-tags :initform common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or group-name common-lisp:null) :accessor
                         %create-group-request-name :initform
                         (common-lisp:error ":name is required"))))
 (common-lisp:export
  (common-lisp:list 'create-group-request 'make-create-group-request))
 (common-lisp:defun make-create-group-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags name)
   (common-lisp:apply #'common-lisp:make-instance 'create-group-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-group-response common-lisp:nil
                       ((group :initarg :group :type
                         (common-lisp:or group common-lisp:null) :accessor
                         %create-group-response-group :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-group-response 'make-create-group-response))
 (common-lisp:defun make-create-group-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key group)
   (common-lisp:apply #'common-lisp:make-instance 'create-group-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group))
      (common-lisp:list
       (common-lisp:cons "Group"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-canary-request common-lisp:nil
                       ((delete-lambda :initarg :delete-lambda :type
                         (common-lisp:or common-lisp:boolean common-lisp:null)
                         :accessor %delete-canary-request-delete-lambda
                         :initform common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or canary-name common-lisp:null)
                         :accessor %delete-canary-request-name :initform
                         (common-lisp:error ":name is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-canary-request 'make-delete-canary-request))
 (common-lisp:defun make-delete-canary-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key delete-lambda name)
   (common-lisp:apply #'common-lisp:make-instance 'delete-canary-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-canary-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-canary-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-canary-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-canary-response common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'delete-canary-response 'make-delete-canary-response))
 (common-lisp:defun make-delete-canary-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'delete-canary-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-canary-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-canary-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-canary-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-group-request common-lisp:nil
                       ((group-identifier :initarg :group-identifier :type
                         (common-lisp:or group-identifier common-lisp:null)
                         :accessor %delete-group-request-group-identifier
                         :initform
                         (common-lisp:error ":group-identifier is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-group-request 'make-delete-group-request))
 (common-lisp:defun make-delete-group-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key group-identifier)
   (common-lisp:apply #'common-lisp:make-instance 'delete-group-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-group-response common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'delete-group-response 'make-delete-group-response))
 (common-lisp:defun make-delete-group-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'delete-group-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype describe-canaries-last-run-name-filter ()
   '(trivial-types:proper-list canary-name))
 (common-lisp:defun |make-describe-canaries-last-run-name-filter|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list canary-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass describe-canaries-last-run-request common-lisp:nil
                       ((names :initarg :names :type
                         (common-lisp:or describe-canaries-last-run-name-filter
                                         common-lisp:null)
                         :accessor %describe-canaries-last-run-request-names
                         :initform common-lisp:nil)
                        (max-results :initarg :max-results :type
                         (common-lisp:or max-size100 common-lisp:null)
                         :accessor
                         %describe-canaries-last-run-request-max-results
                         :initform common-lisp:nil)
                        (next-token :initarg :next-token :type
                         (common-lisp:or token common-lisp:null) :accessor
                         %describe-canaries-last-run-request-next-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'describe-canaries-last-run-request
                    'make-describe-canaries-last-run-request))
 (common-lisp:defun make-describe-canaries-last-run-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key names max-results next-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-canaries-last-run-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-canaries-last-run-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-canaries-last-run-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'names))
      (common-lisp:list
       (common-lisp:cons "Names"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-canaries-last-run-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-canaries-last-run-response common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or token common-lisp:null) :accessor
                         %describe-canaries-last-run-response-next-token
                         :initform common-lisp:nil)
                        (canaries-last-run :initarg :canaries-last-run :type
                         (common-lisp:or canaries-last-run common-lisp:null)
                         :accessor
                         %describe-canaries-last-run-response-canaries-last-run
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'describe-canaries-last-run-response
                    'make-describe-canaries-last-run-response))
 (common-lisp:defun make-describe-canaries-last-run-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token canaries-last-run)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-canaries-last-run-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-canaries-last-run-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-canaries-last-run-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'canaries-last-run))
      (common-lisp:list
       (common-lisp:cons "CanariesLastRun"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-canaries-last-run-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype describe-canaries-name-filter ()
   '(trivial-types:proper-list canary-name))
 (common-lisp:defun |make-describe-canaries-name-filter|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list canary-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass describe-canaries-request common-lisp:nil
                       ((names :initarg :names :type
                         (common-lisp:or describe-canaries-name-filter
                                         common-lisp:null)
                         :accessor %describe-canaries-request-names :initform
                         common-lisp:nil)
                        (max-results :initarg :max-results :type
                         (common-lisp:or max-canary-results common-lisp:null)
                         :accessor %describe-canaries-request-max-results
                         :initform common-lisp:nil)
                        (next-token :initarg :next-token :type
                         (common-lisp:or token common-lisp:null) :accessor
                         %describe-canaries-request-next-token :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'describe-canaries-request
                    'make-describe-canaries-request))
 (common-lisp:defun make-describe-canaries-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key names max-results next-token)
   (common-lisp:apply #'common-lisp:make-instance 'describe-canaries-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-canaries-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-canaries-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'names))
      (common-lisp:list
       (common-lisp:cons "Names"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-canaries-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-canaries-response common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or token common-lisp:null) :accessor
                         %describe-canaries-response-next-token :initform
                         common-lisp:nil)
                        (canaries :initarg :canaries :type
                         (common-lisp:or canaries common-lisp:null) :accessor
                         %describe-canaries-response-canaries :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'describe-canaries-response
                    'make-describe-canaries-response))
 (common-lisp:defun make-describe-canaries-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token canaries)
   (common-lisp:apply #'common-lisp:make-instance 'describe-canaries-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-canaries-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-canaries-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'canaries))
      (common-lisp:list
       (common-lisp:cons "Canaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-canaries-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-runtime-versions-request common-lisp:nil
                       ((max-results :initarg :max-results :type
                         (common-lisp:or max-size100 common-lisp:null)
                         :accessor
                         %describe-runtime-versions-request-max-results
                         :initform common-lisp:nil)
                        (next-token :initarg :next-token :type
                         (common-lisp:or token common-lisp:null) :accessor
                         %describe-runtime-versions-request-next-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'describe-runtime-versions-request
                    'make-describe-runtime-versions-request))
 (common-lisp:defun make-describe-runtime-versions-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key max-results next-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-runtime-versions-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-runtime-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-runtime-versions-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-runtime-versions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-runtime-versions-response common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or token common-lisp:null) :accessor
                         %describe-runtime-versions-response-next-token
                         :initform common-lisp:nil)
                        (runtime-versions :initarg :runtime-versions :type
                         (common-lisp:or runtime-version-list common-lisp:null)
                         :accessor
                         %describe-runtime-versions-response-runtime-versions
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'describe-runtime-versions-response
                    'make-describe-runtime-versions-response))
 (common-lisp:defun make-describe-runtime-versions-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token runtime-versions)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-runtime-versions-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-runtime-versions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-runtime-versions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'runtime-versions))
      (common-lisp:list
       (common-lisp:cons "RuntimeVersions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-runtime-versions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disassociate-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :type
                         (common-lisp:or canary-arn common-lisp:null) :accessor
                         %disassociate-resource-request-resource-arn :initform
                         (common-lisp:error ":resource-arn is required"))
                        (group-identifier :initarg :group-identifier :type
                         (common-lisp:or group-identifier common-lisp:null)
                         :accessor
                         %disassociate-resource-request-group-identifier
                         :initform
                         (common-lisp:error ":group-identifier is required"))))
 (common-lisp:export
  (common-lisp:list 'disassociate-resource-request
                    'make-disassociate-resource-request))
 (common-lisp:defun make-disassociate-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-arn group-identifier)
   (common-lisp:apply #'common-lisp:make-instance
                      'disassociate-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disassociate-resource-response common-lisp:nil
                       common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'disassociate-resource-response
                    'make-disassociate-resource-response))
 (common-lisp:defun make-disassociate-resource-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance
                      'disassociate-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-resource-response))
   common-lisp:nil))
(common-lisp:deftype encryption-mode () 'common-lisp:string)
(common-lisp:deftype environment-variable-name () 'common-lisp:string)
(common-lisp:deftype environment-variable-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype environment-variables-map () 'common-lisp:hash-table)
 (common-lisp:defun |make-environment-variables-map|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype error-message () 'common-lisp:string)
(common-lisp:deftype function-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass get-canary-request common-lisp:nil
                       ((name :initarg :name :type
                         (common-lisp:or canary-name common-lisp:null)
                         :accessor %get-canary-request-name :initform
                         (common-lisp:error ":name is required"))))
 (common-lisp:export
  (common-lisp:list 'get-canary-request 'make-get-canary-request))
 (common-lisp:defun make-get-canary-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key name)
   (common-lisp:apply #'common-lisp:make-instance 'get-canary-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-canary-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-canary-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-canary-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-canary-response common-lisp:nil
                       ((canary :initarg :canary :type
                         (common-lisp:or canary common-lisp:null) :accessor
                         %get-canary-response-canary :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-canary-response 'make-get-canary-response))
 (common-lisp:defun make-get-canary-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key canary)
   (common-lisp:apply #'common-lisp:make-instance 'get-canary-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-canary-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-canary-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'canary))
      (common-lisp:list
       (common-lisp:cons "Canary"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-canary-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-canary-runs-request common-lisp:nil
                       ((max-results :initarg :max-results :type
                         (common-lisp:or max-size100 common-lisp:null)
                         :accessor %get-canary-runs-request-max-results
                         :initform common-lisp:nil)
                        (next-token :initarg :next-token :type
                         (common-lisp:or token common-lisp:null) :accessor
                         %get-canary-runs-request-next-token :initform
                         common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or canary-name common-lisp:null)
                         :accessor %get-canary-runs-request-name :initform
                         (common-lisp:error ":name is required"))))
 (common-lisp:export
  (common-lisp:list 'get-canary-runs-request 'make-get-canary-runs-request))
 (common-lisp:defun make-get-canary-runs-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key max-results next-token name)
   (common-lisp:apply #'common-lisp:make-instance 'get-canary-runs-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-canary-runs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-canary-runs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-canary-runs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-canary-runs-response common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or token common-lisp:null) :accessor
                         %get-canary-runs-response-next-token :initform
                         common-lisp:nil)
                        (canary-runs :initarg :canary-runs :type
                         (common-lisp:or canary-runs common-lisp:null)
                         :accessor %get-canary-runs-response-canary-runs
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-canary-runs-response 'make-get-canary-runs-response))
 (common-lisp:defun make-get-canary-runs-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token canary-runs)
   (common-lisp:apply #'common-lisp:make-instance 'get-canary-runs-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-canary-runs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-canary-runs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'canary-runs))
      (common-lisp:list
       (common-lisp:cons "CanaryRuns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-canary-runs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-group-request common-lisp:nil
                       ((group-identifier :initarg :group-identifier :type
                         (common-lisp:or group-identifier common-lisp:null)
                         :accessor %get-group-request-group-identifier
                         :initform
                         (common-lisp:error ":group-identifier is required"))))
 (common-lisp:export
  (common-lisp:list 'get-group-request 'make-get-group-request))
 (common-lisp:defun make-get-group-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key group-identifier)
   (common-lisp:apply #'common-lisp:make-instance 'get-group-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-group-response common-lisp:nil
                       ((group :initarg :group :type
                         (common-lisp:or group common-lisp:null) :accessor
                         %get-group-response-group :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-group-response 'make-get-group-response))
 (common-lisp:defun make-get-group-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key group)
   (common-lisp:apply #'common-lisp:make-instance 'get-group-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group))
      (common-lisp:list
       (common-lisp:cons "Group"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass group common-lisp:nil
                       ((last-modified-time :initarg :last-modified-time :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %group-last-modified-time :initform common-lisp:nil)
                        (created-time :initarg :created-time :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %group-created-time :initform common-lisp:nil)
                        (tags :initarg :tags :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %group-tags :initform common-lisp:nil)
                        (arn :initarg :arn :type
                         (common-lisp:or group-arn common-lisp:null) :accessor
                         %group-arn :initform common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or group-name common-lisp:null) :accessor
                         %group-name :initform common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %group-id :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'group 'make-group))
 (common-lisp:defun make-group
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key last-modified-time created-time tags arn
                     name id)
   (common-lisp:apply #'common-lisp:make-instance 'group
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input group))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input group))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-time))
      (common-lisp:list
       (common-lisp:cons "CreatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input group))
   common-lisp:nil))
(common-lisp:deftype group-arn () 'common-lisp:string)
(common-lisp:deftype group-identifier () 'common-lisp:string)
(common-lisp:deftype group-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass group-summary common-lisp:nil
                       ((arn :initarg :arn :type
                         (common-lisp:or group-arn common-lisp:null) :accessor
                         %group-summary-arn :initform common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or group-name common-lisp:null) :accessor
                         %group-summary-name :initform common-lisp:nil)
                        (id :initarg :id :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %group-summary-id :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'group-summary 'make-group-summary))
 (common-lisp:defun make-group-summary
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key arn name id)
   (common-lisp:apply #'common-lisp:make-instance 'group-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input group-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input group-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input group-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype group-summary-list ()
   '(trivial-types:proper-list group-summary))
 (common-lisp:defun |make-group-summary-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list group-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition internal-failure-exception
     (synthetics-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-failure-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-failure-exception
                    'internal-failure-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (synthetics-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-message)))
(common-lisp:deftype kms-key-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass list-associated-groups-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :type
                         (common-lisp:or canary-arn common-lisp:null) :accessor
                         %list-associated-groups-request-resource-arn :initform
                         (common-lisp:error ":resource-arn is required"))
                        (max-results :initarg :max-results :type
                         (common-lisp:or max-group-results common-lisp:null)
                         :accessor %list-associated-groups-request-max-results
                         :initform common-lisp:nil)
                        (next-token :initarg :next-token :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor %list-associated-groups-request-next-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-associated-groups-request
                    'make-list-associated-groups-request))
 (common-lisp:defun make-list-associated-groups-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-arn max-results next-token)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-associated-groups-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-associated-groups-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-associated-groups-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-associated-groups-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-associated-groups-response common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor %list-associated-groups-response-next-token
                         :initform common-lisp:nil)
                        (groups :initarg :groups :type
                         (common-lisp:or group-summary-list common-lisp:null)
                         :accessor %list-associated-groups-response-groups
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-associated-groups-response
                    'make-list-associated-groups-response))
 (common-lisp:defun make-list-associated-groups-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token groups)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-associated-groups-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-associated-groups-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-associated-groups-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'groups))
      (common-lisp:list
       (common-lisp:cons "Groups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-associated-groups-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-group-resources-request common-lisp:nil
                       ((group-identifier :initarg :group-identifier :type
                         (common-lisp:or group-identifier common-lisp:null)
                         :accessor
                         %list-group-resources-request-group-identifier
                         :initform
                         (common-lisp:error ":group-identifier is required"))
                        (max-results :initarg :max-results :type
                         (common-lisp:or max-group-results common-lisp:null)
                         :accessor %list-group-resources-request-max-results
                         :initform common-lisp:nil)
                        (next-token :initarg :next-token :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor %list-group-resources-request-next-token
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-group-resources-request
                    'make-list-group-resources-request))
 (common-lisp:defun make-list-group-resources-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key group-identifier max-results next-token)
   (common-lisp:apply #'common-lisp:make-instance 'list-group-resources-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-group-resources-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-group-resources-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-group-resources-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-group-resources-response common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor %list-group-resources-response-next-token
                         :initform common-lisp:nil)
                        (resources :initarg :resources :type
                         (common-lisp:or string-list common-lisp:null)
                         :accessor %list-group-resources-response-resources
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-group-resources-response
                    'make-list-group-resources-response))
 (common-lisp:defun make-list-group-resources-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token resources)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-group-resources-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-group-resources-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-group-resources-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resources))
      (common-lisp:list
       (common-lisp:cons "Resources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-group-resources-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-groups-request common-lisp:nil
                       ((max-results :initarg :max-results :type
                         (common-lisp:or max-group-results common-lisp:null)
                         :accessor %list-groups-request-max-results :initform
                         common-lisp:nil)
                        (next-token :initarg :next-token :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor %list-groups-request-next-token :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-groups-request 'make-list-groups-request))
 (common-lisp:defun make-list-groups-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key max-results next-token)
   (common-lisp:apply #'common-lisp:make-instance 'list-groups-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-groups-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-groups-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-groups-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-groups-response common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or token common-lisp:null) :accessor
                         %list-groups-response-next-token :initform
                         common-lisp:nil)
                        (groups :initarg :groups :type
                         (common-lisp:or group-summary-list common-lisp:null)
                         :accessor %list-groups-response-groups :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-groups-response 'make-list-groups-response))
 (common-lisp:defun make-list-groups-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token groups)
   (common-lisp:apply #'common-lisp:make-instance 'list-groups-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-groups-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-groups-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'groups))
      (common-lisp:list
       (common-lisp:cons "Groups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-groups-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %list-tags-for-resource-request-resource-arn
                         :initform
                         (common-lisp:error ":resource-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defun make-list-tags-for-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-response common-lisp:nil
                       ((tags :initarg :tags :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %list-tags-for-resource-response-tags :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defun make-list-tags-for-resource-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:deftype max-canary-results () 'common-lisp:integer)
(common-lisp:deftype max-fifteen-minutes-in-seconds () 'common-lisp:integer)
(common-lisp:deftype max-group-results () 'common-lisp:integer)
(common-lisp:deftype max-one-year-in-seconds () 'common-lisp:integer)
(common-lisp:deftype max-size100 () 'common-lisp:integer)
(common-lisp:deftype max-size1024 () 'common-lisp:integer)
(common-lisp:deftype max-size3008 () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition not-found-exception
     (synthetics-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'not-found-exception 'not-found-exception-message)))
(common-lisp:deftype nullable-boolean () 'common-lisp:boolean)
(common-lisp:deftype pagination-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition request-entity-too-large-exception
     (synthetics-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       request-entity-too-large-exception-message)))
 (common-lisp:export
  (common-lisp:list 'request-entity-too-large-exception
                    'request-entity-too-large-exception-message)))
(common-lisp:deftype resource-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (synthetics-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:deftype role-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass runtime-version common-lisp:nil
                       ((deprecation-date :initarg :deprecation-date :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %runtime-version-deprecation-date :initform
                         common-lisp:nil)
                        (release-date :initarg :release-date :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %runtime-version-release-date :initform
                         common-lisp:nil)
                        (description :initarg :description :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %runtime-version-description :initform
                         common-lisp:nil)
                        (version-name :initarg :version-name :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %runtime-version-version-name :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'runtime-version 'make-runtime-version))
 (common-lisp:defun make-runtime-version
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key deprecation-date release-date description
                     version-name)
   (common-lisp:apply #'common-lisp:make-instance 'runtime-version
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input runtime-version))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input runtime-version))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version-name))
      (common-lisp:list
       (common-lisp:cons "VersionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'release-date))
      (common-lisp:list
       (common-lisp:cons "ReleaseDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deprecation-date))
      (common-lisp:list
       (common-lisp:cons "DeprecationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input runtime-version))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype runtime-version-list ()
   '(trivial-types:proper-list runtime-version))
 (common-lisp:defun |make-runtime-version-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list runtime-version))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass s3encryption-config common-lisp:nil
                       ((kms-key-arn :initarg :kms-key-arn :type
                         (common-lisp:or kms-key-arn common-lisp:null)
                         :accessor %s3encryption-config-kms-key-arn :initform
                         common-lisp:nil)
                        (encryption-mode :initarg :encryption-mode :type
                         (common-lisp:or encryption-mode common-lisp:null)
                         :accessor %s3encryption-config-encryption-mode
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 's3encryption-config 'make-s3encryption-config))
 (common-lisp:defun make-s3encryption-config
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key kms-key-arn encryption-mode)
   (common-lisp:apply #'common-lisp:make-instance 's3encryption-config
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input s3encryption-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input s3encryption-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption-mode))
      (common-lisp:list
       (common-lisp:cons "EncryptionMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key-arn))
      (common-lisp:list
       (common-lisp:cons "KmsKeyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input s3encryption-config))
   common-lisp:nil))
(common-lisp:deftype security-group-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype security-group-ids ()
   '(trivial-types:proper-list security-group-id))
 (common-lisp:defun |make-security-group-ids|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list security-group-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition service-quota-exceeded-exception
     (synthetics-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-quota-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-quota-exceeded-exception
                    'service-quota-exceeded-exception-message)))
(common-lisp:progn
 (common-lisp:defclass start-canary-request common-lisp:nil
                       ((name :initarg :name :type
                         (common-lisp:or canary-name common-lisp:null)
                         :accessor %start-canary-request-name :initform
                         (common-lisp:error ":name is required"))))
 (common-lisp:export
  (common-lisp:list 'start-canary-request 'make-start-canary-request))
 (common-lisp:defun make-start-canary-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key name)
   (common-lisp:apply #'common-lisp:make-instance 'start-canary-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input start-canary-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input start-canary-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input start-canary-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-canary-response common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'start-canary-response 'make-start-canary-response))
 (common-lisp:defun make-start-canary-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'start-canary-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-canary-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-canary-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-canary-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass stop-canary-request common-lisp:nil
                       ((name :initarg :name :type
                         (common-lisp:or canary-name common-lisp:null)
                         :accessor %stop-canary-request-name :initform
                         (common-lisp:error ":name is required"))))
 (common-lisp:export
  (common-lisp:list 'stop-canary-request 'make-stop-canary-request))
 (common-lisp:defun make-stop-canary-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key name)
   (common-lisp:apply #'common-lisp:make-instance 'stop-canary-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stop-canary-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stop-canary-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stop-canary-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass stop-canary-response common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'stop-canary-response 'make-stop-canary-response))
 (common-lisp:defun make-stop-canary-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'stop-canary-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stop-canary-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stop-canary-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stop-canary-response))
   common-lisp:nil))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype string-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-string-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:deftype subnet-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype subnet-ids () '(trivial-types:proper-list subnet-id))
 (common-lisp:defun |make-subnet-ids|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list subnet-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun |make-tag-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-map () 'common-lisp:hash-table)
 (common-lisp:defun |make-tag-map| (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass tag-resource-request common-lisp:nil
                       ((tags :initarg :tags :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %tag-resource-request-tags :initform
                         (common-lisp:error ":tags is required"))
                        (resource-arn :initarg :resource-arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %tag-resource-request-resource-arn :initform
                         (common-lisp:error ":resource-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defun make-tag-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags resource-arn)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-resource-response common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defun make-tag-resource-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:deftype token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition too-many-requests-exception
     (synthetics-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       too-many-requests-exception-message)))
 (common-lisp:export
  (common-lisp:list 'too-many-requests-exception
                    'too-many-requests-exception-message)))
(common-lisp:deftype uuid () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass untag-resource-request common-lisp:nil
                       ((tag-keys :initarg :tag-keys :type
                         (common-lisp:or tag-key-list common-lisp:null)
                         :accessor %untag-resource-request-tag-keys :initform
                         (common-lisp:error ":tag-keys is required"))
                        (resource-arn :initarg :resource-arn :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor %untag-resource-request-resource-arn
                         :initform
                         (common-lisp:error ":resource-arn is required"))))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defun make-untag-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tag-keys resource-arn)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass untag-resource-response common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defun make-untag-resource-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-canary-request common-lisp:nil
                       ((artifact-config :initarg :artifact-config :type
                         (common-lisp:or artifact-config-input
                                         common-lisp:null)
                         :accessor %update-canary-request-artifact-config
                         :initform common-lisp:nil)
                        (artifact-s3location :initarg :artifact-s3location
                         :type (common-lisp:or string common-lisp:null)
                         :accessor %update-canary-request-artifact-s3location
                         :initform common-lisp:nil)
                        (visual-reference :initarg :visual-reference :type
                         (common-lisp:or visual-reference-input
                                         common-lisp:null)
                         :accessor %update-canary-request-visual-reference
                         :initform common-lisp:nil)
                        (vpc-config :initarg :vpc-config :type
                         (common-lisp:or vpc-config-input common-lisp:null)
                         :accessor %update-canary-request-vpc-config :initform
                         common-lisp:nil)
                        (failure-retention-period-in-days :initarg
                         :failure-retention-period-in-days :type
                         (common-lisp:or max-size1024 common-lisp:null)
                         :accessor
                         %update-canary-request-failure-retention-period-in-days
                         :initform common-lisp:nil)
                        (success-retention-period-in-days :initarg
                         :success-retention-period-in-days :type
                         (common-lisp:or max-size1024 common-lisp:null)
                         :accessor
                         %update-canary-request-success-retention-period-in-days
                         :initform common-lisp:nil)
                        (run-config :initarg :run-config :type
                         (common-lisp:or canary-run-config-input
                                         common-lisp:null)
                         :accessor %update-canary-request-run-config :initform
                         common-lisp:nil)
                        (schedule :initarg :schedule :type
                         (common-lisp:or canary-schedule-input
                                         common-lisp:null)
                         :accessor %update-canary-request-schedule :initform
                         common-lisp:nil)
                        (runtime-version :initarg :runtime-version :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %update-canary-request-runtime-version :initform
                         common-lisp:nil)
                        (execution-role-arn :initarg :execution-role-arn :type
                         (common-lisp:or role-arn common-lisp:null) :accessor
                         %update-canary-request-execution-role-arn :initform
                         common-lisp:nil)
                        (code :initarg :code :type
                         (common-lisp:or canary-code-input common-lisp:null)
                         :accessor %update-canary-request-code :initform
                         common-lisp:nil)
                        (name :initarg :name :type
                         (common-lisp:or canary-name common-lisp:null)
                         :accessor %update-canary-request-name :initform
                         (common-lisp:error ":name is required"))))
 (common-lisp:export
  (common-lisp:list 'update-canary-request 'make-update-canary-request))
 (common-lisp:defun make-update-canary-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key artifact-config artifact-s3location
                     visual-reference vpc-config
                     failure-retention-period-in-days
                     success-retention-period-in-days run-config schedule
                     runtime-version execution-role-arn code name)
   (common-lisp:apply #'common-lisp:make-instance 'update-canary-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-canary-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-canary-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'code))
      (common-lisp:list
       (common-lisp:cons "Code"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'execution-role-arn))
      (common-lisp:list
       (common-lisp:cons "ExecutionRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'runtime-version))
      (common-lisp:list
       (common-lisp:cons "RuntimeVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schedule))
      (common-lisp:list
       (common-lisp:cons "Schedule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'run-config))
      (common-lisp:list
       (common-lisp:cons "RunConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'success-retention-period-in-days))
      (common-lisp:list
       (common-lisp:cons "SuccessRetentionPeriodInDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'failure-retention-period-in-days))
      (common-lisp:list
       (common-lisp:cons "FailureRetentionPeriodInDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'visual-reference))
      (common-lisp:list
       (common-lisp:cons "VisualReference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'artifact-s3location))
      (common-lisp:list
       (common-lisp:cons "ArtifactS3Location"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'artifact-config))
      (common-lisp:list
       (common-lisp:cons "ArtifactConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-canary-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-canary-response common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'update-canary-response 'make-update-canary-response))
 (common-lisp:defun make-update-canary-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'update-canary-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-canary-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-canary-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-canary-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (synthetics-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       validation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-message)))
(common-lisp:progn
 (common-lisp:defclass visual-reference-input common-lisp:nil
                       ((base-canary-run-id :initarg :base-canary-run-id :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %visual-reference-input-base-canary-run-id :initform
                         (common-lisp:error ":base-canary-run-id is required"))
                        (base-screenshots :initarg :base-screenshots :type
                         (common-lisp:or base-screenshots common-lisp:null)
                         :accessor %visual-reference-input-base-screenshots
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'visual-reference-input 'make-visual-reference-input))
 (common-lisp:defun make-visual-reference-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key base-canary-run-id base-screenshots)
   (common-lisp:apply #'common-lisp:make-instance 'visual-reference-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          visual-reference-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          visual-reference-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'base-screenshots))
      (common-lisp:list
       (common-lisp:cons "BaseScreenshots"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'base-canary-run-id))
      (common-lisp:list
       (common-lisp:cons "BaseCanaryRunId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          visual-reference-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass visual-reference-output common-lisp:nil
                       ((base-canary-run-id :initarg :base-canary-run-id :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %visual-reference-output-base-canary-run-id :initform
                         common-lisp:nil)
                        (base-screenshots :initarg :base-screenshots :type
                         (common-lisp:or base-screenshots common-lisp:null)
                         :accessor %visual-reference-output-base-screenshots
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'visual-reference-output 'make-visual-reference-output))
 (common-lisp:defun make-visual-reference-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key base-canary-run-id base-screenshots)
   (common-lisp:apply #'common-lisp:make-instance 'visual-reference-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          visual-reference-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          visual-reference-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'base-screenshots))
      (common-lisp:list
       (common-lisp:cons "BaseScreenshots"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'base-canary-run-id))
      (common-lisp:list
       (common-lisp:cons "BaseCanaryRunId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          visual-reference-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass vpc-config-input common-lisp:nil
                       ((security-group-ids :initarg :security-group-ids :type
                         (common-lisp:or security-group-ids common-lisp:null)
                         :accessor %vpc-config-input-security-group-ids
                         :initform common-lisp:nil)
                        (subnet-ids :initarg :subnet-ids :type
                         (common-lisp:or subnet-ids common-lisp:null) :accessor
                         %vpc-config-input-subnet-ids :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'vpc-config-input 'make-vpc-config-input))
 (common-lisp:defun make-vpc-config-input
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key security-group-ids subnet-ids)
   (common-lisp:apply #'common-lisp:make-instance 'vpc-config-input
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input vpc-config-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input vpc-config-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-ids))
      (common-lisp:list
       (common-lisp:cons "SubnetIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-ids))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input vpc-config-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass vpc-config-output common-lisp:nil
                       ((security-group-ids :initarg :security-group-ids :type
                         (common-lisp:or security-group-ids common-lisp:null)
                         :accessor %vpc-config-output-security-group-ids
                         :initform common-lisp:nil)
                        (subnet-ids :initarg :subnet-ids :type
                         (common-lisp:or subnet-ids common-lisp:null) :accessor
                         %vpc-config-output-subnet-ids :initform
                         common-lisp:nil)
                        (vpc-id :initarg :vpc-id :type
                         (common-lisp:or vpc-id common-lisp:null) :accessor
                         %vpc-config-output-vpc-id :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'vpc-config-output 'make-vpc-config-output))
 (common-lisp:defun make-vpc-config-output
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key security-group-ids subnet-ids vpc-id)
   (common-lisp:apply #'common-lisp:make-instance 'vpc-config-output
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input vpc-config-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input vpc-config-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-id))
      (common-lisp:list
       (common-lisp:cons "VpcId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-ids))
      (common-lisp:list
       (common-lisp:cons "SubnetIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-ids))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input vpc-config-output))
   common-lisp:nil))
(common-lisp:deftype vpc-id () 'common-lisp:string)
common-lisp:nil
(common-lisp:progn
 (common-lisp:defun associate-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key group-identifier resource-arn)
   (common-lisp:declare (common-lisp:ignorable group-identifier resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-associate-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'synthetics-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/group/~A/associate"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'group-identifier))))
                                                        "AssociateResource"
                                                        "2017-10-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'associate-resource))
(common-lisp:progn
 (common-lisp:defun create-canary
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name code artifact-s3location
                     execution-role-arn schedule run-config
                     success-retention-period-in-days
                     failure-retention-period-in-days runtime-version
                     vpc-config tags artifact-config)
   (common-lisp:declare
    (common-lisp:ignorable name code artifact-s3location execution-role-arn
     schedule run-config success-retention-period-in-days
     failure-retention-period-in-days runtime-version vpc-config tags
     artifact-config))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-canary-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'synthetics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/canary"
                                                        "CreateCanary"
                                                        "2017-10-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-canary))
(common-lisp:progn
 (common-lisp:defun create-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name tags)
   (common-lisp:declare (common-lisp:ignorable name tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'synthetics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/group" "CreateGroup"
                                                        "2017-10-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-group))
(common-lisp:progn
 (common-lisp:defun delete-canary
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name delete-lambda)
   (common-lisp:declare (common-lisp:ignorable name delete-lambda))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-canary-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'synthetics-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/canary/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "DeleteCanary"
                                                        "2017-10-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-canary))
(common-lisp:progn
 (common-lisp:defun delete-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key group-identifier)
   (common-lisp:declare (common-lisp:ignorable group-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'synthetics-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/group/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'group-identifier))))
                                                        "DeleteGroup"
                                                        "2017-10-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-group))
(common-lisp:progn
 (common-lisp:defun describe-canaries
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results names)
   (common-lisp:declare (common-lisp:ignorable next-token max-results names))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-canaries-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'synthetics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/canaries"
                                                        "DescribeCanaries"
                                                        "2017-10-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-canaries))
(common-lisp:progn
 (common-lisp:defun describe-canaries-last-run
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results names)
   (common-lisp:declare (common-lisp:ignorable next-token max-results names))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-canaries-last-run-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'synthetics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/canaries/last-run"
                                                        "DescribeCanariesLastRun"
                                                        "2017-10-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-canaries-last-run))
(common-lisp:progn
 (common-lisp:defun describe-runtime-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-runtime-versions-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'synthetics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/runtime-versions"
                                                        "DescribeRuntimeVersions"
                                                        "2017-10-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-runtime-versions))
(common-lisp:progn
 (common-lisp:defun disassociate-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key group-identifier resource-arn)
   (common-lisp:declare (common-lisp:ignorable group-identifier resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-disassociate-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'synthetics-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/group/~A/disassociate"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'group-identifier))))
                                                        "DisassociateResource"
                                                        "2017-10-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'disassociate-resource))
(common-lisp:progn
 (common-lisp:defun get-canary
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-canary-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'synthetics-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/canary/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "GetCanary"
                                                        "2017-10-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-canary))
(common-lisp:progn
 (common-lisp:defun get-canary-runs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name next-token max-results)
   (common-lisp:declare (common-lisp:ignorable name next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-canary-runs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'synthetics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/canary/~A/runs"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "GetCanaryRuns"
                                                        "2017-10-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-canary-runs))
(common-lisp:progn
 (common-lisp:defun get-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key group-identifier)
   (common-lisp:declare (common-lisp:ignorable group-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'synthetics-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/group/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'group-identifier))))
                                                        "GetGroup"
                                                        "2017-10-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-group))
(common-lisp:progn
 (common-lisp:defun list-associated-groups
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results resource-arn)
   (common-lisp:declare
    (common-lisp:ignorable next-token max-results resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-associated-groups-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'synthetics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/resource/~A/groups"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "ListAssociatedGroups"
                                                        "2017-10-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-associated-groups))
(common-lisp:progn
 (common-lisp:defun list-group-resources
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results group-identifier)
   (common-lisp:declare
    (common-lisp:ignorable next-token max-results group-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-group-resources-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'synthetics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/group/~A/resources"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'group-identifier))))
                                                        "ListGroupResources"
                                                        "2017-10-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-group-resources))
(common-lisp:progn
 (common-lisp:defun list-groups
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-groups-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'synthetics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/groups" "ListGroups"
                                                        "2017-10-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-groups))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'synthetics-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "ListTagsForResource"
                                                        "2017-10-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun start-canary
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-canary-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'synthetics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/canary/~A/start"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "StartCanary"
                                                        "2017-10-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-canary))
(common-lisp:progn
 (common-lisp:defun stop-canary
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-stop-canary-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'synthetics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/canary/~A/stop"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "StopCanary"
                                                        "2017-10-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'stop-canary))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'synthetics-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "TagResource"
                                                        "2017-10-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'synthetics-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "UntagResource"
                                                        "2017-10-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-canary
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name code execution-role-arn
                     runtime-version schedule run-config
                     success-retention-period-in-days
                     failure-retention-period-in-days vpc-config
                     visual-reference artifact-s3location artifact-config)
   (common-lisp:declare
    (common-lisp:ignorable name code execution-role-arn runtime-version
     schedule run-config success-retention-period-in-days
     failure-retention-period-in-days vpc-config visual-reference
     artifact-s3location artifact-config))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-canary-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'synthetics-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/canary/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "UpdateCanary"
                                                        "2017-10-11"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-canary))
