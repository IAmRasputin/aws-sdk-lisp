;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/dataexchange/api
  (:use)
  (:nicknames #:aws/dataexchange)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/dataexchange/api)
(common-lisp:progn
 (common-lisp:defclass dataexchange-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "dataexchange"))
 (common-lisp:export 'dataexchange-request))
(common-lisp:progn
 (common-lisp:define-condition dataexchange-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'dataexchange-error))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("ConflictException" . conflict-exception)
    ("InternalServerException" . internal-server-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceLimitExceededException" . service-limit-exceeded-exception)
    ("ThrottlingException" . throttling-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (dataexchange-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       access-denied-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (action (:copier common-lisp:nil) (:conc-name "struct-shape-action-"))
   (export-revision-to-s3 common-lisp:nil :type
    (common-lisp:or auto-export-revision-to-s3request-details
                    common-lisp:null)))
 (common-lisp:export (common-lisp:list 'action 'make-action))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input action))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'export-revision-to-s3))
      (common-lisp:list
       (common-lisp:cons "ExportRevisionToS3"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input action))
   common-lisp:nil))
(common-lisp:deftype api-description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (api-gateway-api-asset (:copier common-lisp:nil)
      (:conc-name "struct-shape-api-gateway-api-asset-"))
   (api-description common-lisp:nil :type
    (common-lisp:or api-description common-lisp:null))
   (api-endpoint common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (api-id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (api-key common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (api-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (api-specification-download-url common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (api-specification-download-url-expires-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (protocol-type common-lisp:nil :type
    (common-lisp:or protocol-type common-lisp:null))
   (stage common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'api-gateway-api-asset 'make-api-gateway-api-asset))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          api-gateway-api-asset))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          api-gateway-api-asset))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-description))
      (common-lisp:list
       (common-lisp:cons "ApiDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-endpoint))
      (common-lisp:list
       (common-lisp:cons "ApiEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-id))
      (common-lisp:list
       (common-lisp:cons "ApiId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key))
      (common-lisp:list
       (common-lisp:cons "ApiKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-name))
      (common-lisp:list
       (common-lisp:cons "ApiName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'api-specification-download-url))
      (common-lisp:list
       (common-lisp:cons "ApiSpecificationDownloadUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'api-specification-download-url-expires-at))
      (common-lisp:list
       (common-lisp:cons "ApiSpecificationDownloadUrlExpiresAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol-type))
      (common-lisp:list
       (common-lisp:cons "ProtocolType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage))
      (common-lisp:list
       (common-lisp:cons "Stage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          api-gateway-api-asset))
   common-lisp:nil))
(common-lisp:deftype arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (asset-destination-entry (:copier common-lisp:nil)
      (:conc-name "struct-shape-asset-destination-entry-"))
   (asset-id (common-lisp:error ":asset-id is required") :type
    (common-lisp:or id common-lisp:null))
   (bucket (common-lisp:error ":bucket is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (key common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'asset-destination-entry 'make-asset-destination-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          asset-destination-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          asset-destination-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'asset-id))
      (common-lisp:list
       (common-lisp:cons "AssetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket))
      (common-lisp:list
       (common-lisp:cons "Bucket"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          asset-destination-entry))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (asset-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-asset-details-"))
   (s3snapshot-asset common-lisp:nil :type
    (common-lisp:or s3snapshot-asset common-lisp:null))
   (redshift-data-share-asset common-lisp:nil :type
    (common-lisp:or redshift-data-share-asset common-lisp:null))
   (api-gateway-api-asset common-lisp:nil :type
    (common-lisp:or api-gateway-api-asset common-lisp:null))
   (s3data-access-asset common-lisp:nil :type
    (common-lisp:or s3data-access-asset common-lisp:null))
   (lake-formation-data-permission-asset common-lisp:nil :type
    (common-lisp:or lake-formation-data-permission-asset common-lisp:null)))
 (common-lisp:export (common-lisp:list 'asset-details 'make-asset-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input asset-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input asset-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3snapshot-asset))
      (common-lisp:list
       (common-lisp:cons "S3SnapshotAsset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'redshift-data-share-asset))
      (common-lisp:list
       (common-lisp:cons "RedshiftDataShareAsset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'api-gateway-api-asset))
      (common-lisp:list
       (common-lisp:cons "ApiGatewayApiAsset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3data-access-asset))
      (common-lisp:list
       (common-lisp:cons "S3DataAccessAsset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'lake-formation-data-permission-asset))
      (common-lisp:list
       (common-lisp:cons "LakeFormationDataPermissionAsset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input asset-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (asset-entry (:copier common-lisp:nil)
      (:conc-name "struct-shape-asset-entry-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or arn common-lisp:null))
   (asset-details (common-lisp:error ":asset-details is required") :type
    (common-lisp:or asset-details common-lisp:null))
   (asset-type (common-lisp:error ":asset-type is required") :type
    (common-lisp:or asset-type common-lisp:null))
   (created-at (common-lisp:error ":created-at is required") :type
    (common-lisp:or timestamp common-lisp:null))
   (data-set-id (common-lisp:error ":data-set-id is required") :type
    (common-lisp:or id common-lisp:null))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or id common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or asset-name common-lisp:null))
   (revision-id (common-lisp:error ":revision-id is required") :type
    (common-lisp:or id common-lisp:null))
   (source-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (updated-at (common-lisp:error ":updated-at is required") :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'asset-entry 'make-asset-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input asset-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input asset-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'asset-details))
      (common-lisp:list
       (common-lisp:cons "AssetDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'asset-type))
      (common-lisp:list
       (common-lisp:cons "AssetType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-set-id))
      (common-lisp:list
       (common-lisp:cons "DataSetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revision-id))
      (common-lisp:list
       (common-lisp:cons "RevisionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-id))
      (common-lisp:list
       (common-lisp:cons "SourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "UpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input asset-entry))
   common-lisp:nil))
(common-lisp:deftype asset-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (asset-source-entry (:copier common-lisp:nil)
      (:conc-name "struct-shape-asset-source-entry-"))
   (bucket (common-lisp:error ":bucket is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (key (common-lisp:error ":key is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'asset-source-entry 'make-asset-source-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input asset-source-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input asset-source-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket))
      (common-lisp:list
       (common-lisp:cons "Bucket"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input asset-source-entry))
   common-lisp:nil))
(common-lisp:deftype asset-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (auto-export-revision-destination-entry (:copier common-lisp:nil)
      (:conc-name "struct-shape-auto-export-revision-destination-entry-"))
   (bucket (common-lisp:error ":bucket is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (key-pattern common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'auto-export-revision-destination-entry
                    'make-auto-export-revision-destination-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          auto-export-revision-destination-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          auto-export-revision-destination-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket))
      (common-lisp:list
       (common-lisp:cons "Bucket"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-pattern))
      (common-lisp:list
       (common-lisp:cons "KeyPattern"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          auto-export-revision-destination-entry))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (auto-export-revision-to-s3request-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-auto-export-revision-to-s3request-details-"))
   (encryption common-lisp:nil :type
    (common-lisp:or export-server-side-encryption common-lisp:null))
   (revision-destination
    (common-lisp:error ":revision-destination is required") :type
    (common-lisp:or auto-export-revision-destination-entry common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'auto-export-revision-to-s3request-details
                    'make-auto-export-revision-to-s3request-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          auto-export-revision-to-s3request-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          auto-export-revision-to-s3request-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption))
      (common-lisp:list
       (common-lisp:cons "Encryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'revision-destination))
      (common-lisp:list
       (common-lisp:cons "RevisionDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          auto-export-revision-to-s3request-details))
   common-lisp:nil))
(common-lisp:deftype aws-account-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (cancel-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-cancel-job-request-"))
   (job-id (common-lisp:error ":job-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cancel-job-request 'make-cancel-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input cancel-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input cancel-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input cancel-job-request))
   common-lisp:nil))
(common-lisp:deftype code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (dataexchange-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)
      (resource-id :initarg :resource-id :initform common-lisp:nil :reader
       conflict-exception-resource-id)
      (resource-type :initarg :resource-type :initform common-lisp:nil :reader
       conflict-exception-resource-type)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message
                    'conflict-exception-resource-id
                    'conflict-exception-resource-type)))
(common-lisp:progn
 (common-lisp:defstruct
     (create-data-set-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-data-set-request-"))
   (asset-type (common-lisp:error ":asset-type is required") :type
    (common-lisp:or asset-type common-lisp:null))
   (description (common-lisp:error ":description is required") :type
    (common-lisp:or description common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or name common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or map-of-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-data-set-request 'make-create-data-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-data-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-data-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'asset-type))
      (common-lisp:list
       (common-lisp:cons "AssetType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-data-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-data-set-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-data-set-response-"))
   (arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (asset-type common-lisp:nil :type
    (common-lisp:or asset-type common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (origin common-lisp:nil :type (common-lisp:or origin common-lisp:null))
   (origin-details common-lisp:nil :type
    (common-lisp:or origin-details common-lisp:null))
   (source-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or map-of-string common-lisp:null))
   (updated-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-data-set-response 'make-create-data-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-data-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-data-set-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'asset-type))
      (common-lisp:list
       (common-lisp:cons "AssetType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'origin))
      (common-lisp:list
       (common-lisp:cons "Origin"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'origin-details))
      (common-lisp:list
       (common-lisp:cons "OriginDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-id))
      (common-lisp:list
       (common-lisp:cons "SourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "UpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-data-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-event-action-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-event-action-request-"))
   (action (common-lisp:error ":action is required") :type
    (common-lisp:or action common-lisp:null))
   (event (common-lisp:error ":event is required") :type
    (common-lisp:or event common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-event-action-request
                    'make-create-event-action-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-event-action-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-event-action-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action))
      (common-lisp:list
       (common-lisp:cons "Action"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event))
      (common-lisp:list
       (common-lisp:cons "Event"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-event-action-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-event-action-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-event-action-response-"))
   (action common-lisp:nil :type (common-lisp:or action common-lisp:null))
   (arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (event common-lisp:nil :type (common-lisp:or event common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (updated-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-event-action-response
                    'make-create-event-action-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-event-action-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-event-action-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action))
      (common-lisp:list
       (common-lisp:cons "Action"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event))
      (common-lisp:list
       (common-lisp:cons "Event"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "UpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-event-action-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-job-request-"))
   (details (common-lisp:error ":details is required") :type
    (common-lisp:or request-details common-lisp:null))
   (type (common-lisp:error ":type is required") :type
    (common-lisp:or type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-job-request 'make-create-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'details))
      (common-lisp:list
       (common-lisp:cons "Details"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-job-response-"))
   (arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (details common-lisp:nil :type
    (common-lisp:or response-details common-lisp:null))
   (errors common-lisp:nil :type
    (common-lisp:or list-of-job-error common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or state common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or type common-lisp:null))
   (updated-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-job-response 'make-create-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'details))
      (common-lisp:list
       (common-lisp:cons "Details"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'errors))
      (common-lisp:list
       (common-lisp:cons "Errors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "UpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-revision-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-revision-request-"))
   (comment common-lisp:nil :type
    (common-lisp:or |__stringMin0Max16384| common-lisp:null))
   (data-set-id (common-lisp:error ":data-set-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or map-of-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-revision-request 'make-create-revision-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-revision-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-revision-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'comment))
      (common-lisp:list
       (common-lisp:cons "Comment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-revision-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-revision-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-revision-response-"))
   (arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (comment common-lisp:nil :type
    (common-lisp:or |__stringMin0Max16384| common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (data-set-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (finalized common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (source-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or map-of-string common-lisp:null))
   (updated-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (revocation-comment common-lisp:nil :type
    (common-lisp:or |__stringMin10Max512| common-lisp:null))
   (revoked common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (revoked-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-revision-response 'make-create-revision-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-revision-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-revision-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'comment))
      (common-lisp:list
       (common-lisp:cons "Comment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-set-id))
      (common-lisp:list
       (common-lisp:cons "DataSetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'finalized))
      (common-lisp:list
       (common-lisp:cons "Finalized"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-id))
      (common-lisp:list
       (common-lisp:cons "SourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "UpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revocation-comment))
      (common-lisp:list
       (common-lisp:cons "RevocationComment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revoked))
      (common-lisp:list
       (common-lisp:cons "Revoked"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revoked-at))
      (common-lisp:list
       (common-lisp:cons "RevokedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-revision-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-s3data-access-from-s3bucket-request-details
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-create-s3data-access-from-s3bucket-request-details-"))
   (asset-source (common-lisp:error ":asset-source is required") :type
    (common-lisp:or s3data-access-asset-source-entry common-lisp:null))
   (data-set-id (common-lisp:error ":data-set-id is required") :type
    (common-lisp:or id common-lisp:null))
   (revision-id (common-lisp:error ":revision-id is required") :type
    (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-s3data-access-from-s3bucket-request-details
                    'make-create-s3data-access-from-s3bucket-request-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-s3data-access-from-s3bucket-request-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-s3data-access-from-s3bucket-request-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'asset-source))
      (common-lisp:list
       (common-lisp:cons "AssetSource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-set-id))
      (common-lisp:list
       (common-lisp:cons "DataSetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revision-id))
      (common-lisp:list
       (common-lisp:cons "RevisionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-s3data-access-from-s3bucket-request-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-s3data-access-from-s3bucket-response-details
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-create-s3data-access-from-s3bucket-response-details-"))
   (asset-source (common-lisp:error ":asset-source is required") :type
    (common-lisp:or s3data-access-asset-source-entry common-lisp:null))
   (data-set-id (common-lisp:error ":data-set-id is required") :type
    (common-lisp:or id common-lisp:null))
   (revision-id (common-lisp:error ":revision-id is required") :type
    (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-s3data-access-from-s3bucket-response-details
                    'make-create-s3data-access-from-s3bucket-response-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-s3data-access-from-s3bucket-response-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-s3data-access-from-s3bucket-response-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'asset-source))
      (common-lisp:list
       (common-lisp:cons "AssetSource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-set-id))
      (common-lisp:list
       (common-lisp:cons "DataSetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revision-id))
      (common-lisp:list
       (common-lisp:cons "RevisionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-s3data-access-from-s3bucket-response-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (data-set-entry (:copier common-lisp:nil)
      (:conc-name "struct-shape-data-set-entry-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or arn common-lisp:null))
   (asset-type (common-lisp:error ":asset-type is required") :type
    (common-lisp:or asset-type common-lisp:null))
   (created-at (common-lisp:error ":created-at is required") :type
    (common-lisp:or timestamp common-lisp:null))
   (description (common-lisp:error ":description is required") :type
    (common-lisp:or description common-lisp:null))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or id common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or name common-lisp:null))
   (origin (common-lisp:error ":origin is required") :type
    (common-lisp:or origin common-lisp:null))
   (origin-details common-lisp:nil :type
    (common-lisp:or origin-details common-lisp:null))
   (source-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (updated-at (common-lisp:error ":updated-at is required") :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'data-set-entry 'make-data-set-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input data-set-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input data-set-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'asset-type))
      (common-lisp:list
       (common-lisp:cons "AssetType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'origin))
      (common-lisp:list
       (common-lisp:cons "Origin"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'origin-details))
      (common-lisp:list
       (common-lisp:cons "OriginDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-id))
      (common-lisp:list
       (common-lisp:cons "SourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "UpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input data-set-entry))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (database-lftag-policy (:copier common-lisp:nil)
      (:conc-name "struct-shape-database-lftag-policy-"))
   (expression (common-lisp:error ":expression is required") :type
    (common-lisp:or list-of-lftags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'database-lftag-policy 'make-database-lftag-policy))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          database-lftag-policy))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          database-lftag-policy))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expression))
      (common-lisp:list
       (common-lisp:cons "Expression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          database-lftag-policy))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (database-lftag-policy-and-permissions (:copier common-lisp:nil)
      (:conc-name "struct-shape-database-lftag-policy-and-permissions-"))
   (expression (common-lisp:error ":expression is required") :type
    (common-lisp:or list-of-lftags common-lisp:null))
   (permissions (common-lisp:error ":permissions is required") :type
    (common-lisp:or list-of-database-lftag-policy-permissions
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'database-lftag-policy-and-permissions
                    'make-database-lftag-policy-and-permissions))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          database-lftag-policy-and-permissions))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          database-lftag-policy-and-permissions))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expression))
      (common-lisp:list
       (common-lisp:cons "Expression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permissions))
      (common-lisp:list
       (common-lisp:cons "Permissions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          database-lftag-policy-and-permissions))
   common-lisp:nil))
(common-lisp:deftype database-lftag-policy-permission () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (delete-asset-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-asset-request-"))
   (asset-id (common-lisp:error ":asset-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (data-set-id (common-lisp:error ":data-set-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (revision-id (common-lisp:error ":revision-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-asset-request 'make-delete-asset-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-asset-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-asset-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-asset-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-data-set-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-data-set-request-"))
   (data-set-id (common-lisp:error ":data-set-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-data-set-request 'make-delete-data-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-data-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-data-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-data-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-event-action-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-event-action-request-"))
   (event-action-id (common-lisp:error ":event-action-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-event-action-request
                    'make-delete-event-action-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-event-action-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-event-action-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-event-action-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-revision-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-revision-request-"))
   (data-set-id (common-lisp:error ":data-set-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (revision-id (common-lisp:error ":revision-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-revision-request 'make-delete-revision-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-revision-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-revision-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-revision-request))
   common-lisp:nil))
(common-lisp:deftype description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (details (:copier common-lisp:nil) (:conc-name "struct-shape-details-"))
   (import-asset-from-signed-url-job-error-details common-lisp:nil :type
    (common-lisp:or import-asset-from-signed-url-job-error-details
                    common-lisp:null))
   (import-assets-from-s3job-error-details common-lisp:nil :type
    (common-lisp:or list-of-asset-source-entry common-lisp:null)))
 (common-lisp:export (common-lisp:list 'details 'make-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'import-asset-from-signed-url-job-error-details))
      (common-lisp:list
       (common-lisp:cons "ImportAssetFromSignedUrlJobErrorDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'import-assets-from-s3job-error-details))
      (common-lisp:list
       (common-lisp:cons "ImportAssetsFromS3JobErrorDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (event (:copier common-lisp:nil) (:conc-name "struct-shape-event-"))
   (revision-published common-lisp:nil :type
    (common-lisp:or revision-published common-lisp:null)))
 (common-lisp:export (common-lisp:list 'event 'make-event))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input event))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input event))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revision-published))
      (common-lisp:list
       (common-lisp:cons "RevisionPublished"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input event))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (event-action-entry (:copier common-lisp:nil)
      (:conc-name "struct-shape-event-action-entry-"))
   (action (common-lisp:error ":action is required") :type
    (common-lisp:or action common-lisp:null))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or arn common-lisp:null))
   (created-at (common-lisp:error ":created-at is required") :type
    (common-lisp:or timestamp common-lisp:null))
   (event (common-lisp:error ":event is required") :type
    (common-lisp:or event common-lisp:null))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or id common-lisp:null))
   (updated-at (common-lisp:error ":updated-at is required") :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'event-action-entry 'make-event-action-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input event-action-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input event-action-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action))
      (common-lisp:list
       (common-lisp:cons "Action"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event))
      (common-lisp:list
       (common-lisp:cons "Event"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "UpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input event-action-entry))
   common-lisp:nil))
(common-lisp:deftype exception-cause () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (export-asset-to-signed-url-request-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-export-asset-to-signed-url-request-details-"))
   (asset-id (common-lisp:error ":asset-id is required") :type
    (common-lisp:or id common-lisp:null))
   (data-set-id (common-lisp:error ":data-set-id is required") :type
    (common-lisp:or id common-lisp:null))
   (revision-id (common-lisp:error ":revision-id is required") :type
    (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'export-asset-to-signed-url-request-details
                    'make-export-asset-to-signed-url-request-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          export-asset-to-signed-url-request-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          export-asset-to-signed-url-request-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'asset-id))
      (common-lisp:list
       (common-lisp:cons "AssetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-set-id))
      (common-lisp:list
       (common-lisp:cons "DataSetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revision-id))
      (common-lisp:list
       (common-lisp:cons "RevisionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          export-asset-to-signed-url-request-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (export-asset-to-signed-url-response-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-export-asset-to-signed-url-response-details-"))
   (asset-id (common-lisp:error ":asset-id is required") :type
    (common-lisp:or id common-lisp:null))
   (data-set-id (common-lisp:error ":data-set-id is required") :type
    (common-lisp:or id common-lisp:null))
   (revision-id (common-lisp:error ":revision-id is required") :type
    (common-lisp:or id common-lisp:null))
   (signed-url common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (signed-url-expires-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'export-asset-to-signed-url-response-details
                    'make-export-asset-to-signed-url-response-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          export-asset-to-signed-url-response-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          export-asset-to-signed-url-response-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'asset-id))
      (common-lisp:list
       (common-lisp:cons "AssetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-set-id))
      (common-lisp:list
       (common-lisp:cons "DataSetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revision-id))
      (common-lisp:list
       (common-lisp:cons "RevisionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'signed-url))
      (common-lisp:list
       (common-lisp:cons "SignedUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'signed-url-expires-at))
      (common-lisp:list
       (common-lisp:cons "SignedUrlExpiresAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          export-asset-to-signed-url-response-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (export-assets-to-s3request-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-export-assets-to-s3request-details-"))
   (asset-destinations (common-lisp:error ":asset-destinations is required")
    :type (common-lisp:or list-of-asset-destination-entry common-lisp:null))
   (data-set-id (common-lisp:error ":data-set-id is required") :type
    (common-lisp:or id common-lisp:null))
   (encryption common-lisp:nil :type
    (common-lisp:or export-server-side-encryption common-lisp:null))
   (revision-id (common-lisp:error ":revision-id is required") :type
    (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'export-assets-to-s3request-details
                    'make-export-assets-to-s3request-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          export-assets-to-s3request-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          export-assets-to-s3request-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'asset-destinations))
      (common-lisp:list
       (common-lisp:cons "AssetDestinations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-set-id))
      (common-lisp:list
       (common-lisp:cons "DataSetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption))
      (common-lisp:list
       (common-lisp:cons "Encryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revision-id))
      (common-lisp:list
       (common-lisp:cons "RevisionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          export-assets-to-s3request-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (export-assets-to-s3response-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-export-assets-to-s3response-details-"))
   (asset-destinations (common-lisp:error ":asset-destinations is required")
    :type (common-lisp:or list-of-asset-destination-entry common-lisp:null))
   (data-set-id (common-lisp:error ":data-set-id is required") :type
    (common-lisp:or id common-lisp:null))
   (encryption common-lisp:nil :type
    (common-lisp:or export-server-side-encryption common-lisp:null))
   (revision-id (common-lisp:error ":revision-id is required") :type
    (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'export-assets-to-s3response-details
                    'make-export-assets-to-s3response-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          export-assets-to-s3response-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          export-assets-to-s3response-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'asset-destinations))
      (common-lisp:list
       (common-lisp:cons "AssetDestinations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-set-id))
      (common-lisp:list
       (common-lisp:cons "DataSetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption))
      (common-lisp:list
       (common-lisp:cons "Encryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revision-id))
      (common-lisp:list
       (common-lisp:cons "RevisionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          export-assets-to-s3response-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (export-revisions-to-s3request-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-export-revisions-to-s3request-details-"))
   (data-set-id (common-lisp:error ":data-set-id is required") :type
    (common-lisp:or id common-lisp:null))
   (encryption common-lisp:nil :type
    (common-lisp:or export-server-side-encryption common-lisp:null))
   (revision-destinations
    (common-lisp:error ":revision-destinations is required") :type
    (common-lisp:or list-of-revision-destination-entry common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'export-revisions-to-s3request-details
                    'make-export-revisions-to-s3request-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          export-revisions-to-s3request-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          export-revisions-to-s3request-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-set-id))
      (common-lisp:list
       (common-lisp:cons "DataSetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption))
      (common-lisp:list
       (common-lisp:cons "Encryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'revision-destinations))
      (common-lisp:list
       (common-lisp:cons "RevisionDestinations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          export-revisions-to-s3request-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (export-revisions-to-s3response-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-export-revisions-to-s3response-details-"))
   (data-set-id (common-lisp:error ":data-set-id is required") :type
    (common-lisp:or id common-lisp:null))
   (encryption common-lisp:nil :type
    (common-lisp:or export-server-side-encryption common-lisp:null))
   (revision-destinations
    (common-lisp:error ":revision-destinations is required") :type
    (common-lisp:or list-of-revision-destination-entry common-lisp:null))
   (event-action-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'export-revisions-to-s3response-details
                    'make-export-revisions-to-s3response-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          export-revisions-to-s3response-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          export-revisions-to-s3response-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-set-id))
      (common-lisp:list
       (common-lisp:cons "DataSetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption))
      (common-lisp:list
       (common-lisp:cons "Encryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'revision-destinations))
      (common-lisp:list
       (common-lisp:cons "RevisionDestinations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-action-arn))
      (common-lisp:list
       (common-lisp:cons "EventActionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          export-revisions-to-s3response-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (export-server-side-encryption (:copier common-lisp:nil)
      (:conc-name "struct-shape-export-server-side-encryption-"))
   (kms-key-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (type (common-lisp:error ":type is required") :type
    (common-lisp:or server-side-encryption-types common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'export-server-side-encryption
                    'make-export-server-side-encryption))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          export-server-side-encryption))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          export-server-side-encryption))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key-arn))
      (common-lisp:list
       (common-lisp:cons "KmsKeyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          export-server-side-encryption))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-asset-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-asset-request-"))
   (asset-id (common-lisp:error ":asset-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (data-set-id (common-lisp:error ":data-set-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (revision-id (common-lisp:error ":revision-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-asset-request 'make-get-asset-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-asset-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-asset-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-asset-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-asset-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-asset-response-"))
   (arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (asset-details common-lisp:nil :type
    (common-lisp:or asset-details common-lisp:null))
   (asset-type common-lisp:nil :type
    (common-lisp:or asset-type common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (data-set-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or asset-name common-lisp:null))
   (revision-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (source-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (updated-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-asset-response 'make-get-asset-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-asset-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-asset-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'asset-details))
      (common-lisp:list
       (common-lisp:cons "AssetDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'asset-type))
      (common-lisp:list
       (common-lisp:cons "AssetType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-set-id))
      (common-lisp:list
       (common-lisp:cons "DataSetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revision-id))
      (common-lisp:list
       (common-lisp:cons "RevisionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-id))
      (common-lisp:list
       (common-lisp:cons "SourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "UpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-asset-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-data-set-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-data-set-request-"))
   (data-set-id (common-lisp:error ":data-set-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-data-set-request 'make-get-data-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-data-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-data-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-data-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-data-set-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-data-set-response-"))
   (arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (asset-type common-lisp:nil :type
    (common-lisp:or asset-type common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (origin common-lisp:nil :type (common-lisp:or origin common-lisp:null))
   (origin-details common-lisp:nil :type
    (common-lisp:or origin-details common-lisp:null))
   (source-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or map-of-string common-lisp:null))
   (updated-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-data-set-response 'make-get-data-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-data-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-data-set-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'asset-type))
      (common-lisp:list
       (common-lisp:cons "AssetType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'origin))
      (common-lisp:list
       (common-lisp:cons "Origin"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'origin-details))
      (common-lisp:list
       (common-lisp:cons "OriginDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-id))
      (common-lisp:list
       (common-lisp:cons "SourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "UpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-data-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-event-action-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-event-action-request-"))
   (event-action-id (common-lisp:error ":event-action-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-event-action-request 'make-get-event-action-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-event-action-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-event-action-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-event-action-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-event-action-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-event-action-response-"))
   (action common-lisp:nil :type (common-lisp:or action common-lisp:null))
   (arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (event common-lisp:nil :type (common-lisp:or event common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (updated-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-event-action-response
                    'make-get-event-action-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-event-action-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-event-action-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action))
      (common-lisp:list
       (common-lisp:cons "Action"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event))
      (common-lisp:list
       (common-lisp:cons "Event"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "UpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-event-action-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-job-request-"))
   (job-id (common-lisp:error ":job-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-job-request 'make-get-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-job-response-"))
   (arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (details common-lisp:nil :type
    (common-lisp:or response-details common-lisp:null))
   (errors common-lisp:nil :type
    (common-lisp:or list-of-job-error common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or state common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or type common-lisp:null))
   (updated-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-job-response 'make-get-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'details))
      (common-lisp:list
       (common-lisp:cons "Details"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'errors))
      (common-lisp:list
       (common-lisp:cons "Errors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "UpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-revision-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-revision-request-"))
   (data-set-id (common-lisp:error ":data-set-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (revision-id (common-lisp:error ":revision-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-revision-request 'make-get-revision-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-revision-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-revision-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-revision-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-revision-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-revision-response-"))
   (arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (comment common-lisp:nil :type
    (common-lisp:or |__stringMin0Max16384| common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (data-set-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (finalized common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (source-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or map-of-string common-lisp:null))
   (updated-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (revocation-comment common-lisp:nil :type
    (common-lisp:or |__stringMin10Max512| common-lisp:null))
   (revoked common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (revoked-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-revision-response 'make-get-revision-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-revision-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-revision-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'comment))
      (common-lisp:list
       (common-lisp:cons "Comment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-set-id))
      (common-lisp:list
       (common-lisp:cons "DataSetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'finalized))
      (common-lisp:list
       (common-lisp:cons "Finalized"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-id))
      (common-lisp:list
       (common-lisp:cons "SourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "UpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revocation-comment))
      (common-lisp:list
       (common-lisp:cons "RevocationComment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revoked))
      (common-lisp:list
       (common-lisp:cons "Revoked"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revoked-at))
      (common-lisp:list
       (common-lisp:cons "RevokedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-revision-response))
   common-lisp:nil))
(common-lisp:deftype id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (import-asset-from-api-gateway-api-request-details
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-import-asset-from-api-gateway-api-request-details-"))
   (api-description common-lisp:nil :type
    (common-lisp:or api-description common-lisp:null))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (api-key common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (api-name (common-lisp:error ":api-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (api-specification-md5hash
    (common-lisp:error ":api-specification-md5hash is required") :type
    (common-lisp:or |__stringMin24Max24PatternAZaZ094AZaZ092AZaZ093|
                    common-lisp:null))
   (data-set-id (common-lisp:error ":data-set-id is required") :type
    (common-lisp:or id common-lisp:null))
   (protocol-type (common-lisp:error ":protocol-type is required") :type
    (common-lisp:or protocol-type common-lisp:null))
   (revision-id (common-lisp:error ":revision-id is required") :type
    (common-lisp:or id common-lisp:null))
   (stage (common-lisp:error ":stage is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-asset-from-api-gateway-api-request-details
                    'make-import-asset-from-api-gateway-api-request-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          import-asset-from-api-gateway-api-request-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          import-asset-from-api-gateway-api-request-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-description))
      (common-lisp:list
       (common-lisp:cons "ApiDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-id))
      (common-lisp:list
       (common-lisp:cons "ApiId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key))
      (common-lisp:list
       (common-lisp:cons "ApiKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-name))
      (common-lisp:list
       (common-lisp:cons "ApiName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'api-specification-md5hash))
      (common-lisp:list
       (common-lisp:cons "ApiSpecificationMd5Hash"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-set-id))
      (common-lisp:list
       (common-lisp:cons "DataSetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol-type))
      (common-lisp:list
       (common-lisp:cons "ProtocolType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revision-id))
      (common-lisp:list
       (common-lisp:cons "RevisionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage))
      (common-lisp:list
       (common-lisp:cons "Stage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          import-asset-from-api-gateway-api-request-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (import-asset-from-api-gateway-api-response-details
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-import-asset-from-api-gateway-api-response-details-"))
   (api-description common-lisp:nil :type
    (common-lisp:or api-description common-lisp:null))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (api-key common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (api-name (common-lisp:error ":api-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (api-specification-md5hash
    (common-lisp:error ":api-specification-md5hash is required") :type
    (common-lisp:or |__stringMin24Max24PatternAZaZ094AZaZ092AZaZ093|
                    common-lisp:null))
   (api-specification-upload-url
    (common-lisp:error ":api-specification-upload-url is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (api-specification-upload-url-expires-at
    (common-lisp:error ":api-specification-upload-url-expires-at is required")
    :type (common-lisp:or timestamp common-lisp:null))
   (data-set-id (common-lisp:error ":data-set-id is required") :type
    (common-lisp:or id common-lisp:null))
   (protocol-type (common-lisp:error ":protocol-type is required") :type
    (common-lisp:or protocol-type common-lisp:null))
   (revision-id (common-lisp:error ":revision-id is required") :type
    (common-lisp:or id common-lisp:null))
   (stage (common-lisp:error ":stage is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-asset-from-api-gateway-api-response-details
                    'make-import-asset-from-api-gateway-api-response-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          import-asset-from-api-gateway-api-response-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          import-asset-from-api-gateway-api-response-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-description))
      (common-lisp:list
       (common-lisp:cons "ApiDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-id))
      (common-lisp:list
       (common-lisp:cons "ApiId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key))
      (common-lisp:list
       (common-lisp:cons "ApiKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-name))
      (common-lisp:list
       (common-lisp:cons "ApiName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'api-specification-md5hash))
      (common-lisp:list
       (common-lisp:cons "ApiSpecificationMd5Hash"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'api-specification-upload-url))
      (common-lisp:list
       (common-lisp:cons "ApiSpecificationUploadUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'api-specification-upload-url-expires-at))
      (common-lisp:list
       (common-lisp:cons "ApiSpecificationUploadUrlExpiresAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-set-id))
      (common-lisp:list
       (common-lisp:cons "DataSetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol-type))
      (common-lisp:list
       (common-lisp:cons "ProtocolType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revision-id))
      (common-lisp:list
       (common-lisp:cons "RevisionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage))
      (common-lisp:list
       (common-lisp:cons "Stage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          import-asset-from-api-gateway-api-response-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (import-asset-from-signed-url-job-error-details (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-import-asset-from-signed-url-job-error-details-"))
   (asset-name (common-lisp:error ":asset-name is required") :type
    (common-lisp:or asset-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-asset-from-signed-url-job-error-details
                    'make-import-asset-from-signed-url-job-error-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          import-asset-from-signed-url-job-error-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          import-asset-from-signed-url-job-error-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'asset-name))
      (common-lisp:list
       (common-lisp:cons "AssetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          import-asset-from-signed-url-job-error-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (import-asset-from-signed-url-request-details (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-import-asset-from-signed-url-request-details-"))
   (asset-name (common-lisp:error ":asset-name is required") :type
    (common-lisp:or asset-name common-lisp:null))
   (data-set-id (common-lisp:error ":data-set-id is required") :type
    (common-lisp:or id common-lisp:null))
   (md5hash (common-lisp:error ":md5hash is required") :type
    (common-lisp:or |__stringMin24Max24PatternAZaZ094AZaZ092AZaZ093|
                    common-lisp:null))
   (revision-id (common-lisp:error ":revision-id is required") :type
    (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-asset-from-signed-url-request-details
                    'make-import-asset-from-signed-url-request-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          import-asset-from-signed-url-request-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          import-asset-from-signed-url-request-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'asset-name))
      (common-lisp:list
       (common-lisp:cons "AssetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-set-id))
      (common-lisp:list
       (common-lisp:cons "DataSetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'md5hash))
      (common-lisp:list
       (common-lisp:cons "Md5Hash"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revision-id))
      (common-lisp:list
       (common-lisp:cons "RevisionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          import-asset-from-signed-url-request-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (import-asset-from-signed-url-response-details (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-import-asset-from-signed-url-response-details-"))
   (asset-name (common-lisp:error ":asset-name is required") :type
    (common-lisp:or asset-name common-lisp:null))
   (data-set-id (common-lisp:error ":data-set-id is required") :type
    (common-lisp:or id common-lisp:null))
   (md5hash common-lisp:nil :type
    (common-lisp:or |__stringMin24Max24PatternAZaZ094AZaZ092AZaZ093|
                    common-lisp:null))
   (revision-id (common-lisp:error ":revision-id is required") :type
    (common-lisp:or id common-lisp:null))
   (signed-url common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (signed-url-expires-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-asset-from-signed-url-response-details
                    'make-import-asset-from-signed-url-response-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          import-asset-from-signed-url-response-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          import-asset-from-signed-url-response-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'asset-name))
      (common-lisp:list
       (common-lisp:cons "AssetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-set-id))
      (common-lisp:list
       (common-lisp:cons "DataSetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'md5hash))
      (common-lisp:list
       (common-lisp:cons "Md5Hash"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revision-id))
      (common-lisp:list
       (common-lisp:cons "RevisionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'signed-url))
      (common-lisp:list
       (common-lisp:cons "SignedUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'signed-url-expires-at))
      (common-lisp:list
       (common-lisp:cons "SignedUrlExpiresAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          import-asset-from-signed-url-response-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (import-assets-from-lake-formation-tag-policy-request-details
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-import-assets-from-lake-formation-tag-policy-request-details-"))
   (catalog-id (common-lisp:error ":catalog-id is required") :type
    (common-lisp:or aws-account-id common-lisp:null))
   (database common-lisp:nil :type
    (common-lisp:or database-lftag-policy-and-permissions common-lisp:null))
   (table common-lisp:nil :type
    (common-lisp:or table-lftag-policy-and-permissions common-lisp:null))
   (role-arn (common-lisp:error ":role-arn is required") :type
    (common-lisp:or role-arn common-lisp:null))
   (data-set-id (common-lisp:error ":data-set-id is required") :type
    (common-lisp:or id common-lisp:null))
   (revision-id (common-lisp:error ":revision-id is required") :type
    (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list
   'import-assets-from-lake-formation-tag-policy-request-details
   'make-import-assets-from-lake-formation-tag-policy-request-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          import-assets-from-lake-formation-tag-policy-request-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          import-assets-from-lake-formation-tag-policy-request-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'catalog-id))
      (common-lisp:list
       (common-lisp:cons "CatalogId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'database))
      (common-lisp:list
       (common-lisp:cons "Database"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'table))
      (common-lisp:list
       (common-lisp:cons "Table"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-set-id))
      (common-lisp:list
       (common-lisp:cons "DataSetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revision-id))
      (common-lisp:list
       (common-lisp:cons "RevisionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          import-assets-from-lake-formation-tag-policy-request-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (import-assets-from-lake-formation-tag-policy-response-details
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-import-assets-from-lake-formation-tag-policy-response-details-"))
   (catalog-id (common-lisp:error ":catalog-id is required") :type
    (common-lisp:or aws-account-id common-lisp:null))
   (database common-lisp:nil :type
    (common-lisp:or database-lftag-policy-and-permissions common-lisp:null))
   (table common-lisp:nil :type
    (common-lisp:or table-lftag-policy-and-permissions common-lisp:null))
   (role-arn (common-lisp:error ":role-arn is required") :type
    (common-lisp:or role-arn common-lisp:null))
   (data-set-id (common-lisp:error ":data-set-id is required") :type
    (common-lisp:or id common-lisp:null))
   (revision-id (common-lisp:error ":revision-id is required") :type
    (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list
   'import-assets-from-lake-formation-tag-policy-response-details
   'make-import-assets-from-lake-formation-tag-policy-response-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          import-assets-from-lake-formation-tag-policy-response-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          import-assets-from-lake-formation-tag-policy-response-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'catalog-id))
      (common-lisp:list
       (common-lisp:cons "CatalogId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'database))
      (common-lisp:list
       (common-lisp:cons "Database"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'table))
      (common-lisp:list
       (common-lisp:cons "Table"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-set-id))
      (common-lisp:list
       (common-lisp:cons "DataSetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revision-id))
      (common-lisp:list
       (common-lisp:cons "RevisionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          import-assets-from-lake-formation-tag-policy-response-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (import-assets-from-redshift-data-shares-request-details
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-import-assets-from-redshift-data-shares-request-details-"))
   (asset-sources (common-lisp:error ":asset-sources is required") :type
    (common-lisp:or list-of-redshift-data-share-asset-source-entry
                    common-lisp:null))
   (data-set-id (common-lisp:error ":data-set-id is required") :type
    (common-lisp:or id common-lisp:null))
   (revision-id (common-lisp:error ":revision-id is required") :type
    (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-assets-from-redshift-data-shares-request-details
                    'make-import-assets-from-redshift-data-shares-request-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          import-assets-from-redshift-data-shares-request-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          import-assets-from-redshift-data-shares-request-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'asset-sources))
      (common-lisp:list
       (common-lisp:cons "AssetSources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-set-id))
      (common-lisp:list
       (common-lisp:cons "DataSetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revision-id))
      (common-lisp:list
       (common-lisp:cons "RevisionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          import-assets-from-redshift-data-shares-request-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (import-assets-from-redshift-data-shares-response-details
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-import-assets-from-redshift-data-shares-response-details-"))
   (asset-sources (common-lisp:error ":asset-sources is required") :type
    (common-lisp:or list-of-redshift-data-share-asset-source-entry
                    common-lisp:null))
   (data-set-id (common-lisp:error ":data-set-id is required") :type
    (common-lisp:or id common-lisp:null))
   (revision-id (common-lisp:error ":revision-id is required") :type
    (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-assets-from-redshift-data-shares-response-details
                    'make-import-assets-from-redshift-data-shares-response-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          import-assets-from-redshift-data-shares-response-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          import-assets-from-redshift-data-shares-response-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'asset-sources))
      (common-lisp:list
       (common-lisp:cons "AssetSources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-set-id))
      (common-lisp:list
       (common-lisp:cons "DataSetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revision-id))
      (common-lisp:list
       (common-lisp:cons "RevisionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          import-assets-from-redshift-data-shares-response-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (import-assets-from-s3request-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-import-assets-from-s3request-details-"))
   (asset-sources (common-lisp:error ":asset-sources is required") :type
    (common-lisp:or list-of-asset-source-entry common-lisp:null))
   (data-set-id (common-lisp:error ":data-set-id is required") :type
    (common-lisp:or id common-lisp:null))
   (revision-id (common-lisp:error ":revision-id is required") :type
    (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-assets-from-s3request-details
                    'make-import-assets-from-s3request-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          import-assets-from-s3request-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          import-assets-from-s3request-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'asset-sources))
      (common-lisp:list
       (common-lisp:cons "AssetSources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-set-id))
      (common-lisp:list
       (common-lisp:cons "DataSetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revision-id))
      (common-lisp:list
       (common-lisp:cons "RevisionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          import-assets-from-s3request-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (import-assets-from-s3response-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-import-assets-from-s3response-details-"))
   (asset-sources (common-lisp:error ":asset-sources is required") :type
    (common-lisp:or list-of-asset-source-entry common-lisp:null))
   (data-set-id (common-lisp:error ":data-set-id is required") :type
    (common-lisp:or id common-lisp:null))
   (revision-id (common-lisp:error ":revision-id is required") :type
    (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-assets-from-s3response-details
                    'make-import-assets-from-s3response-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          import-assets-from-s3response-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          import-assets-from-s3response-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'asset-sources))
      (common-lisp:list
       (common-lisp:cons "AssetSources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-set-id))
      (common-lisp:list
       (common-lisp:cons "DataSetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revision-id))
      (common-lisp:list
       (common-lisp:cons "RevisionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          import-assets-from-s3response-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (dataexchange-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (job-entry (:copier common-lisp:nil)
      (:conc-name "struct-shape-job-entry-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or arn common-lisp:null))
   (created-at (common-lisp:error ":created-at is required") :type
    (common-lisp:or timestamp common-lisp:null))
   (details (common-lisp:error ":details is required") :type
    (common-lisp:or response-details common-lisp:null))
   (errors common-lisp:nil :type
    (common-lisp:or list-of-job-error common-lisp:null))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or id common-lisp:null))
   (state (common-lisp:error ":state is required") :type
    (common-lisp:or state common-lisp:null))
   (type (common-lisp:error ":type is required") :type
    (common-lisp:or type common-lisp:null))
   (updated-at (common-lisp:error ":updated-at is required") :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'job-entry 'make-job-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input job-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input job-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'details))
      (common-lisp:list
       (common-lisp:cons "Details"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'errors))
      (common-lisp:list
       (common-lisp:cons "Errors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "UpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input job-entry))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (job-error (:copier common-lisp:nil)
      (:conc-name "struct-shape-job-error-"))
   (code (common-lisp:error ":code is required") :type
    (common-lisp:or code common-lisp:null))
   (details common-lisp:nil :type (common-lisp:or details common-lisp:null))
   (limit-name common-lisp:nil :type
    (common-lisp:or job-error-limit-name common-lisp:null))
   (limit-value common-lisp:nil :type
    (common-lisp:or |__double| common-lisp:null))
   (message (common-lisp:error ":message is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (resource-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (resource-type common-lisp:nil :type
    (common-lisp:or job-error-resource-types common-lisp:null)))
 (common-lisp:export (common-lisp:list 'job-error 'make-job-error))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input job-error))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input job-error))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'code))
      (common-lisp:list
       (common-lisp:cons "Code"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'details))
      (common-lisp:list
       (common-lisp:cons "Details"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit-name))
      (common-lisp:list
       (common-lisp:cons "LimitName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit-value))
      (common-lisp:list
       (common-lisp:cons "LimitValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-id))
      (common-lisp:list
       (common-lisp:cons "ResourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "ResourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input job-error))
   common-lisp:nil))
(common-lisp:deftype job-error-limit-name () 'common-lisp:string)
(common-lisp:deftype job-error-resource-types () 'common-lisp:string)
(common-lisp:deftype lfpermission () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (lfresource-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-lfresource-details-"))
   (database common-lisp:nil :type
    (common-lisp:or database-lftag-policy common-lisp:null))
   (table common-lisp:nil :type
    (common-lisp:or table-lftag-policy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lfresource-details 'make-lfresource-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input lfresource-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input lfresource-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'database))
      (common-lisp:list
       (common-lisp:cons "Database"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'table))
      (common-lisp:list
       (common-lisp:cons "Table"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input lfresource-details))
   common-lisp:nil))
(common-lisp:deftype lfresource-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (lftag (:copier common-lisp:nil) (:conc-name "struct-shape-lftag-"))
   (tag-key (common-lisp:error ":tag-key is required") :type
    (common-lisp:or string common-lisp:null))
   (tag-values (common-lisp:error ":tag-values is required") :type
    (common-lisp:or list-of-lftag-values common-lisp:null)))
 (common-lisp:export (common-lisp:list 'lftag 'make-lftag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input lftag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input lftag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-key))
      (common-lisp:list
       (common-lisp:cons "TagKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-values))
      (common-lisp:list
       (common-lisp:cons "TagValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input lftag))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (lftag-policy-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-lftag-policy-details-"))
   (catalog-id (common-lisp:error ":catalog-id is required") :type
    (common-lisp:or aws-account-id common-lisp:null))
   (resource-type (common-lisp:error ":resource-type is required") :type
    (common-lisp:or lfresource-type common-lisp:null))
   (resource-details (common-lisp:error ":resource-details is required") :type
    (common-lisp:or lfresource-details common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lftag-policy-details 'make-lftag-policy-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input lftag-policy-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input lftag-policy-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'catalog-id))
      (common-lisp:list
       (common-lisp:cons "CatalogId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "ResourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-details))
      (common-lisp:list
       (common-lisp:cons "ResourceDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input lftag-policy-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (lake-formation-data-permission-asset (:copier common-lisp:nil)
      (:conc-name "struct-shape-lake-formation-data-permission-asset-"))
   (lake-formation-data-permission-details
    (common-lisp:error ":lake-formation-data-permission-details is required")
    :type
    (common-lisp:or lake-formation-data-permission-details common-lisp:null))
   (lake-formation-data-permission-type
    (common-lisp:error ":lake-formation-data-permission-type is required")
    :type
    (common-lisp:or lake-formation-data-permission-type common-lisp:null))
   (permissions (common-lisp:error ":permissions is required") :type
    (common-lisp:or list-of-lfpermissions common-lisp:null))
   (role-arn common-lisp:nil :type (common-lisp:or role-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lake-formation-data-permission-asset
                    'make-lake-formation-data-permission-asset))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lake-formation-data-permission-asset))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lake-formation-data-permission-asset))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'lake-formation-data-permission-details))
      (common-lisp:list
       (common-lisp:cons "LakeFormationDataPermissionDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'lake-formation-data-permission-type))
      (common-lisp:list
       (common-lisp:cons "LakeFormationDataPermissionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permissions))
      (common-lisp:list
       (common-lisp:cons "Permissions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lake-formation-data-permission-asset))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (lake-formation-data-permission-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-lake-formation-data-permission-details-"))
   (lftag-policy common-lisp:nil :type
    (common-lisp:or lftag-policy-details common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lake-formation-data-permission-details
                    'make-lake-formation-data-permission-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lake-formation-data-permission-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lake-formation-data-permission-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lftag-policy))
      (common-lisp:list
       (common-lisp:cons "LFTagPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lake-formation-data-permission-details))
   common-lisp:nil))
(common-lisp:deftype lake-formation-data-permission-type () 'common-lisp:string)
(common-lisp:deftype limit-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (list-data-set-revisions-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-data-set-revisions-request-"))
   (data-set-id (common-lisp:error ":data-set-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-data-set-revisions-request
                    'make-list-data-set-revisions-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-data-set-revisions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-data-set-revisions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-data-set-revisions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-data-set-revisions-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-data-set-revisions-response-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (revisions common-lisp:nil :type
    (common-lisp:or list-of-revision-entry common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-data-set-revisions-response
                    'make-list-data-set-revisions-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-data-set-revisions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-data-set-revisions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revisions))
      (common-lisp:list
       (common-lisp:cons "Revisions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-data-set-revisions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-data-sets-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-data-sets-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (origin common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-data-sets-request 'make-list-data-sets-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-data-sets-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-data-sets-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-data-sets-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-data-sets-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-data-sets-response-"))
   (data-sets common-lisp:nil :type
    (common-lisp:or list-of-data-set-entry common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-data-sets-response 'make-list-data-sets-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-data-sets-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-data-sets-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-sets))
      (common-lisp:list
       (common-lisp:cons "DataSets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-data-sets-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-event-actions-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-event-actions-request-"))
   (event-source-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-event-actions-request
                    'make-list-event-actions-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-event-actions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-event-actions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-event-actions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-event-actions-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-event-actions-response-"))
   (event-actions common-lisp:nil :type
    (common-lisp:or list-of-event-action-entry common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-event-actions-response
                    'make-list-event-actions-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-event-actions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-event-actions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-actions))
      (common-lisp:list
       (common-lisp:cons "EventActions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-event-actions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-jobs-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-jobs-request-"))
   (data-set-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (revision-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-jobs-request 'make-list-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-jobs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-jobs-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-jobs-response-"))
   (jobs common-lisp:nil :type
    (common-lisp:or list-of-job-entry common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-jobs-response 'make-list-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'jobs))
      (common-lisp:list
       (common-lisp:cons "Jobs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-jobs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype list-of-asset-destination-entry ()
   '(trivial-types:proper-list asset-destination-entry))
 (common-lisp:defun |make-list-of-asset-destination-entry|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list asset-destination-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-asset-entry ()
   '(trivial-types:proper-list asset-entry))
 (common-lisp:defun |make-list-of-asset-entry|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list asset-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-asset-source-entry ()
   '(trivial-types:proper-list asset-source-entry))
 (common-lisp:defun |make-list-of-asset-source-entry|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list asset-source-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-data-set-entry ()
   '(trivial-types:proper-list data-set-entry))
 (common-lisp:defun |make-list-of-data-set-entry|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list data-set-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-database-lftag-policy-permissions ()
   '(trivial-types:proper-list database-lftag-policy-permission))
 (common-lisp:defun |make-list-of-database-lftag-policy-permissions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            database-lftag-policy-permission))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-event-action-entry ()
   '(trivial-types:proper-list event-action-entry))
 (common-lisp:defun |make-list-of-event-action-entry|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list event-action-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-job-entry ()
   '(trivial-types:proper-list job-entry))
 (common-lisp:defun |make-list-of-job-entry|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list job-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-job-error ()
   '(trivial-types:proper-list job-error))
 (common-lisp:defun |make-list-of-job-error|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list job-error))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-lfpermissions ()
   '(trivial-types:proper-list lfpermission))
 (common-lisp:defun |make-list-of-lfpermissions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list lfpermission))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-lftag-values ()
   '(trivial-types:proper-list string))
 (common-lisp:defun |make-list-of-lftag-values|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-lftags () '(trivial-types:proper-list lftag))
 (common-lisp:defun |make-list-of-lftags|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list lftag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-redshift-data-share-asset-source-entry ()
   '(trivial-types:proper-list redshift-data-share-asset-source-entry))
 (common-lisp:defun |make-list-of-redshift-data-share-asset-source-entry|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            redshift-data-share-asset-source-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-revision-destination-entry ()
   '(trivial-types:proper-list revision-destination-entry))
 (common-lisp:defun |make-list-of-revision-destination-entry|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            revision-destination-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-revision-entry ()
   '(trivial-types:proper-list revision-entry))
 (common-lisp:defun |make-list-of-revision-entry|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list revision-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-table-tag-policy-lfpermissions ()
   '(trivial-types:proper-list table-tag-policy-lfpermission))
 (common-lisp:defun |make-list-of-table-tag-policy-lfpermissions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            table-tag-policy-lfpermission))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-string ()
   '(trivial-types:proper-list |__string|))
 (common-lisp:defun |make-list-of-string|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |__string|))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (list-revision-assets-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-revision-assets-request-"))
   (data-set-id (common-lisp:error ":data-set-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (revision-id (common-lisp:error ":revision-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-revision-assets-request
                    'make-list-revision-assets-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-revision-assets-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-revision-assets-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-revision-assets-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-revision-assets-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-revision-assets-response-"))
   (assets common-lisp:nil :type
    (common-lisp:or list-of-asset-entry common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-revision-assets-response
                    'make-list-revision-assets-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-revision-assets-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-revision-assets-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'assets))
      (common-lisp:list
       (common-lisp:cons "Assets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-revision-assets-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-response-"))
   (tags common-lisp:nil :type
    (common-lisp:or map-of-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype map-of-string () 'common-lisp:hash-table)
 (common-lisp:defun |make-map-of-string| (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype name () 'common-lisp:string)
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:deftype origin () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (origin-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-origin-details-"))
   (product-id (common-lisp:error ":product-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'origin-details 'make-origin-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input origin-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input origin-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'product-id))
      (common-lisp:list
       (common-lisp:cons "ProductId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input origin-details))
   common-lisp:nil))
(common-lisp:deftype protocol-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (redshift-data-share-asset (:copier common-lisp:nil)
      (:conc-name "struct-shape-redshift-data-share-asset-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'redshift-data-share-asset
                    'make-redshift-data-share-asset))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          redshift-data-share-asset))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          redshift-data-share-asset))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          redshift-data-share-asset))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (redshift-data-share-asset-source-entry (:copier common-lisp:nil)
      (:conc-name "struct-shape-redshift-data-share-asset-source-entry-"))
   (data-share-arn (common-lisp:error ":data-share-arn is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'redshift-data-share-asset-source-entry
                    'make-redshift-data-share-asset-source-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          redshift-data-share-asset-source-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          redshift-data-share-asset-source-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-share-arn))
      (common-lisp:list
       (common-lisp:cons "DataShareArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          redshift-data-share-asset-source-entry))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (request-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-request-details-"))
   (export-asset-to-signed-url common-lisp:nil :type
    (common-lisp:or export-asset-to-signed-url-request-details
                    common-lisp:null))
   (export-assets-to-s3 common-lisp:nil :type
    (common-lisp:or export-assets-to-s3request-details common-lisp:null))
   (export-revisions-to-s3 common-lisp:nil :type
    (common-lisp:or export-revisions-to-s3request-details common-lisp:null))
   (import-asset-from-signed-url common-lisp:nil :type
    (common-lisp:or import-asset-from-signed-url-request-details
                    common-lisp:null))
   (import-assets-from-s3 common-lisp:nil :type
    (common-lisp:or import-assets-from-s3request-details common-lisp:null))
   (import-assets-from-redshift-data-shares common-lisp:nil :type
    (common-lisp:or import-assets-from-redshift-data-shares-request-details
                    common-lisp:null))
   (import-asset-from-api-gateway-api common-lisp:nil :type
    (common-lisp:or import-asset-from-api-gateway-api-request-details
                    common-lisp:null))
   (create-s3data-access-from-s3bucket common-lisp:nil :type
    (common-lisp:or create-s3data-access-from-s3bucket-request-details
                    common-lisp:null))
   (import-assets-from-lake-formation-tag-policy common-lisp:nil :type
    (common-lisp:or
     import-assets-from-lake-formation-tag-policy-request-details
     common-lisp:null)))
 (common-lisp:export (common-lisp:list 'request-details 'make-request-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input request-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input request-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'export-asset-to-signed-url))
      (common-lisp:list
       (common-lisp:cons "ExportAssetToSignedUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'export-assets-to-s3))
      (common-lisp:list
       (common-lisp:cons "ExportAssetsToS3"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'export-revisions-to-s3))
      (common-lisp:list
       (common-lisp:cons "ExportRevisionsToS3"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'import-asset-from-signed-url))
      (common-lisp:list
       (common-lisp:cons "ImportAssetFromSignedUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'import-assets-from-s3))
      (common-lisp:list
       (common-lisp:cons "ImportAssetsFromS3"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'import-assets-from-redshift-data-shares))
      (common-lisp:list
       (common-lisp:cons "ImportAssetsFromRedshiftDataShares"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'import-asset-from-api-gateway-api))
      (common-lisp:list
       (common-lisp:cons "ImportAssetFromApiGatewayApi"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'create-s3data-access-from-s3bucket))
      (common-lisp:list
       (common-lisp:cons "CreateS3DataAccessFromS3Bucket"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'import-assets-from-lake-formation-tag-policy))
      (common-lisp:list
       (common-lisp:cons "ImportAssetsFromLakeFormationTagPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input request-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (dataexchange-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)
      (resource-id :initarg :resource-id :initform common-lisp:nil :reader
       resource-not-found-exception-resource-id)
      (resource-type :initarg :resource-type :initform common-lisp:nil :reader
       resource-not-found-exception-resource-type)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message
                    'resource-not-found-exception-resource-id
                    'resource-not-found-exception-resource-type)))
(common-lisp:deftype resource-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (response-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-response-details-"))
   (export-asset-to-signed-url common-lisp:nil :type
    (common-lisp:or export-asset-to-signed-url-response-details
                    common-lisp:null))
   (export-assets-to-s3 common-lisp:nil :type
    (common-lisp:or export-assets-to-s3response-details common-lisp:null))
   (export-revisions-to-s3 common-lisp:nil :type
    (common-lisp:or export-revisions-to-s3response-details common-lisp:null))
   (import-asset-from-signed-url common-lisp:nil :type
    (common-lisp:or import-asset-from-signed-url-response-details
                    common-lisp:null))
   (import-assets-from-s3 common-lisp:nil :type
    (common-lisp:or import-assets-from-s3response-details common-lisp:null))
   (import-assets-from-redshift-data-shares common-lisp:nil :type
    (common-lisp:or import-assets-from-redshift-data-shares-response-details
                    common-lisp:null))
   (import-asset-from-api-gateway-api common-lisp:nil :type
    (common-lisp:or import-asset-from-api-gateway-api-response-details
                    common-lisp:null))
   (create-s3data-access-from-s3bucket common-lisp:nil :type
    (common-lisp:or create-s3data-access-from-s3bucket-response-details
                    common-lisp:null))
   (import-assets-from-lake-formation-tag-policy common-lisp:nil :type
    (common-lisp:or
     import-assets-from-lake-formation-tag-policy-response-details
     common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'response-details 'make-response-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input response-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input response-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'export-asset-to-signed-url))
      (common-lisp:list
       (common-lisp:cons "ExportAssetToSignedUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'export-assets-to-s3))
      (common-lisp:list
       (common-lisp:cons "ExportAssetsToS3"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'export-revisions-to-s3))
      (common-lisp:list
       (common-lisp:cons "ExportRevisionsToS3"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'import-asset-from-signed-url))
      (common-lisp:list
       (common-lisp:cons "ImportAssetFromSignedUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'import-assets-from-s3))
      (common-lisp:list
       (common-lisp:cons "ImportAssetsFromS3"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'import-assets-from-redshift-data-shares))
      (common-lisp:list
       (common-lisp:cons "ImportAssetsFromRedshiftDataShares"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'import-asset-from-api-gateway-api))
      (common-lisp:list
       (common-lisp:cons "ImportAssetFromApiGatewayApi"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'create-s3data-access-from-s3bucket))
      (common-lisp:list
       (common-lisp:cons "CreateS3DataAccessFromS3Bucket"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'import-assets-from-lake-formation-tag-policy))
      (common-lisp:list
       (common-lisp:cons "ImportAssetsFromLakeFormationTagPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input response-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (revision-destination-entry (:copier common-lisp:nil)
      (:conc-name "struct-shape-revision-destination-entry-"))
   (bucket (common-lisp:error ":bucket is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (key-pattern common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (revision-id (common-lisp:error ":revision-id is required") :type
    (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'revision-destination-entry
                    'make-revision-destination-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          revision-destination-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          revision-destination-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket))
      (common-lisp:list
       (common-lisp:cons "Bucket"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-pattern))
      (common-lisp:list
       (common-lisp:cons "KeyPattern"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revision-id))
      (common-lisp:list
       (common-lisp:cons "RevisionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          revision-destination-entry))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (revision-entry (:copier common-lisp:nil)
      (:conc-name "struct-shape-revision-entry-"))
   (arn (common-lisp:error ":arn is required") :type
    (common-lisp:or arn common-lisp:null))
   (comment common-lisp:nil :type
    (common-lisp:or |__stringMin0Max16384| common-lisp:null))
   (created-at (common-lisp:error ":created-at is required") :type
    (common-lisp:or timestamp common-lisp:null))
   (data-set-id (common-lisp:error ":data-set-id is required") :type
    (common-lisp:or id common-lisp:null))
   (finalized common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (id (common-lisp:error ":id is required") :type
    (common-lisp:or id common-lisp:null))
   (source-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (updated-at (common-lisp:error ":updated-at is required") :type
    (common-lisp:or timestamp common-lisp:null))
   (revocation-comment common-lisp:nil :type
    (common-lisp:or |__stringMin10Max512| common-lisp:null))
   (revoked common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (revoked-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'revision-entry 'make-revision-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input revision-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input revision-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'comment))
      (common-lisp:list
       (common-lisp:cons "Comment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-set-id))
      (common-lisp:list
       (common-lisp:cons "DataSetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'finalized))
      (common-lisp:list
       (common-lisp:cons "Finalized"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-id))
      (common-lisp:list
       (common-lisp:cons "SourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "UpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revocation-comment))
      (common-lisp:list
       (common-lisp:cons "RevocationComment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revoked))
      (common-lisp:list
       (common-lisp:cons "Revoked"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revoked-at))
      (common-lisp:list
       (common-lisp:cons "RevokedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input revision-entry))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (revision-published (:copier common-lisp:nil)
      (:conc-name "struct-shape-revision-published-"))
   (data-set-id (common-lisp:error ":data-set-id is required") :type
    (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'revision-published 'make-revision-published))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input revision-published))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input revision-published))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-set-id))
      (common-lisp:list
       (common-lisp:cons "DataSetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input revision-published))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (revoke-revision-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-revoke-revision-request-"))
   (data-set-id (common-lisp:error ":data-set-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (revision-id (common-lisp:error ":revision-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (revocation-comment (common-lisp:error ":revocation-comment is required")
    :type (common-lisp:or |__stringMin10Max512| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'revoke-revision-request 'make-revoke-revision-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          revoke-revision-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          revoke-revision-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revocation-comment))
      (common-lisp:list
       (common-lisp:cons "RevocationComment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          revoke-revision-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (revoke-revision-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-revoke-revision-response-"))
   (arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (comment common-lisp:nil :type
    (common-lisp:or |__stringMin0Max16384| common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (data-set-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (finalized common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (source-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (updated-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (revocation-comment common-lisp:nil :type
    (common-lisp:or |__stringMin10Max512| common-lisp:null))
   (revoked common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (revoked-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'revoke-revision-response 'make-revoke-revision-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          revoke-revision-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          revoke-revision-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'comment))
      (common-lisp:list
       (common-lisp:cons "Comment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-set-id))
      (common-lisp:list
       (common-lisp:cons "DataSetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'finalized))
      (common-lisp:list
       (common-lisp:cons "Finalized"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-id))
      (common-lisp:list
       (common-lisp:cons "SourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "UpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revocation-comment))
      (common-lisp:list
       (common-lisp:cons "RevocationComment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revoked))
      (common-lisp:list
       (common-lisp:cons "Revoked"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revoked-at))
      (common-lisp:list
       (common-lisp:cons "RevokedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          revoke-revision-response))
   common-lisp:nil))
(common-lisp:deftype role-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (s3data-access-asset (:copier common-lisp:nil)
      (:conc-name "struct-shape-s3data-access-asset-"))
   (bucket (common-lisp:error ":bucket is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (key-prefixes common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null))
   (keys common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null))
   (s3access-point-alias common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (s3access-point-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 's3data-access-asset 'make-s3data-access-asset))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input s3data-access-asset))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input s3data-access-asset))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket))
      (common-lisp:list
       (common-lisp:cons "Bucket"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-prefixes))
      (common-lisp:list
       (common-lisp:cons "KeyPrefixes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'keys))
      (common-lisp:list
       (common-lisp:cons "Keys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           's3access-point-alias))
      (common-lisp:list
       (common-lisp:cons "S3AccessPointAlias"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3access-point-arn))
      (common-lisp:list
       (common-lisp:cons "S3AccessPointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input s3data-access-asset))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (s3data-access-asset-source-entry (:copier common-lisp:nil)
      (:conc-name "struct-shape-s3data-access-asset-source-entry-"))
   (bucket (common-lisp:error ":bucket is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (key-prefixes common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null))
   (keys common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 's3data-access-asset-source-entry
                    'make-s3data-access-asset-source-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          s3data-access-asset-source-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          s3data-access-asset-source-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket))
      (common-lisp:list
       (common-lisp:cons "Bucket"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-prefixes))
      (common-lisp:list
       (common-lisp:cons "KeyPrefixes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'keys))
      (common-lisp:list
       (common-lisp:cons "Keys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          s3data-access-asset-source-entry))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (s3snapshot-asset (:copier common-lisp:nil)
      (:conc-name "struct-shape-s3snapshot-asset-"))
   (size (common-lisp:error ":size is required") :type
    (common-lisp:or |__doubleMin0| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 's3snapshot-asset 'make-s3snapshot-asset))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input s3snapshot-asset))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input s3snapshot-asset))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'size))
      (common-lisp:list
       (common-lisp:cons "Size"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input s3snapshot-asset))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (send-api-asset-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-send-api-asset-request-"))
   (body common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (query-string-parameters common-lisp:nil :type
    (common-lisp:or map-of-string common-lisp:null))
   (asset-id (common-lisp:error ":asset-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (data-set-id (common-lisp:error ":data-set-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (request-headers common-lisp:nil :type
    (common-lisp:or map-of-string common-lisp:null))
   (method common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (path common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (revision-id (common-lisp:error ":revision-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'send-api-asset-request 'make-send-api-asset-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          send-api-asset-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'asset-id))
      (common-lisp:cons "x-amzn-dataexchange-asset-id"
                        aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-set-id))
      (common-lisp:cons "x-amzn-dataexchange-data-set-id"
                        aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'method))
      (common-lisp:cons "x-amzn-dataexchange-http-method"
                        aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'path))
      (common-lisp:cons "x-amzn-dataexchange-path"
                        aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revision-id))
      (common-lisp:cons "x-amzn-dataexchange-revision-id"
                        aws-sdk/generator/shape::value))
    (common-lisp:when
        (common-lisp:slot-value aws-sdk/generator/shape::input
                                'request-headers)
      (common-lisp:loop aws-sdk/generator/shape::for aws-sdk/generator/shape::key aws-sdk/generator/shape::being aws-sdk/generator/shape::each aws-sdk/generator/shape::hash-key aws-sdk/generator/shape::of (common-lisp:slot-value
                                                                                                                                                                                                              aws-sdk/generator/shape::input
                                                                                                                                                                                                              'request-headers) aws-sdk/generator/shape::using (aws-sdk/generator/shape::hash-value
                                                                                                                                                                                                                                                                aws-sdk/generator/shape::value)
                        aws-sdk/generator/shape::collect (common-lisp:cons
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "~A~A"
                                                           "x-amzn-dataexchange-header-"
                                                           aws-sdk/generator/shape::key)
                                                          aws-sdk/generator/shape::value)))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          send-api-asset-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          send-api-asset-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'body)))
(common-lisp:progn
 (common-lisp:defstruct
     (send-api-asset-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-send-api-asset-response-"))
   (body common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (response-headers common-lisp:nil :type
    (common-lisp:or map-of-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'send-api-asset-response 'make-send-api-asset-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          send-api-asset-response))
   (common-lisp:append
    (common-lisp:when
        (common-lisp:slot-value aws-sdk/generator/shape::input
                                'response-headers)
      (common-lisp:loop aws-sdk/generator/shape::for aws-sdk/generator/shape::key aws-sdk/generator/shape::being aws-sdk/generator/shape::each aws-sdk/generator/shape::hash-key aws-sdk/generator/shape::of (common-lisp:slot-value
                                                                                                                                                                                                              aws-sdk/generator/shape::input
                                                                                                                                                                                                              'response-headers) aws-sdk/generator/shape::using (aws-sdk/generator/shape::hash-value
                                                                                                                                                                                                                                                                 aws-sdk/generator/shape::value)
                        aws-sdk/generator/shape::collect (common-lisp:cons
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "~A~A" ""
                                                           aws-sdk/generator/shape::key)
                                                          aws-sdk/generator/shape::value)))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          send-api-asset-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          send-api-asset-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'body)))
(common-lisp:deftype server-side-encryption-types () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition service-limit-exceeded-exception
     (dataexchange-error)
     ((limit-name :initarg :limit-name :initform common-lisp:nil :reader
       service-limit-exceeded-exception-limit-name)
      (limit-value :initarg :limit-value :initform common-lisp:nil :reader
       service-limit-exceeded-exception-limit-value)
      (message :initarg :message :initform common-lisp:nil :reader
       service-limit-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-limit-exceeded-exception
                    'service-limit-exceeded-exception-limit-name
                    'service-limit-exceeded-exception-limit-value
                    'service-limit-exceeded-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (start-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-job-request-"))
   (job-id (common-lisp:error ":job-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-job-request 'make-start-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input start-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input start-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input start-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-job-response-")))
 (common-lisp:export
  (common-lisp:list 'start-job-response 'make-start-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input start-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input start-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input start-job-response))
   common-lisp:nil))
(common-lisp:deftype state () 'common-lisp:string)
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (table-lftag-policy (:copier common-lisp:nil)
      (:conc-name "struct-shape-table-lftag-policy-"))
   (expression (common-lisp:error ":expression is required") :type
    (common-lisp:or list-of-lftags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'table-lftag-policy 'make-table-lftag-policy))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input table-lftag-policy))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input table-lftag-policy))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expression))
      (common-lisp:list
       (common-lisp:cons "Expression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input table-lftag-policy))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (table-lftag-policy-and-permissions (:copier common-lisp:nil)
      (:conc-name "struct-shape-table-lftag-policy-and-permissions-"))
   (expression (common-lisp:error ":expression is required") :type
    (common-lisp:or list-of-lftags common-lisp:null))
   (permissions (common-lisp:error ":permissions is required") :type
    (common-lisp:or list-of-table-tag-policy-lfpermissions common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'table-lftag-policy-and-permissions
                    'make-table-lftag-policy-and-permissions))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          table-lftag-policy-and-permissions))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          table-lftag-policy-and-permissions))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expression))
      (common-lisp:list
       (common-lisp:cons "Expression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permissions))
      (common-lisp:list
       (common-lisp:cons "Permissions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          table-lftag-policy-and-permissions))
   common-lisp:nil))
(common-lisp:deftype table-tag-policy-lfpermission () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (tags (common-lisp:error ":tags is required") :type
    (common-lisp:or map-of-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (dataexchange-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       throttling-exception-message)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message)))
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:deftype type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (tag-keys (common-lisp:error ":tag-keys is required") :type
    (common-lisp:or list-of-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-asset-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-asset-request-"))
   (asset-id (common-lisp:error ":asset-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (data-set-id (common-lisp:error ":data-set-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or asset-name common-lisp:null))
   (revision-id (common-lisp:error ":revision-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-asset-request 'make-update-asset-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-asset-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-asset-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-asset-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-asset-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-asset-response-"))
   (arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (asset-details common-lisp:nil :type
    (common-lisp:or asset-details common-lisp:null))
   (asset-type common-lisp:nil :type
    (common-lisp:or asset-type common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (data-set-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or asset-name common-lisp:null))
   (revision-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (source-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (updated-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-asset-response 'make-update-asset-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-asset-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-asset-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'asset-details))
      (common-lisp:list
       (common-lisp:cons "AssetDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'asset-type))
      (common-lisp:list
       (common-lisp:cons "AssetType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-set-id))
      (common-lisp:list
       (common-lisp:cons "DataSetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revision-id))
      (common-lisp:list
       (common-lisp:cons "RevisionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-id))
      (common-lisp:list
       (common-lisp:cons "SourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "UpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-asset-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-data-set-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-data-set-request-"))
   (data-set-id (common-lisp:error ":data-set-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-data-set-request 'make-update-data-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-data-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-data-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-data-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-data-set-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-data-set-response-"))
   (arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (asset-type common-lisp:nil :type
    (common-lisp:or asset-type common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (origin common-lisp:nil :type (common-lisp:or origin common-lisp:null))
   (origin-details common-lisp:nil :type
    (common-lisp:or origin-details common-lisp:null))
   (source-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (updated-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-data-set-response 'make-update-data-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-data-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-data-set-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'asset-type))
      (common-lisp:list
       (common-lisp:cons "AssetType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'origin))
      (common-lisp:list
       (common-lisp:cons "Origin"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'origin-details))
      (common-lisp:list
       (common-lisp:cons "OriginDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-id))
      (common-lisp:list
       (common-lisp:cons "SourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "UpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-data-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-event-action-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-event-action-request-"))
   (action common-lisp:nil :type (common-lisp:or action common-lisp:null))
   (event-action-id (common-lisp:error ":event-action-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-event-action-request
                    'make-update-event-action-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-event-action-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-event-action-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action))
      (common-lisp:list
       (common-lisp:cons "Action"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-event-action-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-event-action-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-event-action-response-"))
   (action common-lisp:nil :type (common-lisp:or action common-lisp:null))
   (arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (event common-lisp:nil :type (common-lisp:or event common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (updated-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-event-action-response
                    'make-update-event-action-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-event-action-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-event-action-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action))
      (common-lisp:list
       (common-lisp:cons "Action"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event))
      (common-lisp:list
       (common-lisp:cons "Event"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "UpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-event-action-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-revision-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-revision-request-"))
   (comment common-lisp:nil :type
    (common-lisp:or |__stringMin0Max16384| common-lisp:null))
   (data-set-id (common-lisp:error ":data-set-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (finalized common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (revision-id (common-lisp:error ":revision-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-revision-request 'make-update-revision-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-revision-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-revision-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'comment))
      (common-lisp:list
       (common-lisp:cons "Comment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'finalized))
      (common-lisp:list
       (common-lisp:cons "Finalized"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-revision-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-revision-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-revision-response-"))
   (arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (comment common-lisp:nil :type
    (common-lisp:or |__stringMin0Max16384| common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (data-set-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (finalized common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (source-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (updated-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (revocation-comment common-lisp:nil :type
    (common-lisp:or |__stringMin10Max512| common-lisp:null))
   (revoked common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (revoked-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-revision-response 'make-update-revision-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-revision-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-revision-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'comment))
      (common-lisp:list
       (common-lisp:cons "Comment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-set-id))
      (common-lisp:list
       (common-lisp:cons "DataSetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'finalized))
      (common-lisp:list
       (common-lisp:cons "Finalized"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-id))
      (common-lisp:list
       (common-lisp:cons "SourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "UpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revocation-comment))
      (common-lisp:list
       (common-lisp:cons "RevocationComment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revoked))
      (common-lisp:list
       (common-lisp:cons "Revoked"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revoked-at))
      (common-lisp:list
       (common-lisp:cons "RevokedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-revision-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (dataexchange-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       validation-exception-message)
      (exception-cause :initarg :exception-cause :initform common-lisp:nil
       :reader validation-exception-exception-cause)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-message
                    'validation-exception-exception-cause)))
(common-lisp:deftype |__boolean| () 'common-lisp:boolean)
(common-lisp:deftype |__double| () 'common-lisp:double-float)
(common-lisp:deftype |__doubleMin0| () 'common-lisp:double-float)
(common-lisp:deftype |__string| () 'common-lisp:string)
(common-lisp:deftype |__stringMin0Max16384| () 'common-lisp:string)
(common-lisp:deftype |__stringMin10Max512| () 'common-lisp:string)
(common-lisp:deftype |__stringMin24Max24PatternAZaZ094AZaZ092AZaZ093| ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun cancel-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id)
   (common-lisp:declare (common-lisp:ignorable job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-cancel-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'dataexchange-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/jobs/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'job-id))))
                                                        "CancelJob"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'cancel-job))
(common-lisp:progn
 (common-lisp:defun create-data-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key asset-type description name tags)
   (common-lisp:declare
    (common-lisp:ignorable asset-type description name tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-data-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'dataexchange-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/v1/data-sets"
                                                        "CreateDataSet"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-data-set))
(common-lisp:progn
 (common-lisp:defun create-event-action
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key action event)
   (common-lisp:declare (common-lisp:ignorable action event))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-event-action-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'dataexchange-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/v1/event-actions"
                                                        "CreateEventAction"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-event-action))
(common-lisp:progn
 (common-lisp:defun create-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key details type)
   (common-lisp:declare (common-lisp:ignorable details type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'dataexchange-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/v1/jobs"
                                                        "CreateJob"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-job))
(common-lisp:progn
 (common-lisp:defun create-revision
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key comment data-set-id tags)
   (common-lisp:declare (common-lisp:ignorable comment data-set-id tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-revision-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'dataexchange-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/data-sets/~A/revisions"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'data-set-id))))
                                                        "CreateRevision"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-revision))
(common-lisp:progn
 (common-lisp:defun delete-asset
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key asset-id data-set-id revision-id)
   (common-lisp:declare
    (common-lisp:ignorable asset-id data-set-id revision-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-asset-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'dataexchange-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/data-sets/~A/revisions/~A/assets/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'data-set-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'revision-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'asset-id))))
                                                        "DeleteAsset"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-asset))
(common-lisp:progn
 (common-lisp:defun delete-data-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key data-set-id)
   (common-lisp:declare (common-lisp:ignorable data-set-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-data-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'dataexchange-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/data-sets/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'data-set-id))))
                                                        "DeleteDataSet"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-data-set))
(common-lisp:progn
 (common-lisp:defun delete-event-action
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key event-action-id)
   (common-lisp:declare (common-lisp:ignorable event-action-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-event-action-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'dataexchange-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/event-actions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'event-action-id))))
                                                        "DeleteEventAction"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-event-action))
(common-lisp:progn
 (common-lisp:defun delete-revision
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key data-set-id revision-id)
   (common-lisp:declare (common-lisp:ignorable data-set-id revision-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-revision-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'dataexchange-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/data-sets/~A/revisions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'data-set-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'revision-id))))
                                                        "DeleteRevision"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-revision))
(common-lisp:progn
 (common-lisp:defun get-asset
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key asset-id data-set-id revision-id)
   (common-lisp:declare
    (common-lisp:ignorable asset-id data-set-id revision-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-asset-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'dataexchange-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/data-sets/~A/revisions/~A/assets/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'data-set-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'revision-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'asset-id))))
                                                        "GetAsset"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-asset))
(common-lisp:progn
 (common-lisp:defun get-data-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key data-set-id)
   (common-lisp:declare (common-lisp:ignorable data-set-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-data-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'dataexchange-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/data-sets/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'data-set-id))))
                                                        "GetDataSet"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-data-set))
(common-lisp:progn
 (common-lisp:defun get-event-action
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key event-action-id)
   (common-lisp:declare (common-lisp:ignorable event-action-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-event-action-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'dataexchange-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/event-actions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'event-action-id))))
                                                        "GetEventAction"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-event-action))
(common-lisp:progn
 (common-lisp:defun get-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id)
   (common-lisp:declare (common-lisp:ignorable job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'dataexchange-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/jobs/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'job-id))))
                                                        "GetJob" "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-job))
(common-lisp:progn
 (common-lisp:defun get-revision
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key data-set-id revision-id)
   (common-lisp:declare (common-lisp:ignorable data-set-id revision-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-revision-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'dataexchange-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/data-sets/~A/revisions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'data-set-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'revision-id))))
                                                        "GetRevision"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-revision))
(common-lisp:progn
 (common-lisp:defun list-data-set-revisions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key data-set-id max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable data-set-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-data-set-revisions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'dataexchange-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/data-sets/~A/revisions"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'data-set-id))))
                                                        "ListDataSetRevisions"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-data-set-revisions))
(common-lisp:progn
 (common-lisp:defun list-data-sets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token origin)
   (common-lisp:declare (common-lisp:ignorable max-results next-token origin))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-data-sets-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'dataexchange-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/v1/data-sets"
                                                        "ListDataSets"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-data-sets))
(common-lisp:progn
 (common-lisp:defun list-event-actions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key event-source-id max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable event-source-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-event-actions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'dataexchange-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/v1/event-actions"
                                                        "ListEventActions"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-event-actions))
(common-lisp:progn
 (common-lisp:defun list-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key data-set-id max-results next-token
                     revision-id)
   (common-lisp:declare
    (common-lisp:ignorable data-set-id max-results next-token revision-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-jobs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'dataexchange-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/v1/jobs"
                                                        "ListJobs"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-jobs))
(common-lisp:progn
 (common-lisp:defun list-revision-assets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key data-set-id max-results next-token
                     revision-id)
   (common-lisp:declare
    (common-lisp:ignorable data-set-id max-results next-token revision-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-revision-assets-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'dataexchange-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/data-sets/~A/revisions/~A/assets"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'data-set-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'revision-id))))
                                                        "ListRevisionAssets"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-revision-assets))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'dataexchange-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "ListTagsForResource"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun revoke-revision
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key data-set-id revision-id
                     revocation-comment)
   (common-lisp:declare
    (common-lisp:ignorable data-set-id revision-id revocation-comment))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-revoke-revision-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'dataexchange-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/data-sets/~A/revisions/~A/revoke"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'data-set-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'revision-id))))
                                                        "RevokeRevision"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'revoke-revision))
(common-lisp:progn
 (common-lisp:defun send-api-asset
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key body query-string-parameters asset-id
                     data-set-id request-headers method path revision-id)
   (common-lisp:declare
    (common-lisp:ignorable body query-string-parameters asset-id data-set-id
     request-headers method path revision-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-send-api-asset-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'dataexchange-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/v1"
                                                        "SendApiAsset"
                                                        "2017-07-25"))
      "string" common-lisp:nil *error-map*)))
 (common-lisp:export 'send-api-asset))
(common-lisp:progn
 (common-lisp:defun start-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id)
   (common-lisp:declare (common-lisp:ignorable job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'dataexchange-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/jobs/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'job-id))))
                                                        "StartJob"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-job))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'dataexchange-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "TagResource"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'dataexchange-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "UntagResource"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-asset
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key asset-id data-set-id name revision-id)
   (common-lisp:declare
    (common-lisp:ignorable asset-id data-set-id name revision-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-asset-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'dataexchange-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/data-sets/~A/revisions/~A/assets/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'data-set-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'revision-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'asset-id))))
                                                        "UpdateAsset"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-asset))
(common-lisp:progn
 (common-lisp:defun update-data-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key data-set-id description name)
   (common-lisp:declare (common-lisp:ignorable data-set-id description name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-data-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'dataexchange-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/data-sets/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'data-set-id))))
                                                        "UpdateDataSet"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-data-set))
(common-lisp:progn
 (common-lisp:defun update-event-action
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key action event-action-id)
   (common-lisp:declare (common-lisp:ignorable action event-action-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-event-action-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'dataexchange-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/event-actions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'event-action-id))))
                                                        "UpdateEventAction"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-event-action))
(common-lisp:progn
 (common-lisp:defun update-revision
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key comment data-set-id finalized
                     revision-id)
   (common-lisp:declare
    (common-lisp:ignorable comment data-set-id finalized revision-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-revision-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'dataexchange-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/data-sets/~A/revisions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'data-set-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'revision-id))))
                                                        "UpdateRevision"
                                                        "2017-07-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-revision))
