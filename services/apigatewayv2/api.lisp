;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/apigatewayv2/api
  (:use)
  (:nicknames #:aws/apigatewayv2)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/json-request)
  (:import-from #:aws-sdk/rest-json-request)
  (:import-from #:aws-sdk/rest-xml-request)
  (:import-from #:aws-sdk/query-request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/apigatewayv2/api)
(common-lisp:progn
 (common-lisp:define-condition apigatewayv2-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'apigatewayv2-error))
(common-lisp:progn
 (common-lisp:defclass apigatewayv2-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "apigatewayv2" :api-version
                        "2018-11-29" :host-prefix "apigateway" :signing-name
                        "apigateway" :global-host common-lisp:nil))
 (common-lisp:export 'apigatewayv2-request))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("BadRequestException" . bad-request-exception)
    ("ConflictException" . conflict-exception)
    ("NotFoundException" . not-found-exception)
    ("TooManyRequestsException" . too-many-requests-exception)))
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (apigatewayv2-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       access-denied-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (access-log-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-access-log-settings-"))
   (destination-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (format common-lisp:nil :type
    (common-lisp:or string-with-length-between1and1024 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'access-log-settings 'make-access-log-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input access-log-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input access-log-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination-arn))
      (common-lisp:list
       (common-lisp:cons "DestinationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'format))
      (common-lisp:list
       (common-lisp:cons "Format"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input access-log-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (api (:copier common-lisp:nil) (:conc-name "struct-shape-api-"))
   (api-endpoint common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (api-gateway-managed common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (api-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (api-key-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (cors-configuration common-lisp:nil :type
    (common-lisp:or cors common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or |__timestampIso8601| common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (disable-schema-validation common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (disable-execute-api-endpoint common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (import-info common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (protocol-type (common-lisp:error ":protocol-type is required") :type
    (common-lisp:or protocol-type common-lisp:null))
   (route-selection-expression
    (common-lisp:error ":route-selection-expression is required") :type
    (common-lisp:or selection-expression common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null))
   (version common-lisp:nil :type
    (common-lisp:or string-with-length-between1and64 common-lisp:null))
   (warnings common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'api 'make-api))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input api))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input api))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-endpoint))
      (common-lisp:list
       (common-lisp:cons "ApiEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-gateway-managed))
      (common-lisp:list
       (common-lisp:cons "ApiGatewayManaged"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-id))
      (common-lisp:list
       (common-lisp:cons "ApiId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'api-key-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ApiKeySelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cors-configuration))
      (common-lisp:list
       (common-lisp:cons "CorsConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-schema-validation))
      (common-lisp:list
       (common-lisp:cons "DisableSchemaValidation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-execute-api-endpoint))
      (common-lisp:list
       (common-lisp:cons "DisableExecuteApiEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'import-info))
      (common-lisp:list
       (common-lisp:cons "ImportInfo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol-type))
      (common-lisp:list
       (common-lisp:cons "ProtocolType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'route-selection-expression))
      (common-lisp:list
       (common-lisp:cons "RouteSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warnings))
      (common-lisp:list
       (common-lisp:cons "Warnings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input api))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (api-mapping (:copier common-lisp:nil)
      (:conc-name "struct-shape-api-mapping-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or id common-lisp:null))
   (api-mapping-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (api-mapping-key common-lisp:nil :type
    (common-lisp:or selection-key common-lisp:null))
   (stage (common-lisp:error ":stage is required") :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null)))
 (common-lisp:export (common-lisp:list 'api-mapping 'make-api-mapping))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input api-mapping))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input api-mapping))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-id))
      (common-lisp:list
       (common-lisp:cons "ApiId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-mapping-id))
      (common-lisp:list
       (common-lisp:cons "ApiMappingId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-mapping-key))
      (common-lisp:list
       (common-lisp:cons "ApiMappingKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage))
      (common-lisp:list
       (common-lisp:cons "Stage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input api-mapping))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (api-mappings (:copier common-lisp:nil)
      (:conc-name "struct-shape-api-mappings-"))
   (items common-lisp:nil :type
    (common-lisp:or |__listOfApiMapping| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export (common-lisp:list 'api-mappings 'make-api-mappings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input api-mappings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input api-mappings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input api-mappings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (apis (:copier common-lisp:nil) (:conc-name "struct-shape-apis-"))
   (items common-lisp:nil :type
    (common-lisp:or |__listOfApi| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export (common-lisp:list 'apis 'make-apis))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input apis))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input apis))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input apis))
   common-lisp:nil))
(common-lisp:deftype arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype authorization-scopes ()
   '(trivial-types:proper-list string-with-length-between1and64))
 (common-lisp:defun make-authorization-scopes
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            string-with-length-between1and64))
   aws-sdk/generator/shape::members))
(common-lisp:deftype authorization-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (authorizer (:copier common-lisp:nil)
      (:conc-name "struct-shape-authorizer-"))
   (authorizer-credentials-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (authorizer-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (authorizer-result-ttl-in-seconds common-lisp:nil :type
    (common-lisp:or integer-with-length-between0and3600 common-lisp:null))
   (authorizer-type common-lisp:nil :type
    (common-lisp:or authorizer-type common-lisp:null))
   (authorizer-uri common-lisp:nil :type
    (common-lisp:or uri-with-length-between1and2048 common-lisp:null))
   (identity-source common-lisp:nil :type
    (common-lisp:or identity-source-list common-lisp:null))
   (identity-validation-expression common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (jwt-configuration common-lisp:nil :type
    (common-lisp:or jwtconfiguration common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (authorizer-payload-format-version common-lisp:nil :type
    (common-lisp:or string-with-length-between1and64 common-lisp:null))
   (enable-simple-responses common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'authorizer 'make-authorizer))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input authorizer))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input authorizer))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-credentials-arn))
      (common-lisp:list
       (common-lisp:cons "AuthorizerCredentialsArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-id))
      (common-lisp:list
       (common-lisp:cons "AuthorizerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-result-ttl-in-seconds))
      (common-lisp:list
       (common-lisp:cons "AuthorizerResultTtlInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-type))
      (common-lisp:list
       (common-lisp:cons "AuthorizerType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-uri))
      (common-lisp:list
       (common-lisp:cons "AuthorizerUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-source))
      (common-lisp:list
       (common-lisp:cons "IdentitySource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'identity-validation-expression))
      (common-lisp:list
       (common-lisp:cons "IdentityValidationExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'jwt-configuration))
      (common-lisp:list
       (common-lisp:cons "JwtConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-payload-format-version))
      (common-lisp:list
       (common-lisp:cons "AuthorizerPayloadFormatVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enable-simple-responses))
      (common-lisp:list
       (common-lisp:cons "EnableSimpleResponses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input authorizer))
   common-lisp:nil))
(common-lisp:deftype authorizer-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (authorizers (:copier common-lisp:nil)
      (:conc-name "struct-shape-authorizers-"))
   (items common-lisp:nil :type
    (common-lisp:or |__listOfAuthorizer| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export (common-lisp:list 'authorizers 'make-authorizers))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input authorizers))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input authorizers))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input authorizers))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition bad-request-exception
     (apigatewayv2-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       bad-request-exception-message)))
 (common-lisp:export
  (common-lisp:list 'bad-request-exception 'bad-request-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (apigatewayv2-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message)))
(common-lisp:deftype connection-type () 'common-lisp:string)
(common-lisp:deftype content-handling-strategy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (cors (:copier common-lisp:nil) (:conc-name "struct-shape-cors-"))
   (allow-credentials common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (allow-headers common-lisp:nil :type
    (common-lisp:or cors-header-list common-lisp:null))
   (allow-methods common-lisp:nil :type
    (common-lisp:or cors-method-list common-lisp:null))
   (allow-origins common-lisp:nil :type
    (common-lisp:or cors-origin-list common-lisp:null))
   (expose-headers common-lisp:nil :type
    (common-lisp:or cors-header-list common-lisp:null))
   (max-age common-lisp:nil :type
    (common-lisp:or integer-with-length-between-minus1and86400
                    common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cors 'make-cors))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input cors))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input cors))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'allow-credentials))
      (common-lisp:list
       (common-lisp:cons "AllowCredentials"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'allow-headers))
      (common-lisp:list
       (common-lisp:cons "AllowHeaders"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'allow-methods))
      (common-lisp:list
       (common-lisp:cons "AllowMethods"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'allow-origins))
      (common-lisp:list
       (common-lisp:cons "AllowOrigins"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expose-headers))
      (common-lisp:list
       (common-lisp:cons "ExposeHeaders"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-age))
      (common-lisp:list
       (common-lisp:cons "MaxAge"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input cors))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype cors-header-list ()
   '(trivial-types:proper-list |__string|))
 (common-lisp:defun make-cors-header-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |__string|))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype cors-method-list ()
   '(trivial-types:proper-list string-with-length-between1and64))
 (common-lisp:defun make-cors-method-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            string-with-length-between1and64))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype cors-origin-list ()
   '(trivial-types:proper-list |__string|))
 (common-lisp:defun make-cors-origin-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |__string|))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (create-api-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-api-input-"))
   (api-key-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (cors-configuration common-lisp:nil :type
    (common-lisp:or cors common-lisp:null))
   (credentials-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (disable-schema-validation common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (disable-execute-api-endpoint common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (protocol-type (common-lisp:error ":protocol-type is required") :type
    (common-lisp:or protocol-type common-lisp:null))
   (route-key common-lisp:nil :type
    (common-lisp:or selection-key common-lisp:null))
   (route-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null))
   (target common-lisp:nil :type
    (common-lisp:or uri-with-length-between1and2048 common-lisp:null))
   (version common-lisp:nil :type
    (common-lisp:or string-with-length-between1and64 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-api-input 'make-create-api-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-api-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-api-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'api-key-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ApiKeySelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cors-configuration))
      (common-lisp:list
       (common-lisp:cons "CorsConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'credentials-arn))
      (common-lisp:list
       (common-lisp:cons "CredentialsArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-schema-validation))
      (common-lisp:list
       (common-lisp:cons "DisableSchemaValidation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-execute-api-endpoint))
      (common-lisp:list
       (common-lisp:cons "DisableExecuteApiEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol-type))
      (common-lisp:list
       (common-lisp:cons "ProtocolType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-key))
      (common-lisp:list
       (common-lisp:cons "RouteKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'route-selection-expression))
      (common-lisp:list
       (common-lisp:cons "RouteSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target))
      (common-lisp:list
       (common-lisp:cons "Target"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-api-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-api-mapping-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-api-mapping-input-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or id common-lisp:null))
   (api-mapping-key common-lisp:nil :type
    (common-lisp:or selection-key common-lisp:null))
   (stage (common-lisp:error ":stage is required") :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-api-mapping-input 'make-create-api-mapping-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-api-mapping-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-api-mapping-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-id))
      (common-lisp:list
       (common-lisp:cons "ApiId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-mapping-key))
      (common-lisp:list
       (common-lisp:cons "ApiMappingKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage))
      (common-lisp:list
       (common-lisp:cons "Stage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-api-mapping-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-api-mapping-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-api-mapping-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or id common-lisp:null))
   (api-mapping-key common-lisp:nil :type
    (common-lisp:or selection-key common-lisp:null))
   (domain-name (common-lisp:error ":domain-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (stage (common-lisp:error ":stage is required") :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-api-mapping-request
                    'make-create-api-mapping-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-api-mapping-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-api-mapping-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-id))
      (common-lisp:list
       (common-lisp:cons "ApiId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-mapping-key))
      (common-lisp:list
       (common-lisp:cons "ApiMappingKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage))
      (common-lisp:list
       (common-lisp:cons "Stage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-api-mapping-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-api-mapping-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-api-mapping-response-"))
   (api-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (api-mapping-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (api-mapping-key common-lisp:nil :type
    (common-lisp:or selection-key common-lisp:null))
   (stage common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-api-mapping-response
                    'make-create-api-mapping-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-api-mapping-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-api-mapping-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-id))
      (common-lisp:list
       (common-lisp:cons "ApiId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-mapping-id))
      (common-lisp:list
       (common-lisp:cons "ApiMappingId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-mapping-key))
      (common-lisp:list
       (common-lisp:cons "ApiMappingKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage))
      (common-lisp:list
       (common-lisp:cons "Stage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-api-mapping-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-api-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-api-request-"))
   (api-key-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (cors-configuration common-lisp:nil :type
    (common-lisp:or cors common-lisp:null))
   (credentials-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (disable-schema-validation common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (disable-execute-api-endpoint common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (protocol-type (common-lisp:error ":protocol-type is required") :type
    (common-lisp:or protocol-type common-lisp:null))
   (route-key common-lisp:nil :type
    (common-lisp:or selection-key common-lisp:null))
   (route-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null))
   (target common-lisp:nil :type
    (common-lisp:or uri-with-length-between1and2048 common-lisp:null))
   (version common-lisp:nil :type
    (common-lisp:or string-with-length-between1and64 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-api-request 'make-create-api-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-api-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-api-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'api-key-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ApiKeySelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cors-configuration))
      (common-lisp:list
       (common-lisp:cons "CorsConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'credentials-arn))
      (common-lisp:list
       (common-lisp:cons "CredentialsArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-schema-validation))
      (common-lisp:list
       (common-lisp:cons "DisableSchemaValidation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-execute-api-endpoint))
      (common-lisp:list
       (common-lisp:cons "DisableExecuteApiEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol-type))
      (common-lisp:list
       (common-lisp:cons "ProtocolType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-key))
      (common-lisp:list
       (common-lisp:cons "RouteKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'route-selection-expression))
      (common-lisp:list
       (common-lisp:cons "RouteSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target))
      (common-lisp:list
       (common-lisp:cons "Target"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-api-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-api-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-api-response-"))
   (api-endpoint common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (api-gateway-managed common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (api-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (api-key-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (cors-configuration common-lisp:nil :type
    (common-lisp:or cors common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or |__timestampIso8601| common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (disable-schema-validation common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (disable-execute-api-endpoint common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (import-info common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (protocol-type common-lisp:nil :type
    (common-lisp:or protocol-type common-lisp:null))
   (route-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null))
   (version common-lisp:nil :type
    (common-lisp:or string-with-length-between1and64 common-lisp:null))
   (warnings common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-api-response 'make-create-api-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-api-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-api-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-endpoint))
      (common-lisp:list
       (common-lisp:cons "ApiEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-gateway-managed))
      (common-lisp:list
       (common-lisp:cons "ApiGatewayManaged"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-id))
      (common-lisp:list
       (common-lisp:cons "ApiId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'api-key-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ApiKeySelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cors-configuration))
      (common-lisp:list
       (common-lisp:cons "CorsConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-schema-validation))
      (common-lisp:list
       (common-lisp:cons "DisableSchemaValidation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-execute-api-endpoint))
      (common-lisp:list
       (common-lisp:cons "DisableExecuteApiEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'import-info))
      (common-lisp:list
       (common-lisp:cons "ImportInfo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol-type))
      (common-lisp:list
       (common-lisp:cons "ProtocolType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'route-selection-expression))
      (common-lisp:list
       (common-lisp:cons "RouteSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warnings))
      (common-lisp:list
       (common-lisp:cons "Warnings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-api-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-authorizer-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-authorizer-input-"))
   (authorizer-credentials-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (authorizer-result-ttl-in-seconds common-lisp:nil :type
    (common-lisp:or integer-with-length-between0and3600 common-lisp:null))
   (authorizer-type (common-lisp:error ":authorizer-type is required") :type
    (common-lisp:or authorizer-type common-lisp:null))
   (authorizer-uri common-lisp:nil :type
    (common-lisp:or uri-with-length-between1and2048 common-lisp:null))
   (identity-source (common-lisp:error ":identity-source is required") :type
    (common-lisp:or identity-source-list common-lisp:null))
   (identity-validation-expression common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (jwt-configuration common-lisp:nil :type
    (common-lisp:or jwtconfiguration common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (authorizer-payload-format-version common-lisp:nil :type
    (common-lisp:or string-with-length-between1and64 common-lisp:null))
   (enable-simple-responses common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-authorizer-input 'make-create-authorizer-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-authorizer-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-authorizer-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-credentials-arn))
      (common-lisp:list
       (common-lisp:cons "AuthorizerCredentialsArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-result-ttl-in-seconds))
      (common-lisp:list
       (common-lisp:cons "AuthorizerResultTtlInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-type))
      (common-lisp:list
       (common-lisp:cons "AuthorizerType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-uri))
      (common-lisp:list
       (common-lisp:cons "AuthorizerUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-source))
      (common-lisp:list
       (common-lisp:cons "IdentitySource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'identity-validation-expression))
      (common-lisp:list
       (common-lisp:cons "IdentityValidationExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'jwt-configuration))
      (common-lisp:list
       (common-lisp:cons "JwtConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-payload-format-version))
      (common-lisp:list
       (common-lisp:cons "AuthorizerPayloadFormatVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enable-simple-responses))
      (common-lisp:list
       (common-lisp:cons "EnableSimpleResponses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-authorizer-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-authorizer-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-authorizer-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (authorizer-credentials-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (authorizer-result-ttl-in-seconds common-lisp:nil :type
    (common-lisp:or integer-with-length-between0and3600 common-lisp:null))
   (authorizer-type (common-lisp:error ":authorizer-type is required") :type
    (common-lisp:or authorizer-type common-lisp:null))
   (authorizer-uri common-lisp:nil :type
    (common-lisp:or uri-with-length-between1and2048 common-lisp:null))
   (identity-source (common-lisp:error ":identity-source is required") :type
    (common-lisp:or identity-source-list common-lisp:null))
   (identity-validation-expression common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (jwt-configuration common-lisp:nil :type
    (common-lisp:or jwtconfiguration common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (authorizer-payload-format-version common-lisp:nil :type
    (common-lisp:or string-with-length-between1and64 common-lisp:null))
   (enable-simple-responses common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-authorizer-request
                    'make-create-authorizer-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-authorizer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-authorizer-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-credentials-arn))
      (common-lisp:list
       (common-lisp:cons "AuthorizerCredentialsArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-result-ttl-in-seconds))
      (common-lisp:list
       (common-lisp:cons "AuthorizerResultTtlInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-type))
      (common-lisp:list
       (common-lisp:cons "AuthorizerType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-uri))
      (common-lisp:list
       (common-lisp:cons "AuthorizerUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-source))
      (common-lisp:list
       (common-lisp:cons "IdentitySource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'identity-validation-expression))
      (common-lisp:list
       (common-lisp:cons "IdentityValidationExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'jwt-configuration))
      (common-lisp:list
       (common-lisp:cons "JwtConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-payload-format-version))
      (common-lisp:list
       (common-lisp:cons "AuthorizerPayloadFormatVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enable-simple-responses))
      (common-lisp:list
       (common-lisp:cons "EnableSimpleResponses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-authorizer-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-authorizer-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-authorizer-response-"))
   (authorizer-credentials-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (authorizer-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (authorizer-result-ttl-in-seconds common-lisp:nil :type
    (common-lisp:or integer-with-length-between0and3600 common-lisp:null))
   (authorizer-type common-lisp:nil :type
    (common-lisp:or authorizer-type common-lisp:null))
   (authorizer-uri common-lisp:nil :type
    (common-lisp:or uri-with-length-between1and2048 common-lisp:null))
   (identity-source common-lisp:nil :type
    (common-lisp:or identity-source-list common-lisp:null))
   (identity-validation-expression common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (jwt-configuration common-lisp:nil :type
    (common-lisp:or jwtconfiguration common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (authorizer-payload-format-version common-lisp:nil :type
    (common-lisp:or string-with-length-between1and64 common-lisp:null))
   (enable-simple-responses common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-authorizer-response
                    'make-create-authorizer-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-authorizer-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-authorizer-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-credentials-arn))
      (common-lisp:list
       (common-lisp:cons "AuthorizerCredentialsArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-id))
      (common-lisp:list
       (common-lisp:cons "AuthorizerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-result-ttl-in-seconds))
      (common-lisp:list
       (common-lisp:cons "AuthorizerResultTtlInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-type))
      (common-lisp:list
       (common-lisp:cons "AuthorizerType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-uri))
      (common-lisp:list
       (common-lisp:cons "AuthorizerUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-source))
      (common-lisp:list
       (common-lisp:cons "IdentitySource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'identity-validation-expression))
      (common-lisp:list
       (common-lisp:cons "IdentityValidationExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'jwt-configuration))
      (common-lisp:list
       (common-lisp:cons "JwtConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-payload-format-version))
      (common-lisp:list
       (common-lisp:cons "AuthorizerPayloadFormatVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enable-simple-responses))
      (common-lisp:list
       (common-lisp:cons "EnableSimpleResponses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-authorizer-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-deployment-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-deployment-input-"))
   (description common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (stage-name common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-deployment-input 'make-create-deployment-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-deployment-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-deployment-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-name))
      (common-lisp:list
       (common-lisp:cons "StageName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-deployment-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-deployment-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-deployment-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (stage-name common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-deployment-request
                    'make-create-deployment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-deployment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-deployment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-name))
      (common-lisp:list
       (common-lisp:cons "StageName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-deployment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-deployment-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-deployment-response-"))
   (auto-deployed common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or |__timestampIso8601| common-lisp:null))
   (deployment-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (deployment-status common-lisp:nil :type
    (common-lisp:or deployment-status common-lisp:null))
   (deployment-status-message common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-deployment-response
                    'make-create-deployment-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-deployment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-deployment-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-deployed))
      (common-lisp:list
       (common-lisp:cons "AutoDeployed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "DeploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-status))
      (common-lisp:list
       (common-lisp:cons "DeploymentStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'deployment-status-message))
      (common-lisp:list
       (common-lisp:cons "DeploymentStatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-deployment-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-domain-name-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-domain-name-input-"))
   (domain-name (common-lisp:error ":domain-name is required") :type
    (common-lisp:or string-with-length-between1and512 common-lisp:null))
   (domain-name-configurations common-lisp:nil :type
    (common-lisp:or domain-name-configurations common-lisp:null))
   (mutual-tls-authentication common-lisp:nil :type
    (common-lisp:or mutual-tls-authentication-input common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-domain-name-input 'make-create-domain-name-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-domain-name-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-domain-name-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'domain-name-configurations))
      (common-lisp:list
       (common-lisp:cons "DomainNameConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'mutual-tls-authentication))
      (common-lisp:list
       (common-lisp:cons "MutualTlsAuthentication"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-domain-name-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-domain-name-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-domain-name-request-"))
   (domain-name (common-lisp:error ":domain-name is required") :type
    (common-lisp:or string-with-length-between1and512 common-lisp:null))
   (domain-name-configurations common-lisp:nil :type
    (common-lisp:or domain-name-configurations common-lisp:null))
   (mutual-tls-authentication common-lisp:nil :type
    (common-lisp:or mutual-tls-authentication-input common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-domain-name-request
                    'make-create-domain-name-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-domain-name-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-domain-name-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'domain-name-configurations))
      (common-lisp:list
       (common-lisp:cons "DomainNameConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'mutual-tls-authentication))
      (common-lisp:list
       (common-lisp:cons "MutualTlsAuthentication"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-domain-name-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-domain-name-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-domain-name-response-"))
   (api-mapping-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (domain-name common-lisp:nil :type
    (common-lisp:or string-with-length-between1and512 common-lisp:null))
   (domain-name-configurations common-lisp:nil :type
    (common-lisp:or domain-name-configurations common-lisp:null))
   (mutual-tls-authentication common-lisp:nil :type
    (common-lisp:or mutual-tls-authentication common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-domain-name-response
                    'make-create-domain-name-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-domain-name-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-domain-name-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'api-mapping-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ApiMappingSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'domain-name-configurations))
      (common-lisp:list
       (common-lisp:cons "DomainNameConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'mutual-tls-authentication))
      (common-lisp:list
       (common-lisp:cons "MutualTlsAuthentication"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-domain-name-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-integration-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-integration-input-"))
   (connection-id common-lisp:nil :type
    (common-lisp:or string-with-length-between1and1024 common-lisp:null))
   (connection-type common-lisp:nil :type
    (common-lisp:or connection-type common-lisp:null))
   (content-handling-strategy common-lisp:nil :type
    (common-lisp:or content-handling-strategy common-lisp:null))
   (credentials-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (integration-method common-lisp:nil :type
    (common-lisp:or string-with-length-between1and64 common-lisp:null))
   (integration-subtype common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (integration-type (common-lisp:error ":integration-type is required") :type
    (common-lisp:or integration-type common-lisp:null))
   (integration-uri common-lisp:nil :type
    (common-lisp:or uri-with-length-between1and2048 common-lisp:null))
   (passthrough-behavior common-lisp:nil :type
    (common-lisp:or passthrough-behavior common-lisp:null))
   (payload-format-version common-lisp:nil :type
    (common-lisp:or string-with-length-between1and64 common-lisp:null))
   (request-parameters common-lisp:nil :type
    (common-lisp:or integration-parameters common-lisp:null))
   (response-parameters common-lisp:nil :type
    (common-lisp:or response-parameters common-lisp:null))
   (request-templates common-lisp:nil :type
    (common-lisp:or template-map common-lisp:null))
   (template-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (timeout-in-millis common-lisp:nil :type
    (common-lisp:or integer-with-length-between50and30000 common-lisp:null))
   (tls-config common-lisp:nil :type
    (common-lisp:or tls-config-input common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-integration-input 'make-create-integration-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-integration-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-integration-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-id))
      (common-lisp:list
       (common-lisp:cons "ConnectionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-type))
      (common-lisp:list
       (common-lisp:cons "ConnectionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'content-handling-strategy))
      (common-lisp:list
       (common-lisp:cons "ContentHandlingStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'credentials-arn))
      (common-lisp:list
       (common-lisp:cons "CredentialsArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-method))
      (common-lisp:list
       (common-lisp:cons "IntegrationMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-subtype))
      (common-lisp:list
       (common-lisp:cons "IntegrationSubtype"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-type))
      (common-lisp:list
       (common-lisp:cons "IntegrationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-uri))
      (common-lisp:list
       (common-lisp:cons "IntegrationUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'passthrough-behavior))
      (common-lisp:list
       (common-lisp:cons "PassthroughBehavior"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'payload-format-version))
      (common-lisp:list
       (common-lisp:cons "PayloadFormatVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-parameters))
      (common-lisp:list
       (common-lisp:cons "RequestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-templates))
      (common-lisp:list
       (common-lisp:cons "RequestTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-selection-expression))
      (common-lisp:list
       (common-lisp:cons "TemplateSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timeout-in-millis))
      (common-lisp:list
       (common-lisp:cons "TimeoutInMillis"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tls-config))
      (common-lisp:list
       (common-lisp:cons "TlsConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-integration-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-integration-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-integration-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (connection-id common-lisp:nil :type
    (common-lisp:or string-with-length-between1and1024 common-lisp:null))
   (connection-type common-lisp:nil :type
    (common-lisp:or connection-type common-lisp:null))
   (content-handling-strategy common-lisp:nil :type
    (common-lisp:or content-handling-strategy common-lisp:null))
   (credentials-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (integration-method common-lisp:nil :type
    (common-lisp:or string-with-length-between1and64 common-lisp:null))
   (integration-subtype common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (integration-type (common-lisp:error ":integration-type is required") :type
    (common-lisp:or integration-type common-lisp:null))
   (integration-uri common-lisp:nil :type
    (common-lisp:or uri-with-length-between1and2048 common-lisp:null))
   (passthrough-behavior common-lisp:nil :type
    (common-lisp:or passthrough-behavior common-lisp:null))
   (payload-format-version common-lisp:nil :type
    (common-lisp:or string-with-length-between1and64 common-lisp:null))
   (request-parameters common-lisp:nil :type
    (common-lisp:or integration-parameters common-lisp:null))
   (response-parameters common-lisp:nil :type
    (common-lisp:or response-parameters common-lisp:null))
   (request-templates common-lisp:nil :type
    (common-lisp:or template-map common-lisp:null))
   (template-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (timeout-in-millis common-lisp:nil :type
    (common-lisp:or integer-with-length-between50and30000 common-lisp:null))
   (tls-config common-lisp:nil :type
    (common-lisp:or tls-config-input common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-integration-request
                    'make-create-integration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-integration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-id))
      (common-lisp:list
       (common-lisp:cons "ConnectionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-type))
      (common-lisp:list
       (common-lisp:cons "ConnectionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'content-handling-strategy))
      (common-lisp:list
       (common-lisp:cons "ContentHandlingStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'credentials-arn))
      (common-lisp:list
       (common-lisp:cons "CredentialsArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-method))
      (common-lisp:list
       (common-lisp:cons "IntegrationMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-subtype))
      (common-lisp:list
       (common-lisp:cons "IntegrationSubtype"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-type))
      (common-lisp:list
       (common-lisp:cons "IntegrationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-uri))
      (common-lisp:list
       (common-lisp:cons "IntegrationUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'passthrough-behavior))
      (common-lisp:list
       (common-lisp:cons "PassthroughBehavior"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'payload-format-version))
      (common-lisp:list
       (common-lisp:cons "PayloadFormatVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-parameters))
      (common-lisp:list
       (common-lisp:cons "RequestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-templates))
      (common-lisp:list
       (common-lisp:cons "RequestTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-selection-expression))
      (common-lisp:list
       (common-lisp:cons "TemplateSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timeout-in-millis))
      (common-lisp:list
       (common-lisp:cons "TimeoutInMillis"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tls-config))
      (common-lisp:list
       (common-lisp:cons "TlsConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-integration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-integration-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-integration-result-"))
   (api-gateway-managed common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (connection-id common-lisp:nil :type
    (common-lisp:or string-with-length-between1and1024 common-lisp:null))
   (connection-type common-lisp:nil :type
    (common-lisp:or connection-type common-lisp:null))
   (content-handling-strategy common-lisp:nil :type
    (common-lisp:or content-handling-strategy common-lisp:null))
   (credentials-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (integration-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (integration-method common-lisp:nil :type
    (common-lisp:or string-with-length-between1and64 common-lisp:null))
   (integration-response-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (integration-subtype common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (integration-type common-lisp:nil :type
    (common-lisp:or integration-type common-lisp:null))
   (integration-uri common-lisp:nil :type
    (common-lisp:or uri-with-length-between1and2048 common-lisp:null))
   (passthrough-behavior common-lisp:nil :type
    (common-lisp:or passthrough-behavior common-lisp:null))
   (payload-format-version common-lisp:nil :type
    (common-lisp:or string-with-length-between1and64 common-lisp:null))
   (request-parameters common-lisp:nil :type
    (common-lisp:or integration-parameters common-lisp:null))
   (response-parameters common-lisp:nil :type
    (common-lisp:or response-parameters common-lisp:null))
   (request-templates common-lisp:nil :type
    (common-lisp:or template-map common-lisp:null))
   (template-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (timeout-in-millis common-lisp:nil :type
    (common-lisp:or integer-with-length-between50and30000 common-lisp:null))
   (tls-config common-lisp:nil :type
    (common-lisp:or tls-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-integration-result
                    'make-create-integration-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-integration-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-integration-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-gateway-managed))
      (common-lisp:list
       (common-lisp:cons "ApiGatewayManaged"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-id))
      (common-lisp:list
       (common-lisp:cons "ConnectionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-type))
      (common-lisp:list
       (common-lisp:cons "ConnectionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'content-handling-strategy))
      (common-lisp:list
       (common-lisp:cons "ContentHandlingStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'credentials-arn))
      (common-lisp:list
       (common-lisp:cons "CredentialsArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-id))
      (common-lisp:list
       (common-lisp:cons "IntegrationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-method))
      (common-lisp:list
       (common-lisp:cons "IntegrationMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'integration-response-selection-expression))
      (common-lisp:list
       (common-lisp:cons "IntegrationResponseSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-subtype))
      (common-lisp:list
       (common-lisp:cons "IntegrationSubtype"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-type))
      (common-lisp:list
       (common-lisp:cons "IntegrationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-uri))
      (common-lisp:list
       (common-lisp:cons "IntegrationUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'passthrough-behavior))
      (common-lisp:list
       (common-lisp:cons "PassthroughBehavior"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'payload-format-version))
      (common-lisp:list
       (common-lisp:cons "PayloadFormatVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-parameters))
      (common-lisp:list
       (common-lisp:cons "RequestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-templates))
      (common-lisp:list
       (common-lisp:cons "RequestTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-selection-expression))
      (common-lisp:list
       (common-lisp:cons "TemplateSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timeout-in-millis))
      (common-lisp:list
       (common-lisp:cons "TimeoutInMillis"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tls-config))
      (common-lisp:list
       (common-lisp:cons "TlsConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-integration-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-integration-response-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-integration-response-input-"))
   (content-handling-strategy common-lisp:nil :type
    (common-lisp:or content-handling-strategy common-lisp:null))
   (integration-response-key
    (common-lisp:error ":integration-response-key is required") :type
    (common-lisp:or selection-key common-lisp:null))
   (response-parameters common-lisp:nil :type
    (common-lisp:or integration-parameters common-lisp:null))
   (response-templates common-lisp:nil :type
    (common-lisp:or template-map common-lisp:null))
   (template-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-integration-response-input
                    'make-create-integration-response-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-integration-response-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-integration-response-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'content-handling-strategy))
      (common-lisp:list
       (common-lisp:cons "ContentHandlingStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'integration-response-key))
      (common-lisp:list
       (common-lisp:cons "IntegrationResponseKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-templates))
      (common-lisp:list
       (common-lisp:cons "ResponseTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-selection-expression))
      (common-lisp:list
       (common-lisp:cons "TemplateSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-integration-response-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-integration-response-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-integration-response-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (content-handling-strategy common-lisp:nil :type
    (common-lisp:or content-handling-strategy common-lisp:null))
   (integration-id (common-lisp:error ":integration-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (integration-response-key
    (common-lisp:error ":integration-response-key is required") :type
    (common-lisp:or selection-key common-lisp:null))
   (response-parameters common-lisp:nil :type
    (common-lisp:or integration-parameters common-lisp:null))
   (response-templates common-lisp:nil :type
    (common-lisp:or template-map common-lisp:null))
   (template-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-integration-response-request
                    'make-create-integration-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-integration-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-integration-response-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'content-handling-strategy))
      (common-lisp:list
       (common-lisp:cons "ContentHandlingStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'integration-response-key))
      (common-lisp:list
       (common-lisp:cons "IntegrationResponseKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-templates))
      (common-lisp:list
       (common-lisp:cons "ResponseTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-selection-expression))
      (common-lisp:list
       (common-lisp:cons "TemplateSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-integration-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-integration-response-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-integration-response-response-"))
   (content-handling-strategy common-lisp:nil :type
    (common-lisp:or content-handling-strategy common-lisp:null))
   (integration-response-id common-lisp:nil :type
    (common-lisp:or id common-lisp:null))
   (integration-response-key common-lisp:nil :type
    (common-lisp:or selection-key common-lisp:null))
   (response-parameters common-lisp:nil :type
    (common-lisp:or integration-parameters common-lisp:null))
   (response-templates common-lisp:nil :type
    (common-lisp:or template-map common-lisp:null))
   (template-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-integration-response-response
                    'make-create-integration-response-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-integration-response-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-integration-response-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'content-handling-strategy))
      (common-lisp:list
       (common-lisp:cons "ContentHandlingStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'integration-response-id))
      (common-lisp:list
       (common-lisp:cons "IntegrationResponseId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'integration-response-key))
      (common-lisp:list
       (common-lisp:cons "IntegrationResponseKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-templates))
      (common-lisp:list
       (common-lisp:cons "ResponseTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-selection-expression))
      (common-lisp:list
       (common-lisp:cons "TemplateSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-integration-response-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-model-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-model-input-"))
   (content-type common-lisp:nil :type
    (common-lisp:or string-with-length-between1and256 common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (schema (common-lisp:error ":schema is required") :type
    (common-lisp:or string-with-length-between0and32k common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-model-input 'make-create-model-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-model-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-model-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-type))
      (common-lisp:list
       (common-lisp:cons "ContentType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schema))
      (common-lisp:list
       (common-lisp:cons "Schema"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-model-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-model-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-model-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (content-type common-lisp:nil :type
    (common-lisp:or string-with-length-between1and256 common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (schema (common-lisp:error ":schema is required") :type
    (common-lisp:or string-with-length-between0and32k common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-model-request 'make-create-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-model-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-type))
      (common-lisp:list
       (common-lisp:cons "ContentType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schema))
      (common-lisp:list
       (common-lisp:cons "Schema"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-model-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-model-response-"))
   (content-type common-lisp:nil :type
    (common-lisp:or string-with-length-between1and256 common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (model-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (schema common-lisp:nil :type
    (common-lisp:or string-with-length-between0and32k common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-model-response 'make-create-model-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-model-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-model-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-type))
      (common-lisp:list
       (common-lisp:cons "ContentType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-id))
      (common-lisp:list
       (common-lisp:cons "ModelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schema))
      (common-lisp:list
       (common-lisp:cons "Schema"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-model-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-route-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-route-input-"))
   (api-key-required common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (authorization-scopes common-lisp:nil :type
    (common-lisp:or authorization-scopes common-lisp:null))
   (authorization-type common-lisp:nil :type
    (common-lisp:or authorization-type common-lisp:null))
   (authorizer-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (model-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (operation-name common-lisp:nil :type
    (common-lisp:or string-with-length-between1and64 common-lisp:null))
   (request-models common-lisp:nil :type
    (common-lisp:or route-models common-lisp:null))
   (request-parameters common-lisp:nil :type
    (common-lisp:or route-parameters common-lisp:null))
   (route-key (common-lisp:error ":route-key is required") :type
    (common-lisp:or selection-key common-lisp:null))
   (route-response-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (target common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-route-input 'make-create-route-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-route-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-route-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key-required))
      (common-lisp:list
       (common-lisp:cons "ApiKeyRequired"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorization-scopes))
      (common-lisp:list
       (common-lisp:cons "AuthorizationScopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization-type))
      (common-lisp:list
       (common-lisp:cons "AuthorizationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-id))
      (common-lisp:list
       (common-lisp:cons "AuthorizerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'model-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ModelSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation-name))
      (common-lisp:list
       (common-lisp:cons "OperationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-models))
      (common-lisp:list
       (common-lisp:cons "RequestModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-parameters))
      (common-lisp:list
       (common-lisp:cons "RequestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-key))
      (common-lisp:list
       (common-lisp:cons "RouteKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'route-response-selection-expression))
      (common-lisp:list
       (common-lisp:cons "RouteResponseSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target))
      (common-lisp:list
       (common-lisp:cons "Target"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-route-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-route-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-route-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (api-key-required common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (authorization-scopes common-lisp:nil :type
    (common-lisp:or authorization-scopes common-lisp:null))
   (authorization-type common-lisp:nil :type
    (common-lisp:or authorization-type common-lisp:null))
   (authorizer-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (model-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (operation-name common-lisp:nil :type
    (common-lisp:or string-with-length-between1and64 common-lisp:null))
   (request-models common-lisp:nil :type
    (common-lisp:or route-models common-lisp:null))
   (request-parameters common-lisp:nil :type
    (common-lisp:or route-parameters common-lisp:null))
   (route-key (common-lisp:error ":route-key is required") :type
    (common-lisp:or selection-key common-lisp:null))
   (route-response-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (target common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-route-request 'make-create-route-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-route-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-route-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key-required))
      (common-lisp:list
       (common-lisp:cons "ApiKeyRequired"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorization-scopes))
      (common-lisp:list
       (common-lisp:cons "AuthorizationScopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization-type))
      (common-lisp:list
       (common-lisp:cons "AuthorizationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-id))
      (common-lisp:list
       (common-lisp:cons "AuthorizerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'model-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ModelSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation-name))
      (common-lisp:list
       (common-lisp:cons "OperationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-models))
      (common-lisp:list
       (common-lisp:cons "RequestModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-parameters))
      (common-lisp:list
       (common-lisp:cons "RequestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-key))
      (common-lisp:list
       (common-lisp:cons "RouteKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'route-response-selection-expression))
      (common-lisp:list
       (common-lisp:cons "RouteResponseSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target))
      (common-lisp:list
       (common-lisp:cons "Target"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-route-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-route-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-route-result-"))
   (api-gateway-managed common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (api-key-required common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (authorization-scopes common-lisp:nil :type
    (common-lisp:or authorization-scopes common-lisp:null))
   (authorization-type common-lisp:nil :type
    (common-lisp:or authorization-type common-lisp:null))
   (authorizer-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (model-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (operation-name common-lisp:nil :type
    (common-lisp:or string-with-length-between1and64 common-lisp:null))
   (request-models common-lisp:nil :type
    (common-lisp:or route-models common-lisp:null))
   (request-parameters common-lisp:nil :type
    (common-lisp:or route-parameters common-lisp:null))
   (route-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (route-key common-lisp:nil :type
    (common-lisp:or selection-key common-lisp:null))
   (route-response-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (target common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-route-result 'make-create-route-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-route-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-route-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-gateway-managed))
      (common-lisp:list
       (common-lisp:cons "ApiGatewayManaged"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key-required))
      (common-lisp:list
       (common-lisp:cons "ApiKeyRequired"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorization-scopes))
      (common-lisp:list
       (common-lisp:cons "AuthorizationScopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization-type))
      (common-lisp:list
       (common-lisp:cons "AuthorizationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-id))
      (common-lisp:list
       (common-lisp:cons "AuthorizerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'model-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ModelSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation-name))
      (common-lisp:list
       (common-lisp:cons "OperationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-models))
      (common-lisp:list
       (common-lisp:cons "RequestModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-parameters))
      (common-lisp:list
       (common-lisp:cons "RequestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-id))
      (common-lisp:list
       (common-lisp:cons "RouteId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-key))
      (common-lisp:list
       (common-lisp:cons "RouteKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'route-response-selection-expression))
      (common-lisp:list
       (common-lisp:cons "RouteResponseSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target))
      (common-lisp:list
       (common-lisp:cons "Target"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-route-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-route-response-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-route-response-input-"))
   (model-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (response-models common-lisp:nil :type
    (common-lisp:or route-models common-lisp:null))
   (response-parameters common-lisp:nil :type
    (common-lisp:or route-parameters common-lisp:null))
   (route-response-key (common-lisp:error ":route-response-key is required")
    :type (common-lisp:or selection-key common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-route-response-input
                    'make-create-route-response-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-route-response-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-route-response-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'model-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ModelSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-models))
      (common-lisp:list
       (common-lisp:cons "ResponseModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-response-key))
      (common-lisp:list
       (common-lisp:cons "RouteResponseKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-route-response-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-route-response-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-route-response-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (model-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (response-models common-lisp:nil :type
    (common-lisp:or route-models common-lisp:null))
   (response-parameters common-lisp:nil :type
    (common-lisp:or route-parameters common-lisp:null))
   (route-id (common-lisp:error ":route-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (route-response-key (common-lisp:error ":route-response-key is required")
    :type (common-lisp:or selection-key common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-route-response-request
                    'make-create-route-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-route-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-route-response-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'model-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ModelSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-models))
      (common-lisp:list
       (common-lisp:cons "ResponseModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-response-key))
      (common-lisp:list
       (common-lisp:cons "RouteResponseKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-route-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-route-response-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-route-response-response-"))
   (model-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (response-models common-lisp:nil :type
    (common-lisp:or route-models common-lisp:null))
   (response-parameters common-lisp:nil :type
    (common-lisp:or route-parameters common-lisp:null))
   (route-response-id common-lisp:nil :type
    (common-lisp:or id common-lisp:null))
   (route-response-key common-lisp:nil :type
    (common-lisp:or selection-key common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-route-response-response
                    'make-create-route-response-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-route-response-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-route-response-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'model-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ModelSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-models))
      (common-lisp:list
       (common-lisp:cons "ResponseModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-response-id))
      (common-lisp:list
       (common-lisp:cons "RouteResponseId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-response-key))
      (common-lisp:list
       (common-lisp:cons "RouteResponseKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-route-response-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-stage-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-stage-input-"))
   (access-log-settings common-lisp:nil :type
    (common-lisp:or access-log-settings common-lisp:null))
   (auto-deploy common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (client-certificate-id common-lisp:nil :type
    (common-lisp:or id common-lisp:null))
   (default-route-settings common-lisp:nil :type
    (common-lisp:or route-settings common-lisp:null))
   (deployment-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (route-settings common-lisp:nil :type
    (common-lisp:or route-settings-map common-lisp:null))
   (stage-name (common-lisp:error ":stage-name is required") :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (stage-variables common-lisp:nil :type
    (common-lisp:or stage-variables-map common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-stage-input 'make-create-stage-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-stage-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-stage-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-log-settings))
      (common-lisp:list
       (common-lisp:cons "AccessLogSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-deploy))
      (common-lisp:list
       (common-lisp:cons "AutoDeploy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-certificate-id))
      (common-lisp:list
       (common-lisp:cons "ClientCertificateId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-route-settings))
      (common-lisp:list
       (common-lisp:cons "DefaultRouteSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "DeploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-settings))
      (common-lisp:list
       (common-lisp:cons "RouteSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-name))
      (common-lisp:list
       (common-lisp:cons "StageName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-variables))
      (common-lisp:list
       (common-lisp:cons "StageVariables"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-stage-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-stage-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-stage-request-"))
   (access-log-settings common-lisp:nil :type
    (common-lisp:or access-log-settings common-lisp:null))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (auto-deploy common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (client-certificate-id common-lisp:nil :type
    (common-lisp:or id common-lisp:null))
   (default-route-settings common-lisp:nil :type
    (common-lisp:or route-settings common-lisp:null))
   (deployment-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (route-settings common-lisp:nil :type
    (common-lisp:or route-settings-map common-lisp:null))
   (stage-name (common-lisp:error ":stage-name is required") :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (stage-variables common-lisp:nil :type
    (common-lisp:or stage-variables-map common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-stage-request 'make-create-stage-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-stage-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-log-settings))
      (common-lisp:list
       (common-lisp:cons "AccessLogSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-deploy))
      (common-lisp:list
       (common-lisp:cons "AutoDeploy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-certificate-id))
      (common-lisp:list
       (common-lisp:cons "ClientCertificateId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-route-settings))
      (common-lisp:list
       (common-lisp:cons "DefaultRouteSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "DeploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-settings))
      (common-lisp:list
       (common-lisp:cons "RouteSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-name))
      (common-lisp:list
       (common-lisp:cons "StageName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-variables))
      (common-lisp:list
       (common-lisp:cons "StageVariables"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-stage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-stage-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-stage-response-"))
   (access-log-settings common-lisp:nil :type
    (common-lisp:or access-log-settings common-lisp:null))
   (api-gateway-managed common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (auto-deploy common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (client-certificate-id common-lisp:nil :type
    (common-lisp:or id common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or |__timestampIso8601| common-lisp:null))
   (default-route-settings common-lisp:nil :type
    (common-lisp:or route-settings common-lisp:null))
   (deployment-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (last-deployment-status-message common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (last-updated-date common-lisp:nil :type
    (common-lisp:or |__timestampIso8601| common-lisp:null))
   (route-settings common-lisp:nil :type
    (common-lisp:or route-settings-map common-lisp:null))
   (stage-name common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (stage-variables common-lisp:nil :type
    (common-lisp:or stage-variables-map common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-stage-response 'make-create-stage-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-stage-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-stage-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-log-settings))
      (common-lisp:list
       (common-lisp:cons "AccessLogSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-gateway-managed))
      (common-lisp:list
       (common-lisp:cons "ApiGatewayManaged"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-deploy))
      (common-lisp:list
       (common-lisp:cons "AutoDeploy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-certificate-id))
      (common-lisp:list
       (common-lisp:cons "ClientCertificateId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-route-settings))
      (common-lisp:list
       (common-lisp:cons "DefaultRouteSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "DeploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-deployment-status-message))
      (common-lisp:list
       (common-lisp:cons "LastDeploymentStatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-date))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-settings))
      (common-lisp:list
       (common-lisp:cons "RouteSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-name))
      (common-lisp:list
       (common-lisp:cons "StageName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-variables))
      (common-lisp:list
       (common-lisp:cons "StageVariables"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-stage-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-vpc-link-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-vpc-link-input-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (security-group-ids common-lisp:nil :type
    (common-lisp:or security-group-id-list common-lisp:null))
   (subnet-ids (common-lisp:error ":subnet-ids is required") :type
    (common-lisp:or subnet-id-list common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-vpc-link-input 'make-create-vpc-link-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-vpc-link-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-vpc-link-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-ids))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-ids))
      (common-lisp:list
       (common-lisp:cons "SubnetIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-vpc-link-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-vpc-link-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-vpc-link-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (security-group-ids common-lisp:nil :type
    (common-lisp:or security-group-id-list common-lisp:null))
   (subnet-ids (common-lisp:error ":subnet-ids is required") :type
    (common-lisp:or subnet-id-list common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-vpc-link-request 'make-create-vpc-link-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-vpc-link-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-vpc-link-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-ids))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-ids))
      (common-lisp:list
       (common-lisp:cons "SubnetIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-vpc-link-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-vpc-link-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-vpc-link-response-"))
   (created-date common-lisp:nil :type
    (common-lisp:or |__timestampIso8601| common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (security-group-ids common-lisp:nil :type
    (common-lisp:or security-group-id-list common-lisp:null))
   (subnet-ids common-lisp:nil :type
    (common-lisp:or subnet-id-list common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null))
   (vpc-link-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (vpc-link-status common-lisp:nil :type
    (common-lisp:or vpc-link-status common-lisp:null))
   (vpc-link-status-message common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (vpc-link-version common-lisp:nil :type
    (common-lisp:or vpc-link-version common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-vpc-link-response 'make-create-vpc-link-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-vpc-link-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-vpc-link-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-ids))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-ids))
      (common-lisp:list
       (common-lisp:cons "SubnetIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-link-id))
      (common-lisp:list
       (common-lisp:cons "VpcLinkId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-link-status))
      (common-lisp:list
       (common-lisp:cons "VpcLinkStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'vpc-link-status-message))
      (common-lisp:list
       (common-lisp:cons "VpcLinkStatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-link-version))
      (common-lisp:list
       (common-lisp:cons "VpcLinkVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-vpc-link-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-access-log-settings-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-access-log-settings-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (stage-name (common-lisp:error ":stage-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-access-log-settings-request
                    'make-delete-access-log-settings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-access-log-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-access-log-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-access-log-settings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-api-mapping-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-api-mapping-request-"))
   (api-mapping-id (common-lisp:error ":api-mapping-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (domain-name (common-lisp:error ":domain-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-api-mapping-request
                    'make-delete-api-mapping-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-api-mapping-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-api-mapping-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-api-mapping-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-api-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-api-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-api-request 'make-delete-api-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-api-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-api-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-api-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-authorizer-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-authorizer-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (authorizer-id (common-lisp:error ":authorizer-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-authorizer-request
                    'make-delete-authorizer-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-authorizer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-authorizer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-authorizer-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-cors-configuration-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-cors-configuration-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-cors-configuration-request
                    'make-delete-cors-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-cors-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-cors-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-cors-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-deployment-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-deployment-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (deployment-id (common-lisp:error ":deployment-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-deployment-request
                    'make-delete-deployment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-deployment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-deployment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-deployment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-domain-name-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-domain-name-request-"))
   (domain-name (common-lisp:error ":domain-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-domain-name-request
                    'make-delete-domain-name-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-domain-name-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-domain-name-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-domain-name-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-integration-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-integration-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (integration-id (common-lisp:error ":integration-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-integration-request
                    'make-delete-integration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-integration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-integration-response-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-integration-response-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (integration-id (common-lisp:error ":integration-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (integration-response-id
    (common-lisp:error ":integration-response-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-integration-response-request
                    'make-delete-integration-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-integration-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-integration-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-integration-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-model-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-model-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (model-id (common-lisp:error ":model-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-model-request 'make-delete-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-route-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-route-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (route-id (common-lisp:error ":route-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-route-request 'make-delete-route-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-route-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-route-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-route-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-route-request-parameter-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-route-request-parameter-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (request-parameter-key
    (common-lisp:error ":request-parameter-key is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (route-id (common-lisp:error ":route-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-route-request-parameter-request
                    'make-delete-route-request-parameter-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-route-request-parameter-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-route-request-parameter-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-route-request-parameter-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-route-response-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-route-response-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (route-id (common-lisp:error ":route-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (route-response-id (common-lisp:error ":route-response-id is required")
    :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-route-response-request
                    'make-delete-route-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-route-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-route-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-route-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-route-settings-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-route-settings-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (route-key (common-lisp:error ":route-key is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (stage-name (common-lisp:error ":stage-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-route-settings-request
                    'make-delete-route-settings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-route-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-route-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-route-settings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-stage-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-stage-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (stage-name (common-lisp:error ":stage-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-stage-request 'make-delete-stage-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-stage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-vpc-link-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-vpc-link-request-"))
   (vpc-link-id (common-lisp:error ":vpc-link-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-vpc-link-request 'make-delete-vpc-link-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-vpc-link-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-vpc-link-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-vpc-link-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-vpc-link-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-vpc-link-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-vpc-link-response 'make-delete-vpc-link-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-vpc-link-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-vpc-link-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-vpc-link-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (deployment (:copier common-lisp:nil)
      (:conc-name "struct-shape-deployment-"))
   (auto-deployed common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or |__timestampIso8601| common-lisp:null))
   (deployment-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (deployment-status common-lisp:nil :type
    (common-lisp:or deployment-status common-lisp:null))
   (deployment-status-message common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null)))
 (common-lisp:export (common-lisp:list 'deployment 'make-deployment))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input deployment))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input deployment))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-deployed))
      (common-lisp:list
       (common-lisp:cons "AutoDeployed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "DeploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-status))
      (common-lisp:list
       (common-lisp:cons "DeploymentStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'deployment-status-message))
      (common-lisp:list
       (common-lisp:cons "DeploymentStatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input deployment))
   common-lisp:nil))
(common-lisp:deftype deployment-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (deployments (:copier common-lisp:nil)
      (:conc-name "struct-shape-deployments-"))
   (items common-lisp:nil :type
    (common-lisp:or |__listOfDeployment| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export (common-lisp:list 'deployments 'make-deployments))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input deployments))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input deployments))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input deployments))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (domain-name (:copier common-lisp:nil)
      (:conc-name "struct-shape-domain-name-"))
   (api-mapping-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (domain-name (common-lisp:error ":domain-name is required") :type
    (common-lisp:or string-with-length-between1and512 common-lisp:null))
   (domain-name-configurations common-lisp:nil :type
    (common-lisp:or domain-name-configurations common-lisp:null))
   (mutual-tls-authentication common-lisp:nil :type
    (common-lisp:or mutual-tls-authentication common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export (common-lisp:list 'domain-name 'make-domain-name))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input domain-name))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input domain-name))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'api-mapping-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ApiMappingSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'domain-name-configurations))
      (common-lisp:list
       (common-lisp:cons "DomainNameConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'mutual-tls-authentication))
      (common-lisp:list
       (common-lisp:cons "MutualTlsAuthentication"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input domain-name))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (domain-name-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-domain-name-configuration-"))
   (api-gateway-domain-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (certificate-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (certificate-name common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (certificate-upload-date common-lisp:nil :type
    (common-lisp:or |__timestampIso8601| common-lisp:null))
   (domain-name-status common-lisp:nil :type
    (common-lisp:or domain-name-status common-lisp:null))
   (domain-name-status-message common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (endpoint-type common-lisp:nil :type
    (common-lisp:or endpoint-type common-lisp:null))
   (hosted-zone-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (security-policy common-lisp:nil :type
    (common-lisp:or security-policy common-lisp:null))
   (ownership-verification-certificate-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'domain-name-configuration
                    'make-domain-name-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          domain-name-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          domain-name-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'api-gateway-domain-name))
      (common-lisp:list
       (common-lisp:cons "ApiGatewayDomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate-arn))
      (common-lisp:list
       (common-lisp:cons "CertificateArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate-name))
      (common-lisp:list
       (common-lisp:cons "CertificateName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'certificate-upload-date))
      (common-lisp:list
       (common-lisp:cons "CertificateUploadDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name-status))
      (common-lisp:list
       (common-lisp:cons "DomainNameStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'domain-name-status-message))
      (common-lisp:list
       (common-lisp:cons "DomainNameStatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-type))
      (common-lisp:list
       (common-lisp:cons "EndpointType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hosted-zone-id))
      (common-lisp:list
       (common-lisp:cons "HostedZoneId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-policy))
      (common-lisp:list
       (common-lisp:cons "SecurityPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ownership-verification-certificate-arn))
      (common-lisp:list
       (common-lisp:cons "OwnershipVerificationCertificateArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          domain-name-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype domain-name-configurations ()
   '(trivial-types:proper-list domain-name-configuration))
 (common-lisp:defun make-domain-name-configurations
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            domain-name-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:deftype domain-name-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (domain-names (:copier common-lisp:nil)
      (:conc-name "struct-shape-domain-names-"))
   (items common-lisp:nil :type
    (common-lisp:or |__listOfDomainName| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export (common-lisp:list 'domain-names 'make-domain-names))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input domain-names))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input domain-names))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input domain-names))
   common-lisp:nil))
(common-lisp:deftype endpoint-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (export-api-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-export-api-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (export-version common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (include-extensions common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (output-type (common-lisp:error ":output-type is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (specification (common-lisp:error ":specification is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (stage-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'export-api-request 'make-export-api-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input export-api-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input export-api-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input export-api-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (export-api-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-export-api-response-"))
   (body common-lisp:nil :type (common-lisp:or exported-api common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'export-api-response 'make-export-api-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input export-api-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input export-api-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input export-api-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'body)))
(common-lisp:deftype exported-api ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:progn
 (common-lisp:defstruct
     (reset-authorizers-cache-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-reset-authorizers-cache-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (stage-name (common-lisp:error ":stage-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'reset-authorizers-cache-request
                    'make-reset-authorizers-cache-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          reset-authorizers-cache-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          reset-authorizers-cache-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          reset-authorizers-cache-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-api-mapping-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-api-mapping-request-"))
   (api-mapping-id (common-lisp:error ":api-mapping-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (domain-name (common-lisp:error ":domain-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-api-mapping-request 'make-get-api-mapping-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-api-mapping-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-api-mapping-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-api-mapping-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-api-mapping-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-api-mapping-response-"))
   (api-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (api-mapping-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (api-mapping-key common-lisp:nil :type
    (common-lisp:or selection-key common-lisp:null))
   (stage common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-api-mapping-response 'make-get-api-mapping-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-api-mapping-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-api-mapping-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-id))
      (common-lisp:list
       (common-lisp:cons "ApiId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-mapping-id))
      (common-lisp:list
       (common-lisp:cons "ApiMappingId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-mapping-key))
      (common-lisp:list
       (common-lisp:cons "ApiMappingKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage))
      (common-lisp:list
       (common-lisp:cons "Stage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-api-mapping-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-api-mappings-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-api-mappings-request-"))
   (domain-name (common-lisp:error ":domain-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-api-mappings-request 'make-get-api-mappings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-api-mappings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-api-mappings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-api-mappings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-api-mappings-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-api-mappings-response-"))
   (items common-lisp:nil :type
    (common-lisp:or |__listOfApiMapping| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-api-mappings-response
                    'make-get-api-mappings-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-api-mappings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-api-mappings-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-api-mappings-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-api-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-api-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-api-request 'make-get-api-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-api-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-api-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-api-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-api-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-api-response-"))
   (api-endpoint common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (api-gateway-managed common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (api-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (api-key-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (cors-configuration common-lisp:nil :type
    (common-lisp:or cors common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or |__timestampIso8601| common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (disable-schema-validation common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (disable-execute-api-endpoint common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (import-info common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (protocol-type common-lisp:nil :type
    (common-lisp:or protocol-type common-lisp:null))
   (route-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null))
   (version common-lisp:nil :type
    (common-lisp:or string-with-length-between1and64 common-lisp:null))
   (warnings common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-api-response 'make-get-api-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-api-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-api-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-endpoint))
      (common-lisp:list
       (common-lisp:cons "ApiEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-gateway-managed))
      (common-lisp:list
       (common-lisp:cons "ApiGatewayManaged"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-id))
      (common-lisp:list
       (common-lisp:cons "ApiId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'api-key-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ApiKeySelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cors-configuration))
      (common-lisp:list
       (common-lisp:cons "CorsConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-schema-validation))
      (common-lisp:list
       (common-lisp:cons "DisableSchemaValidation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-execute-api-endpoint))
      (common-lisp:list
       (common-lisp:cons "DisableExecuteApiEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'import-info))
      (common-lisp:list
       (common-lisp:cons "ImportInfo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol-type))
      (common-lisp:list
       (common-lisp:cons "ProtocolType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'route-selection-expression))
      (common-lisp:list
       (common-lisp:cons "RouteSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warnings))
      (common-lisp:list
       (common-lisp:cons "Warnings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-api-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-apis-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-apis-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-apis-request 'make-get-apis-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-apis-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-apis-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-apis-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-apis-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-apis-response-"))
   (items common-lisp:nil :type
    (common-lisp:or |__listOfApi| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-apis-response 'make-get-apis-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-apis-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-apis-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-apis-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-authorizer-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-authorizer-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (authorizer-id (common-lisp:error ":authorizer-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-authorizer-request 'make-get-authorizer-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-authorizer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-authorizer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-authorizer-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-authorizer-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-authorizer-response-"))
   (authorizer-credentials-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (authorizer-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (authorizer-result-ttl-in-seconds common-lisp:nil :type
    (common-lisp:or integer-with-length-between0and3600 common-lisp:null))
   (authorizer-type common-lisp:nil :type
    (common-lisp:or authorizer-type common-lisp:null))
   (authorizer-uri common-lisp:nil :type
    (common-lisp:or uri-with-length-between1and2048 common-lisp:null))
   (identity-source common-lisp:nil :type
    (common-lisp:or identity-source-list common-lisp:null))
   (identity-validation-expression common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (jwt-configuration common-lisp:nil :type
    (common-lisp:or jwtconfiguration common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (authorizer-payload-format-version common-lisp:nil :type
    (common-lisp:or string-with-length-between1and64 common-lisp:null))
   (enable-simple-responses common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-authorizer-response 'make-get-authorizer-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-authorizer-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-authorizer-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-credentials-arn))
      (common-lisp:list
       (common-lisp:cons "AuthorizerCredentialsArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-id))
      (common-lisp:list
       (common-lisp:cons "AuthorizerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-result-ttl-in-seconds))
      (common-lisp:list
       (common-lisp:cons "AuthorizerResultTtlInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-type))
      (common-lisp:list
       (common-lisp:cons "AuthorizerType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-uri))
      (common-lisp:list
       (common-lisp:cons "AuthorizerUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-source))
      (common-lisp:list
       (common-lisp:cons "IdentitySource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'identity-validation-expression))
      (common-lisp:list
       (common-lisp:cons "IdentityValidationExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'jwt-configuration))
      (common-lisp:list
       (common-lisp:cons "JwtConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-payload-format-version))
      (common-lisp:list
       (common-lisp:cons "AuthorizerPayloadFormatVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enable-simple-responses))
      (common-lisp:list
       (common-lisp:cons "EnableSimpleResponses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-authorizer-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-authorizers-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-authorizers-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-authorizers-request 'make-get-authorizers-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-authorizers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-authorizers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-authorizers-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-authorizers-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-authorizers-response-"))
   (items common-lisp:nil :type
    (common-lisp:or |__listOfAuthorizer| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-authorizers-response 'make-get-authorizers-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-authorizers-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-authorizers-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-authorizers-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-deployment-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-deployment-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (deployment-id (common-lisp:error ":deployment-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-deployment-request 'make-get-deployment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-deployment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-deployment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-deployment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-deployment-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-deployment-response-"))
   (auto-deployed common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or |__timestampIso8601| common-lisp:null))
   (deployment-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (deployment-status common-lisp:nil :type
    (common-lisp:or deployment-status common-lisp:null))
   (deployment-status-message common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-deployment-response 'make-get-deployment-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-deployment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-deployment-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-deployed))
      (common-lisp:list
       (common-lisp:cons "AutoDeployed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "DeploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-status))
      (common-lisp:list
       (common-lisp:cons "DeploymentStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'deployment-status-message))
      (common-lisp:list
       (common-lisp:cons "DeploymentStatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-deployment-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-deployments-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-deployments-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-deployments-request 'make-get-deployments-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-deployments-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-deployments-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-deployments-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-deployments-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-deployments-response-"))
   (items common-lisp:nil :type
    (common-lisp:or |__listOfDeployment| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-deployments-response 'make-get-deployments-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-deployments-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-deployments-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-deployments-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-domain-name-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-domain-name-request-"))
   (domain-name (common-lisp:error ":domain-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-domain-name-request 'make-get-domain-name-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-name-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-name-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-name-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-domain-name-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-domain-name-response-"))
   (api-mapping-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (domain-name common-lisp:nil :type
    (common-lisp:or string-with-length-between1and512 common-lisp:null))
   (domain-name-configurations common-lisp:nil :type
    (common-lisp:or domain-name-configurations common-lisp:null))
   (mutual-tls-authentication common-lisp:nil :type
    (common-lisp:or mutual-tls-authentication common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-domain-name-response 'make-get-domain-name-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-name-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-name-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'api-mapping-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ApiMappingSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'domain-name-configurations))
      (common-lisp:list
       (common-lisp:cons "DomainNameConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'mutual-tls-authentication))
      (common-lisp:list
       (common-lisp:cons "MutualTlsAuthentication"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-name-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-domain-names-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-domain-names-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-domain-names-request 'make-get-domain-names-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-names-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-names-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-names-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-domain-names-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-domain-names-response-"))
   (items common-lisp:nil :type
    (common-lisp:or |__listOfDomainName| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-domain-names-response
                    'make-get-domain-names-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-names-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-names-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-names-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-integration-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-integration-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (integration-id (common-lisp:error ":integration-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-integration-request 'make-get-integration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-integration-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-integration-result-"))
   (api-gateway-managed common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (connection-id common-lisp:nil :type
    (common-lisp:or string-with-length-between1and1024 common-lisp:null))
   (connection-type common-lisp:nil :type
    (common-lisp:or connection-type common-lisp:null))
   (content-handling-strategy common-lisp:nil :type
    (common-lisp:or content-handling-strategy common-lisp:null))
   (credentials-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (integration-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (integration-method common-lisp:nil :type
    (common-lisp:or string-with-length-between1and64 common-lisp:null))
   (integration-response-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (integration-subtype common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (integration-type common-lisp:nil :type
    (common-lisp:or integration-type common-lisp:null))
   (integration-uri common-lisp:nil :type
    (common-lisp:or uri-with-length-between1and2048 common-lisp:null))
   (passthrough-behavior common-lisp:nil :type
    (common-lisp:or passthrough-behavior common-lisp:null))
   (payload-format-version common-lisp:nil :type
    (common-lisp:or string-with-length-between1and64 common-lisp:null))
   (request-parameters common-lisp:nil :type
    (common-lisp:or integration-parameters common-lisp:null))
   (response-parameters common-lisp:nil :type
    (common-lisp:or response-parameters common-lisp:null))
   (request-templates common-lisp:nil :type
    (common-lisp:or template-map common-lisp:null))
   (template-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (timeout-in-millis common-lisp:nil :type
    (common-lisp:or integer-with-length-between50and30000 common-lisp:null))
   (tls-config common-lisp:nil :type
    (common-lisp:or tls-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-integration-result 'make-get-integration-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-gateway-managed))
      (common-lisp:list
       (common-lisp:cons "ApiGatewayManaged"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-id))
      (common-lisp:list
       (common-lisp:cons "ConnectionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-type))
      (common-lisp:list
       (common-lisp:cons "ConnectionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'content-handling-strategy))
      (common-lisp:list
       (common-lisp:cons "ContentHandlingStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'credentials-arn))
      (common-lisp:list
       (common-lisp:cons "CredentialsArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-id))
      (common-lisp:list
       (common-lisp:cons "IntegrationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-method))
      (common-lisp:list
       (common-lisp:cons "IntegrationMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'integration-response-selection-expression))
      (common-lisp:list
       (common-lisp:cons "IntegrationResponseSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-subtype))
      (common-lisp:list
       (common-lisp:cons "IntegrationSubtype"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-type))
      (common-lisp:list
       (common-lisp:cons "IntegrationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-uri))
      (common-lisp:list
       (common-lisp:cons "IntegrationUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'passthrough-behavior))
      (common-lisp:list
       (common-lisp:cons "PassthroughBehavior"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'payload-format-version))
      (common-lisp:list
       (common-lisp:cons "PayloadFormatVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-parameters))
      (common-lisp:list
       (common-lisp:cons "RequestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-templates))
      (common-lisp:list
       (common-lisp:cons "RequestTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-selection-expression))
      (common-lisp:list
       (common-lisp:cons "TemplateSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timeout-in-millis))
      (common-lisp:list
       (common-lisp:cons "TimeoutInMillis"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tls-config))
      (common-lisp:list
       (common-lisp:cons "TlsConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-integration-response-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-integration-response-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (integration-id (common-lisp:error ":integration-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (integration-response-id
    (common-lisp:error ":integration-response-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-integration-response-request
                    'make-get-integration-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-integration-response-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-integration-response-response-"))
   (content-handling-strategy common-lisp:nil :type
    (common-lisp:or content-handling-strategy common-lisp:null))
   (integration-response-id common-lisp:nil :type
    (common-lisp:or id common-lisp:null))
   (integration-response-key common-lisp:nil :type
    (common-lisp:or selection-key common-lisp:null))
   (response-parameters common-lisp:nil :type
    (common-lisp:or integration-parameters common-lisp:null))
   (response-templates common-lisp:nil :type
    (common-lisp:or template-map common-lisp:null))
   (template-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-integration-response-response
                    'make-get-integration-response-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-response-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-response-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'content-handling-strategy))
      (common-lisp:list
       (common-lisp:cons "ContentHandlingStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'integration-response-id))
      (common-lisp:list
       (common-lisp:cons "IntegrationResponseId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'integration-response-key))
      (common-lisp:list
       (common-lisp:cons "IntegrationResponseKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-templates))
      (common-lisp:list
       (common-lisp:cons "ResponseTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-selection-expression))
      (common-lisp:list
       (common-lisp:cons "TemplateSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-response-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-integration-responses-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-integration-responses-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (integration-id (common-lisp:error ":integration-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-integration-responses-request
                    'make-get-integration-responses-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-responses-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-responses-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-responses-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-integration-responses-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-integration-responses-response-"))
   (items common-lisp:nil :type
    (common-lisp:or |__listOfIntegrationResponse| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-integration-responses-response
                    'make-get-integration-responses-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-responses-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-responses-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-responses-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-integrations-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-integrations-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-integrations-request 'make-get-integrations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-integrations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-integrations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-integrations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-integrations-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-integrations-response-"))
   (items common-lisp:nil :type
    (common-lisp:or |__listOfIntegration| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-integrations-response
                    'make-get-integrations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-integrations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-integrations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-integrations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-model-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-model-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (model-id (common-lisp:error ":model-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-model-request 'make-get-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-model-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-model-response-"))
   (content-type common-lisp:nil :type
    (common-lisp:or string-with-length-between1and256 common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (model-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (schema common-lisp:nil :type
    (common-lisp:or string-with-length-between0and32k common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-model-response 'make-get-model-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-model-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-model-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-type))
      (common-lisp:list
       (common-lisp:cons "ContentType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-id))
      (common-lisp:list
       (common-lisp:cons "ModelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schema))
      (common-lisp:list
       (common-lisp:cons "Schema"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-model-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-model-template-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-model-template-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (model-id (common-lisp:error ":model-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-model-template-request
                    'make-get-model-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-model-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-model-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-model-template-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-model-template-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-model-template-response-"))
   (value common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-model-template-response
                    'make-get-model-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-model-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-model-template-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-model-template-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-models-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-models-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-models-request 'make-get-models-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-models-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-models-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-models-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-models-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-models-response-"))
   (items common-lisp:nil :type
    (common-lisp:or |__listOfModel| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-models-response 'make-get-models-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-models-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-models-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-models-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-route-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-route-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (route-id (common-lisp:error ":route-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-route-request 'make-get-route-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-route-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-route-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-route-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-route-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-route-result-"))
   (api-gateway-managed common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (api-key-required common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (authorization-scopes common-lisp:nil :type
    (common-lisp:or authorization-scopes common-lisp:null))
   (authorization-type common-lisp:nil :type
    (common-lisp:or authorization-type common-lisp:null))
   (authorizer-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (model-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (operation-name common-lisp:nil :type
    (common-lisp:or string-with-length-between1and64 common-lisp:null))
   (request-models common-lisp:nil :type
    (common-lisp:or route-models common-lisp:null))
   (request-parameters common-lisp:nil :type
    (common-lisp:or route-parameters common-lisp:null))
   (route-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (route-key common-lisp:nil :type
    (common-lisp:or selection-key common-lisp:null))
   (route-response-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (target common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-route-result 'make-get-route-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-route-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-route-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-gateway-managed))
      (common-lisp:list
       (common-lisp:cons "ApiGatewayManaged"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key-required))
      (common-lisp:list
       (common-lisp:cons "ApiKeyRequired"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorization-scopes))
      (common-lisp:list
       (common-lisp:cons "AuthorizationScopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization-type))
      (common-lisp:list
       (common-lisp:cons "AuthorizationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-id))
      (common-lisp:list
       (common-lisp:cons "AuthorizerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'model-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ModelSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation-name))
      (common-lisp:list
       (common-lisp:cons "OperationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-models))
      (common-lisp:list
       (common-lisp:cons "RequestModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-parameters))
      (common-lisp:list
       (common-lisp:cons "RequestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-id))
      (common-lisp:list
       (common-lisp:cons "RouteId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-key))
      (common-lisp:list
       (common-lisp:cons "RouteKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'route-response-selection-expression))
      (common-lisp:list
       (common-lisp:cons "RouteResponseSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target))
      (common-lisp:list
       (common-lisp:cons "Target"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-route-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-route-response-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-route-response-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (route-id (common-lisp:error ":route-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (route-response-id (common-lisp:error ":route-response-id is required")
    :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-route-response-request
                    'make-get-route-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-route-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-route-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-route-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-route-response-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-route-response-response-"))
   (model-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (response-models common-lisp:nil :type
    (common-lisp:or route-models common-lisp:null))
   (response-parameters common-lisp:nil :type
    (common-lisp:or route-parameters common-lisp:null))
   (route-response-id common-lisp:nil :type
    (common-lisp:or id common-lisp:null))
   (route-response-key common-lisp:nil :type
    (common-lisp:or selection-key common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-route-response-response
                    'make-get-route-response-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-route-response-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-route-response-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'model-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ModelSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-models))
      (common-lisp:list
       (common-lisp:cons "ResponseModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-response-id))
      (common-lisp:list
       (common-lisp:cons "RouteResponseId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-response-key))
      (common-lisp:list
       (common-lisp:cons "RouteResponseKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-route-response-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-route-responses-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-route-responses-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (route-id (common-lisp:error ":route-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-route-responses-request
                    'make-get-route-responses-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-route-responses-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-route-responses-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-route-responses-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-route-responses-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-route-responses-response-"))
   (items common-lisp:nil :type
    (common-lisp:or |__listOfRouteResponse| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-route-responses-response
                    'make-get-route-responses-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-route-responses-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-route-responses-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-route-responses-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-routes-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-routes-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-routes-request 'make-get-routes-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-routes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-routes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-routes-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-routes-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-routes-response-"))
   (items common-lisp:nil :type
    (common-lisp:or |__listOfRoute| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-routes-response 'make-get-routes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-routes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-routes-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-routes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-stage-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-stage-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (stage-name (common-lisp:error ":stage-name is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-stage-request 'make-get-stage-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-stage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-stage-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-stage-response-"))
   (access-log-settings common-lisp:nil :type
    (common-lisp:or access-log-settings common-lisp:null))
   (api-gateway-managed common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (auto-deploy common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (client-certificate-id common-lisp:nil :type
    (common-lisp:or id common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or |__timestampIso8601| common-lisp:null))
   (default-route-settings common-lisp:nil :type
    (common-lisp:or route-settings common-lisp:null))
   (deployment-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (last-deployment-status-message common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (last-updated-date common-lisp:nil :type
    (common-lisp:or |__timestampIso8601| common-lisp:null))
   (route-settings common-lisp:nil :type
    (common-lisp:or route-settings-map common-lisp:null))
   (stage-name common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (stage-variables common-lisp:nil :type
    (common-lisp:or stage-variables-map common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-stage-response 'make-get-stage-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-stage-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-stage-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-log-settings))
      (common-lisp:list
       (common-lisp:cons "AccessLogSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-gateway-managed))
      (common-lisp:list
       (common-lisp:cons "ApiGatewayManaged"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-deploy))
      (common-lisp:list
       (common-lisp:cons "AutoDeploy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-certificate-id))
      (common-lisp:list
       (common-lisp:cons "ClientCertificateId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-route-settings))
      (common-lisp:list
       (common-lisp:cons "DefaultRouteSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "DeploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-deployment-status-message))
      (common-lisp:list
       (common-lisp:cons "LastDeploymentStatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-date))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-settings))
      (common-lisp:list
       (common-lisp:cons "RouteSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-name))
      (common-lisp:list
       (common-lisp:cons "StageName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-variables))
      (common-lisp:list
       (common-lisp:cons "StageVariables"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-stage-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-stages-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-stages-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-stages-request 'make-get-stages-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-stages-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-stages-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-stages-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-stages-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-stages-response-"))
   (items common-lisp:nil :type
    (common-lisp:or |__listOfStage| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-stages-response 'make-get-stages-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-stages-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-stages-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-stages-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-tags-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-tags-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-tags-request 'make-get-tags-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-tags-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-tags-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-tags-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-tags-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-tags-response-"))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-tags-response 'make-get-tags-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-tags-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-tags-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-tags-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-vpc-link-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-vpc-link-request-"))
   (vpc-link-id (common-lisp:error ":vpc-link-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-vpc-link-request 'make-get-vpc-link-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-vpc-link-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-vpc-link-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-vpc-link-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-vpc-link-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-vpc-link-response-"))
   (created-date common-lisp:nil :type
    (common-lisp:or |__timestampIso8601| common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (security-group-ids common-lisp:nil :type
    (common-lisp:or security-group-id-list common-lisp:null))
   (subnet-ids common-lisp:nil :type
    (common-lisp:or subnet-id-list common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null))
   (vpc-link-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (vpc-link-status common-lisp:nil :type
    (common-lisp:or vpc-link-status common-lisp:null))
   (vpc-link-status-message common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (vpc-link-version common-lisp:nil :type
    (common-lisp:or vpc-link-version common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-vpc-link-response 'make-get-vpc-link-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-vpc-link-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-vpc-link-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-ids))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-ids))
      (common-lisp:list
       (common-lisp:cons "SubnetIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-link-id))
      (common-lisp:list
       (common-lisp:cons "VpcLinkId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-link-status))
      (common-lisp:list
       (common-lisp:cons "VpcLinkStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'vpc-link-status-message))
      (common-lisp:list
       (common-lisp:cons "VpcLinkStatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-link-version))
      (common-lisp:list
       (common-lisp:cons "VpcLinkVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-vpc-link-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-vpc-links-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-vpc-links-request-"))
   (max-results common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-vpc-links-request 'make-get-vpc-links-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-vpc-links-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-vpc-links-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-vpc-links-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-vpc-links-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-vpc-links-response-"))
   (items common-lisp:nil :type
    (common-lisp:or |__listOfVpcLink| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-vpc-links-response 'make-get-vpc-links-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-vpc-links-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-vpc-links-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-vpc-links-response))
   common-lisp:nil))
(common-lisp:deftype id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype identity-source-list ()
   '(trivial-types:proper-list |__string|))
 (common-lisp:defun make-identity-source-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |__string|))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (import-api-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-import-api-input-"))
   (body (common-lisp:error ":body is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-api-input 'make-import-api-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input import-api-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input import-api-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input import-api-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (import-api-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-import-api-request-"))
   (basepath common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (body (common-lisp:error ":body is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (fail-on-warnings common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-api-request 'make-import-api-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input import-api-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input import-api-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input import-api-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (import-api-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-import-api-response-"))
   (api-endpoint common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (api-gateway-managed common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (api-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (api-key-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (cors-configuration common-lisp:nil :type
    (common-lisp:or cors common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or |__timestampIso8601| common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (disable-schema-validation common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (disable-execute-api-endpoint common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (import-info common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (protocol-type common-lisp:nil :type
    (common-lisp:or protocol-type common-lisp:null))
   (route-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null))
   (version common-lisp:nil :type
    (common-lisp:or string-with-length-between1and64 common-lisp:null))
   (warnings common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-api-response 'make-import-api-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input import-api-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input import-api-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-endpoint))
      (common-lisp:list
       (common-lisp:cons "ApiEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-gateway-managed))
      (common-lisp:list
       (common-lisp:cons "ApiGatewayManaged"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-id))
      (common-lisp:list
       (common-lisp:cons "ApiId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'api-key-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ApiKeySelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cors-configuration))
      (common-lisp:list
       (common-lisp:cons "CorsConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-schema-validation))
      (common-lisp:list
       (common-lisp:cons "DisableSchemaValidation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-execute-api-endpoint))
      (common-lisp:list
       (common-lisp:cons "DisableExecuteApiEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'import-info))
      (common-lisp:list
       (common-lisp:cons "ImportInfo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol-type))
      (common-lisp:list
       (common-lisp:cons "ProtocolType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'route-selection-expression))
      (common-lisp:list
       (common-lisp:cons "RouteSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warnings))
      (common-lisp:list
       (common-lisp:cons "Warnings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input import-api-response))
   common-lisp:nil))
(common-lisp:deftype integer-with-length-between0and3600 ()
  'common-lisp:integer)
(common-lisp:deftype integer-with-length-between50and30000 ()
  'common-lisp:integer)
(common-lisp:deftype integer-with-length-between-minus1and86400 ()
  'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (integration (:copier common-lisp:nil)
      (:conc-name "struct-shape-integration-"))
   (api-gateway-managed common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (connection-id common-lisp:nil :type
    (common-lisp:or string-with-length-between1and1024 common-lisp:null))
   (connection-type common-lisp:nil :type
    (common-lisp:or connection-type common-lisp:null))
   (content-handling-strategy common-lisp:nil :type
    (common-lisp:or content-handling-strategy common-lisp:null))
   (credentials-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (integration-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (integration-method common-lisp:nil :type
    (common-lisp:or string-with-length-between1and64 common-lisp:null))
   (integration-response-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (integration-subtype common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (integration-type common-lisp:nil :type
    (common-lisp:or integration-type common-lisp:null))
   (integration-uri common-lisp:nil :type
    (common-lisp:or uri-with-length-between1and2048 common-lisp:null))
   (passthrough-behavior common-lisp:nil :type
    (common-lisp:or passthrough-behavior common-lisp:null))
   (payload-format-version common-lisp:nil :type
    (common-lisp:or string-with-length-between1and64 common-lisp:null))
   (request-parameters common-lisp:nil :type
    (common-lisp:or integration-parameters common-lisp:null))
   (response-parameters common-lisp:nil :type
    (common-lisp:or response-parameters common-lisp:null))
   (request-templates common-lisp:nil :type
    (common-lisp:or template-map common-lisp:null))
   (template-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (timeout-in-millis common-lisp:nil :type
    (common-lisp:or integer-with-length-between50and30000 common-lisp:null))
   (tls-config common-lisp:nil :type
    (common-lisp:or tls-config common-lisp:null)))
 (common-lisp:export (common-lisp:list 'integration 'make-integration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input integration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input integration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-gateway-managed))
      (common-lisp:list
       (common-lisp:cons "ApiGatewayManaged"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-id))
      (common-lisp:list
       (common-lisp:cons "ConnectionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-type))
      (common-lisp:list
       (common-lisp:cons "ConnectionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'content-handling-strategy))
      (common-lisp:list
       (common-lisp:cons "ContentHandlingStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'credentials-arn))
      (common-lisp:list
       (common-lisp:cons "CredentialsArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-id))
      (common-lisp:list
       (common-lisp:cons "IntegrationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-method))
      (common-lisp:list
       (common-lisp:cons "IntegrationMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'integration-response-selection-expression))
      (common-lisp:list
       (common-lisp:cons "IntegrationResponseSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-subtype))
      (common-lisp:list
       (common-lisp:cons "IntegrationSubtype"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-type))
      (common-lisp:list
       (common-lisp:cons "IntegrationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-uri))
      (common-lisp:list
       (common-lisp:cons "IntegrationUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'passthrough-behavior))
      (common-lisp:list
       (common-lisp:cons "PassthroughBehavior"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'payload-format-version))
      (common-lisp:list
       (common-lisp:cons "PayloadFormatVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-parameters))
      (common-lisp:list
       (common-lisp:cons "RequestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-templates))
      (common-lisp:list
       (common-lisp:cons "RequestTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-selection-expression))
      (common-lisp:list
       (common-lisp:cons "TemplateSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timeout-in-millis))
      (common-lisp:list
       (common-lisp:cons "TimeoutInMillis"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tls-config))
      (common-lisp:list
       (common-lisp:cons "TlsConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input integration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype integration-parameters () 'common-lisp:hash-table)
 (common-lisp:defun make-integration-parameters
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype response-parameters () 'common-lisp:hash-table)
 (common-lisp:defun make-response-parameters
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defstruct
     (integration-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-integration-response-"))
   (content-handling-strategy common-lisp:nil :type
    (common-lisp:or content-handling-strategy common-lisp:null))
   (integration-response-id common-lisp:nil :type
    (common-lisp:or id common-lisp:null))
   (integration-response-key
    (common-lisp:error ":integration-response-key is required") :type
    (common-lisp:or selection-key common-lisp:null))
   (response-parameters common-lisp:nil :type
    (common-lisp:or integration-parameters common-lisp:null))
   (response-templates common-lisp:nil :type
    (common-lisp:or template-map common-lisp:null))
   (template-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'integration-response 'make-integration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input integration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input integration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'content-handling-strategy))
      (common-lisp:list
       (common-lisp:cons "ContentHandlingStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'integration-response-id))
      (common-lisp:list
       (common-lisp:cons "IntegrationResponseId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'integration-response-key))
      (common-lisp:list
       (common-lisp:cons "IntegrationResponseKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-templates))
      (common-lisp:list
       (common-lisp:cons "ResponseTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-selection-expression))
      (common-lisp:list
       (common-lisp:cons "TemplateSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input integration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (integration-responses (:copier common-lisp:nil)
      (:conc-name "struct-shape-integration-responses-"))
   (items common-lisp:nil :type
    (common-lisp:or |__listOfIntegrationResponse| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'integration-responses 'make-integration-responses))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          integration-responses))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          integration-responses))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          integration-responses))
   common-lisp:nil))
(common-lisp:deftype integration-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (integrations (:copier common-lisp:nil)
      (:conc-name "struct-shape-integrations-"))
   (items common-lisp:nil :type
    (common-lisp:or |__listOfIntegration| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export (common-lisp:list 'integrations 'make-integrations))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input integrations))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input integrations))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input integrations))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (jwtconfiguration (:copier common-lisp:nil)
      (:conc-name "struct-shape-jwtconfiguration-"))
   (audience common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (issuer common-lisp:nil :type
    (common-lisp:or uri-with-length-between1and2048 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'jwtconfiguration 'make-jwtconfiguration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input jwtconfiguration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input jwtconfiguration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audience))
      (common-lisp:list
       (common-lisp:cons "Audience"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'issuer))
      (common-lisp:list
       (common-lisp:cons "Issuer"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input jwtconfiguration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (limit-exceeded-exception (:copier common-lisp:nil)
      (:conc-name "struct-shape-limit-exceeded-exception-"))
   (limit-type common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception 'make-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          limit-exceeded-exception))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          limit-exceeded-exception))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit-type))
      (common-lisp:list
       (common-lisp:cons "LimitType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          limit-exceeded-exception))
   common-lisp:nil))
(common-lisp:deftype logging-level () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (model (:copier common-lisp:nil) (:conc-name "struct-shape-model-"))
   (content-type common-lisp:nil :type
    (common-lisp:or string-with-length-between1and256 common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (model-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (schema common-lisp:nil :type
    (common-lisp:or string-with-length-between0and32k common-lisp:null)))
 (common-lisp:export (common-lisp:list 'model 'make-model))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input model))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input model))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-type))
      (common-lisp:list
       (common-lisp:cons "ContentType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-id))
      (common-lisp:list
       (common-lisp:cons "ModelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schema))
      (common-lisp:list
       (common-lisp:cons "Schema"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input model))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (models (:copier common-lisp:nil) (:conc-name "struct-shape-models-"))
   (items common-lisp:nil :type
    (common-lisp:or |__listOfModel| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export (common-lisp:list 'models 'make-models))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input models))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input models))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input models))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (mutual-tls-authentication (:copier common-lisp:nil)
      (:conc-name "struct-shape-mutual-tls-authentication-"))
   (truststore-uri common-lisp:nil :type
    (common-lisp:or uri-with-length-between1and2048 common-lisp:null))
   (truststore-version common-lisp:nil :type
    (common-lisp:or string-with-length-between1and64 common-lisp:null))
   (truststore-warnings common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'mutual-tls-authentication
                    'make-mutual-tls-authentication))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          mutual-tls-authentication))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          mutual-tls-authentication))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'truststore-uri))
      (common-lisp:list
       (common-lisp:cons "TruststoreUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'truststore-version))
      (common-lisp:list
       (common-lisp:cons "TruststoreVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'truststore-warnings))
      (common-lisp:list
       (common-lisp:cons "TruststoreWarnings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          mutual-tls-authentication))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (mutual-tls-authentication-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-mutual-tls-authentication-input-"))
   (truststore-uri common-lisp:nil :type
    (common-lisp:or uri-with-length-between1and2048 common-lisp:null))
   (truststore-version common-lisp:nil :type
    (common-lisp:or string-with-length-between1and64 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'mutual-tls-authentication-input
                    'make-mutual-tls-authentication-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          mutual-tls-authentication-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          mutual-tls-authentication-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'truststore-uri))
      (common-lisp:list
       (common-lisp:cons "TruststoreUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'truststore-version))
      (common-lisp:list
       (common-lisp:cons "TruststoreVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          mutual-tls-authentication-input))
   common-lisp:nil))
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition not-found-exception
     (apigatewayv2-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       not-found-exception-message)
      (resource-type :initarg :resource-type :initform common-lisp:nil :reader
       not-found-exception-resource-type)))
 (common-lisp:export
  (common-lisp:list 'not-found-exception 'not-found-exception-message
                    'not-found-exception-resource-type)))
(common-lisp:progn
 (common-lisp:defstruct
     (parameter-constraints (:copier common-lisp:nil)
      (:conc-name "struct-shape-parameter-constraints-"))
   (required common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'parameter-constraints 'make-parameter-constraints))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          parameter-constraints))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          parameter-constraints))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'required))
      (common-lisp:list
       (common-lisp:cons "Required"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          parameter-constraints))
   common-lisp:nil))
(common-lisp:deftype passthrough-behavior () 'common-lisp:string)
(common-lisp:deftype protocol-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (reimport-api-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-reimport-api-input-"))
   (body (common-lisp:error ":body is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'reimport-api-input 'make-reimport-api-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input reimport-api-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input reimport-api-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input reimport-api-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (reimport-api-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-reimport-api-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (basepath common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (body (common-lisp:error ":body is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (fail-on-warnings common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'reimport-api-request 'make-reimport-api-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input reimport-api-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input reimport-api-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input reimport-api-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (reimport-api-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-reimport-api-response-"))
   (api-endpoint common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (api-gateway-managed common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (api-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (api-key-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (cors-configuration common-lisp:nil :type
    (common-lisp:or cors common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or |__timestampIso8601| common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (disable-schema-validation common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (disable-execute-api-endpoint common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (import-info common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (protocol-type common-lisp:nil :type
    (common-lisp:or protocol-type common-lisp:null))
   (route-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null))
   (version common-lisp:nil :type
    (common-lisp:or string-with-length-between1and64 common-lisp:null))
   (warnings common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'reimport-api-response 'make-reimport-api-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          reimport-api-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          reimport-api-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-endpoint))
      (common-lisp:list
       (common-lisp:cons "ApiEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-gateway-managed))
      (common-lisp:list
       (common-lisp:cons "ApiGatewayManaged"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-id))
      (common-lisp:list
       (common-lisp:cons "ApiId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'api-key-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ApiKeySelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cors-configuration))
      (common-lisp:list
       (common-lisp:cons "CorsConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-schema-validation))
      (common-lisp:list
       (common-lisp:cons "DisableSchemaValidation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-execute-api-endpoint))
      (common-lisp:list
       (common-lisp:cons "DisableExecuteApiEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'import-info))
      (common-lisp:list
       (common-lisp:cons "ImportInfo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol-type))
      (common-lisp:list
       (common-lisp:cons "ProtocolType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'route-selection-expression))
      (common-lisp:list
       (common-lisp:cons "RouteSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warnings))
      (common-lisp:list
       (common-lisp:cons "Warnings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          reimport-api-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (route (:copier common-lisp:nil) (:conc-name "struct-shape-route-"))
   (api-gateway-managed common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (api-key-required common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (authorization-scopes common-lisp:nil :type
    (common-lisp:or authorization-scopes common-lisp:null))
   (authorization-type common-lisp:nil :type
    (common-lisp:or authorization-type common-lisp:null))
   (authorizer-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (model-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (operation-name common-lisp:nil :type
    (common-lisp:or string-with-length-between1and64 common-lisp:null))
   (request-models common-lisp:nil :type
    (common-lisp:or route-models common-lisp:null))
   (request-parameters common-lisp:nil :type
    (common-lisp:or route-parameters common-lisp:null))
   (route-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (route-key (common-lisp:error ":route-key is required") :type
    (common-lisp:or selection-key common-lisp:null))
   (route-response-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (target common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null)))
 (common-lisp:export (common-lisp:list 'route 'make-route))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input route))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input route))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-gateway-managed))
      (common-lisp:list
       (common-lisp:cons "ApiGatewayManaged"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key-required))
      (common-lisp:list
       (common-lisp:cons "ApiKeyRequired"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorization-scopes))
      (common-lisp:list
       (common-lisp:cons "AuthorizationScopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization-type))
      (common-lisp:list
       (common-lisp:cons "AuthorizationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-id))
      (common-lisp:list
       (common-lisp:cons "AuthorizerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'model-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ModelSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation-name))
      (common-lisp:list
       (common-lisp:cons "OperationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-models))
      (common-lisp:list
       (common-lisp:cons "RequestModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-parameters))
      (common-lisp:list
       (common-lisp:cons "RequestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-id))
      (common-lisp:list
       (common-lisp:cons "RouteId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-key))
      (common-lisp:list
       (common-lisp:cons "RouteKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'route-response-selection-expression))
      (common-lisp:list
       (common-lisp:cons "RouteResponseSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target))
      (common-lisp:list
       (common-lisp:cons "Target"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input route))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype route-models () 'common-lisp:hash-table)
 (common-lisp:defun make-route-models (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype route-parameters () 'common-lisp:hash-table)
 (common-lisp:defun make-route-parameters (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defstruct
     (route-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-route-response-"))
   (model-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (response-models common-lisp:nil :type
    (common-lisp:or route-models common-lisp:null))
   (response-parameters common-lisp:nil :type
    (common-lisp:or route-parameters common-lisp:null))
   (route-response-id common-lisp:nil :type
    (common-lisp:or id common-lisp:null))
   (route-response-key (common-lisp:error ":route-response-key is required")
    :type (common-lisp:or selection-key common-lisp:null)))
 (common-lisp:export (common-lisp:list 'route-response 'make-route-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input route-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input route-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'model-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ModelSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-models))
      (common-lisp:list
       (common-lisp:cons "ResponseModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-response-id))
      (common-lisp:list
       (common-lisp:cons "RouteResponseId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-response-key))
      (common-lisp:list
       (common-lisp:cons "RouteResponseKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input route-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (route-responses (:copier common-lisp:nil)
      (:conc-name "struct-shape-route-responses-"))
   (items common-lisp:nil :type
    (common-lisp:or |__listOfRouteResponse| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export (common-lisp:list 'route-responses 'make-route-responses))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input route-responses))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input route-responses))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input route-responses))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (route-settings (:copier common-lisp:nil)
      (:conc-name "struct-shape-route-settings-"))
   (data-trace-enabled common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (detailed-metrics-enabled common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (logging-level common-lisp:nil :type
    (common-lisp:or logging-level common-lisp:null))
   (throttling-burst-limit common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (throttling-rate-limit common-lisp:nil :type
    (common-lisp:or |__double| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'route-settings 'make-route-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input route-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input route-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-trace-enabled))
      (common-lisp:list
       (common-lisp:cons "DataTraceEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'detailed-metrics-enabled))
      (common-lisp:list
       (common-lisp:cons "DetailedMetricsEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'logging-level))
      (common-lisp:list
       (common-lisp:cons "LoggingLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'throttling-burst-limit))
      (common-lisp:list
       (common-lisp:cons "ThrottlingBurstLimit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'throttling-rate-limit))
      (common-lisp:list
       (common-lisp:cons "ThrottlingRateLimit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input route-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype route-settings-map () 'common-lisp:hash-table)
 (common-lisp:defun make-route-settings-map
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defstruct
     (routes (:copier common-lisp:nil) (:conc-name "struct-shape-routes-"))
   (items common-lisp:nil :type
    (common-lisp:or |__listOfRoute| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export (common-lisp:list 'routes 'make-routes))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input routes))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input routes))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input routes))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype security-group-id-list ()
   '(trivial-types:proper-list |__string|))
 (common-lisp:defun make-security-group-id-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |__string|))
   aws-sdk/generator/shape::members))
(common-lisp:deftype security-policy () 'common-lisp:string)
(common-lisp:deftype selection-expression () 'common-lisp:string)
(common-lisp:deftype selection-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (stage (:copier common-lisp:nil) (:conc-name "struct-shape-stage-"))
   (access-log-settings common-lisp:nil :type
    (common-lisp:or access-log-settings common-lisp:null))
   (api-gateway-managed common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (auto-deploy common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (client-certificate-id common-lisp:nil :type
    (common-lisp:or id common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or |__timestampIso8601| common-lisp:null))
   (default-route-settings common-lisp:nil :type
    (common-lisp:or route-settings common-lisp:null))
   (deployment-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (last-deployment-status-message common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (last-updated-date common-lisp:nil :type
    (common-lisp:or |__timestampIso8601| common-lisp:null))
   (route-settings common-lisp:nil :type
    (common-lisp:or route-settings-map common-lisp:null))
   (stage-name (common-lisp:error ":stage-name is required") :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (stage-variables common-lisp:nil :type
    (common-lisp:or stage-variables-map common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export (common-lisp:list 'stage 'make-stage))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stage))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stage))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-log-settings))
      (common-lisp:list
       (common-lisp:cons "AccessLogSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-gateway-managed))
      (common-lisp:list
       (common-lisp:cons "ApiGatewayManaged"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-deploy))
      (common-lisp:list
       (common-lisp:cons "AutoDeploy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-certificate-id))
      (common-lisp:list
       (common-lisp:cons "ClientCertificateId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-route-settings))
      (common-lisp:list
       (common-lisp:cons "DefaultRouteSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "DeploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-deployment-status-message))
      (common-lisp:list
       (common-lisp:cons "LastDeploymentStatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-date))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-settings))
      (common-lisp:list
       (common-lisp:cons "RouteSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-name))
      (common-lisp:list
       (common-lisp:cons "StageName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-variables))
      (common-lisp:list
       (common-lisp:cons "StageVariables"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stage))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype stage-variables-map () 'common-lisp:hash-table)
 (common-lisp:defun make-stage-variables-map
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defstruct
     (stages (:copier common-lisp:nil) (:conc-name "struct-shape-stages-"))
   (items common-lisp:nil :type
    (common-lisp:or |__listOfStage| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export (common-lisp:list 'stages 'make-stages))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stages))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stages))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stages))
   common-lisp:nil))
(common-lisp:deftype string-with-length-between0and1024 () 'common-lisp:string)
(common-lisp:deftype string-with-length-between0and2048 () 'common-lisp:string)
(common-lisp:deftype string-with-length-between0and32k () 'common-lisp:string)
(common-lisp:deftype string-with-length-between1and1024 () 'common-lisp:string)
(common-lisp:deftype string-with-length-between1and128 () 'common-lisp:string)
(common-lisp:deftype string-with-length-between1and1600 () 'common-lisp:string)
(common-lisp:deftype string-with-length-between1and256 () 'common-lisp:string)
(common-lisp:deftype string-with-length-between1and512 () 'common-lisp:string)
(common-lisp:deftype string-with-length-between1and64 () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype subnet-id-list ()
   '(trivial-types:proper-list |__string|))
 (common-lisp:defun make-subnet-id-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |__string|))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-input-"))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-resource-input 'make-tag-resource-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-resource-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-resource-response-")))
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype tags () 'common-lisp:hash-table)
 (common-lisp:defun make-tags (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defstruct
     (template (:copier common-lisp:nil) (:conc-name "struct-shape-template-"))
   (value common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'template 'make-template))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input template))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input template))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input template))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype template-map () 'common-lisp:hash-table)
 (common-lisp:defun make-template-map (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defstruct
     (tls-config (:copier common-lisp:nil)
      (:conc-name "struct-shape-tls-config-"))
   (server-name-to-verify common-lisp:nil :type
    (common-lisp:or string-with-length-between1and512 common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tls-config 'make-tls-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tls-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tls-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'server-name-to-verify))
      (common-lisp:list
       (common-lisp:cons "ServerNameToVerify"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tls-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (tls-config-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-tls-config-input-"))
   (server-name-to-verify common-lisp:nil :type
    (common-lisp:or string-with-length-between1and512 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tls-config-input 'make-tls-config-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tls-config-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tls-config-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'server-name-to-verify))
      (common-lisp:list
       (common-lisp:cons "ServerNameToVerify"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tls-config-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition too-many-requests-exception
     (apigatewayv2-error)
     ((limit-type :initarg :limit-type :initform common-lisp:nil :reader
       too-many-requests-exception-limit-type)
      (message :initarg :message :initform common-lisp:nil :reader
       too-many-requests-exception-message)))
 (common-lisp:export
  (common-lisp:list 'too-many-requests-exception
                    'too-many-requests-exception-limit-type
                    'too-many-requests-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (untag-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-untag-resource-request-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (tag-keys (common-lisp:error ":tag-keys is required") :type
    (common-lisp:or |__listOf__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-api-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-api-input-"))
   (api-key-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (cors-configuration common-lisp:nil :type
    (common-lisp:or cors common-lisp:null))
   (credentials-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (disable-schema-validation common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (disable-execute-api-endpoint common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (route-key common-lisp:nil :type
    (common-lisp:or selection-key common-lisp:null))
   (route-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (target common-lisp:nil :type
    (common-lisp:or uri-with-length-between1and2048 common-lisp:null))
   (version common-lisp:nil :type
    (common-lisp:or string-with-length-between1and64 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-api-input 'make-update-api-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-api-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-api-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'api-key-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ApiKeySelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cors-configuration))
      (common-lisp:list
       (common-lisp:cons "CorsConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'credentials-arn))
      (common-lisp:list
       (common-lisp:cons "CredentialsArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-schema-validation))
      (common-lisp:list
       (common-lisp:cons "DisableSchemaValidation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-execute-api-endpoint))
      (common-lisp:list
       (common-lisp:cons "DisableExecuteApiEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-key))
      (common-lisp:list
       (common-lisp:cons "RouteKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'route-selection-expression))
      (common-lisp:list
       (common-lisp:cons "RouteSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target))
      (common-lisp:list
       (common-lisp:cons "Target"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-api-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-api-mapping-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-api-mapping-input-"))
   (api-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (api-mapping-key common-lisp:nil :type
    (common-lisp:or selection-key common-lisp:null))
   (stage common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-api-mapping-input 'make-update-api-mapping-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-api-mapping-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-api-mapping-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-id))
      (common-lisp:list
       (common-lisp:cons "ApiId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-mapping-key))
      (common-lisp:list
       (common-lisp:cons "ApiMappingKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage))
      (common-lisp:list
       (common-lisp:cons "Stage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-api-mapping-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-api-mapping-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-api-mapping-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or id common-lisp:null))
   (api-mapping-id (common-lisp:error ":api-mapping-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (api-mapping-key common-lisp:nil :type
    (common-lisp:or selection-key common-lisp:null))
   (domain-name (common-lisp:error ":domain-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (stage common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-api-mapping-request
                    'make-update-api-mapping-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-api-mapping-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-api-mapping-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-id))
      (common-lisp:list
       (common-lisp:cons "ApiId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-mapping-key))
      (common-lisp:list
       (common-lisp:cons "ApiMappingKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage))
      (common-lisp:list
       (common-lisp:cons "Stage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-api-mapping-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-api-mapping-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-api-mapping-response-"))
   (api-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (api-mapping-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (api-mapping-key common-lisp:nil :type
    (common-lisp:or selection-key common-lisp:null))
   (stage common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-api-mapping-response
                    'make-update-api-mapping-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-api-mapping-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-api-mapping-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-id))
      (common-lisp:list
       (common-lisp:cons "ApiId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-mapping-id))
      (common-lisp:list
       (common-lisp:cons "ApiMappingId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-mapping-key))
      (common-lisp:list
       (common-lisp:cons "ApiMappingKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage))
      (common-lisp:list
       (common-lisp:cons "Stage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-api-mapping-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-api-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-api-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (api-key-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (cors-configuration common-lisp:nil :type
    (common-lisp:or cors common-lisp:null))
   (credentials-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (disable-schema-validation common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (disable-execute-api-endpoint common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (route-key common-lisp:nil :type
    (common-lisp:or selection-key common-lisp:null))
   (route-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (target common-lisp:nil :type
    (common-lisp:or uri-with-length-between1and2048 common-lisp:null))
   (version common-lisp:nil :type
    (common-lisp:or string-with-length-between1and64 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-api-request 'make-update-api-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-api-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-api-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'api-key-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ApiKeySelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cors-configuration))
      (common-lisp:list
       (common-lisp:cons "CorsConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'credentials-arn))
      (common-lisp:list
       (common-lisp:cons "CredentialsArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-schema-validation))
      (common-lisp:list
       (common-lisp:cons "DisableSchemaValidation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-execute-api-endpoint))
      (common-lisp:list
       (common-lisp:cons "DisableExecuteApiEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-key))
      (common-lisp:list
       (common-lisp:cons "RouteKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'route-selection-expression))
      (common-lisp:list
       (common-lisp:cons "RouteSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target))
      (common-lisp:list
       (common-lisp:cons "Target"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-api-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-api-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-api-response-"))
   (api-endpoint common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (api-gateway-managed common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (api-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (api-key-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (cors-configuration common-lisp:nil :type
    (common-lisp:or cors common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or |__timestampIso8601| common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (disable-schema-validation common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (disable-execute-api-endpoint common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (import-info common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (protocol-type common-lisp:nil :type
    (common-lisp:or protocol-type common-lisp:null))
   (route-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null))
   (version common-lisp:nil :type
    (common-lisp:or string-with-length-between1and64 common-lisp:null))
   (warnings common-lisp:nil :type
    (common-lisp:or |__listOf__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-api-response 'make-update-api-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-api-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-api-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-endpoint))
      (common-lisp:list
       (common-lisp:cons "ApiEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-gateway-managed))
      (common-lisp:list
       (common-lisp:cons "ApiGatewayManaged"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-id))
      (common-lisp:list
       (common-lisp:cons "ApiId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'api-key-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ApiKeySelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cors-configuration))
      (common-lisp:list
       (common-lisp:cons "CorsConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-schema-validation))
      (common-lisp:list
       (common-lisp:cons "DisableSchemaValidation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-execute-api-endpoint))
      (common-lisp:list
       (common-lisp:cons "DisableExecuteApiEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'import-info))
      (common-lisp:list
       (common-lisp:cons "ImportInfo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol-type))
      (common-lisp:list
       (common-lisp:cons "ProtocolType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'route-selection-expression))
      (common-lisp:list
       (common-lisp:cons "RouteSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warnings))
      (common-lisp:list
       (common-lisp:cons "Warnings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-api-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-authorizer-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-authorizer-input-"))
   (authorizer-credentials-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (authorizer-result-ttl-in-seconds common-lisp:nil :type
    (common-lisp:or integer-with-length-between0and3600 common-lisp:null))
   (authorizer-type common-lisp:nil :type
    (common-lisp:or authorizer-type common-lisp:null))
   (authorizer-uri common-lisp:nil :type
    (common-lisp:or uri-with-length-between1and2048 common-lisp:null))
   (identity-source common-lisp:nil :type
    (common-lisp:or identity-source-list common-lisp:null))
   (identity-validation-expression common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (jwt-configuration common-lisp:nil :type
    (common-lisp:or jwtconfiguration common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (authorizer-payload-format-version common-lisp:nil :type
    (common-lisp:or string-with-length-between1and64 common-lisp:null))
   (enable-simple-responses common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-authorizer-input 'make-update-authorizer-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-authorizer-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-authorizer-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-credentials-arn))
      (common-lisp:list
       (common-lisp:cons "AuthorizerCredentialsArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-result-ttl-in-seconds))
      (common-lisp:list
       (common-lisp:cons "AuthorizerResultTtlInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-type))
      (common-lisp:list
       (common-lisp:cons "AuthorizerType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-uri))
      (common-lisp:list
       (common-lisp:cons "AuthorizerUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-source))
      (common-lisp:list
       (common-lisp:cons "IdentitySource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'identity-validation-expression))
      (common-lisp:list
       (common-lisp:cons "IdentityValidationExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'jwt-configuration))
      (common-lisp:list
       (common-lisp:cons "JwtConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-payload-format-version))
      (common-lisp:list
       (common-lisp:cons "AuthorizerPayloadFormatVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enable-simple-responses))
      (common-lisp:list
       (common-lisp:cons "EnableSimpleResponses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-authorizer-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-authorizer-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-authorizer-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (authorizer-credentials-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (authorizer-id (common-lisp:error ":authorizer-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (authorizer-result-ttl-in-seconds common-lisp:nil :type
    (common-lisp:or integer-with-length-between0and3600 common-lisp:null))
   (authorizer-type common-lisp:nil :type
    (common-lisp:or authorizer-type common-lisp:null))
   (authorizer-uri common-lisp:nil :type
    (common-lisp:or uri-with-length-between1and2048 common-lisp:null))
   (identity-source common-lisp:nil :type
    (common-lisp:or identity-source-list common-lisp:null))
   (identity-validation-expression common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (jwt-configuration common-lisp:nil :type
    (common-lisp:or jwtconfiguration common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (authorizer-payload-format-version common-lisp:nil :type
    (common-lisp:or string-with-length-between1and64 common-lisp:null))
   (enable-simple-responses common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-authorizer-request
                    'make-update-authorizer-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-authorizer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-authorizer-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-credentials-arn))
      (common-lisp:list
       (common-lisp:cons "AuthorizerCredentialsArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-result-ttl-in-seconds))
      (common-lisp:list
       (common-lisp:cons "AuthorizerResultTtlInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-type))
      (common-lisp:list
       (common-lisp:cons "AuthorizerType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-uri))
      (common-lisp:list
       (common-lisp:cons "AuthorizerUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-source))
      (common-lisp:list
       (common-lisp:cons "IdentitySource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'identity-validation-expression))
      (common-lisp:list
       (common-lisp:cons "IdentityValidationExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'jwt-configuration))
      (common-lisp:list
       (common-lisp:cons "JwtConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-payload-format-version))
      (common-lisp:list
       (common-lisp:cons "AuthorizerPayloadFormatVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enable-simple-responses))
      (common-lisp:list
       (common-lisp:cons "EnableSimpleResponses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-authorizer-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-authorizer-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-authorizer-response-"))
   (authorizer-credentials-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (authorizer-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (authorizer-result-ttl-in-seconds common-lisp:nil :type
    (common-lisp:or integer-with-length-between0and3600 common-lisp:null))
   (authorizer-type common-lisp:nil :type
    (common-lisp:or authorizer-type common-lisp:null))
   (authorizer-uri common-lisp:nil :type
    (common-lisp:or uri-with-length-between1and2048 common-lisp:null))
   (identity-source common-lisp:nil :type
    (common-lisp:or identity-source-list common-lisp:null))
   (identity-validation-expression common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (jwt-configuration common-lisp:nil :type
    (common-lisp:or jwtconfiguration common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (authorizer-payload-format-version common-lisp:nil :type
    (common-lisp:or string-with-length-between1and64 common-lisp:null))
   (enable-simple-responses common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-authorizer-response
                    'make-update-authorizer-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-authorizer-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-authorizer-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-credentials-arn))
      (common-lisp:list
       (common-lisp:cons "AuthorizerCredentialsArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-id))
      (common-lisp:list
       (common-lisp:cons "AuthorizerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-result-ttl-in-seconds))
      (common-lisp:list
       (common-lisp:cons "AuthorizerResultTtlInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-type))
      (common-lisp:list
       (common-lisp:cons "AuthorizerType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-uri))
      (common-lisp:list
       (common-lisp:cons "AuthorizerUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-source))
      (common-lisp:list
       (common-lisp:cons "IdentitySource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'identity-validation-expression))
      (common-lisp:list
       (common-lisp:cons "IdentityValidationExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'jwt-configuration))
      (common-lisp:list
       (common-lisp:cons "JwtConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-payload-format-version))
      (common-lisp:list
       (common-lisp:cons "AuthorizerPayloadFormatVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enable-simple-responses))
      (common-lisp:list
       (common-lisp:cons "EnableSimpleResponses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-authorizer-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-deployment-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-deployment-input-"))
   (description common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-deployment-input 'make-update-deployment-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-deployment-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-deployment-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-deployment-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-deployment-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-deployment-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (deployment-id (common-lisp:error ":deployment-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-deployment-request
                    'make-update-deployment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-deployment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-deployment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-deployment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-deployment-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-deployment-response-"))
   (auto-deployed common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or |__timestampIso8601| common-lisp:null))
   (deployment-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (deployment-status common-lisp:nil :type
    (common-lisp:or deployment-status common-lisp:null))
   (deployment-status-message common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-deployment-response
                    'make-update-deployment-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-deployment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-deployment-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-deployed))
      (common-lisp:list
       (common-lisp:cons "AutoDeployed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "DeploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-status))
      (common-lisp:list
       (common-lisp:cons "DeploymentStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'deployment-status-message))
      (common-lisp:list
       (common-lisp:cons "DeploymentStatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-deployment-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-domain-name-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-domain-name-input-"))
   (domain-name-configurations common-lisp:nil :type
    (common-lisp:or domain-name-configurations common-lisp:null))
   (mutual-tls-authentication common-lisp:nil :type
    (common-lisp:or mutual-tls-authentication-input common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-domain-name-input 'make-update-domain-name-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-name-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-name-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'domain-name-configurations))
      (common-lisp:list
       (common-lisp:cons "DomainNameConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'mutual-tls-authentication))
      (common-lisp:list
       (common-lisp:cons "MutualTlsAuthentication"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-name-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-domain-name-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-domain-name-request-"))
   (domain-name (common-lisp:error ":domain-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (domain-name-configurations common-lisp:nil :type
    (common-lisp:or domain-name-configurations common-lisp:null))
   (mutual-tls-authentication common-lisp:nil :type
    (common-lisp:or mutual-tls-authentication-input common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-domain-name-request
                    'make-update-domain-name-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-name-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-name-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'domain-name-configurations))
      (common-lisp:list
       (common-lisp:cons "DomainNameConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'mutual-tls-authentication))
      (common-lisp:list
       (common-lisp:cons "MutualTlsAuthentication"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-name-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-domain-name-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-domain-name-response-"))
   (api-mapping-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (domain-name common-lisp:nil :type
    (common-lisp:or string-with-length-between1and512 common-lisp:null))
   (domain-name-configurations common-lisp:nil :type
    (common-lisp:or domain-name-configurations common-lisp:null))
   (mutual-tls-authentication common-lisp:nil :type
    (common-lisp:or mutual-tls-authentication common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-domain-name-response
                    'make-update-domain-name-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-name-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-name-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'api-mapping-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ApiMappingSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'domain-name-configurations))
      (common-lisp:list
       (common-lisp:cons "DomainNameConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'mutual-tls-authentication))
      (common-lisp:list
       (common-lisp:cons "MutualTlsAuthentication"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-name-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-integration-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-integration-input-"))
   (connection-id common-lisp:nil :type
    (common-lisp:or string-with-length-between1and1024 common-lisp:null))
   (connection-type common-lisp:nil :type
    (common-lisp:or connection-type common-lisp:null))
   (content-handling-strategy common-lisp:nil :type
    (common-lisp:or content-handling-strategy common-lisp:null))
   (credentials-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (integration-method common-lisp:nil :type
    (common-lisp:or string-with-length-between1and64 common-lisp:null))
   (integration-subtype common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (integration-type common-lisp:nil :type
    (common-lisp:or integration-type common-lisp:null))
   (integration-uri common-lisp:nil :type
    (common-lisp:or uri-with-length-between1and2048 common-lisp:null))
   (passthrough-behavior common-lisp:nil :type
    (common-lisp:or passthrough-behavior common-lisp:null))
   (payload-format-version common-lisp:nil :type
    (common-lisp:or string-with-length-between1and64 common-lisp:null))
   (request-parameters common-lisp:nil :type
    (common-lisp:or integration-parameters common-lisp:null))
   (response-parameters common-lisp:nil :type
    (common-lisp:or response-parameters common-lisp:null))
   (request-templates common-lisp:nil :type
    (common-lisp:or template-map common-lisp:null))
   (template-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (timeout-in-millis common-lisp:nil :type
    (common-lisp:or integer-with-length-between50and30000 common-lisp:null))
   (tls-config common-lisp:nil :type
    (common-lisp:or tls-config-input common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-integration-input 'make-update-integration-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-id))
      (common-lisp:list
       (common-lisp:cons "ConnectionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-type))
      (common-lisp:list
       (common-lisp:cons "ConnectionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'content-handling-strategy))
      (common-lisp:list
       (common-lisp:cons "ContentHandlingStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'credentials-arn))
      (common-lisp:list
       (common-lisp:cons "CredentialsArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-method))
      (common-lisp:list
       (common-lisp:cons "IntegrationMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-subtype))
      (common-lisp:list
       (common-lisp:cons "IntegrationSubtype"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-type))
      (common-lisp:list
       (common-lisp:cons "IntegrationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-uri))
      (common-lisp:list
       (common-lisp:cons "IntegrationUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'passthrough-behavior))
      (common-lisp:list
       (common-lisp:cons "PassthroughBehavior"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'payload-format-version))
      (common-lisp:list
       (common-lisp:cons "PayloadFormatVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-parameters))
      (common-lisp:list
       (common-lisp:cons "RequestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-templates))
      (common-lisp:list
       (common-lisp:cons "RequestTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-selection-expression))
      (common-lisp:list
       (common-lisp:cons "TemplateSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timeout-in-millis))
      (common-lisp:list
       (common-lisp:cons "TimeoutInMillis"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tls-config))
      (common-lisp:list
       (common-lisp:cons "TlsConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-integration-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-integration-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (connection-id common-lisp:nil :type
    (common-lisp:or string-with-length-between1and1024 common-lisp:null))
   (connection-type common-lisp:nil :type
    (common-lisp:or connection-type common-lisp:null))
   (content-handling-strategy common-lisp:nil :type
    (common-lisp:or content-handling-strategy common-lisp:null))
   (credentials-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (integration-id (common-lisp:error ":integration-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (integration-method common-lisp:nil :type
    (common-lisp:or string-with-length-between1and64 common-lisp:null))
   (integration-subtype common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (integration-type common-lisp:nil :type
    (common-lisp:or integration-type common-lisp:null))
   (integration-uri common-lisp:nil :type
    (common-lisp:or uri-with-length-between1and2048 common-lisp:null))
   (passthrough-behavior common-lisp:nil :type
    (common-lisp:or passthrough-behavior common-lisp:null))
   (payload-format-version common-lisp:nil :type
    (common-lisp:or string-with-length-between1and64 common-lisp:null))
   (request-parameters common-lisp:nil :type
    (common-lisp:or integration-parameters common-lisp:null))
   (response-parameters common-lisp:nil :type
    (common-lisp:or response-parameters common-lisp:null))
   (request-templates common-lisp:nil :type
    (common-lisp:or template-map common-lisp:null))
   (template-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (timeout-in-millis common-lisp:nil :type
    (common-lisp:or integer-with-length-between50and30000 common-lisp:null))
   (tls-config common-lisp:nil :type
    (common-lisp:or tls-config-input common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-integration-request
                    'make-update-integration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-id))
      (common-lisp:list
       (common-lisp:cons "ConnectionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-type))
      (common-lisp:list
       (common-lisp:cons "ConnectionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'content-handling-strategy))
      (common-lisp:list
       (common-lisp:cons "ContentHandlingStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'credentials-arn))
      (common-lisp:list
       (common-lisp:cons "CredentialsArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-method))
      (common-lisp:list
       (common-lisp:cons "IntegrationMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-subtype))
      (common-lisp:list
       (common-lisp:cons "IntegrationSubtype"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-type))
      (common-lisp:list
       (common-lisp:cons "IntegrationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-uri))
      (common-lisp:list
       (common-lisp:cons "IntegrationUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'passthrough-behavior))
      (common-lisp:list
       (common-lisp:cons "PassthroughBehavior"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'payload-format-version))
      (common-lisp:list
       (common-lisp:cons "PayloadFormatVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-parameters))
      (common-lisp:list
       (common-lisp:cons "RequestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-templates))
      (common-lisp:list
       (common-lisp:cons "RequestTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-selection-expression))
      (common-lisp:list
       (common-lisp:cons "TemplateSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timeout-in-millis))
      (common-lisp:list
       (common-lisp:cons "TimeoutInMillis"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tls-config))
      (common-lisp:list
       (common-lisp:cons "TlsConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-integration-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-integration-result-"))
   (api-gateway-managed common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (connection-id common-lisp:nil :type
    (common-lisp:or string-with-length-between1and1024 common-lisp:null))
   (connection-type common-lisp:nil :type
    (common-lisp:or connection-type common-lisp:null))
   (content-handling-strategy common-lisp:nil :type
    (common-lisp:or content-handling-strategy common-lisp:null))
   (credentials-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (integration-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (integration-method common-lisp:nil :type
    (common-lisp:or string-with-length-between1and64 common-lisp:null))
   (integration-response-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (integration-subtype common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (integration-type common-lisp:nil :type
    (common-lisp:or integration-type common-lisp:null))
   (integration-uri common-lisp:nil :type
    (common-lisp:or uri-with-length-between1and2048 common-lisp:null))
   (passthrough-behavior common-lisp:nil :type
    (common-lisp:or passthrough-behavior common-lisp:null))
   (payload-format-version common-lisp:nil :type
    (common-lisp:or string-with-length-between1and64 common-lisp:null))
   (request-parameters common-lisp:nil :type
    (common-lisp:or integration-parameters common-lisp:null))
   (response-parameters common-lisp:nil :type
    (common-lisp:or response-parameters common-lisp:null))
   (request-templates common-lisp:nil :type
    (common-lisp:or template-map common-lisp:null))
   (template-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (timeout-in-millis common-lisp:nil :type
    (common-lisp:or integer-with-length-between50and30000 common-lisp:null))
   (tls-config common-lisp:nil :type
    (common-lisp:or tls-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-integration-result
                    'make-update-integration-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-gateway-managed))
      (common-lisp:list
       (common-lisp:cons "ApiGatewayManaged"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-id))
      (common-lisp:list
       (common-lisp:cons "ConnectionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-type))
      (common-lisp:list
       (common-lisp:cons "ConnectionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'content-handling-strategy))
      (common-lisp:list
       (common-lisp:cons "ContentHandlingStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'credentials-arn))
      (common-lisp:list
       (common-lisp:cons "CredentialsArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-id))
      (common-lisp:list
       (common-lisp:cons "IntegrationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-method))
      (common-lisp:list
       (common-lisp:cons "IntegrationMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'integration-response-selection-expression))
      (common-lisp:list
       (common-lisp:cons "IntegrationResponseSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-subtype))
      (common-lisp:list
       (common-lisp:cons "IntegrationSubtype"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-type))
      (common-lisp:list
       (common-lisp:cons "IntegrationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integration-uri))
      (common-lisp:list
       (common-lisp:cons "IntegrationUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'passthrough-behavior))
      (common-lisp:list
       (common-lisp:cons "PassthroughBehavior"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'payload-format-version))
      (common-lisp:list
       (common-lisp:cons "PayloadFormatVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-parameters))
      (common-lisp:list
       (common-lisp:cons "RequestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-templates))
      (common-lisp:list
       (common-lisp:cons "RequestTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-selection-expression))
      (common-lisp:list
       (common-lisp:cons "TemplateSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timeout-in-millis))
      (common-lisp:list
       (common-lisp:cons "TimeoutInMillis"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tls-config))
      (common-lisp:list
       (common-lisp:cons "TlsConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-integration-response-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-integration-response-input-"))
   (content-handling-strategy common-lisp:nil :type
    (common-lisp:or content-handling-strategy common-lisp:null))
   (integration-response-key common-lisp:nil :type
    (common-lisp:or selection-key common-lisp:null))
   (response-parameters common-lisp:nil :type
    (common-lisp:or integration-parameters common-lisp:null))
   (response-templates common-lisp:nil :type
    (common-lisp:or template-map common-lisp:null))
   (template-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-integration-response-input
                    'make-update-integration-response-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-response-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-response-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'content-handling-strategy))
      (common-lisp:list
       (common-lisp:cons "ContentHandlingStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'integration-response-key))
      (common-lisp:list
       (common-lisp:cons "IntegrationResponseKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-templates))
      (common-lisp:list
       (common-lisp:cons "ResponseTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-selection-expression))
      (common-lisp:list
       (common-lisp:cons "TemplateSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-response-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-integration-response-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-integration-response-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (content-handling-strategy common-lisp:nil :type
    (common-lisp:or content-handling-strategy common-lisp:null))
   (integration-id (common-lisp:error ":integration-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (integration-response-id
    (common-lisp:error ":integration-response-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (integration-response-key common-lisp:nil :type
    (common-lisp:or selection-key common-lisp:null))
   (response-parameters common-lisp:nil :type
    (common-lisp:or integration-parameters common-lisp:null))
   (response-templates common-lisp:nil :type
    (common-lisp:or template-map common-lisp:null))
   (template-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-integration-response-request
                    'make-update-integration-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-response-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'content-handling-strategy))
      (common-lisp:list
       (common-lisp:cons "ContentHandlingStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'integration-response-key))
      (common-lisp:list
       (common-lisp:cons "IntegrationResponseKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-templates))
      (common-lisp:list
       (common-lisp:cons "ResponseTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-selection-expression))
      (common-lisp:list
       (common-lisp:cons "TemplateSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-integration-response-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-integration-response-response-"))
   (content-handling-strategy common-lisp:nil :type
    (common-lisp:or content-handling-strategy common-lisp:null))
   (integration-response-id common-lisp:nil :type
    (common-lisp:or id common-lisp:null))
   (integration-response-key common-lisp:nil :type
    (common-lisp:or selection-key common-lisp:null))
   (response-parameters common-lisp:nil :type
    (common-lisp:or integration-parameters common-lisp:null))
   (response-templates common-lisp:nil :type
    (common-lisp:or template-map common-lisp:null))
   (template-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-integration-response-response
                    'make-update-integration-response-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-response-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-response-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'content-handling-strategy))
      (common-lisp:list
       (common-lisp:cons "ContentHandlingStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'integration-response-id))
      (common-lisp:list
       (common-lisp:cons "IntegrationResponseId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'integration-response-key))
      (common-lisp:list
       (common-lisp:cons "IntegrationResponseKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-templates))
      (common-lisp:list
       (common-lisp:cons "ResponseTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-selection-expression))
      (common-lisp:list
       (common-lisp:cons "TemplateSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-response-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-model-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-model-input-"))
   (content-type common-lisp:nil :type
    (common-lisp:or string-with-length-between1and256 common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (schema common-lisp:nil :type
    (common-lisp:or string-with-length-between0and32k common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-model-input 'make-update-model-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-model-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-model-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-type))
      (common-lisp:list
       (common-lisp:cons "ContentType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schema))
      (common-lisp:list
       (common-lisp:cons "Schema"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-model-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-model-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-model-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (content-type common-lisp:nil :type
    (common-lisp:or string-with-length-between1and256 common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (model-id (common-lisp:error ":model-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (schema common-lisp:nil :type
    (common-lisp:or string-with-length-between0and32k common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-model-request 'make-update-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-model-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-type))
      (common-lisp:list
       (common-lisp:cons "ContentType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schema))
      (common-lisp:list
       (common-lisp:cons "Schema"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-model-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-model-response-"))
   (content-type common-lisp:nil :type
    (common-lisp:or string-with-length-between1and256 common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (model-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (schema common-lisp:nil :type
    (common-lisp:or string-with-length-between0and32k common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-model-response 'make-update-model-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-model-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-model-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-type))
      (common-lisp:list
       (common-lisp:cons "ContentType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-id))
      (common-lisp:list
       (common-lisp:cons "ModelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schema))
      (common-lisp:list
       (common-lisp:cons "Schema"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-model-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-route-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-route-input-"))
   (api-key-required common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (authorization-scopes common-lisp:nil :type
    (common-lisp:or authorization-scopes common-lisp:null))
   (authorization-type common-lisp:nil :type
    (common-lisp:or authorization-type common-lisp:null))
   (authorizer-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (model-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (operation-name common-lisp:nil :type
    (common-lisp:or string-with-length-between1and64 common-lisp:null))
   (request-models common-lisp:nil :type
    (common-lisp:or route-models common-lisp:null))
   (request-parameters common-lisp:nil :type
    (common-lisp:or route-parameters common-lisp:null))
   (route-key common-lisp:nil :type
    (common-lisp:or selection-key common-lisp:null))
   (route-response-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (target common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-route-input 'make-update-route-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-route-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-route-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key-required))
      (common-lisp:list
       (common-lisp:cons "ApiKeyRequired"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorization-scopes))
      (common-lisp:list
       (common-lisp:cons "AuthorizationScopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization-type))
      (common-lisp:list
       (common-lisp:cons "AuthorizationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-id))
      (common-lisp:list
       (common-lisp:cons "AuthorizerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'model-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ModelSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation-name))
      (common-lisp:list
       (common-lisp:cons "OperationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-models))
      (common-lisp:list
       (common-lisp:cons "RequestModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-parameters))
      (common-lisp:list
       (common-lisp:cons "RequestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-key))
      (common-lisp:list
       (common-lisp:cons "RouteKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'route-response-selection-expression))
      (common-lisp:list
       (common-lisp:cons "RouteResponseSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target))
      (common-lisp:list
       (common-lisp:cons "Target"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-route-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-route-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-route-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (api-key-required common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (authorization-scopes common-lisp:nil :type
    (common-lisp:or authorization-scopes common-lisp:null))
   (authorization-type common-lisp:nil :type
    (common-lisp:or authorization-type common-lisp:null))
   (authorizer-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (model-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (operation-name common-lisp:nil :type
    (common-lisp:or string-with-length-between1and64 common-lisp:null))
   (request-models common-lisp:nil :type
    (common-lisp:or route-models common-lisp:null))
   (request-parameters common-lisp:nil :type
    (common-lisp:or route-parameters common-lisp:null))
   (route-id (common-lisp:error ":route-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (route-key common-lisp:nil :type
    (common-lisp:or selection-key common-lisp:null))
   (route-response-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (target common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-route-request 'make-update-route-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-route-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-route-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key-required))
      (common-lisp:list
       (common-lisp:cons "ApiKeyRequired"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorization-scopes))
      (common-lisp:list
       (common-lisp:cons "AuthorizationScopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization-type))
      (common-lisp:list
       (common-lisp:cons "AuthorizationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-id))
      (common-lisp:list
       (common-lisp:cons "AuthorizerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'model-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ModelSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation-name))
      (common-lisp:list
       (common-lisp:cons "OperationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-models))
      (common-lisp:list
       (common-lisp:cons "RequestModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-parameters))
      (common-lisp:list
       (common-lisp:cons "RequestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-key))
      (common-lisp:list
       (common-lisp:cons "RouteKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'route-response-selection-expression))
      (common-lisp:list
       (common-lisp:cons "RouteResponseSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target))
      (common-lisp:list
       (common-lisp:cons "Target"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-route-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-route-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-route-result-"))
   (api-gateway-managed common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (api-key-required common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (authorization-scopes common-lisp:nil :type
    (common-lisp:or authorization-scopes common-lisp:null))
   (authorization-type common-lisp:nil :type
    (common-lisp:or authorization-type common-lisp:null))
   (authorizer-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (model-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (operation-name common-lisp:nil :type
    (common-lisp:or string-with-length-between1and64 common-lisp:null))
   (request-models common-lisp:nil :type
    (common-lisp:or route-models common-lisp:null))
   (request-parameters common-lisp:nil :type
    (common-lisp:or route-parameters common-lisp:null))
   (route-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (route-key common-lisp:nil :type
    (common-lisp:or selection-key common-lisp:null))
   (route-response-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (target common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-route-result 'make-update-route-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-route-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-route-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-gateway-managed))
      (common-lisp:list
       (common-lisp:cons "ApiGatewayManaged"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key-required))
      (common-lisp:list
       (common-lisp:cons "ApiKeyRequired"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorization-scopes))
      (common-lisp:list
       (common-lisp:cons "AuthorizationScopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization-type))
      (common-lisp:list
       (common-lisp:cons "AuthorizationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-id))
      (common-lisp:list
       (common-lisp:cons "AuthorizerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'model-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ModelSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation-name))
      (common-lisp:list
       (common-lisp:cons "OperationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-models))
      (common-lisp:list
       (common-lisp:cons "RequestModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-parameters))
      (common-lisp:list
       (common-lisp:cons "RequestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-id))
      (common-lisp:list
       (common-lisp:cons "RouteId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-key))
      (common-lisp:list
       (common-lisp:cons "RouteKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'route-response-selection-expression))
      (common-lisp:list
       (common-lisp:cons "RouteResponseSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target))
      (common-lisp:list
       (common-lisp:cons "Target"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-route-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-route-response-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-route-response-input-"))
   (model-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (response-models common-lisp:nil :type
    (common-lisp:or route-models common-lisp:null))
   (response-parameters common-lisp:nil :type
    (common-lisp:or route-parameters common-lisp:null))
   (route-response-key common-lisp:nil :type
    (common-lisp:or selection-key common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-route-response-input
                    'make-update-route-response-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-route-response-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-route-response-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'model-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ModelSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-models))
      (common-lisp:list
       (common-lisp:cons "ResponseModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-response-key))
      (common-lisp:list
       (common-lisp:cons "RouteResponseKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-route-response-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-route-response-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-route-response-request-"))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (model-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (response-models common-lisp:nil :type
    (common-lisp:or route-models common-lisp:null))
   (response-parameters common-lisp:nil :type
    (common-lisp:or route-parameters common-lisp:null))
   (route-id (common-lisp:error ":route-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (route-response-id (common-lisp:error ":route-response-id is required")
    :type (common-lisp:or |__string| common-lisp:null))
   (route-response-key common-lisp:nil :type
    (common-lisp:or selection-key common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-route-response-request
                    'make-update-route-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-route-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-route-response-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'model-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ModelSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-models))
      (common-lisp:list
       (common-lisp:cons "ResponseModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-response-key))
      (common-lisp:list
       (common-lisp:cons "RouteResponseKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-route-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-route-response-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-route-response-response-"))
   (model-selection-expression common-lisp:nil :type
    (common-lisp:or selection-expression common-lisp:null))
   (response-models common-lisp:nil :type
    (common-lisp:or route-models common-lisp:null))
   (response-parameters common-lisp:nil :type
    (common-lisp:or route-parameters common-lisp:null))
   (route-response-id common-lisp:nil :type
    (common-lisp:or id common-lisp:null))
   (route-response-key common-lisp:nil :type
    (common-lisp:or selection-key common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-route-response-response
                    'make-update-route-response-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-route-response-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-route-response-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'model-selection-expression))
      (common-lisp:list
       (common-lisp:cons "ModelSelectionExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-models))
      (common-lisp:list
       (common-lisp:cons "ResponseModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "ResponseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-response-id))
      (common-lisp:list
       (common-lisp:cons "RouteResponseId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-response-key))
      (common-lisp:list
       (common-lisp:cons "RouteResponseKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-route-response-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-stage-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-stage-input-"))
   (access-log-settings common-lisp:nil :type
    (common-lisp:or access-log-settings common-lisp:null))
   (auto-deploy common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (client-certificate-id common-lisp:nil :type
    (common-lisp:or id common-lisp:null))
   (default-route-settings common-lisp:nil :type
    (common-lisp:or route-settings common-lisp:null))
   (deployment-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (route-settings common-lisp:nil :type
    (common-lisp:or route-settings-map common-lisp:null))
   (stage-variables common-lisp:nil :type
    (common-lisp:or stage-variables-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-stage-input 'make-update-stage-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-stage-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-stage-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-log-settings))
      (common-lisp:list
       (common-lisp:cons "AccessLogSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-deploy))
      (common-lisp:list
       (common-lisp:cons "AutoDeploy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-certificate-id))
      (common-lisp:list
       (common-lisp:cons "ClientCertificateId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-route-settings))
      (common-lisp:list
       (common-lisp:cons "DefaultRouteSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "DeploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-settings))
      (common-lisp:list
       (common-lisp:cons "RouteSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-variables))
      (common-lisp:list
       (common-lisp:cons "StageVariables"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-stage-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-stage-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-stage-request-"))
   (access-log-settings common-lisp:nil :type
    (common-lisp:or access-log-settings common-lisp:null))
   (api-id (common-lisp:error ":api-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (auto-deploy common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (client-certificate-id common-lisp:nil :type
    (common-lisp:or id common-lisp:null))
   (default-route-settings common-lisp:nil :type
    (common-lisp:or route-settings common-lisp:null))
   (deployment-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (route-settings common-lisp:nil :type
    (common-lisp:or route-settings-map common-lisp:null))
   (stage-name (common-lisp:error ":stage-name is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (stage-variables common-lisp:nil :type
    (common-lisp:or stage-variables-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-stage-request 'make-update-stage-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-stage-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-log-settings))
      (common-lisp:list
       (common-lisp:cons "AccessLogSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-deploy))
      (common-lisp:list
       (common-lisp:cons "AutoDeploy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-certificate-id))
      (common-lisp:list
       (common-lisp:cons "ClientCertificateId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-route-settings))
      (common-lisp:list
       (common-lisp:cons "DefaultRouteSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "DeploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-settings))
      (common-lisp:list
       (common-lisp:cons "RouteSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-variables))
      (common-lisp:list
       (common-lisp:cons "StageVariables"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-stage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-stage-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-stage-response-"))
   (access-log-settings common-lisp:nil :type
    (common-lisp:or access-log-settings common-lisp:null))
   (api-gateway-managed common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (auto-deploy common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (client-certificate-id common-lisp:nil :type
    (common-lisp:or id common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or |__timestampIso8601| common-lisp:null))
   (default-route-settings common-lisp:nil :type
    (common-lisp:or route-settings common-lisp:null))
   (deployment-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (last-deployment-status-message common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (last-updated-date common-lisp:nil :type
    (common-lisp:or |__timestampIso8601| common-lisp:null))
   (route-settings common-lisp:nil :type
    (common-lisp:or route-settings-map common-lisp:null))
   (stage-name common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (stage-variables common-lisp:nil :type
    (common-lisp:or stage-variables-map common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-stage-response 'make-update-stage-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-stage-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-stage-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-log-settings))
      (common-lisp:list
       (common-lisp:cons "AccessLogSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-gateway-managed))
      (common-lisp:list
       (common-lisp:cons "ApiGatewayManaged"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-deploy))
      (common-lisp:list
       (common-lisp:cons "AutoDeploy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-certificate-id))
      (common-lisp:list
       (common-lisp:cons "ClientCertificateId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-route-settings))
      (common-lisp:list
       (common-lisp:cons "DefaultRouteSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "DeploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-deployment-status-message))
      (common-lisp:list
       (common-lisp:cons "LastDeploymentStatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-date))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route-settings))
      (common-lisp:list
       (common-lisp:cons "RouteSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-name))
      (common-lisp:list
       (common-lisp:cons "StageName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-variables))
      (common-lisp:list
       (common-lisp:cons "StageVariables"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-stage-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-vpc-link-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-vpc-link-input-"))
   (name common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-vpc-link-input 'make-update-vpc-link-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-vpc-link-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-vpc-link-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-vpc-link-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-vpc-link-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-vpc-link-request-"))
   (name common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (vpc-link-id (common-lisp:error ":vpc-link-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-vpc-link-request 'make-update-vpc-link-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-vpc-link-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-vpc-link-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-vpc-link-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-vpc-link-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-vpc-link-response-"))
   (created-date common-lisp:nil :type
    (common-lisp:or |__timestampIso8601| common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (security-group-ids common-lisp:nil :type
    (common-lisp:or security-group-id-list common-lisp:null))
   (subnet-ids common-lisp:nil :type
    (common-lisp:or subnet-id-list common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null))
   (vpc-link-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (vpc-link-status common-lisp:nil :type
    (common-lisp:or vpc-link-status common-lisp:null))
   (vpc-link-status-message common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (vpc-link-version common-lisp:nil :type
    (common-lisp:or vpc-link-version common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-vpc-link-response 'make-update-vpc-link-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-vpc-link-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-vpc-link-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-ids))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-ids))
      (common-lisp:list
       (common-lisp:cons "SubnetIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-link-id))
      (common-lisp:list
       (common-lisp:cons "VpcLinkId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-link-status))
      (common-lisp:list
       (common-lisp:cons "VpcLinkStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'vpc-link-status-message))
      (common-lisp:list
       (common-lisp:cons "VpcLinkStatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-link-version))
      (common-lisp:list
       (common-lisp:cons "VpcLinkVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-vpc-link-response))
   common-lisp:nil))
(common-lisp:deftype uri-with-length-between1and2048 () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (vpc-link (:copier common-lisp:nil) (:conc-name "struct-shape-vpc-link-"))
   (created-date common-lisp:nil :type
    (common-lisp:or |__timestampIso8601| common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or string-with-length-between1and128 common-lisp:null))
   (security-group-ids (common-lisp:error ":security-group-ids is required")
    :type (common-lisp:or security-group-id-list common-lisp:null))
   (subnet-ids (common-lisp:error ":subnet-ids is required") :type
    (common-lisp:or subnet-id-list common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null))
   (vpc-link-id (common-lisp:error ":vpc-link-id is required") :type
    (common-lisp:or id common-lisp:null))
   (vpc-link-status common-lisp:nil :type
    (common-lisp:or vpc-link-status common-lisp:null))
   (vpc-link-status-message common-lisp:nil :type
    (common-lisp:or string-with-length-between0and1024 common-lisp:null))
   (vpc-link-version common-lisp:nil :type
    (common-lisp:or vpc-link-version common-lisp:null)))
 (common-lisp:export (common-lisp:list 'vpc-link 'make-vpc-link))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input vpc-link))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input vpc-link))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-ids))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-ids))
      (common-lisp:list
       (common-lisp:cons "SubnetIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-link-id))
      (common-lisp:list
       (common-lisp:cons "VpcLinkId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-link-status))
      (common-lisp:list
       (common-lisp:cons "VpcLinkStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'vpc-link-status-message))
      (common-lisp:list
       (common-lisp:cons "VpcLinkStatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-link-version))
      (common-lisp:list
       (common-lisp:cons "VpcLinkVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input vpc-link))
   common-lisp:nil))
(common-lisp:deftype vpc-link-status () 'common-lisp:string)
(common-lisp:deftype vpc-link-version () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (vpc-links (:copier common-lisp:nil)
      (:conc-name "struct-shape-vpc-links-"))
   (items common-lisp:nil :type
    (common-lisp:or |__listOfVpcLink| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export (common-lisp:list 'vpc-links 'make-vpc-links))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input vpc-links))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input vpc-links))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input vpc-links))
   common-lisp:nil))
(common-lisp:deftype |__boolean| () 'common-lisp:boolean)
(common-lisp:deftype |__double| () 'common-lisp:double-float)
(common-lisp:deftype |__integer| () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype |__listOfApi| () '(trivial-types:proper-list api))
 (common-lisp:defun make-__listofapi
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list api))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfApiMapping| ()
   '(trivial-types:proper-list api-mapping))
 (common-lisp:defun make-__listofapimapping
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list api-mapping))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfAuthorizer| ()
   '(trivial-types:proper-list authorizer))
 (common-lisp:defun make-__listofauthorizer
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list authorizer))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfDeployment| ()
   '(trivial-types:proper-list deployment))
 (common-lisp:defun make-__listofdeployment
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list deployment))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfDomainName| ()
   '(trivial-types:proper-list domain-name))
 (common-lisp:defun make-__listofdomainname
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list domain-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfIntegration| ()
   '(trivial-types:proper-list integration))
 (common-lisp:defun make-__listofintegration
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list integration))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfIntegrationResponse| ()
   '(trivial-types:proper-list integration-response))
 (common-lisp:defun make-__listofintegrationresponse
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list integration-response))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfModel| () '(trivial-types:proper-list model))
 (common-lisp:defun make-__listofmodel
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list model))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfRoute| () '(trivial-types:proper-list route))
 (common-lisp:defun make-__listofroute
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list route))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfRouteResponse| ()
   '(trivial-types:proper-list route-response))
 (common-lisp:defun make-__listofrouteresponse
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list route-response))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfStage| () '(trivial-types:proper-list stage))
 (common-lisp:defun make-__listofstage
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list stage))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfVpcLink| ()
   '(trivial-types:proper-list vpc-link))
 (common-lisp:defun make-__listofvpclink
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list vpc-link))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOf__string| ()
   '(trivial-types:proper-list |__string|))
 (common-lisp:defun make-__listof__string
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |__string|))
   aws-sdk/generator/shape::members))
(common-lisp:deftype |__long| () 'common-lisp:integer)
(common-lisp:deftype |__string| () 'common-lisp:string)
(common-lisp:deftype |__timestampIso8601| () 'common-lisp:string)
(common-lisp:deftype |__timestampUnix| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun create-api
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-key-selection-expression
                     cors-configuration credentials-arn description
                     disable-schema-validation disable-execute-api-endpoint
                     name protocol-type route-key route-selection-expression
                     tags target version)
   (common-lisp:declare
    (common-lisp:ignorable api-key-selection-expression cors-configuration
     credentials-arn description disable-schema-validation
     disable-execute-api-endpoint name protocol-type route-key
     route-selection-expression tags target version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-api-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/v2/apis"
                                                        "CreateApi"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-api))
(common-lisp:progn
 (common-lisp:defun create-api-mapping
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id api-mapping-key domain-name stage)
   (common-lisp:declare
    (common-lisp:ignorable api-id api-mapping-key domain-name stage))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-api-mapping-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/domainnames/~A/apimappings"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'domain-name))))
                                                        "CreateApiMapping"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-api-mapping))
(common-lisp:progn
 (common-lisp:defun create-authorizer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id authorizer-credentials-arn
                     authorizer-result-ttl-in-seconds authorizer-type
                     authorizer-uri identity-source
                     identity-validation-expression jwt-configuration name
                     authorizer-payload-format-version enable-simple-responses)
   (common-lisp:declare
    (common-lisp:ignorable api-id authorizer-credentials-arn
     authorizer-result-ttl-in-seconds authorizer-type authorizer-uri
     identity-source identity-validation-expression jwt-configuration name
     authorizer-payload-format-version enable-simple-responses))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-authorizer-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/authorizers"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))))
                                                        "CreateAuthorizer"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-authorizer))
(common-lisp:progn
 (common-lisp:defun create-deployment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id description stage-name)
   (common-lisp:declare (common-lisp:ignorable api-id description stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-deployment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/deployments"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))))
                                                        "CreateDeployment"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-deployment))
(common-lisp:progn
 (common-lisp:defun create-domain-name
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name domain-name-configurations
                     mutual-tls-authentication tags)
   (common-lisp:declare
    (common-lisp:ignorable domain-name domain-name-configurations
     mutual-tls-authentication tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-domain-name-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/v2/domainnames"
                                                        "CreateDomainName"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-domain-name))
(common-lisp:progn
 (common-lisp:defun create-integration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id connection-id connection-type
                     content-handling-strategy credentials-arn description
                     integration-method integration-subtype integration-type
                     integration-uri passthrough-behavior
                     payload-format-version request-parameters
                     response-parameters request-templates
                     template-selection-expression timeout-in-millis
                     tls-config)
   (common-lisp:declare
    (common-lisp:ignorable api-id connection-id connection-type
     content-handling-strategy credentials-arn description integration-method
     integration-subtype integration-type integration-uri passthrough-behavior
     payload-format-version request-parameters response-parameters
     request-templates template-selection-expression timeout-in-millis
     tls-config))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-integration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/integrations"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))))
                                                        "CreateIntegration"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-integration))
(common-lisp:progn
 (common-lisp:defun create-integration-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id content-handling-strategy
                     integration-id integration-response-key
                     response-parameters response-templates
                     template-selection-expression)
   (common-lisp:declare
    (common-lisp:ignorable api-id content-handling-strategy integration-id
     integration-response-key response-parameters response-templates
     template-selection-expression))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-integration-response-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/integrations/~A/integrationresponses"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'integration-id))))
                                                        "CreateIntegrationResponse"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-integration-response))
(common-lisp:progn
 (common-lisp:defun create-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id content-type description name
                     schema)
   (common-lisp:declare
    (common-lisp:ignorable api-id content-type description name schema))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/models"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))))
                                                        "CreateModel"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-model))
(common-lisp:progn
 (common-lisp:defun create-route
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id api-key-required
                     authorization-scopes authorization-type authorizer-id
                     model-selection-expression operation-name request-models
                     request-parameters route-key
                     route-response-selection-expression target)
   (common-lisp:declare
    (common-lisp:ignorable api-id api-key-required authorization-scopes
     authorization-type authorizer-id model-selection-expression operation-name
     request-models request-parameters route-key
     route-response-selection-expression target))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-route-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/routes"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))))
                                                        "CreateRoute"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-route))
(common-lisp:progn
 (common-lisp:defun create-route-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id model-selection-expression
                     response-models response-parameters route-id
                     route-response-key)
   (common-lisp:declare
    (common-lisp:ignorable api-id model-selection-expression response-models
     response-parameters route-id route-response-key))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-route-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/routes/~A/routeresponses"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'route-id))))
                                                        "CreateRouteResponse"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-route-response))
(common-lisp:progn
 (common-lisp:defun create-stage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key access-log-settings api-id auto-deploy
                     client-certificate-id default-route-settings deployment-id
                     description route-settings stage-name stage-variables
                     tags)
   (common-lisp:declare
    (common-lisp:ignorable access-log-settings api-id auto-deploy
     client-certificate-id default-route-settings deployment-id description
     route-settings stage-name stage-variables tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-stage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/stages"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))))
                                                        "CreateStage"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-stage))
(common-lisp:progn
 (common-lisp:defun create-vpc-link
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name security-group-ids subnet-ids tags)
   (common-lisp:declare
    (common-lisp:ignorable name security-group-ids subnet-ids tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-vpc-link-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/v2/vpclinks"
                                                        "CreateVpcLink"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-vpc-link))
(common-lisp:progn
 (common-lisp:defun delete-access-log-settings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id stage-name)
   (common-lisp:declare (common-lisp:ignorable api-id stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-access-log-settings-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/stages/~A/accesslogsettings"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))))
                                                        "DeleteAccessLogSettings"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-access-log-settings))
(common-lisp:progn
 (common-lisp:defun delete-api
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id)
   (common-lisp:declare (common-lisp:ignorable api-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-api-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))))
                                                        "DeleteApi"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-api))
(common-lisp:progn
 (common-lisp:defun delete-api-mapping
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-mapping-id domain-name)
   (common-lisp:declare (common-lisp:ignorable api-mapping-id domain-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-api-mapping-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/domainnames/~A/apimappings/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'domain-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-mapping-id))))
                                                        "DeleteApiMapping"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-api-mapping))
(common-lisp:progn
 (common-lisp:defun delete-authorizer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id authorizer-id)
   (common-lisp:declare (common-lisp:ignorable api-id authorizer-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-authorizer-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/authorizers/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'authorizer-id))))
                                                        "DeleteAuthorizer"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-authorizer))
(common-lisp:progn
 (common-lisp:defun delete-cors-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id)
   (common-lisp:declare (common-lisp:ignorable api-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-cors-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/cors"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))))
                                                        "DeleteCorsConfiguration"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-cors-configuration))
(common-lisp:progn
 (common-lisp:defun delete-deployment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id deployment-id)
   (common-lisp:declare (common-lisp:ignorable api-id deployment-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-deployment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/deployments/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'deployment-id))))
                                                        "DeleteDeployment"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-deployment))
(common-lisp:progn
 (common-lisp:defun delete-domain-name
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name)
   (common-lisp:declare (common-lisp:ignorable domain-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-domain-name-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/domainnames/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'domain-name))))
                                                        "DeleteDomainName"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-domain-name))
(common-lisp:progn
 (common-lisp:defun delete-integration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id integration-id)
   (common-lisp:declare (common-lisp:ignorable api-id integration-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-integration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/integrations/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'integration-id))))
                                                        "DeleteIntegration"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-integration))
(common-lisp:progn
 (common-lisp:defun delete-integration-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id integration-id
                     integration-response-id)
   (common-lisp:declare
    (common-lisp:ignorable api-id integration-id integration-response-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-integration-response-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/integrations/~A/integrationresponses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'integration-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'integration-response-id))))
                                                        "DeleteIntegrationResponse"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-integration-response))
(common-lisp:progn
 (common-lisp:defun delete-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id model-id)
   (common-lisp:declare (common-lisp:ignorable api-id model-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/models/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'model-id))))
                                                        "DeleteModel"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-model))
(common-lisp:progn
 (common-lisp:defun delete-route
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id route-id)
   (common-lisp:declare (common-lisp:ignorable api-id route-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-route-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/routes/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'route-id))))
                                                        "DeleteRoute"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-route))
(common-lisp:progn
 (common-lisp:defun delete-route-request-parameter
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id request-parameter-key route-id)
   (common-lisp:declare
    (common-lisp:ignorable api-id request-parameter-key route-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-route-request-parameter-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/routes/~A/requestparameters/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'route-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'request-parameter-key))))
                                                        "DeleteRouteRequestParameter"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-route-request-parameter))
(common-lisp:progn
 (common-lisp:defun delete-route-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id route-id route-response-id)
   (common-lisp:declare
    (common-lisp:ignorable api-id route-id route-response-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-route-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/routes/~A/routeresponses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'route-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'route-response-id))))
                                                        "DeleteRouteResponse"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-route-response))
(common-lisp:progn
 (common-lisp:defun delete-route-settings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id route-key stage-name)
   (common-lisp:declare (common-lisp:ignorable api-id route-key stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-route-settings-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/stages/~A/routesettings/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'route-key))))
                                                        "DeleteRouteSettings"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-route-settings))
(common-lisp:progn
 (common-lisp:defun delete-stage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id stage-name)
   (common-lisp:declare (common-lisp:ignorable api-id stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-stage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/stages/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))))
                                                        "DeleteStage"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-stage))
(common-lisp:progn
 (common-lisp:defun delete-vpc-link
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key vpc-link-id)
   (common-lisp:declare (common-lisp:ignorable vpc-link-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-vpc-link-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/vpclinks/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vpc-link-id))))
                                                        "DeleteVpcLink"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-vpc-link))
(common-lisp:progn
 (common-lisp:defun export-api
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id export-version include-extensions
                     output-type specification stage-name)
   (common-lisp:declare
    (common-lisp:ignorable api-id export-version include-extensions output-type
     specification stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-export-api-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/exports/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'specification))))
                                                        "ExportApi")
       :want-stream common-lisp:t)
      "blob" common-lisp:nil *error-map*)))
 (common-lisp:export 'export-api))
(common-lisp:progn
 (common-lisp:defun reset-authorizers-cache
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id stage-name)
   (common-lisp:declare (common-lisp:ignorable api-id stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-reset-authorizers-cache-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/stages/~A/cache/authorizers"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))))
                                                        "ResetAuthorizersCache"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'reset-authorizers-cache))
(common-lisp:progn
 (common-lisp:defun get-api
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id)
   (common-lisp:declare (common-lisp:ignorable api-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-api-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))))
                                                        "GetApi"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-api))
(common-lisp:progn
 (common-lisp:defun get-api-mapping
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-mapping-id domain-name)
   (common-lisp:declare (common-lisp:ignorable api-mapping-id domain-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-api-mapping-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/domainnames/~A/apimappings/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'domain-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-mapping-id))))
                                                        "GetApiMapping"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-api-mapping))
(common-lisp:progn
 (common-lisp:defun get-api-mappings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable domain-name max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-api-mappings-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/domainnames/~A/apimappings"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'domain-name))))
                                                        "GetApiMappings"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-api-mappings))
(common-lisp:progn
 (common-lisp:defun get-apis
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-apis-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/v2/apis"
                                                        "GetApis"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-apis))
(common-lisp:progn
 (common-lisp:defun get-authorizer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id authorizer-id)
   (common-lisp:declare (common-lisp:ignorable api-id authorizer-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-authorizer-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/authorizers/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'authorizer-id))))
                                                        "GetAuthorizer"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-authorizer))
(common-lisp:progn
 (common-lisp:defun get-authorizers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id max-results next-token)
   (common-lisp:declare (common-lisp:ignorable api-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-authorizers-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/authorizers"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))))
                                                        "GetAuthorizers"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-authorizers))
(common-lisp:progn
 (common-lisp:defun get-deployment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id deployment-id)
   (common-lisp:declare (common-lisp:ignorable api-id deployment-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-deployment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/deployments/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'deployment-id))))
                                                        "GetDeployment"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-deployment))
(common-lisp:progn
 (common-lisp:defun get-deployments
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id max-results next-token)
   (common-lisp:declare (common-lisp:ignorable api-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-deployments-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/deployments"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))))
                                                        "GetDeployments"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-deployments))
(common-lisp:progn
 (common-lisp:defun get-domain-name
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name)
   (common-lisp:declare (common-lisp:ignorable domain-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-domain-name-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/domainnames/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'domain-name))))
                                                        "GetDomainName"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-domain-name))
(common-lisp:progn
 (common-lisp:defun get-domain-names
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-domain-names-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/v2/domainnames"
                                                        "GetDomainNames"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-domain-names))
(common-lisp:progn
 (common-lisp:defun get-integration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id integration-id)
   (common-lisp:declare (common-lisp:ignorable api-id integration-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-integration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/integrations/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'integration-id))))
                                                        "GetIntegration"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-integration))
(common-lisp:progn
 (common-lisp:defun get-integration-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id integration-id
                     integration-response-id)
   (common-lisp:declare
    (common-lisp:ignorable api-id integration-id integration-response-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-integration-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/integrations/~A/integrationresponses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'integration-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'integration-response-id))))
                                                        "GetIntegrationResponse"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-integration-response))
(common-lisp:progn
 (common-lisp:defun get-integration-responses
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id integration-id max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable api-id integration-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-integration-responses-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/integrations/~A/integrationresponses"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'integration-id))))
                                                        "GetIntegrationResponses"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-integration-responses))
(common-lisp:progn
 (common-lisp:defun get-integrations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id max-results next-token)
   (common-lisp:declare (common-lisp:ignorable api-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-integrations-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/integrations"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))))
                                                        "GetIntegrations"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-integrations))
(common-lisp:progn
 (common-lisp:defun get-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id model-id)
   (common-lisp:declare (common-lisp:ignorable api-id model-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/models/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'model-id))))
                                                        "GetModel"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-model))
(common-lisp:progn
 (common-lisp:defun get-model-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id model-id)
   (common-lisp:declare (common-lisp:ignorable api-id model-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-model-template-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/models/~A/template"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'model-id))))
                                                        "GetModelTemplate"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-model-template))
(common-lisp:progn
 (common-lisp:defun get-models
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id max-results next-token)
   (common-lisp:declare (common-lisp:ignorable api-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-models-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/models"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))))
                                                        "GetModels"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-models))
(common-lisp:progn
 (common-lisp:defun get-route
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id route-id)
   (common-lisp:declare (common-lisp:ignorable api-id route-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-route-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/routes/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'route-id))))
                                                        "GetRoute"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-route))
(common-lisp:progn
 (common-lisp:defun get-route-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id route-id route-response-id)
   (common-lisp:declare
    (common-lisp:ignorable api-id route-id route-response-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-route-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/routes/~A/routeresponses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'route-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'route-response-id))))
                                                        "GetRouteResponse"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-route-response))
(common-lisp:progn
 (common-lisp:defun get-route-responses
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id max-results next-token route-id)
   (common-lisp:declare
    (common-lisp:ignorable api-id max-results next-token route-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-route-responses-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/routes/~A/routeresponses"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'route-id))))
                                                        "GetRouteResponses"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-route-responses))
(common-lisp:progn
 (common-lisp:defun get-routes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id max-results next-token)
   (common-lisp:declare (common-lisp:ignorable api-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-routes-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/routes"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))))
                                                        "GetRoutes"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-routes))
(common-lisp:progn
 (common-lisp:defun get-stage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id stage-name)
   (common-lisp:declare (common-lisp:ignorable api-id stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-stage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/stages/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))))
                                                        "GetStage"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-stage))
(common-lisp:progn
 (common-lisp:defun get-stages
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id max-results next-token)
   (common-lisp:declare (common-lisp:ignorable api-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-stages-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/stages"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))))
                                                        "GetStages"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-stages))
(common-lisp:progn
 (common-lisp:defun get-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-tags-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "GetTags"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-tags))
(common-lisp:progn
 (common-lisp:defun get-vpc-link
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key vpc-link-id)
   (common-lisp:declare (common-lisp:ignorable vpc-link-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-vpc-link-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/vpclinks/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vpc-link-id))))
                                                        "GetVpcLink"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-vpc-link))
(common-lisp:progn
 (common-lisp:defun get-vpc-links
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-vpc-links-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/v2/vpclinks"
                                                        "GetVpcLinks"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-vpc-links))
(common-lisp:progn
 (common-lisp:defun import-api
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key basepath body fail-on-warnings)
   (common-lisp:declare (common-lisp:ignorable basepath body fail-on-warnings))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-import-api-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" "/v2/apis"
                                                        "ImportApi"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'import-api))
(common-lisp:progn
 (common-lisp:defun reimport-api
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id basepath body fail-on-warnings)
   (common-lisp:declare
    (common-lisp:ignorable api-id basepath body fail-on-warnings))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-reimport-api-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))))
                                                        "ReimportApi"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'reimport-api))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "TagResource"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "UntagResource"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-api
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id api-key-selection-expression
                     cors-configuration credentials-arn description
                     disable-schema-validation disable-execute-api-endpoint
                     name route-key route-selection-expression target version)
   (common-lisp:declare
    (common-lisp:ignorable api-id api-key-selection-expression
     cors-configuration credentials-arn description disable-schema-validation
     disable-execute-api-endpoint name route-key route-selection-expression
     target version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-api-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))))
                                                        "UpdateApi"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-api))
(common-lisp:progn
 (common-lisp:defun update-api-mapping
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id api-mapping-id api-mapping-key
                     domain-name stage)
   (common-lisp:declare
    (common-lisp:ignorable api-id api-mapping-id api-mapping-key domain-name
     stage))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-api-mapping-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/domainnames/~A/apimappings/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'domain-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-mapping-id))))
                                                        "UpdateApiMapping"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-api-mapping))
(common-lisp:progn
 (common-lisp:defun update-authorizer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id authorizer-credentials-arn
                     authorizer-id authorizer-result-ttl-in-seconds
                     authorizer-type authorizer-uri identity-source
                     identity-validation-expression jwt-configuration name
                     authorizer-payload-format-version enable-simple-responses)
   (common-lisp:declare
    (common-lisp:ignorable api-id authorizer-credentials-arn authorizer-id
     authorizer-result-ttl-in-seconds authorizer-type authorizer-uri
     identity-source identity-validation-expression jwt-configuration name
     authorizer-payload-format-version enable-simple-responses))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-authorizer-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/authorizers/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'authorizer-id))))
                                                        "UpdateAuthorizer"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-authorizer))
(common-lisp:progn
 (common-lisp:defun update-deployment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id deployment-id description)
   (common-lisp:declare
    (common-lisp:ignorable api-id deployment-id description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-deployment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/deployments/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'deployment-id))))
                                                        "UpdateDeployment"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-deployment))
(common-lisp:progn
 (common-lisp:defun update-domain-name
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name domain-name-configurations
                     mutual-tls-authentication)
   (common-lisp:declare
    (common-lisp:ignorable domain-name domain-name-configurations
     mutual-tls-authentication))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-domain-name-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/domainnames/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'domain-name))))
                                                        "UpdateDomainName"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-domain-name))
(common-lisp:progn
 (common-lisp:defun update-integration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id connection-id connection-type
                     content-handling-strategy credentials-arn description
                     integration-id integration-method integration-subtype
                     integration-type integration-uri passthrough-behavior
                     payload-format-version request-parameters
                     response-parameters request-templates
                     template-selection-expression timeout-in-millis
                     tls-config)
   (common-lisp:declare
    (common-lisp:ignorable api-id connection-id connection-type
     content-handling-strategy credentials-arn description integration-id
     integration-method integration-subtype integration-type integration-uri
     passthrough-behavior payload-format-version request-parameters
     response-parameters request-templates template-selection-expression
     timeout-in-millis tls-config))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-integration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/integrations/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'integration-id))))
                                                        "UpdateIntegration"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-integration))
(common-lisp:progn
 (common-lisp:defun update-integration-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id content-handling-strategy
                     integration-id integration-response-id
                     integration-response-key response-parameters
                     response-templates template-selection-expression)
   (common-lisp:declare
    (common-lisp:ignorable api-id content-handling-strategy integration-id
     integration-response-id integration-response-key response-parameters
     response-templates template-selection-expression))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-integration-response-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/integrations/~A/integrationresponses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'integration-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'integration-response-id))))
                                                        "UpdateIntegrationResponse"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-integration-response))
(common-lisp:progn
 (common-lisp:defun update-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id content-type description model-id
                     name schema)
   (common-lisp:declare
    (common-lisp:ignorable api-id content-type description model-id name
     schema))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/models/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'model-id))))
                                                        "UpdateModel"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-model))
(common-lisp:progn
 (common-lisp:defun update-route
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id api-key-required
                     authorization-scopes authorization-type authorizer-id
                     model-selection-expression operation-name request-models
                     request-parameters route-id route-key
                     route-response-selection-expression target)
   (common-lisp:declare
    (common-lisp:ignorable api-id api-key-required authorization-scopes
     authorization-type authorizer-id model-selection-expression operation-name
     request-models request-parameters route-id route-key
     route-response-selection-expression target))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-route-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/routes/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'route-id))))
                                                        "UpdateRoute"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-route))
(common-lisp:progn
 (common-lisp:defun update-route-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-id model-selection-expression
                     response-models response-parameters route-id
                     route-response-id route-response-key)
   (common-lisp:declare
    (common-lisp:ignorable api-id model-selection-expression response-models
     response-parameters route-id route-response-id route-response-key))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-route-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/routes/~A/routeresponses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'route-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'route-response-id))))
                                                        "UpdateRouteResponse"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-route-response))
(common-lisp:progn
 (common-lisp:defun update-stage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key access-log-settings api-id auto-deploy
                     client-certificate-id default-route-settings deployment-id
                     description route-settings stage-name stage-variables)
   (common-lisp:declare
    (common-lisp:ignorable access-log-settings api-id auto-deploy
     client-certificate-id default-route-settings deployment-id description
     route-settings stage-name stage-variables))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-stage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/apis/~A/stages/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))))
                                                        "UpdateStage"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-stage))
(common-lisp:progn
 (common-lisp:defun update-vpc-link
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name vpc-link-id)
   (common-lisp:declare (common-lisp:ignorable name vpc-link-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-vpc-link-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigatewayv2-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v2/vpclinks/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vpc-link-id))))
                                                        "UpdateVpcLink"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-vpc-link))
