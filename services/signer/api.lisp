;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/signer/api
  (:use)
  (:nicknames #:aws/signer)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/signer/api)
(common-lisp:progn
 (common-lisp:defclass signer-request (aws-sdk/request:request) common-lisp:nil
                       (:default-initargs :service "signer" :protocol
                        :rest-json))
 (common-lisp:export 'signer-request))
(common-lisp:progn
 (common-lisp:define-condition signer-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'signer-error))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("BadRequestException" . bad-request-exception)
    ("ConflictException" . conflict-exception)
    ("InternalServiceErrorException" . internal-service-error-exception)
    ("NotFoundException" . not-found-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceLimitExceededException" . service-limit-exceeded-exception)
    ("ThrottlingException" . throttling-exception)
    ("TooManyRequestsException" . too-many-requests-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (signer-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       access-denied-exception-message)
      (code :initarg :|code| :initform common-lisp:nil :reader
       access-denied-exception-code)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-message
                    'access-denied-exception-code)))
(common-lisp:deftype account-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass add-profile-permission-request common-lisp:nil
                       ((statement-id :initarg :|statementId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %add-profile-permission-request-statement-id :initform
                         (common-lisp:error ":statementid is required"))
                        (revision-id :initarg :|revisionId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %add-profile-permission-request-revision-id :initform
                         common-lisp:nil)
                        (principal :initarg :|principal| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %add-profile-permission-request-principal :initform
                         (common-lisp:error ":principal is required"))
                        (action :initarg :|action| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %add-profile-permission-request-action :initform
                         (common-lisp:error ":action is required"))
                        (profile-version :initarg :|profileVersion| :type
                         (common-lisp:or profile-version common-lisp:null)
                         :accessor
                         %add-profile-permission-request-profile-version
                         :initform common-lisp:nil)
                        (profile-name :initarg :|profileName| :type
                         (common-lisp:or profile-name common-lisp:null)
                         :accessor %add-profile-permission-request-profile-name
                         :initform
                         (common-lisp:error ":profilename is required"))))
 (common-lisp:export
  (common-lisp:list 'add-profile-permission-request
                    'make-add-profile-permission-request))
 (common-lisp:defun make-add-profile-permission-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key statement-id revision-id principal action
                     profile-version profile-name)
   (common-lisp:apply #'common-lisp:make-instance
                      'add-profile-permission-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          add-profile-permission-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          add-profile-permission-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'profile-version))
      (common-lisp:list
       (common-lisp:cons "profileVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action))
      (common-lisp:list
       (common-lisp:cons "action"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal))
      (common-lisp:list
       (common-lisp:cons "principal"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revision-id))
      (common-lisp:list
       (common-lisp:cons "revisionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'statement-id))
      (common-lisp:list
       (common-lisp:cons "statementId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          add-profile-permission-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass add-profile-permission-response common-lisp:nil
                       ((revision-id :initarg :|revisionId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %add-profile-permission-response-revision-id :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'add-profile-permission-response
                    'make-add-profile-permission-response))
 (common-lisp:defun make-add-profile-permission-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key revision-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'add-profile-permission-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          add-profile-permission-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          add-profile-permission-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revision-id))
      (common-lisp:list
       (common-lisp:cons "revisionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          add-profile-permission-response))
   common-lisp:nil))
(common-lisp:deftype arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition bad-request-exception
     (signer-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       bad-request-exception-message)
      (code :initarg :|code| :initform common-lisp:nil :reader
       bad-request-exception-code)))
 (common-lisp:export
  (common-lisp:list 'bad-request-exception 'bad-request-exception-message
                    'bad-request-exception-code)))
(common-lisp:deftype bucket-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass cancel-signing-profile-request common-lisp:nil
                       ((profile-name :initarg :|profileName| :type
                         (common-lisp:or profile-name common-lisp:null)
                         :accessor %cancel-signing-profile-request-profile-name
                         :initform
                         (common-lisp:error ":profilename is required"))))
 (common-lisp:export
  (common-lisp:list 'cancel-signing-profile-request
                    'make-cancel-signing-profile-request))
 (common-lisp:defun make-cancel-signing-profile-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key profile-name)
   (common-lisp:apply #'common-lisp:make-instance
                      'cancel-signing-profile-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cancel-signing-profile-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cancel-signing-profile-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cancel-signing-profile-request))
   common-lisp:nil))
(common-lisp:deftype category () 'common-lisp:string)
(common-lisp:deftype certificate-arn () 'common-lisp:string)
(common-lisp:deftype client-request-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (signer-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       conflict-exception-message)
      (code :initarg :|code| :initform common-lisp:nil :reader
       conflict-exception-code)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message
                    'conflict-exception-code)))
(common-lisp:progn
 (common-lisp:defclass describe-signing-job-request common-lisp:nil
                       ((job-id :initarg :|jobId| :type
                         (common-lisp:or job-id common-lisp:null) :accessor
                         %describe-signing-job-request-job-id :initform
                         (common-lisp:error ":jobid is required"))))
 (common-lisp:export
  (common-lisp:list 'describe-signing-job-request
                    'make-describe-signing-job-request))
 (common-lisp:defun make-describe-signing-job-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key job-id)
   (common-lisp:apply #'common-lisp:make-instance 'describe-signing-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-signing-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-signing-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-signing-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-signing-job-response common-lisp:nil
                       ((job-invoker :initarg :|jobInvoker| :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         %describe-signing-job-response-job-invoker :initform
                         common-lisp:nil)
                        (job-owner :initarg :|jobOwner| :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         %describe-signing-job-response-job-owner :initform
                         common-lisp:nil)
                        (signed-object :initarg :|signedObject| :type
                         (common-lisp:or signed-object common-lisp:null)
                         :accessor %describe-signing-job-response-signed-object
                         :initform common-lisp:nil)
                        (revocation-record :initarg :|revocationRecord| :type
                         (common-lisp:or signing-job-revocation-record
                                         common-lisp:null)
                         :accessor
                         %describe-signing-job-response-revocation-record
                         :initform common-lisp:nil)
                        (status-reason :initarg :|statusReason| :type
                         (common-lisp:or status-reason common-lisp:null)
                         :accessor %describe-signing-job-response-status-reason
                         :initform common-lisp:nil)
                        (status :initarg :|status| :type
                         (common-lisp:or signing-status common-lisp:null)
                         :accessor %describe-signing-job-response-status
                         :initform common-lisp:nil)
                        (requested-by :initarg :|requestedBy| :type
                         (common-lisp:or requested-by common-lisp:null)
                         :accessor %describe-signing-job-response-requested-by
                         :initform common-lisp:nil)
                        (signature-expires-at :initarg :|signatureExpiresAt|
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         %describe-signing-job-response-signature-expires-at
                         :initform common-lisp:nil)
                        (completed-at :initarg :|completedAt| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %describe-signing-job-response-completed-at :initform
                         common-lisp:nil)
                        (created-at :initarg :|createdAt| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %describe-signing-job-response-created-at :initform
                         common-lisp:nil)
                        (signing-parameters :initarg :|signingParameters| :type
                         (common-lisp:or signing-parameters common-lisp:null)
                         :accessor
                         %describe-signing-job-response-signing-parameters
                         :initform common-lisp:nil)
                        (overrides :initarg :|overrides| :type
                         (common-lisp:or signing-platform-overrides
                                         common-lisp:null)
                         :accessor %describe-signing-job-response-overrides
                         :initform common-lisp:nil)
                        (profile-version :initarg :|profileVersion| :type
                         (common-lisp:or profile-version common-lisp:null)
                         :accessor
                         %describe-signing-job-response-profile-version
                         :initform common-lisp:nil)
                        (profile-name :initarg :|profileName| :type
                         (common-lisp:or profile-name common-lisp:null)
                         :accessor %describe-signing-job-response-profile-name
                         :initform common-lisp:nil)
                        (platform-display-name :initarg :|platformDisplayName|
                         :type (common-lisp:or display-name common-lisp:null)
                         :accessor
                         %describe-signing-job-response-platform-display-name
                         :initform common-lisp:nil)
                        (platform-id :initarg :|platformId| :type
                         (common-lisp:or platform-id common-lisp:null)
                         :accessor %describe-signing-job-response-platform-id
                         :initform common-lisp:nil)
                        (signing-material :initarg :|signingMaterial| :type
                         (common-lisp:or signing-material common-lisp:null)
                         :accessor
                         %describe-signing-job-response-signing-material
                         :initform common-lisp:nil)
                        (source :initarg :|source| :type
                         (common-lisp:or source common-lisp:null) :accessor
                         %describe-signing-job-response-source :initform
                         common-lisp:nil)
                        (job-id :initarg :|jobId| :type
                         (common-lisp:or job-id common-lisp:null) :accessor
                         %describe-signing-job-response-job-id :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'describe-signing-job-response
                    'make-describe-signing-job-response))
 (common-lisp:defun make-describe-signing-job-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key job-invoker job-owner signed-object
                     revocation-record status-reason status requested-by
                     signature-expires-at completed-at created-at
                     signing-parameters overrides profile-version profile-name
                     platform-display-name platform-id signing-material source
                     job-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-signing-job-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-signing-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-signing-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "jobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source))
      (common-lisp:list
       (common-lisp:cons "source"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'signing-material))
      (common-lisp:list
       (common-lisp:cons "signingMaterial"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'platform-id))
      (common-lisp:list
       (common-lisp:cons "platformId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'platform-display-name))
      (common-lisp:list
       (common-lisp:cons "platformDisplayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'profile-name))
      (common-lisp:list
       (common-lisp:cons "profileName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'profile-version))
      (common-lisp:list
       (common-lisp:cons "profileVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'overrides))
      (common-lisp:list
       (common-lisp:cons "overrides"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'signing-parameters))
      (common-lisp:list
       (common-lisp:cons "signingParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'completed-at))
      (common-lisp:list
       (common-lisp:cons "completedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'signature-expires-at))
      (common-lisp:list
       (common-lisp:cons "signatureExpiresAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'requested-by))
      (common-lisp:list
       (common-lisp:cons "requestedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-reason))
      (common-lisp:list
       (common-lisp:cons "statusReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revocation-record))
      (common-lisp:list
       (common-lisp:cons "revocationRecord"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'signed-object))
      (common-lisp:list
       (common-lisp:cons "signedObject"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-owner))
      (common-lisp:list
       (common-lisp:cons "jobOwner"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-invoker))
      (common-lisp:list
       (common-lisp:cons "jobInvoker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-signing-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass destination common-lisp:nil
                       ((s3 :initarg :|s3| :type
                         (common-lisp:or s3destination common-lisp:null)
                         :accessor %destination-s3 :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'destination 'make-destination))
 (common-lisp:defun make-destination
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key s3)
   (common-lisp:apply #'common-lisp:make-instance 'destination
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3))
      (common-lisp:list
       (common-lisp:cons "s3"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input destination))
   common-lisp:nil))
(common-lisp:deftype display-name () 'common-lisp:string)
(common-lisp:deftype encryption-algorithm () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass encryption-algorithm-options common-lisp:nil
                       ((default-value :initarg :|defaultValue| :type
                         (common-lisp:or encryption-algorithm common-lisp:null)
                         :accessor %encryption-algorithm-options-default-value
                         :initform
                         (common-lisp:error ":defaultvalue is required"))
                        (allowed-values :initarg :|allowedValues| :type
                         (common-lisp:or encryption-algorithms
                                         common-lisp:null)
                         :accessor %encryption-algorithm-options-allowed-values
                         :initform
                         (common-lisp:error ":allowedvalues is required"))))
 (common-lisp:export
  (common-lisp:list 'encryption-algorithm-options
                    'make-encryption-algorithm-options))
 (common-lisp:defun make-encryption-algorithm-options
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key default-value allowed-values)
   (common-lisp:apply #'common-lisp:make-instance 'encryption-algorithm-options
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          encryption-algorithm-options))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          encryption-algorithm-options))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'allowed-values))
      (common-lisp:list
       (common-lisp:cons "allowedValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'default-value))
      (common-lisp:list
       (common-lisp:cons "defaultValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          encryption-algorithm-options))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype encryption-algorithms ()
   '(trivial-types:proper-list encryption-algorithm))
 (common-lisp:defun |make-encryption-algorithms|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list encryption-algorithm))
   aws-sdk/generator/shape::members))
(common-lisp:deftype error-code () 'common-lisp:string)
(common-lisp:deftype error-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass get-signing-platform-request common-lisp:nil
                       ((platform-id :initarg :|platformId| :type
                         (common-lisp:or platform-id common-lisp:null)
                         :accessor %get-signing-platform-request-platform-id
                         :initform
                         (common-lisp:error ":platformid is required"))))
 (common-lisp:export
  (common-lisp:list 'get-signing-platform-request
                    'make-get-signing-platform-request))
 (common-lisp:defun make-get-signing-platform-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key platform-id)
   (common-lisp:apply #'common-lisp:make-instance 'get-signing-platform-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-signing-platform-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-signing-platform-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-signing-platform-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-signing-platform-response common-lisp:nil
                       ((revocation-supported :initarg :|revocationSupported|
                         :type (common-lisp:or |bool| common-lisp:null)
                         :accessor
                         %get-signing-platform-response-revocation-supported
                         :initform common-lisp:nil)
                        (max-size-in-mb :initarg :|maxSizeInMB| :type
                         (common-lisp:or max-size-in-mb common-lisp:null)
                         :accessor
                         %get-signing-platform-response-max-size-in-mb
                         :initform common-lisp:nil)
                        (signing-image-format :initarg :|signingImageFormat|
                         :type
                         (common-lisp:or signing-image-format common-lisp:null)
                         :accessor
                         %get-signing-platform-response-signing-image-format
                         :initform common-lisp:nil)
                        (signing-configuration :initarg :|signingConfiguration|
                         :type
                         (common-lisp:or signing-configuration
                                         common-lisp:null)
                         :accessor
                         %get-signing-platform-response-signing-configuration
                         :initform common-lisp:nil)
                        (category :initarg :|category| :type
                         (common-lisp:or category common-lisp:null) :accessor
                         %get-signing-platform-response-category :initform
                         common-lisp:nil)
                        (target :initarg :|target| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-signing-platform-response-target :initform
                         common-lisp:nil)
                        (partner :initarg :|partner| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-signing-platform-response-partner :initform
                         common-lisp:nil)
                        (display-name :initarg :|displayName| :type
                         (common-lisp:or display-name common-lisp:null)
                         :accessor %get-signing-platform-response-display-name
                         :initform common-lisp:nil)
                        (platform-id :initarg :|platformId| :type
                         (common-lisp:or platform-id common-lisp:null)
                         :accessor %get-signing-platform-response-platform-id
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-signing-platform-response
                    'make-get-signing-platform-response))
 (common-lisp:defun make-get-signing-platform-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key revocation-supported max-size-in-mb
                     signing-image-format signing-configuration category target
                     partner display-name platform-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-signing-platform-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-signing-platform-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-signing-platform-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'platform-id))
      (common-lisp:list
       (common-lisp:cons "platformId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'display-name))
      (common-lisp:list
       (common-lisp:cons "displayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'partner))
      (common-lisp:list
       (common-lisp:cons "partner"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target))
      (common-lisp:list
       (common-lisp:cons "target"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'category))
      (common-lisp:list
       (common-lisp:cons "category"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'signing-configuration))
      (common-lisp:list
       (common-lisp:cons "signingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'signing-image-format))
      (common-lisp:list
       (common-lisp:cons "signingImageFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-size-in-mb))
      (common-lisp:list
       (common-lisp:cons "maxSizeInMB"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'revocation-supported))
      (common-lisp:list
       (common-lisp:cons "revocationSupported"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-signing-platform-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-signing-profile-request common-lisp:nil
                       ((profile-owner :initarg :|profileOwner| :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         %get-signing-profile-request-profile-owner :initform
                         common-lisp:nil)
                        (profile-name :initarg :|profileName| :type
                         (common-lisp:or profile-name common-lisp:null)
                         :accessor %get-signing-profile-request-profile-name
                         :initform
                         (common-lisp:error ":profilename is required"))))
 (common-lisp:export
  (common-lisp:list 'get-signing-profile-request
                    'make-get-signing-profile-request))
 (common-lisp:defun make-get-signing-profile-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key profile-owner profile-name)
   (common-lisp:apply #'common-lisp:make-instance 'get-signing-profile-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-signing-profile-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-signing-profile-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-signing-profile-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-signing-profile-response common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %get-signing-profile-response-tags :initform
                         common-lisp:nil)
                        (arn :initarg :|arn| :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %get-signing-profile-response-arn :initform
                         common-lisp:nil)
                        (status-reason :initarg :|statusReason| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-signing-profile-response-status-reason :initform
                         common-lisp:nil)
                        (status :initarg :|status| :type
                         (common-lisp:or signing-profile-status
                                         common-lisp:null)
                         :accessor %get-signing-profile-response-status
                         :initform common-lisp:nil)
                        (signing-parameters :initarg :|signingParameters| :type
                         (common-lisp:or signing-parameters common-lisp:null)
                         :accessor
                         %get-signing-profile-response-signing-parameters
                         :initform common-lisp:nil)
                        (overrides :initarg :|overrides| :type
                         (common-lisp:or signing-platform-overrides
                                         common-lisp:null)
                         :accessor %get-signing-profile-response-overrides
                         :initform common-lisp:nil)
                        (signature-validity-period :initarg
                         :|signatureValidityPeriod| :type
                         (common-lisp:or signature-validity-period
                                         common-lisp:null)
                         :accessor
                         %get-signing-profile-response-signature-validity-period
                         :initform common-lisp:nil)
                        (platform-display-name :initarg :|platformDisplayName|
                         :type (common-lisp:or display-name common-lisp:null)
                         :accessor
                         %get-signing-profile-response-platform-display-name
                         :initform common-lisp:nil)
                        (platform-id :initarg :|platformId| :type
                         (common-lisp:or platform-id common-lisp:null)
                         :accessor %get-signing-profile-response-platform-id
                         :initform common-lisp:nil)
                        (signing-material :initarg :|signingMaterial| :type
                         (common-lisp:or signing-material common-lisp:null)
                         :accessor
                         %get-signing-profile-response-signing-material
                         :initform common-lisp:nil)
                        (revocation-record :initarg :|revocationRecord| :type
                         (common-lisp:or signing-profile-revocation-record
                                         common-lisp:null)
                         :accessor
                         %get-signing-profile-response-revocation-record
                         :initform common-lisp:nil)
                        (profile-version-arn :initarg :|profileVersionArn|
                         :type (common-lisp:or arn common-lisp:null) :accessor
                         %get-signing-profile-response-profile-version-arn
                         :initform common-lisp:nil)
                        (profile-version :initarg :|profileVersion| :type
                         (common-lisp:or profile-version common-lisp:null)
                         :accessor
                         %get-signing-profile-response-profile-version
                         :initform common-lisp:nil)
                        (profile-name :initarg :|profileName| :type
                         (common-lisp:or profile-name common-lisp:null)
                         :accessor %get-signing-profile-response-profile-name
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-signing-profile-response
                    'make-get-signing-profile-response))
 (common-lisp:defun make-get-signing-profile-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags arn status-reason status
                     signing-parameters overrides signature-validity-period
                     platform-display-name platform-id signing-material
                     revocation-record profile-version-arn profile-version
                     profile-name)
   (common-lisp:apply #'common-lisp:make-instance 'get-signing-profile-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-signing-profile-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-signing-profile-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'profile-name))
      (common-lisp:list
       (common-lisp:cons "profileName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'profile-version))
      (common-lisp:list
       (common-lisp:cons "profileVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'profile-version-arn))
      (common-lisp:list
       (common-lisp:cons "profileVersionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revocation-record))
      (common-lisp:list
       (common-lisp:cons "revocationRecord"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'signing-material))
      (common-lisp:list
       (common-lisp:cons "signingMaterial"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'platform-id))
      (common-lisp:list
       (common-lisp:cons "platformId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'platform-display-name))
      (common-lisp:list
       (common-lisp:cons "platformDisplayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'signature-validity-period))
      (common-lisp:list
       (common-lisp:cons "signatureValidityPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'overrides))
      (common-lisp:list
       (common-lisp:cons "overrides"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'signing-parameters))
      (common-lisp:list
       (common-lisp:cons "signingParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-reason))
      (common-lisp:list
       (common-lisp:cons "statusReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-signing-profile-response))
   common-lisp:nil))
(common-lisp:deftype hash-algorithm () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass hash-algorithm-options common-lisp:nil
                       ((default-value :initarg :|defaultValue| :type
                         (common-lisp:or hash-algorithm common-lisp:null)
                         :accessor %hash-algorithm-options-default-value
                         :initform
                         (common-lisp:error ":defaultvalue is required"))
                        (allowed-values :initarg :|allowedValues| :type
                         (common-lisp:or hash-algorithms common-lisp:null)
                         :accessor %hash-algorithm-options-allowed-values
                         :initform
                         (common-lisp:error ":allowedvalues is required"))))
 (common-lisp:export
  (common-lisp:list 'hash-algorithm-options 'make-hash-algorithm-options))
 (common-lisp:defun make-hash-algorithm-options
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key default-value allowed-values)
   (common-lisp:apply #'common-lisp:make-instance 'hash-algorithm-options
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          hash-algorithm-options))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          hash-algorithm-options))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'allowed-values))
      (common-lisp:list
       (common-lisp:cons "allowedValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'default-value))
      (common-lisp:list
       (common-lisp:cons "defaultValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          hash-algorithm-options))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype hash-algorithms ()
   '(trivial-types:proper-list hash-algorithm))
 (common-lisp:defun |make-hash-algorithms|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list hash-algorithm))
   aws-sdk/generator/shape::members))
(common-lisp:deftype image-format () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype image-formats ()
   '(trivial-types:proper-list image-format))
 (common-lisp:defun |make-image-formats|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list image-format))
   aws-sdk/generator/shape::members))
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition internal-service-error-exception
     (signer-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       internal-service-error-exception-message)
      (code :initarg :|code| :initform common-lisp:nil :reader
       internal-service-error-exception-code)))
 (common-lisp:export
  (common-lisp:list 'internal-service-error-exception
                    'internal-service-error-exception-message
                    'internal-service-error-exception-code)))
(common-lisp:deftype job-id () 'common-lisp:string)
(common-lisp:deftype key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass list-profile-permissions-request common-lisp:nil
                       ((next-token :initarg :|nextToken| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %list-profile-permissions-request-next-token :initform
                         common-lisp:nil)
                        (profile-name :initarg :|profileName| :type
                         (common-lisp:or profile-name common-lisp:null)
                         :accessor
                         %list-profile-permissions-request-profile-name
                         :initform
                         (common-lisp:error ":profilename is required"))))
 (common-lisp:export
  (common-lisp:list 'list-profile-permissions-request
                    'make-list-profile-permissions-request))
 (common-lisp:defun make-list-profile-permissions-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token profile-name)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-profile-permissions-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-profile-permissions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-profile-permissions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-profile-permissions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-profile-permissions-response common-lisp:nil
                       ((next-token :initarg :|nextToken| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %list-profile-permissions-response-next-token
                         :initform common-lisp:nil)
                        (permissions :initarg :|permissions| :type
                         (common-lisp:or permissions common-lisp:null)
                         :accessor
                         %list-profile-permissions-response-permissions
                         :initform common-lisp:nil)
                        (policy-size-bytes :initarg :|policySizeBytes| :type
                         (common-lisp:or policy-size-bytes common-lisp:null)
                         :accessor
                         %list-profile-permissions-response-policy-size-bytes
                         :initform common-lisp:nil)
                        (revision-id :initarg :|revisionId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %list-profile-permissions-response-revision-id
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-profile-permissions-response
                    'make-list-profile-permissions-response))
 (common-lisp:defun make-list-profile-permissions-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token permissions policy-size-bytes
                     revision-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-profile-permissions-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-profile-permissions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-profile-permissions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revision-id))
      (common-lisp:list
       (common-lisp:cons "revisionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy-size-bytes))
      (common-lisp:list
       (common-lisp:cons "policySizeBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permissions))
      (common-lisp:list
       (common-lisp:cons "permissions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-profile-permissions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-signing-jobs-request common-lisp:nil
                       ((job-invoker :initarg :|jobInvoker| :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         %list-signing-jobs-request-job-invoker :initform
                         common-lisp:nil)
                        (signature-expires-after :initarg
                         :|signatureExpiresAfter| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %list-signing-jobs-request-signature-expires-after
                         :initform common-lisp:nil)
                        (signature-expires-before :initarg
                         :|signatureExpiresBefore| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %list-signing-jobs-request-signature-expires-before
                         :initform common-lisp:nil)
                        (is-revoked :initarg :|isRevoked| :type
                         (common-lisp:or |bool| common-lisp:null) :accessor
                         %list-signing-jobs-request-is-revoked :initform
                         common-lisp:nil)
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-signing-jobs-request-next-token :initform
                         common-lisp:nil)
                        (max-results :initarg :|maxResults| :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor %list-signing-jobs-request-max-results
                         :initform common-lisp:nil)
                        (requested-by :initarg :|requestedBy| :type
                         (common-lisp:or requested-by common-lisp:null)
                         :accessor %list-signing-jobs-request-requested-by
                         :initform common-lisp:nil)
                        (platform-id :initarg :|platformId| :type
                         (common-lisp:or platform-id common-lisp:null)
                         :accessor %list-signing-jobs-request-platform-id
                         :initform common-lisp:nil)
                        (status :initarg :|status| :type
                         (common-lisp:or signing-status common-lisp:null)
                         :accessor %list-signing-jobs-request-status :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-signing-jobs-request
                    'make-list-signing-jobs-request))
 (common-lisp:defun make-list-signing-jobs-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key job-invoker signature-expires-after
                     signature-expires-before is-revoked next-token max-results
                     requested-by platform-id status)
   (common-lisp:apply #'common-lisp:make-instance 'list-signing-jobs-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-signing-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-signing-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-signing-jobs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-signing-jobs-response common-lisp:nil
                       ((next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-signing-jobs-response-next-token :initform
                         common-lisp:nil)
                        (jobs :initarg :|jobs| :type
                         (common-lisp:or signing-jobs common-lisp:null)
                         :accessor %list-signing-jobs-response-jobs :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-signing-jobs-response
                    'make-list-signing-jobs-response))
 (common-lisp:defun make-list-signing-jobs-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token jobs)
   (common-lisp:apply #'common-lisp:make-instance 'list-signing-jobs-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-signing-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-signing-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'jobs))
      (common-lisp:list
       (common-lisp:cons "jobs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-signing-jobs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-signing-platforms-request common-lisp:nil
                       ((next-token :initarg :|nextToken| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %list-signing-platforms-request-next-token :initform
                         common-lisp:nil)
                        (max-results :initarg :|maxResults| :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor %list-signing-platforms-request-max-results
                         :initform common-lisp:nil)
                        (target :initarg :|target| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %list-signing-platforms-request-target :initform
                         common-lisp:nil)
                        (partner :initarg :|partner| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %list-signing-platforms-request-partner :initform
                         common-lisp:nil)
                        (category :initarg :|category| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %list-signing-platforms-request-category :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-signing-platforms-request
                    'make-list-signing-platforms-request))
 (common-lisp:defun make-list-signing-platforms-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token max-results target partner
                     category)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-signing-platforms-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-signing-platforms-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-signing-platforms-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-signing-platforms-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-signing-platforms-response common-lisp:nil
                       ((next-token :initarg :|nextToken| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %list-signing-platforms-response-next-token :initform
                         common-lisp:nil)
                        (platforms :initarg :|platforms| :type
                         (common-lisp:or signing-platforms common-lisp:null)
                         :accessor %list-signing-platforms-response-platforms
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-signing-platforms-response
                    'make-list-signing-platforms-response))
 (common-lisp:defun make-list-signing-platforms-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token platforms)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-signing-platforms-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-signing-platforms-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-signing-platforms-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'platforms))
      (common-lisp:list
       (common-lisp:cons "platforms"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-signing-platforms-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-signing-profiles-request common-lisp:nil
                       ((statuses :initarg :|statuses| :type
                         (common-lisp:or statuses common-lisp:null) :accessor
                         %list-signing-profiles-request-statuses :initform
                         common-lisp:nil)
                        (platform-id :initarg :|platformId| :type
                         (common-lisp:or platform-id common-lisp:null)
                         :accessor %list-signing-profiles-request-platform-id
                         :initform common-lisp:nil)
                        (next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-signing-profiles-request-next-token :initform
                         common-lisp:nil)
                        (max-results :initarg :|maxResults| :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor %list-signing-profiles-request-max-results
                         :initform common-lisp:nil)
                        (include-canceled :initarg :|includeCanceled| :type
                         (common-lisp:or |bool| common-lisp:null) :accessor
                         %list-signing-profiles-request-include-canceled
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-signing-profiles-request
                    'make-list-signing-profiles-request))
 (common-lisp:defun make-list-signing-profiles-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key statuses platform-id next-token
                     max-results include-canceled)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-signing-profiles-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-signing-profiles-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-signing-profiles-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-signing-profiles-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-signing-profiles-response common-lisp:nil
                       ((next-token :initarg :|nextToken| :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         %list-signing-profiles-response-next-token :initform
                         common-lisp:nil)
                        (profiles :initarg :|profiles| :type
                         (common-lisp:or signing-profiles common-lisp:null)
                         :accessor %list-signing-profiles-response-profiles
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-signing-profiles-response
                    'make-list-signing-profiles-response))
 (common-lisp:defun make-list-signing-profiles-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token profiles)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-signing-profiles-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-signing-profiles-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-signing-profiles-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'profiles))
      (common-lisp:list
       (common-lisp:cons "profiles"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-signing-profiles-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-request common-lisp:nil
                       ((resource-arn :initarg :|resourceArn| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %list-tags-for-resource-request-resource-arn :initform
                         (common-lisp:error ":resourcearn is required"))))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defun make-list-tags-for-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key resource-arn)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-response common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %list-tags-for-resource-response-tags :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defun make-list-tags-for-resource-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype max-size-in-mb () 'common-lisp:integer)
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition not-found-exception
     (signer-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       not-found-exception-message)
      (code :initarg :|code| :initform common-lisp:nil :reader
       not-found-exception-code)))
 (common-lisp:export
  (common-lisp:list 'not-found-exception 'not-found-exception-message
                    'not-found-exception-code)))
(common-lisp:progn
 (common-lisp:defclass permission common-lisp:nil
                       ((profile-version :initarg :|profileVersion| :type
                         (common-lisp:or profile-version common-lisp:null)
                         :accessor %permission-profile-version :initform
                         common-lisp:nil)
                        (statement-id :initarg :|statementId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %permission-statement-id :initform common-lisp:nil)
                        (principal :initarg :|principal| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %permission-principal :initform common-lisp:nil)
                        (action :initarg :|action| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %permission-action :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'permission 'make-permission))
 (common-lisp:defun make-permission
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key profile-version statement-id principal
                     action)
   (common-lisp:apply #'common-lisp:make-instance 'permission
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input permission))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input permission))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action))
      (common-lisp:list
       (common-lisp:cons "action"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal))
      (common-lisp:list
       (common-lisp:cons "principal"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'statement-id))
      (common-lisp:list
       (common-lisp:cons "statementId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'profile-version))
      (common-lisp:list
       (common-lisp:cons "profileVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input permission))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype permissions () '(trivial-types:proper-list permission))
 (common-lisp:defun |make-permissions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list permission))
   aws-sdk/generator/shape::members))
(common-lisp:deftype platform-id () 'common-lisp:string)
(common-lisp:deftype policy-size-bytes () 'common-lisp:integer)
(common-lisp:deftype prefix () 'common-lisp:string)
(common-lisp:deftype profile-name () 'common-lisp:string)
(common-lisp:deftype profile-version () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass put-signing-profile-request common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %put-signing-profile-request-tags :initform
                         common-lisp:nil)
                        (signing-parameters :initarg :|signingParameters| :type
                         (common-lisp:or signing-parameters common-lisp:null)
                         :accessor
                         %put-signing-profile-request-signing-parameters
                         :initform common-lisp:nil)
                        (overrides :initarg :|overrides| :type
                         (common-lisp:or signing-platform-overrides
                                         common-lisp:null)
                         :accessor %put-signing-profile-request-overrides
                         :initform common-lisp:nil)
                        (platform-id :initarg :|platformId| :type
                         (common-lisp:or platform-id common-lisp:null)
                         :accessor %put-signing-profile-request-platform-id
                         :initform
                         (common-lisp:error ":platformid is required"))
                        (signature-validity-period :initarg
                         :|signatureValidityPeriod| :type
                         (common-lisp:or signature-validity-period
                                         common-lisp:null)
                         :accessor
                         %put-signing-profile-request-signature-validity-period
                         :initform common-lisp:nil)
                        (signing-material :initarg :|signingMaterial| :type
                         (common-lisp:or signing-material common-lisp:null)
                         :accessor
                         %put-signing-profile-request-signing-material
                         :initform common-lisp:nil)
                        (profile-name :initarg :|profileName| :type
                         (common-lisp:or profile-name common-lisp:null)
                         :accessor %put-signing-profile-request-profile-name
                         :initform
                         (common-lisp:error ":profilename is required"))))
 (common-lisp:export
  (common-lisp:list 'put-signing-profile-request
                    'make-put-signing-profile-request))
 (common-lisp:defun make-put-signing-profile-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags signing-parameters overrides
                     platform-id signature-validity-period signing-material
                     profile-name)
   (common-lisp:apply #'common-lisp:make-instance 'put-signing-profile-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-signing-profile-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-signing-profile-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'signing-material))
      (common-lisp:list
       (common-lisp:cons "signingMaterial"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'signature-validity-period))
      (common-lisp:list
       (common-lisp:cons "signatureValidityPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'platform-id))
      (common-lisp:list
       (common-lisp:cons "platformId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'overrides))
      (common-lisp:list
       (common-lisp:cons "overrides"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'signing-parameters))
      (common-lisp:list
       (common-lisp:cons "signingParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-signing-profile-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-signing-profile-response common-lisp:nil
                       ((profile-version-arn :initarg :|profileVersionArn|
                         :type (common-lisp:or arn common-lisp:null) :accessor
                         %put-signing-profile-response-profile-version-arn
                         :initform common-lisp:nil)
                        (profile-version :initarg :|profileVersion| :type
                         (common-lisp:or profile-version common-lisp:null)
                         :accessor
                         %put-signing-profile-response-profile-version
                         :initform common-lisp:nil)
                        (arn :initarg :|arn| :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %put-signing-profile-response-arn :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'put-signing-profile-response
                    'make-put-signing-profile-response))
 (common-lisp:defun make-put-signing-profile-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key profile-version-arn profile-version arn)
   (common-lisp:apply #'common-lisp:make-instance 'put-signing-profile-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-signing-profile-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-signing-profile-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'profile-version))
      (common-lisp:list
       (common-lisp:cons "profileVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'profile-version-arn))
      (common-lisp:list
       (common-lisp:cons "profileVersionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-signing-profile-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass remove-profile-permission-request common-lisp:nil
                       ((statement-id :initarg :|statementId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %remove-profile-permission-request-statement-id
                         :initform
                         (common-lisp:error ":statementid is required"))
                        (revision-id :initarg :|revisionId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %remove-profile-permission-request-revision-id
                         :initform
                         (common-lisp:error ":revisionid is required"))
                        (profile-name :initarg :|profileName| :type
                         (common-lisp:or profile-name common-lisp:null)
                         :accessor
                         %remove-profile-permission-request-profile-name
                         :initform
                         (common-lisp:error ":profilename is required"))))
 (common-lisp:export
  (common-lisp:list 'remove-profile-permission-request
                    'make-remove-profile-permission-request))
 (common-lisp:defun make-remove-profile-permission-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key statement-id revision-id profile-name)
   (common-lisp:apply #'common-lisp:make-instance
                      'remove-profile-permission-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          remove-profile-permission-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          remove-profile-permission-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          remove-profile-permission-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass remove-profile-permission-response common-lisp:nil
                       ((revision-id :initarg :|revisionId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %remove-profile-permission-response-revision-id
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'remove-profile-permission-response
                    'make-remove-profile-permission-response))
 (common-lisp:defun make-remove-profile-permission-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key revision-id)
   (common-lisp:apply #'common-lisp:make-instance
                      'remove-profile-permission-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          remove-profile-permission-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          remove-profile-permission-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revision-id))
      (common-lisp:list
       (common-lisp:cons "revisionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          remove-profile-permission-response))
   common-lisp:nil))
(common-lisp:deftype requested-by () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (signer-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       resource-not-found-exception-message)
      (code :initarg :|code| :initform common-lisp:nil :reader
       resource-not-found-exception-code)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message
                    'resource-not-found-exception-code)))
(common-lisp:deftype revocation-reason-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass revoke-signature-request common-lisp:nil
                       ((reason :initarg :|reason| :type
                         (common-lisp:or revocation-reason-string
                                         common-lisp:null)
                         :accessor %revoke-signature-request-reason :initform
                         (common-lisp:error ":reason is required"))
                        (job-owner :initarg :|jobOwner| :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         %revoke-signature-request-job-owner :initform
                         common-lisp:nil)
                        (job-id :initarg :|jobId| :type
                         (common-lisp:or job-id common-lisp:null) :accessor
                         %revoke-signature-request-job-id :initform
                         (common-lisp:error ":jobid is required"))))
 (common-lisp:export
  (common-lisp:list 'revoke-signature-request 'make-revoke-signature-request))
 (common-lisp:defun make-revoke-signature-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key reason job-owner job-id)
   (common-lisp:apply #'common-lisp:make-instance 'revoke-signature-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          revoke-signature-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          revoke-signature-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-owner))
      (common-lisp:list
       (common-lisp:cons "jobOwner"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reason))
      (common-lisp:list
       (common-lisp:cons "reason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          revoke-signature-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass revoke-signing-profile-request common-lisp:nil
                       ((effective-time :initarg :|effectiveTime| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %revoke-signing-profile-request-effective-time
                         :initform
                         (common-lisp:error ":effectivetime is required"))
                        (reason :initarg :|reason| :type
                         (common-lisp:or revocation-reason-string
                                         common-lisp:null)
                         :accessor %revoke-signing-profile-request-reason
                         :initform (common-lisp:error ":reason is required"))
                        (profile-version :initarg :|profileVersion| :type
                         (common-lisp:or profile-version common-lisp:null)
                         :accessor
                         %revoke-signing-profile-request-profile-version
                         :initform
                         (common-lisp:error ":profileversion is required"))
                        (profile-name :initarg :|profileName| :type
                         (common-lisp:or profile-name common-lisp:null)
                         :accessor %revoke-signing-profile-request-profile-name
                         :initform
                         (common-lisp:error ":profilename is required"))))
 (common-lisp:export
  (common-lisp:list 'revoke-signing-profile-request
                    'make-revoke-signing-profile-request))
 (common-lisp:defun make-revoke-signing-profile-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key effective-time reason profile-version
                     profile-name)
   (common-lisp:apply #'common-lisp:make-instance
                      'revoke-signing-profile-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          revoke-signing-profile-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          revoke-signing-profile-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'profile-version))
      (common-lisp:list
       (common-lisp:cons "profileVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reason))
      (common-lisp:list
       (common-lisp:cons "reason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'effective-time))
      (common-lisp:list
       (common-lisp:cons "effectiveTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          revoke-signing-profile-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass s3destination common-lisp:nil
                       ((prefix :initarg :|prefix| :type
                         (common-lisp:or prefix common-lisp:null) :accessor
                         %s3destination-prefix :initform common-lisp:nil)
                        (bucket-name :initarg :|bucketName| :type
                         (common-lisp:or bucket-name common-lisp:null)
                         :accessor %s3destination-bucket-name :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 's3destination 'make-s3destination))
 (common-lisp:defun make-s3destination
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key prefix bucket-name)
   (common-lisp:apply #'common-lisp:make-instance 's3destination
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input s3destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input s3destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket-name))
      (common-lisp:list
       (common-lisp:cons "bucketName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'prefix))
      (common-lisp:list
       (common-lisp:cons "prefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input s3destination))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass s3signed-object common-lisp:nil
                       ((key :initarg :|key| :type
                         (common-lisp:or key common-lisp:null) :accessor
                         %s3signed-object-key :initform common-lisp:nil)
                        (bucket-name :initarg :|bucketName| :type
                         (common-lisp:or bucket-name common-lisp:null)
                         :accessor %s3signed-object-bucket-name :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 's3signed-object 'make-s3signed-object))
 (common-lisp:defun make-s3signed-object
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key key bucket-name)
   (common-lisp:apply #'common-lisp:make-instance 's3signed-object
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input s3signed-object))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input s3signed-object))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket-name))
      (common-lisp:list
       (common-lisp:cons "bucketName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input s3signed-object))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass s3source common-lisp:nil
                       ((version :initarg :|version| :type
                         (common-lisp:or version common-lisp:null) :accessor
                         %s3source-version :initform
                         (common-lisp:error ":version is required"))
                        (key :initarg :|key| :type
                         (common-lisp:or key common-lisp:null) :accessor
                         %s3source-key :initform
                         (common-lisp:error ":key is required"))
                        (bucket-name :initarg :|bucketName| :type
                         (common-lisp:or bucket-name common-lisp:null)
                         :accessor %s3source-bucket-name :initform
                         (common-lisp:error ":bucketname is required"))))
 (common-lisp:export (common-lisp:list 's3source 'make-s3source))
 (common-lisp:defun make-s3source
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key version key bucket-name)
   (common-lisp:apply #'common-lisp:make-instance 's3source
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input s3source))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input s3source))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket-name))
      (common-lisp:list
       (common-lisp:cons "bucketName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input s3source))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition service-limit-exceeded-exception
     (signer-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       service-limit-exceeded-exception-message)
      (code :initarg :|code| :initform common-lisp:nil :reader
       service-limit-exceeded-exception-code)))
 (common-lisp:export
  (common-lisp:list 'service-limit-exceeded-exception
                    'service-limit-exceeded-exception-message
                    'service-limit-exceeded-exception-code)))
(common-lisp:progn
 (common-lisp:defclass signature-validity-period common-lisp:nil
                       ((type :initarg :|type| :type
                         (common-lisp:or validity-type common-lisp:null)
                         :accessor %signature-validity-period-type :initform
                         common-lisp:nil)
                        (value :initarg :|value| :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         %signature-validity-period-value :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'signature-validity-period
                    'make-signature-validity-period))
 (common-lisp:defun make-signature-validity-period
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key type value)
   (common-lisp:apply #'common-lisp:make-instance 'signature-validity-period
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          signature-validity-period))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          signature-validity-period))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          signature-validity-period))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass signed-object common-lisp:nil
                       ((s3 :initarg :|s3| :type
                         (common-lisp:or s3signed-object common-lisp:null)
                         :accessor %signed-object-s3 :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'signed-object 'make-signed-object))
 (common-lisp:defun make-signed-object
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key s3)
   (common-lisp:apply #'common-lisp:make-instance 'signed-object
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input signed-object))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input signed-object))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3))
      (common-lisp:list
       (common-lisp:cons "s3"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input signed-object))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass signing-configuration common-lisp:nil
                       ((hash-algorithm-options :initarg
                         :|hashAlgorithmOptions| :type
                         (common-lisp:or hash-algorithm-options
                                         common-lisp:null)
                         :accessor
                         %signing-configuration-hash-algorithm-options
                         :initform
                         (common-lisp:error
                          ":hashalgorithmoptions is required"))
                        (encryption-algorithm-options :initarg
                         :|encryptionAlgorithmOptions| :type
                         (common-lisp:or encryption-algorithm-options
                                         common-lisp:null)
                         :accessor
                         %signing-configuration-encryption-algorithm-options
                         :initform
                         (common-lisp:error
                          ":encryptionalgorithmoptions is required"))))
 (common-lisp:export
  (common-lisp:list 'signing-configuration 'make-signing-configuration))
 (common-lisp:defun make-signing-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key hash-algorithm-options
                     encryption-algorithm-options)
   (common-lisp:apply #'common-lisp:make-instance 'signing-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          signing-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          signing-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'encryption-algorithm-options))
      (common-lisp:list
       (common-lisp:cons "encryptionAlgorithmOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'hash-algorithm-options))
      (common-lisp:list
       (common-lisp:cons "hashAlgorithmOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          signing-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass signing-configuration-overrides common-lisp:nil
                       ((hash-algorithm :initarg :|hashAlgorithm| :type
                         (common-lisp:or hash-algorithm common-lisp:null)
                         :accessor
                         %signing-configuration-overrides-hash-algorithm
                         :initform common-lisp:nil)
                        (encryption-algorithm :initarg :|encryptionAlgorithm|
                         :type
                         (common-lisp:or encryption-algorithm common-lisp:null)
                         :accessor
                         %signing-configuration-overrides-encryption-algorithm
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'signing-configuration-overrides
                    'make-signing-configuration-overrides))
 (common-lisp:defun make-signing-configuration-overrides
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key hash-algorithm encryption-algorithm)
   (common-lisp:apply #'common-lisp:make-instance
                      'signing-configuration-overrides
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          signing-configuration-overrides))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          signing-configuration-overrides))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'encryption-algorithm))
      (common-lisp:list
       (common-lisp:cons "encryptionAlgorithm"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hash-algorithm))
      (common-lisp:list
       (common-lisp:cons "hashAlgorithm"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          signing-configuration-overrides))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass signing-image-format common-lisp:nil
                       ((default-format :initarg :|defaultFormat| :type
                         (common-lisp:or image-format common-lisp:null)
                         :accessor %signing-image-format-default-format
                         :initform
                         (common-lisp:error ":defaultformat is required"))
                        (supported-formats :initarg :|supportedFormats| :type
                         (common-lisp:or image-formats common-lisp:null)
                         :accessor %signing-image-format-supported-formats
                         :initform
                         (common-lisp:error ":supportedformats is required"))))
 (common-lisp:export
  (common-lisp:list 'signing-image-format 'make-signing-image-format))
 (common-lisp:defun make-signing-image-format
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key default-format supported-formats)
   (common-lisp:apply #'common-lisp:make-instance 'signing-image-format
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input signing-image-format))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input signing-image-format))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'supported-formats))
      (common-lisp:list
       (common-lisp:cons "supportedFormats"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'default-format))
      (common-lisp:list
       (common-lisp:cons "defaultFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input signing-image-format))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass signing-job common-lisp:nil
                       ((job-invoker :initarg :|jobInvoker| :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         %signing-job-job-invoker :initform common-lisp:nil)
                        (job-owner :initarg :|jobOwner| :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         %signing-job-job-owner :initform common-lisp:nil)
                        (signature-expires-at :initarg :|signatureExpiresAt|
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor %signing-job-signature-expires-at :initform
                         common-lisp:nil)
                        (platform-display-name :initarg :|platformDisplayName|
                         :type (common-lisp:or display-name common-lisp:null)
                         :accessor %signing-job-platform-display-name :initform
                         common-lisp:nil)
                        (platform-id :initarg :|platformId| :type
                         (common-lisp:or platform-id common-lisp:null)
                         :accessor %signing-job-platform-id :initform
                         common-lisp:nil)
                        (profile-version :initarg :|profileVersion| :type
                         (common-lisp:or profile-version common-lisp:null)
                         :accessor %signing-job-profile-version :initform
                         common-lisp:nil)
                        (profile-name :initarg :|profileName| :type
                         (common-lisp:or profile-name common-lisp:null)
                         :accessor %signing-job-profile-name :initform
                         common-lisp:nil)
                        (is-revoked :initarg :|isRevoked| :type
                         (common-lisp:or |bool| common-lisp:null) :accessor
                         %signing-job-is-revoked :initform common-lisp:nil)
                        (status :initarg :|status| :type
                         (common-lisp:or signing-status common-lisp:null)
                         :accessor %signing-job-status :initform
                         common-lisp:nil)
                        (created-at :initarg :|createdAt| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %signing-job-created-at :initform common-lisp:nil)
                        (signing-material :initarg :|signingMaterial| :type
                         (common-lisp:or signing-material common-lisp:null)
                         :accessor %signing-job-signing-material :initform
                         common-lisp:nil)
                        (signed-object :initarg :|signedObject| :type
                         (common-lisp:or signed-object common-lisp:null)
                         :accessor %signing-job-signed-object :initform
                         common-lisp:nil)
                        (source :initarg :|source| :type
                         (common-lisp:or source common-lisp:null) :accessor
                         %signing-job-source :initform common-lisp:nil)
                        (job-id :initarg :|jobId| :type
                         (common-lisp:or job-id common-lisp:null) :accessor
                         %signing-job-job-id :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'signing-job 'make-signing-job))
 (common-lisp:defun make-signing-job
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key job-invoker job-owner
                     signature-expires-at platform-display-name platform-id
                     profile-version profile-name is-revoked status created-at
                     signing-material signed-object source job-id)
   (common-lisp:apply #'common-lisp:make-instance 'signing-job
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input signing-job))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input signing-job))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "jobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source))
      (common-lisp:list
       (common-lisp:cons "source"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'signed-object))
      (common-lisp:list
       (common-lisp:cons "signedObject"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'signing-material))
      (common-lisp:list
       (common-lisp:cons "signingMaterial"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-revoked))
      (common-lisp:list
       (common-lisp:cons "isRevoked"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'profile-name))
      (common-lisp:list
       (common-lisp:cons "profileName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'profile-version))
      (common-lisp:list
       (common-lisp:cons "profileVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'platform-id))
      (common-lisp:list
       (common-lisp:cons "platformId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'platform-display-name))
      (common-lisp:list
       (common-lisp:cons "platformDisplayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'signature-expires-at))
      (common-lisp:list
       (common-lisp:cons "signatureExpiresAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-owner))
      (common-lisp:list
       (common-lisp:cons "jobOwner"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-invoker))
      (common-lisp:list
       (common-lisp:cons "jobInvoker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input signing-job))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass signing-job-revocation-record common-lisp:nil
                       ((revoked-by :initarg :|revokedBy| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %signing-job-revocation-record-revoked-by :initform
                         common-lisp:nil)
                        (revoked-at :initarg :|revokedAt| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %signing-job-revocation-record-revoked-at :initform
                         common-lisp:nil)
                        (reason :initarg :|reason| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %signing-job-revocation-record-reason :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'signing-job-revocation-record
                    'make-signing-job-revocation-record))
 (common-lisp:defun make-signing-job-revocation-record
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key revoked-by revoked-at reason)
   (common-lisp:apply #'common-lisp:make-instance
                      'signing-job-revocation-record
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          signing-job-revocation-record))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          signing-job-revocation-record))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reason))
      (common-lisp:list
       (common-lisp:cons "reason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revoked-at))
      (common-lisp:list
       (common-lisp:cons "revokedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revoked-by))
      (common-lisp:list
       (common-lisp:cons "revokedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          signing-job-revocation-record))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype signing-jobs () '(trivial-types:proper-list signing-job))
 (common-lisp:defun |make-signing-jobs|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list signing-job))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass signing-material common-lisp:nil
                       ((certificate-arn :initarg :|certificateArn| :type
                         (common-lisp:or certificate-arn common-lisp:null)
                         :accessor %signing-material-certificate-arn :initform
                         (common-lisp:error ":certificatearn is required"))))
 (common-lisp:export
  (common-lisp:list 'signing-material 'make-signing-material))
 (common-lisp:defun make-signing-material
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key certificate-arn)
   (common-lisp:apply #'common-lisp:make-instance 'signing-material
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input signing-material))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input signing-material))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate-arn))
      (common-lisp:list
       (common-lisp:cons "certificateArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input signing-material))
   common-lisp:nil))
(common-lisp:deftype signing-parameter-key () 'common-lisp:string)
(common-lisp:deftype signing-parameter-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype signing-parameters () 'common-lisp:hash-table)
 (common-lisp:defun |make-signing-parameters|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass signing-platform common-lisp:nil
                       ((revocation-supported :initarg :|revocationSupported|
                         :type (common-lisp:or |bool| common-lisp:null)
                         :accessor %signing-platform-revocation-supported
                         :initform common-lisp:nil)
                        (max-size-in-mb :initarg :|maxSizeInMB| :type
                         (common-lisp:or max-size-in-mb common-lisp:null)
                         :accessor %signing-platform-max-size-in-mb :initform
                         common-lisp:nil)
                        (signing-image-format :initarg :|signingImageFormat|
                         :type
                         (common-lisp:or signing-image-format common-lisp:null)
                         :accessor %signing-platform-signing-image-format
                         :initform common-lisp:nil)
                        (signing-configuration :initarg :|signingConfiguration|
                         :type
                         (common-lisp:or signing-configuration
                                         common-lisp:null)
                         :accessor %signing-platform-signing-configuration
                         :initform common-lisp:nil)
                        (category :initarg :|category| :type
                         (common-lisp:or category common-lisp:null) :accessor
                         %signing-platform-category :initform common-lisp:nil)
                        (target :initarg :|target| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %signing-platform-target :initform common-lisp:nil)
                        (partner :initarg :|partner| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %signing-platform-partner :initform common-lisp:nil)
                        (display-name :initarg :|displayName| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %signing-platform-display-name :initform
                         common-lisp:nil)
                        (platform-id :initarg :|platformId| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %signing-platform-platform-id :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'signing-platform 'make-signing-platform))
 (common-lisp:defun make-signing-platform
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key revocation-supported max-size-in-mb
                     signing-image-format signing-configuration category target
                     partner display-name platform-id)
   (common-lisp:apply #'common-lisp:make-instance 'signing-platform
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input signing-platform))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input signing-platform))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'platform-id))
      (common-lisp:list
       (common-lisp:cons "platformId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'display-name))
      (common-lisp:list
       (common-lisp:cons "displayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'partner))
      (common-lisp:list
       (common-lisp:cons "partner"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target))
      (common-lisp:list
       (common-lisp:cons "target"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'category))
      (common-lisp:list
       (common-lisp:cons "category"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'signing-configuration))
      (common-lisp:list
       (common-lisp:cons "signingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'signing-image-format))
      (common-lisp:list
       (common-lisp:cons "signingImageFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-size-in-mb))
      (common-lisp:list
       (common-lisp:cons "maxSizeInMB"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'revocation-supported))
      (common-lisp:list
       (common-lisp:cons "revocationSupported"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input signing-platform))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass signing-platform-overrides common-lisp:nil
                       ((signing-image-format :initarg :|signingImageFormat|
                         :type (common-lisp:or image-format common-lisp:null)
                         :accessor
                         %signing-platform-overrides-signing-image-format
                         :initform common-lisp:nil)
                        (signing-configuration :initarg :|signingConfiguration|
                         :type
                         (common-lisp:or signing-configuration-overrides
                                         common-lisp:null)
                         :accessor
                         %signing-platform-overrides-signing-configuration
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'signing-platform-overrides
                    'make-signing-platform-overrides))
 (common-lisp:defun make-signing-platform-overrides
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key signing-image-format
                     signing-configuration)
   (common-lisp:apply #'common-lisp:make-instance 'signing-platform-overrides
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          signing-platform-overrides))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          signing-platform-overrides))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'signing-configuration))
      (common-lisp:list
       (common-lisp:cons "signingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'signing-image-format))
      (common-lisp:list
       (common-lisp:cons "signingImageFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          signing-platform-overrides))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype signing-platforms ()
   '(trivial-types:proper-list signing-platform))
 (common-lisp:defun |make-signing-platforms|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list signing-platform))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass signing-profile common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %signing-profile-tags :initform common-lisp:nil)
                        (arn :initarg :|arn| :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor %signing-profile-arn :initform
                         common-lisp:nil)
                        (status :initarg :|status| :type
                         (common-lisp:or signing-profile-status
                                         common-lisp:null)
                         :accessor %signing-profile-status :initform
                         common-lisp:nil)
                        (signing-parameters :initarg :|signingParameters| :type
                         (common-lisp:or signing-parameters common-lisp:null)
                         :accessor %signing-profile-signing-parameters
                         :initform common-lisp:nil)
                        (platform-display-name :initarg :|platformDisplayName|
                         :type (common-lisp:or display-name common-lisp:null)
                         :accessor %signing-profile-platform-display-name
                         :initform common-lisp:nil)
                        (platform-id :initarg :|platformId| :type
                         (common-lisp:or platform-id common-lisp:null)
                         :accessor %signing-profile-platform-id :initform
                         common-lisp:nil)
                        (signature-validity-period :initarg
                         :|signatureValidityPeriod| :type
                         (common-lisp:or signature-validity-period
                                         common-lisp:null)
                         :accessor %signing-profile-signature-validity-period
                         :initform common-lisp:nil)
                        (signing-material :initarg :|signingMaterial| :type
                         (common-lisp:or signing-material common-lisp:null)
                         :accessor %signing-profile-signing-material :initform
                         common-lisp:nil)
                        (profile-version-arn :initarg :|profileVersionArn|
                         :type (common-lisp:or arn common-lisp:null) :accessor
                         %signing-profile-profile-version-arn :initform
                         common-lisp:nil)
                        (profile-version :initarg :|profileVersion| :type
                         (common-lisp:or profile-version common-lisp:null)
                         :accessor %signing-profile-profile-version :initform
                         common-lisp:nil)
                        (profile-name :initarg :|profileName| :type
                         (common-lisp:or profile-name common-lisp:null)
                         :accessor %signing-profile-profile-name :initform
                         common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'signing-profile 'make-signing-profile))
 (common-lisp:defun make-signing-profile
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags arn status signing-parameters
                     platform-display-name platform-id
                     signature-validity-period signing-material
                     profile-version-arn profile-version profile-name)
   (common-lisp:apply #'common-lisp:make-instance 'signing-profile
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input signing-profile))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input signing-profile))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'profile-name))
      (common-lisp:list
       (common-lisp:cons "profileName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'profile-version))
      (common-lisp:list
       (common-lisp:cons "profileVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'profile-version-arn))
      (common-lisp:list
       (common-lisp:cons "profileVersionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'signing-material))
      (common-lisp:list
       (common-lisp:cons "signingMaterial"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'signature-validity-period))
      (common-lisp:list
       (common-lisp:cons "signatureValidityPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'platform-id))
      (common-lisp:list
       (common-lisp:cons "platformId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'platform-display-name))
      (common-lisp:list
       (common-lisp:cons "platformDisplayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'signing-parameters))
      (common-lisp:list
       (common-lisp:cons "signingParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input signing-profile))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass signing-profile-revocation-record common-lisp:nil
                       ((revoked-by :initarg :|revokedBy| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %signing-profile-revocation-record-revoked-by
                         :initform common-lisp:nil)
                        (revoked-at :initarg :|revokedAt| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %signing-profile-revocation-record-revoked-at
                         :initform common-lisp:nil)
                        (revocation-effective-from :initarg
                         :|revocationEffectiveFrom| :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         %signing-profile-revocation-record-revocation-effective-from
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'signing-profile-revocation-record
                    'make-signing-profile-revocation-record))
 (common-lisp:defun make-signing-profile-revocation-record
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key revoked-by revoked-at
                     revocation-effective-from)
   (common-lisp:apply #'common-lisp:make-instance
                      'signing-profile-revocation-record
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          signing-profile-revocation-record))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          signing-profile-revocation-record))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'revocation-effective-from))
      (common-lisp:list
       (common-lisp:cons "revocationEffectiveFrom"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revoked-at))
      (common-lisp:list
       (common-lisp:cons "revokedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revoked-by))
      (common-lisp:list
       (common-lisp:cons "revokedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          signing-profile-revocation-record))
   common-lisp:nil))
(common-lisp:deftype signing-profile-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype signing-profiles ()
   '(trivial-types:proper-list signing-profile))
 (common-lisp:defun |make-signing-profiles|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list signing-profile))
   aws-sdk/generator/shape::members))
(common-lisp:deftype signing-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass source common-lisp:nil
                       ((s3 :initarg :|s3| :type
                         (common-lisp:or s3source common-lisp:null) :accessor
                         %source-s3 :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'source 'make-source))
 (common-lisp:defun make-source
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key s3)
   (common-lisp:apply #'common-lisp:make-instance 'source
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input source))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input source))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3))
      (common-lisp:list
       (common-lisp:cons "s3"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input source))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-signing-job-request common-lisp:nil
                       ((profile-owner :initarg :|profileOwner| :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         %start-signing-job-request-profile-owner :initform
                         common-lisp:nil)
                        (client-request-token :initarg :|clientRequestToken|
                         :type
                         (common-lisp:or client-request-token common-lisp:null)
                         :accessor
                         %start-signing-job-request-client-request-token
                         :initform
                         (common-lisp:error ":clientrequesttoken is required"))
                        (profile-name :initarg :|profileName| :type
                         (common-lisp:or profile-name common-lisp:null)
                         :accessor %start-signing-job-request-profile-name
                         :initform
                         (common-lisp:error ":profilename is required"))
                        (destination :initarg :|destination| :type
                         (common-lisp:or destination common-lisp:null)
                         :accessor %start-signing-job-request-destination
                         :initform
                         (common-lisp:error ":destination is required"))
                        (source :initarg :|source| :type
                         (common-lisp:or source common-lisp:null) :accessor
                         %start-signing-job-request-source :initform
                         (common-lisp:error ":source is required"))))
 (common-lisp:export
  (common-lisp:list 'start-signing-job-request
                    'make-start-signing-job-request))
 (common-lisp:defun make-start-signing-job-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key profile-owner client-request-token
                     profile-name destination source)
   (common-lisp:apply #'common-lisp:make-instance 'start-signing-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-signing-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-signing-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source))
      (common-lisp:list
       (common-lisp:cons "source"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination))
      (common-lisp:list
       (common-lisp:cons "destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'profile-name))
      (common-lisp:list
       (common-lisp:cons "profileName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "clientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'profile-owner))
      (common-lisp:list
       (common-lisp:cons "profileOwner"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-signing-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-signing-job-response common-lisp:nil
                       ((job-owner :initarg :|jobOwner| :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         %start-signing-job-response-job-owner :initform
                         common-lisp:nil)
                        (job-id :initarg :|jobId| :type
                         (common-lisp:or job-id common-lisp:null) :accessor
                         %start-signing-job-response-job-id :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'start-signing-job-response
                    'make-start-signing-job-response))
 (common-lisp:defun make-start-signing-job-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key job-owner job-id)
   (common-lisp:apply #'common-lisp:make-instance 'start-signing-job-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-signing-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-signing-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "jobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-owner))
      (common-lisp:list
       (common-lisp:cons "jobOwner"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-signing-job-response))
   common-lisp:nil))
(common-lisp:deftype status-reason () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype statuses ()
   '(trivial-types:proper-list signing-profile-status))
 (common-lisp:defun |make-statuses|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list signing-profile-status))
   aws-sdk/generator/shape::members))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun |make-tag-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-map () 'common-lisp:hash-table)
 (common-lisp:defun |make-tag-map| (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass tag-resource-request common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %tag-resource-request-tags :initform
                         (common-lisp:error ":tags is required"))
                        (resource-arn :initarg :|resourceArn| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %tag-resource-request-resource-arn :initform
                         (common-lisp:error ":resourcearn is required"))))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defun make-tag-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags resource-arn)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-resource-response common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defun make-tag-resource-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (signer-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       throttling-exception-message)
      (code :initarg :|code| :initform common-lisp:nil :reader
       throttling-exception-code)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message
                    'throttling-exception-code)))
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition too-many-requests-exception
     (signer-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       too-many-requests-exception-message)
      (code :initarg :|code| :initform common-lisp:nil :reader
       too-many-requests-exception-code)))
 (common-lisp:export
  (common-lisp:list 'too-many-requests-exception
                    'too-many-requests-exception-message
                    'too-many-requests-exception-code)))
(common-lisp:progn
 (common-lisp:defclass untag-resource-request common-lisp:nil
                       ((tag-keys :initarg :|tagKeys| :type
                         (common-lisp:or tag-key-list common-lisp:null)
                         :accessor %untag-resource-request-tag-keys :initform
                         (common-lisp:error ":tagkeys is required"))
                        (resource-arn :initarg :|resourceArn| :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %untag-resource-request-resource-arn :initform
                         (common-lisp:error ":resourcearn is required"))))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defun make-untag-resource-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tag-keys resource-arn)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass untag-resource-response common-lisp:nil common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defun make-untag-resource-response
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (signer-error)
     ((message :initarg :|message| :initform common-lisp:nil :reader
       validation-exception-message)
      (code :initarg :|code| :initform common-lisp:nil :reader
       validation-exception-code)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-message
                    'validation-exception-code)))
(common-lisp:deftype validity-type () 'common-lisp:string)
(common-lisp:deftype version () 'common-lisp:string)
(common-lisp:deftype |bool| () 'common-lisp:boolean)
common-lisp:nil
(common-lisp:progn
 (common-lisp:defun add-profile-permission
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key profile-name profile-version action
                     principal revision-id statement-id)
   (common-lisp:declare
    (common-lisp:ignorable profile-name profile-version action principal
     revision-id statement-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-add-profile-permission-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'signer-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/signing-profiles/~A/permissions"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'profile-name))))
                                                        "AddProfilePermission"
                                                        "2017-08-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'add-profile-permission))
(common-lisp:progn
 (common-lisp:defun cancel-signing-profile
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key profile-name)
   (common-lisp:declare (common-lisp:ignorable profile-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-cancel-signing-profile-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'signer-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/signing-profiles/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'profile-name))))
                                                        "CancelSigningProfile"
                                                        "2017-08-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'cancel-signing-profile))
(common-lisp:progn
 (common-lisp:defun describe-signing-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id)
   (common-lisp:declare (common-lisp:ignorable job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-signing-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'signer-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/signing-jobs/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'job-id))))
                                                        "DescribeSigningJob"
                                                        "2017-08-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-signing-job))
(common-lisp:progn
 (common-lisp:defun get-signing-platform
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key platform-id)
   (common-lisp:declare (common-lisp:ignorable platform-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-signing-platform-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'signer-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/signing-platforms/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'platform-id))))
                                                        "GetSigningPlatform"
                                                        "2017-08-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-signing-platform))
(common-lisp:progn
 (common-lisp:defun get-signing-profile
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key profile-name profile-owner)
   (common-lisp:declare (common-lisp:ignorable profile-name profile-owner))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-signing-profile-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'signer-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/signing-profiles/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'profile-name))))
                                                        "GetSigningProfile"
                                                        "2017-08-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-signing-profile))
(common-lisp:progn
 (common-lisp:defun list-profile-permissions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key profile-name next-token)
   (common-lisp:declare (common-lisp:ignorable profile-name next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-profile-permissions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'signer-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/signing-profiles/~A/permissions"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'profile-name))))
                                                        "ListProfilePermissions"
                                                        "2017-08-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-profile-permissions))
(common-lisp:progn
 (common-lisp:defun list-signing-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key status platform-id requested-by
                     max-results next-token is-revoked signature-expires-before
                     signature-expires-after job-invoker)
   (common-lisp:declare
    (common-lisp:ignorable status platform-id requested-by max-results
     next-token is-revoked signature-expires-before signature-expires-after
     job-invoker))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-signing-jobs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'signer-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/signing-jobs"
                                                        "ListSigningJobs"
                                                        "2017-08-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-signing-jobs))
(common-lisp:progn
 (common-lisp:defun list-signing-platforms
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key category partner target max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable category partner target max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-signing-platforms-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'signer-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/signing-platforms"
                                                        "ListSigningPlatforms"
                                                        "2017-08-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-signing-platforms))
(common-lisp:progn
 (common-lisp:defun list-signing-profiles
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key include-canceled max-results next-token
                     platform-id statuses)
   (common-lisp:declare
    (common-lisp:ignorable include-canceled max-results next-token platform-id
     statuses))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-signing-profiles-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'signer-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        "/signing-profiles"
                                                        "ListSigningProfiles"
                                                        "2017-08-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-signing-profiles))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'signer-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "ListTagsForResource"
                                                        "2017-08-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun put-signing-profile
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key profile-name signing-material
                     signature-validity-period platform-id overrides
                     signing-parameters tags)
   (common-lisp:declare
    (common-lisp:ignorable profile-name signing-material
     signature-validity-period platform-id overrides signing-parameters tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-signing-profile-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'signer-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/signing-profiles/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'profile-name))))
                                                        "PutSigningProfile"
                                                        "2017-08-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-signing-profile))
(common-lisp:progn
 (common-lisp:defun remove-profile-permission
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key profile-name revision-id statement-id)
   (common-lisp:declare
    (common-lisp:ignorable profile-name revision-id statement-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-remove-profile-permission-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'signer-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/signing-profiles/~A/permissions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'profile-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'statement-id))))
                                                        "RemoveProfilePermission"
                                                        "2017-08-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'remove-profile-permission))
(common-lisp:progn
 (common-lisp:defun revoke-signature
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id job-owner reason)
   (common-lisp:declare (common-lisp:ignorable job-id job-owner reason))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-revoke-signature-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'signer-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/signing-jobs/~A/revoke"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'job-id))))
                                                        "RevokeSignature"
                                                        "2017-08-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'revoke-signature))
(common-lisp:progn
 (common-lisp:defun revoke-signing-profile
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key profile-name profile-version reason
                     effective-time)
   (common-lisp:declare
    (common-lisp:ignorable profile-name profile-version reason effective-time))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-revoke-signing-profile-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'signer-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/signing-profiles/~A/revoke"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'profile-name))))
                                                        "RevokeSigningProfile"
                                                        "2017-08-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'revoke-signing-profile))
(common-lisp:progn
 (common-lisp:defun start-signing-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key source destination profile-name
                     client-request-token profile-owner)
   (common-lisp:declare
    (common-lisp:ignorable source destination profile-name client-request-token
     profile-owner))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-signing-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'signer-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        "/signing-jobs"
                                                        "StartSigningJob"
                                                        "2017-08-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-signing-job))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'signer-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "TagResource"
                                                        "2017-08-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'signer-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" :rest-json
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "UntagResource"
                                                        "2017-08-25"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-resource))
